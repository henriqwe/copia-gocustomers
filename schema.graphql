schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

type CadastrarFornecedorOutput {
  Id: uuid!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

"""
columns and relationships of "UnidadesDeMedidas"
"""
type UnidadesDeMedidas {
  Comentario: String!
  Valor: String!
}

"""
aggregated selection of "UnidadesDeMedidas"
"""
type UnidadesDeMedidas_aggregate {
  aggregate: UnidadesDeMedidas_aggregate_fields
  nodes: [UnidadesDeMedidas!]!
}

"""
aggregate fields of "UnidadesDeMedidas"
"""
type UnidadesDeMedidas_aggregate_fields {
  count(columns: [UnidadesDeMedidas_select_column!], distinct: Boolean): Int!
  max: UnidadesDeMedidas_max_fields
  min: UnidadesDeMedidas_min_fields
}

"""
Boolean expression to filter rows from the table "UnidadesDeMedidas". All fields are combined with a logical 'AND'.
"""
input UnidadesDeMedidas_bool_exp {
  Comentario: String_comparison_exp
  Valor: String_comparison_exp
  _and: [UnidadesDeMedidas_bool_exp!]
  _not: UnidadesDeMedidas_bool_exp
  _or: [UnidadesDeMedidas_bool_exp!]
}

"""
unique or primary key constraints on table "UnidadesDeMedidas"
"""
enum UnidadesDeMedidas_constraint {
  """unique or primary key constraint"""
  UnidadesDeMedidas_pkey
}

"""
input type for inserting data into table "UnidadesDeMedidas"
"""
input UnidadesDeMedidas_insert_input {
  Comentario: String
  Valor: String
}

"""aggregate max on columns"""
type UnidadesDeMedidas_max_fields {
  Comentario: String
  Valor: String
}

"""aggregate min on columns"""
type UnidadesDeMedidas_min_fields {
  Comentario: String
  Valor: String
}

"""
response of any mutation on the table "UnidadesDeMedidas"
"""
type UnidadesDeMedidas_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [UnidadesDeMedidas!]!
}

"""
on conflict condition type for table "UnidadesDeMedidas"
"""
input UnidadesDeMedidas_on_conflict {
  constraint: UnidadesDeMedidas_constraint!
  update_columns: [UnidadesDeMedidas_update_column!]! = []
  where: UnidadesDeMedidas_bool_exp
}

"""Ordering options when selecting data from "UnidadesDeMedidas"."""
input UnidadesDeMedidas_order_by {
  Comentario: order_by
  Valor: order_by
}

"""primary key columns input for table: UnidadesDeMedidas"""
input UnidadesDeMedidas_pk_columns_input {
  Valor: String!
}

"""
select columns of table "UnidadesDeMedidas"
"""
enum UnidadesDeMedidas_select_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

"""
input type for updating data in table "UnidadesDeMedidas"
"""
input UnidadesDeMedidas_set_input {
  Comentario: String
  Valor: String
}

"""
update columns of table "UnidadesDeMedidas"
"""
enum UnidadesDeMedidas_update_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
columns and relationships of "compras.Logs"
"""
type compras_Logs {
  DadosAntigos(
    """JSON select path"""
    path: String
  ): jsonb!
  DadosNovos(
    """JSON select path"""
    path: String
  ): jsonb!
  Id: uuid!
  Operacao: String!
  Tipo: String!
  Tipo_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "compras.Logs"
"""
type compras_Logs_aggregate {
  aggregate: compras_Logs_aggregate_fields
  nodes: [compras_Logs!]!
}

"""
aggregate fields of "compras.Logs"
"""
type compras_Logs_aggregate_fields {
  count(columns: [compras_Logs_select_column!], distinct: Boolean): Int!
  max: compras_Logs_max_fields
  min: compras_Logs_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input compras_Logs_append_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
Boolean expression to filter rows from the table "compras.Logs". All fields are combined with a logical 'AND'.
"""
input compras_Logs_bool_exp {
  DadosAntigos: jsonb_comparison_exp
  DadosNovos: jsonb_comparison_exp
  Id: uuid_comparison_exp
  Operacao: String_comparison_exp
  Tipo: String_comparison_exp
  Tipo_Id: uuid_comparison_exp
  _and: [compras_Logs_bool_exp!]
  _not: compras_Logs_bool_exp
  _or: [compras_Logs_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.Logs"
"""
enum compras_Logs_constraint {
  """unique or primary key constraint"""
  Logs_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input compras_Logs_delete_at_path_input {
  DadosAntigos: [String!]
  DadosNovos: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input compras_Logs_delete_elem_input {
  DadosAntigos: Int
  DadosNovos: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input compras_Logs_delete_key_input {
  DadosAntigos: String
  DadosNovos: String
}

"""
input type for inserting data into table "compras.Logs"
"""
input compras_Logs_insert_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_Logs_max_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type compras_Logs_min_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "compras.Logs"
"""
type compras_Logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_Logs!]!
}

"""
on conflict condition type for table "compras.Logs"
"""
input compras_Logs_on_conflict {
  constraint: compras_Logs_constraint!
  update_columns: [compras_Logs_update_column!]! = []
  where: compras_Logs_bool_exp
}

"""Ordering options when selecting data from "compras.Logs"."""
input compras_Logs_order_by {
  DadosAntigos: order_by
  DadosNovos: order_by
  Id: order_by
  Operacao: order_by
  Tipo: order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_Logs"""
input compras_Logs_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input compras_Logs_prepend_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
select columns of table "compras.Logs"
"""
enum compras_Logs_select_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.Logs"
"""
input compras_Logs_set_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "compras.Logs"
"""
enum compras_Logs_update_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "compras.Orcamentos"
"""
type compras_Orcamentos {
  Aprovado: Boolean
  Fornecedor(
    """distinct select on columns"""
    distinct_on: [identidades_Fornecedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Fornecedores_order_by!]

    """filter the rows returned"""
    where: identidades_Fornecedores_bool_exp_remote_rel_compras.OrcamentosFornecedor
  ): [identidades_Fornecedores!]!
  Fornecedor_Id: uuid!
  Id: uuid!
  Pedido_Id: uuid!

  """An object relationship"""
  PedidosDeCompra: compras_PedidosDeCompra!

  """An array relationship"""
  Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): [compras_Orcamentos_Produtos!]!

  """An aggregate relationship"""
  Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): compras_Orcamentos_Produtos_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
columns and relationships of "compras.Orcamentos_Produtos"
"""
type compras_Orcamentos_Produtos {
  Fabricante_Id: uuid!
  Id: uuid!

  """An object relationship"""
  Orcamento: compras_Orcamentos!
  Orcamento_Id: uuid!

  """An object relationship"""
  PedidosDeCompra_Produto: compras_PedidosDeCompra_Produtos!
  PedidosDeCompra_Produto_Id: uuid!
  Quantidade: Int!
  ValorUnitario: float8!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "compras.Orcamentos_Produtos"
"""
type compras_Orcamentos_Produtos_aggregate {
  aggregate: compras_Orcamentos_Produtos_aggregate_fields
  nodes: [compras_Orcamentos_Produtos!]!
}

"""
aggregate fields of "compras.Orcamentos_Produtos"
"""
type compras_Orcamentos_Produtos_aggregate_fields {
  avg: compras_Orcamentos_Produtos_avg_fields
  count(columns: [compras_Orcamentos_Produtos_select_column!], distinct: Boolean): Int!
  max: compras_Orcamentos_Produtos_max_fields
  min: compras_Orcamentos_Produtos_min_fields
  stddev: compras_Orcamentos_Produtos_stddev_fields
  stddev_pop: compras_Orcamentos_Produtos_stddev_pop_fields
  stddev_samp: compras_Orcamentos_Produtos_stddev_samp_fields
  sum: compras_Orcamentos_Produtos_sum_fields
  var_pop: compras_Orcamentos_Produtos_var_pop_fields
  var_samp: compras_Orcamentos_Produtos_var_samp_fields
  variance: compras_Orcamentos_Produtos_variance_fields
}

"""
order by aggregate values of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_aggregate_order_by {
  avg: compras_Orcamentos_Produtos_avg_order_by
  count: order_by
  max: compras_Orcamentos_Produtos_max_order_by
  min: compras_Orcamentos_Produtos_min_order_by
  stddev: compras_Orcamentos_Produtos_stddev_order_by
  stddev_pop: compras_Orcamentos_Produtos_stddev_pop_order_by
  stddev_samp: compras_Orcamentos_Produtos_stddev_samp_order_by
  sum: compras_Orcamentos_Produtos_sum_order_by
  var_pop: compras_Orcamentos_Produtos_var_pop_order_by
  var_samp: compras_Orcamentos_Produtos_var_samp_order_by
  variance: compras_Orcamentos_Produtos_variance_order_by
}

"""
input type for inserting array relation for remote table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_arr_rel_insert_input {
  data: [compras_Orcamentos_Produtos_insert_input!]!

  """on conflict condition"""
  on_conflict: compras_Orcamentos_Produtos_on_conflict
}

"""aggregate avg on columns"""
type compras_Orcamentos_Produtos_avg_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by avg() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_avg_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""
Boolean expression to filter rows from the table "compras.Orcamentos_Produtos". All fields are combined with a logical 'AND'.
"""
input compras_Orcamentos_Produtos_bool_exp {
  Fabricante_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  Orcamento: compras_Orcamentos_bool_exp
  Orcamento_Id: uuid_comparison_exp
  PedidosDeCompra_Produto: compras_PedidosDeCompra_Produtos_bool_exp
  PedidosDeCompra_Produto_Id: uuid_comparison_exp
  Quantidade: Int_comparison_exp
  ValorUnitario: float8_comparison_exp
  _and: [compras_Orcamentos_Produtos_bool_exp!]
  _not: compras_Orcamentos_Produtos_bool_exp
  _or: [compras_Orcamentos_Produtos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.Orcamentos_Produtos"
"""
enum compras_Orcamentos_Produtos_constraint {
  """unique or primary key constraint"""
  Orcamentos_Produtos_Id_key

  """unique or primary key constraint"""
  PedidosDeCompra_Orcamento_pkey
}

"""
input type for incrementing numeric columns in table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_inc_input {
  Quantidade: Int
  ValorUnitario: float8
}

"""
input type for inserting data into table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_insert_input {
  Fabricante_Id: uuid
  Id: uuid
  Orcamento: compras_Orcamentos_obj_rel_insert_input
  Orcamento_Id: uuid
  PedidosDeCompra_Produto: compras_PedidosDeCompra_Produtos_obj_rel_insert_input
  PedidosDeCompra_Produto_Id: uuid
  Quantidade: Int
  ValorUnitario: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_Orcamentos_Produtos_max_fields {
  Fabricante_Id: uuid
  Id: uuid
  Orcamento_Id: uuid
  PedidosDeCompra_Produto_Id: uuid
  Quantidade: Int
  ValorUnitario: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_max_order_by {
  Fabricante_Id: order_by
  Id: order_by
  Orcamento_Id: order_by
  PedidosDeCompra_Produto_Id: order_by
  Quantidade: order_by
  ValorUnitario: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type compras_Orcamentos_Produtos_min_fields {
  Fabricante_Id: uuid
  Id: uuid
  Orcamento_Id: uuid
  PedidosDeCompra_Produto_Id: uuid
  Quantidade: Int
  ValorUnitario: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_min_order_by {
  Fabricante_Id: order_by
  Id: order_by
  Orcamento_Id: order_by
  PedidosDeCompra_Produto_Id: order_by
  Quantidade: order_by
  ValorUnitario: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "compras.Orcamentos_Produtos"
"""
type compras_Orcamentos_Produtos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_Orcamentos_Produtos!]!
}

"""
on conflict condition type for table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_on_conflict {
  constraint: compras_Orcamentos_Produtos_constraint!
  update_columns: [compras_Orcamentos_Produtos_update_column!]! = []
  where: compras_Orcamentos_Produtos_bool_exp
}

"""
Ordering options when selecting data from "compras.Orcamentos_Produtos".
"""
input compras_Orcamentos_Produtos_order_by {
  Fabricante_Id: order_by
  Id: order_by
  Orcamento: compras_Orcamentos_order_by
  Orcamento_Id: order_by
  PedidosDeCompra_Produto: compras_PedidosDeCompra_Produtos_order_by
  PedidosDeCompra_Produto_Id: order_by
  Quantidade: order_by
  ValorUnitario: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_Orcamentos_Produtos"""
input compras_Orcamentos_Produtos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "compras.Orcamentos_Produtos"
"""
enum compras_Orcamentos_Produtos_select_column {
  """column name"""
  Fabricante_Id

  """column name"""
  Id

  """column name"""
  Orcamento_Id

  """column name"""
  PedidosDeCompra_Produto_Id

  """column name"""
  Quantidade

  """column name"""
  ValorUnitario

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_set_input {
  Fabricante_Id: uuid
  Id: uuid
  Orcamento_Id: uuid
  PedidosDeCompra_Produto_Id: uuid
  Quantidade: Int
  ValorUnitario: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type compras_Orcamentos_Produtos_stddev_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by stddev() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_stddev_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""aggregate stddev_pop on columns"""
type compras_Orcamentos_Produtos_stddev_pop_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by stddev_pop() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_stddev_pop_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""aggregate stddev_samp on columns"""
type compras_Orcamentos_Produtos_stddev_samp_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by stddev_samp() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_stddev_samp_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""aggregate sum on columns"""
type compras_Orcamentos_Produtos_sum_fields {
  Quantidade: Int
  ValorUnitario: float8
}

"""
order by sum() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_sum_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""
update columns of table "compras.Orcamentos_Produtos"
"""
enum compras_Orcamentos_Produtos_update_column {
  """column name"""
  Fabricante_Id

  """column name"""
  Id

  """column name"""
  Orcamento_Id

  """column name"""
  PedidosDeCompra_Produto_Id

  """column name"""
  Quantidade

  """column name"""
  ValorUnitario

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type compras_Orcamentos_Produtos_var_pop_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by var_pop() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_var_pop_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""aggregate var_samp on columns"""
type compras_Orcamentos_Produtos_var_samp_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by var_samp() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_var_samp_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""aggregate variance on columns"""
type compras_Orcamentos_Produtos_variance_fields {
  Quantidade: Float
  ValorUnitario: Float
}

"""
order by variance() on columns of table "compras.Orcamentos_Produtos"
"""
input compras_Orcamentos_Produtos_variance_order_by {
  Quantidade: order_by
  ValorUnitario: order_by
}

"""
aggregated selection of "compras.Orcamentos"
"""
type compras_Orcamentos_aggregate {
  aggregate: compras_Orcamentos_aggregate_fields
  nodes: [compras_Orcamentos!]!
}

"""
aggregate fields of "compras.Orcamentos"
"""
type compras_Orcamentos_aggregate_fields {
  count(columns: [compras_Orcamentos_select_column!], distinct: Boolean): Int!
  max: compras_Orcamentos_max_fields
  min: compras_Orcamentos_min_fields
}

"""
Boolean expression to filter rows from the table "compras.Orcamentos". All fields are combined with a logical 'AND'.
"""
input compras_Orcamentos_bool_exp {
  Aprovado: Boolean_comparison_exp
  Fornecedor_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  Pedido_Id: uuid_comparison_exp
  PedidosDeCompra: compras_PedidosDeCompra_bool_exp
  Produtos: compras_Orcamentos_Produtos_bool_exp
  _and: [compras_Orcamentos_bool_exp!]
  _not: compras_Orcamentos_bool_exp
  _or: [compras_Orcamentos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.Orcamentos"
"""
enum compras_Orcamentos_constraint {
  """unique or primary key constraint"""
  Orcamentos_Id_key

  """unique or primary key constraint"""
  Orcamentos_pkey
}

"""
input type for inserting data into table "compras.Orcamentos"
"""
input compras_Orcamentos_insert_input {
  Aprovado: Boolean
  Fornecedor_Id: uuid
  Id: uuid
  Pedido_Id: uuid
  PedidosDeCompra: compras_PedidosDeCompra_obj_rel_insert_input
  Produtos: compras_Orcamentos_Produtos_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_Orcamentos_max_fields {
  Fornecedor_Id: uuid
  Id: uuid
  Pedido_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type compras_Orcamentos_min_fields {
  Fornecedor_Id: uuid
  Id: uuid
  Pedido_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "compras.Orcamentos"
"""
type compras_Orcamentos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_Orcamentos!]!
}

"""
input type for inserting object relation for remote table "compras.Orcamentos"
"""
input compras_Orcamentos_obj_rel_insert_input {
  data: compras_Orcamentos_insert_input!

  """on conflict condition"""
  on_conflict: compras_Orcamentos_on_conflict
}

"""
on conflict condition type for table "compras.Orcamentos"
"""
input compras_Orcamentos_on_conflict {
  constraint: compras_Orcamentos_constraint!
  update_columns: [compras_Orcamentos_update_column!]! = []
  where: compras_Orcamentos_bool_exp
}

"""Ordering options when selecting data from "compras.Orcamentos"."""
input compras_Orcamentos_order_by {
  Aprovado: order_by
  Fornecedor_Id: order_by
  Id: order_by
  Pedido_Id: order_by
  PedidosDeCompra: compras_PedidosDeCompra_order_by
  Produtos_aggregate: compras_Orcamentos_Produtos_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_Orcamentos"""
input compras_Orcamentos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "compras.Orcamentos"
"""
enum compras_Orcamentos_select_column {
  """column name"""
  Aprovado

  """column name"""
  Fornecedor_Id

  """column name"""
  Id

  """column name"""
  Pedido_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.Orcamentos"
"""
input compras_Orcamentos_set_input {
  Aprovado: Boolean
  Fornecedor_Id: uuid
  Id: uuid
  Pedido_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "compras.Orcamentos"
"""
enum compras_Orcamentos_update_column {
  """column name"""
  Aprovado

  """column name"""
  Fornecedor_Id

  """column name"""
  Id

  """column name"""
  Pedido_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "compras.PedidosDeCompra"
"""
type compras_PedidosDeCompra {
  DataAbertura: timestamptz!
  DataAutorizacao: timestamptz
  DataCompra: timestamptz
  DataEntrada: timestamptz
  DataEntregue: timestamptz
  DataOrcamento: timestamptz
  Id: uuid!
  MotivoRecusado: String

  """An array relationship"""
  Produtos(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): [compras_PedidosDeCompra_Produtos!]!

  """An aggregate relationship"""
  Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): compras_PedidosDeCompra_Produtos_aggregate!

  """An object relationship"""
  Situacao: compras_PedidosDeCompraSituacoes!
  Situacao_Id: compras_PedidosDeCompraSituacoes_enum!
  Solicitante_Id: uuid!
  TipoPagamento: String
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
columns and relationships of "compras.PedidosDeCompraSituacoes"
"""
type compras_PedidosDeCompraSituacoes {
  Comentario: String!

  """An array relationship"""
  PedidosDeCompra(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): [compras_PedidosDeCompra!]!

  """An aggregate relationship"""
  PedidosDeCompra_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): compras_PedidosDeCompra_aggregate!
  Valor: String!
}

"""
aggregated selection of "compras.PedidosDeCompraSituacoes"
"""
type compras_PedidosDeCompraSituacoes_aggregate {
  aggregate: compras_PedidosDeCompraSituacoes_aggregate_fields
  nodes: [compras_PedidosDeCompraSituacoes!]!
}

"""
aggregate fields of "compras.PedidosDeCompraSituacoes"
"""
type compras_PedidosDeCompraSituacoes_aggregate_fields {
  count(columns: [compras_PedidosDeCompraSituacoes_select_column!], distinct: Boolean): Int!
  max: compras_PedidosDeCompraSituacoes_max_fields
  min: compras_PedidosDeCompraSituacoes_min_fields
}

"""
Boolean expression to filter rows from the table "compras.PedidosDeCompraSituacoes". All fields are combined with a logical 'AND'.
"""
input compras_PedidosDeCompraSituacoes_bool_exp {
  Comentario: String_comparison_exp
  PedidosDeCompra: compras_PedidosDeCompra_bool_exp
  Valor: String_comparison_exp
  _and: [compras_PedidosDeCompraSituacoes_bool_exp!]
  _not: compras_PedidosDeCompraSituacoes_bool_exp
  _or: [compras_PedidosDeCompraSituacoes_bool_exp!]
}

"""
unique or primary key constraints on table "compras.PedidosDeCompraSituacoes"
"""
enum compras_PedidosDeCompraSituacoes_constraint {
  """unique or primary key constraint"""
  PedidosDeCompraSituacoes_pkey
}

enum compras_PedidosDeCompraSituacoes_enum {
  """Aberto"""
  aberto

  """Autorizado"""
  autorizado

  """Comprado"""
  comprado

  """Entregue"""
  entregue

  """Finalizado"""
  finalizado
}

"""
Boolean expression to compare columns of type "compras_PedidosDeCompraSituacoes_enum". All fields are combined with logical 'AND'.
"""
input compras_PedidosDeCompraSituacoes_enum_comparison_exp {
  _eq: compras_PedidosDeCompraSituacoes_enum
  _in: [compras_PedidosDeCompraSituacoes_enum!]
  _is_null: Boolean
  _neq: compras_PedidosDeCompraSituacoes_enum
  _nin: [compras_PedidosDeCompraSituacoes_enum!]
}

"""
input type for inserting data into table "compras.PedidosDeCompraSituacoes"
"""
input compras_PedidosDeCompraSituacoes_insert_input {
  Comentario: String
  PedidosDeCompra: compras_PedidosDeCompra_arr_rel_insert_input
  Valor: String
}

"""aggregate max on columns"""
type compras_PedidosDeCompraSituacoes_max_fields {
  Comentario: String
  Valor: String
}

"""aggregate min on columns"""
type compras_PedidosDeCompraSituacoes_min_fields {
  Comentario: String
  Valor: String
}

"""
response of any mutation on the table "compras.PedidosDeCompraSituacoes"
"""
type compras_PedidosDeCompraSituacoes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_PedidosDeCompraSituacoes!]!
}

"""
input type for inserting object relation for remote table "compras.PedidosDeCompraSituacoes"
"""
input compras_PedidosDeCompraSituacoes_obj_rel_insert_input {
  data: compras_PedidosDeCompraSituacoes_insert_input!

  """on conflict condition"""
  on_conflict: compras_PedidosDeCompraSituacoes_on_conflict
}

"""
on conflict condition type for table "compras.PedidosDeCompraSituacoes"
"""
input compras_PedidosDeCompraSituacoes_on_conflict {
  constraint: compras_PedidosDeCompraSituacoes_constraint!
  update_columns: [compras_PedidosDeCompraSituacoes_update_column!]! = []
  where: compras_PedidosDeCompraSituacoes_bool_exp
}

"""
Ordering options when selecting data from "compras.PedidosDeCompraSituacoes".
"""
input compras_PedidosDeCompraSituacoes_order_by {
  Comentario: order_by
  PedidosDeCompra_aggregate: compras_PedidosDeCompra_aggregate_order_by
  Valor: order_by
}

"""primary key columns input for table: compras_PedidosDeCompraSituacoes"""
input compras_PedidosDeCompraSituacoes_pk_columns_input {
  Valor: String!
}

"""
select columns of table "compras.PedidosDeCompraSituacoes"
"""
enum compras_PedidosDeCompraSituacoes_select_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

"""
input type for updating data in table "compras.PedidosDeCompraSituacoes"
"""
input compras_PedidosDeCompraSituacoes_set_input {
  Comentario: String
  Valor: String
}

"""
update columns of table "compras.PedidosDeCompraSituacoes"
"""
enum compras_PedidosDeCompraSituacoes_update_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

"""
columns and relationships of "compras.PedidosDeCompra_Produtos"
"""
type compras_PedidosDeCompra_Produtos {
  """An object relationship"""
  Fabricante: estoque_Fabricantes!
  Fabricante_Id: uuid!
  Id: uuid!

  """An array relationship"""
  Orcamentos_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): [compras_Orcamentos_Produtos!]!

  """An aggregate relationship"""
  Orcamentos_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): compras_Orcamentos_Produtos_aggregate!

  """An object relationship"""
  PedidoDeCompra: compras_PedidosDeCompra!
  PedidoDeCompra_Id: uuid!

  """An object relationship"""
  Produto: compras_Produtos!
  Produto_Id: uuid!
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "compras.PedidosDeCompra_Produtos"
"""
type compras_PedidosDeCompra_Produtos_aggregate {
  aggregate: compras_PedidosDeCompra_Produtos_aggregate_fields
  nodes: [compras_PedidosDeCompra_Produtos!]!
}

"""
aggregate fields of "compras.PedidosDeCompra_Produtos"
"""
type compras_PedidosDeCompra_Produtos_aggregate_fields {
  avg: compras_PedidosDeCompra_Produtos_avg_fields
  count(columns: [compras_PedidosDeCompra_Produtos_select_column!], distinct: Boolean): Int!
  max: compras_PedidosDeCompra_Produtos_max_fields
  min: compras_PedidosDeCompra_Produtos_min_fields
  stddev: compras_PedidosDeCompra_Produtos_stddev_fields
  stddev_pop: compras_PedidosDeCompra_Produtos_stddev_pop_fields
  stddev_samp: compras_PedidosDeCompra_Produtos_stddev_samp_fields
  sum: compras_PedidosDeCompra_Produtos_sum_fields
  var_pop: compras_PedidosDeCompra_Produtos_var_pop_fields
  var_samp: compras_PedidosDeCompra_Produtos_var_samp_fields
  variance: compras_PedidosDeCompra_Produtos_variance_fields
}

"""
order by aggregate values of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_aggregate_order_by {
  avg: compras_PedidosDeCompra_Produtos_avg_order_by
  count: order_by
  max: compras_PedidosDeCompra_Produtos_max_order_by
  min: compras_PedidosDeCompra_Produtos_min_order_by
  stddev: compras_PedidosDeCompra_Produtos_stddev_order_by
  stddev_pop: compras_PedidosDeCompra_Produtos_stddev_pop_order_by
  stddev_samp: compras_PedidosDeCompra_Produtos_stddev_samp_order_by
  sum: compras_PedidosDeCompra_Produtos_sum_order_by
  var_pop: compras_PedidosDeCompra_Produtos_var_pop_order_by
  var_samp: compras_PedidosDeCompra_Produtos_var_samp_order_by
  variance: compras_PedidosDeCompra_Produtos_variance_order_by
}

"""
input type for inserting array relation for remote table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_arr_rel_insert_input {
  data: [compras_PedidosDeCompra_Produtos_insert_input!]!

  """on conflict condition"""
  on_conflict: compras_PedidosDeCompra_Produtos_on_conflict
}

"""aggregate avg on columns"""
type compras_PedidosDeCompra_Produtos_avg_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by avg() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_avg_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""
Boolean expression to filter rows from the table "compras.PedidosDeCompra_Produtos". All fields are combined with a logical 'AND'.
"""
input compras_PedidosDeCompra_Produtos_bool_exp {
  Fabricante: estoque_Fabricantes_bool_exp
  Fabricante_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  Orcamentos_Produtos: compras_Orcamentos_Produtos_bool_exp
  PedidoDeCompra: compras_PedidosDeCompra_bool_exp
  PedidoDeCompra_Id: uuid_comparison_exp
  Produto: compras_Produtos_bool_exp
  Produto_Id: uuid_comparison_exp
  QuantidadeAutorizada: Int_comparison_exp
  QuantidadeEntregue: Int_comparison_exp
  QuantidadePedida: Int_comparison_exp
  _and: [compras_PedidosDeCompra_Produtos_bool_exp!]
  _not: compras_PedidosDeCompra_Produtos_bool_exp
  _or: [compras_PedidosDeCompra_Produtos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.PedidosDeCompra_Produtos"
"""
enum compras_PedidosDeCompra_Produtos_constraint {
  """unique or primary key constraint"""
  PedidosDeCompra_Produtos_Id_key

  """unique or primary key constraint"""
  PedidosDeCompra_Produtos_pkey
}

"""
input type for incrementing numeric columns in table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_inc_input {
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
}

"""
input type for inserting data into table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_insert_input {
  Fabricante: estoque_Fabricantes_obj_rel_insert_input
  Fabricante_Id: uuid
  Id: uuid
  Orcamentos_Produtos: compras_Orcamentos_Produtos_arr_rel_insert_input
  PedidoDeCompra: compras_PedidosDeCompra_obj_rel_insert_input
  PedidoDeCompra_Id: uuid
  Produto: compras_Produtos_obj_rel_insert_input
  Produto_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_PedidosDeCompra_Produtos_max_fields {
  Fabricante_Id: uuid
  Id: uuid
  PedidoDeCompra_Id: uuid
  Produto_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_max_order_by {
  Fabricante_Id: order_by
  Id: order_by
  PedidoDeCompra_Id: order_by
  Produto_Id: order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type compras_PedidosDeCompra_Produtos_min_fields {
  Fabricante_Id: uuid
  Id: uuid
  PedidoDeCompra_Id: uuid
  Produto_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_min_order_by {
  Fabricante_Id: order_by
  Id: order_by
  PedidoDeCompra_Id: order_by
  Produto_Id: order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "compras.PedidosDeCompra_Produtos"
"""
type compras_PedidosDeCompra_Produtos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_PedidosDeCompra_Produtos!]!
}

"""
input type for inserting object relation for remote table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_obj_rel_insert_input {
  data: compras_PedidosDeCompra_Produtos_insert_input!

  """on conflict condition"""
  on_conflict: compras_PedidosDeCompra_Produtos_on_conflict
}

"""
on conflict condition type for table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_on_conflict {
  constraint: compras_PedidosDeCompra_Produtos_constraint!
  update_columns: [compras_PedidosDeCompra_Produtos_update_column!]! = []
  where: compras_PedidosDeCompra_Produtos_bool_exp
}

"""
Ordering options when selecting data from "compras.PedidosDeCompra_Produtos".
"""
input compras_PedidosDeCompra_Produtos_order_by {
  Fabricante: estoque_Fabricantes_order_by
  Fabricante_Id: order_by
  Id: order_by
  Orcamentos_Produtos_aggregate: compras_Orcamentos_Produtos_aggregate_order_by
  PedidoDeCompra: compras_PedidosDeCompra_order_by
  PedidoDeCompra_Id: order_by
  Produto: compras_Produtos_order_by
  Produto_Id: order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_PedidosDeCompra_Produtos"""
input compras_PedidosDeCompra_Produtos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "compras.PedidosDeCompra_Produtos"
"""
enum compras_PedidosDeCompra_Produtos_select_column {
  """column name"""
  Fabricante_Id

  """column name"""
  Id

  """column name"""
  PedidoDeCompra_Id

  """column name"""
  Produto_Id

  """column name"""
  QuantidadeAutorizada

  """column name"""
  QuantidadeEntregue

  """column name"""
  QuantidadePedida

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_set_input {
  Fabricante_Id: uuid
  Id: uuid
  PedidoDeCompra_Id: uuid
  Produto_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type compras_PedidosDeCompra_Produtos_stddev_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by stddev() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_stddev_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""aggregate stddev_pop on columns"""
type compras_PedidosDeCompra_Produtos_stddev_pop_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by stddev_pop() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_stddev_pop_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""aggregate stddev_samp on columns"""
type compras_PedidosDeCompra_Produtos_stddev_samp_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by stddev_samp() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_stddev_samp_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""aggregate sum on columns"""
type compras_PedidosDeCompra_Produtos_sum_fields {
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
}

"""
order by sum() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_sum_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""
update columns of table "compras.PedidosDeCompra_Produtos"
"""
enum compras_PedidosDeCompra_Produtos_update_column {
  """column name"""
  Fabricante_Id

  """column name"""
  Id

  """column name"""
  PedidoDeCompra_Id

  """column name"""
  Produto_Id

  """column name"""
  QuantidadeAutorizada

  """column name"""
  QuantidadeEntregue

  """column name"""
  QuantidadePedida

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type compras_PedidosDeCompra_Produtos_var_pop_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by var_pop() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_var_pop_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""aggregate var_samp on columns"""
type compras_PedidosDeCompra_Produtos_var_samp_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by var_samp() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_var_samp_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""aggregate variance on columns"""
type compras_PedidosDeCompra_Produtos_variance_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
}

"""
order by variance() on columns of table "compras.PedidosDeCompra_Produtos"
"""
input compras_PedidosDeCompra_Produtos_variance_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
}

"""
aggregated selection of "compras.PedidosDeCompra"
"""
type compras_PedidosDeCompra_aggregate {
  aggregate: compras_PedidosDeCompra_aggregate_fields
  nodes: [compras_PedidosDeCompra!]!
}

"""
aggregate fields of "compras.PedidosDeCompra"
"""
type compras_PedidosDeCompra_aggregate_fields {
  count(columns: [compras_PedidosDeCompra_select_column!], distinct: Boolean): Int!
  max: compras_PedidosDeCompra_max_fields
  min: compras_PedidosDeCompra_min_fields
}

"""
order by aggregate values of table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_aggregate_order_by {
  count: order_by
  max: compras_PedidosDeCompra_max_order_by
  min: compras_PedidosDeCompra_min_order_by
}

"""
input type for inserting array relation for remote table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_arr_rel_insert_input {
  data: [compras_PedidosDeCompra_insert_input!]!

  """on conflict condition"""
  on_conflict: compras_PedidosDeCompra_on_conflict
}

"""
Boolean expression to filter rows from the table "compras.PedidosDeCompra". All fields are combined with a logical 'AND'.
"""
input compras_PedidosDeCompra_bool_exp {
  DataAbertura: timestamptz_comparison_exp
  DataAutorizacao: timestamptz_comparison_exp
  DataCompra: timestamptz_comparison_exp
  DataEntrada: timestamptz_comparison_exp
  DataEntregue: timestamptz_comparison_exp
  DataOrcamento: timestamptz_comparison_exp
  Id: uuid_comparison_exp
  MotivoRecusado: String_comparison_exp
  Produtos: compras_PedidosDeCompra_Produtos_bool_exp
  Situacao: compras_PedidosDeCompraSituacoes_bool_exp
  Situacao_Id: compras_PedidosDeCompraSituacoes_enum_comparison_exp
  Solicitante_Id: uuid_comparison_exp
  TipoPagamento: String_comparison_exp
  _and: [compras_PedidosDeCompra_bool_exp!]
  _not: compras_PedidosDeCompra_bool_exp
  _or: [compras_PedidosDeCompra_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.PedidosDeCompra"
"""
enum compras_PedidosDeCompra_constraint {
  """unique or primary key constraint"""
  PedidosDeCompra_pkey
}

"""
input type for inserting data into table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_insert_input {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataCompra: timestamptz
  DataEntrada: timestamptz
  DataEntregue: timestamptz
  DataOrcamento: timestamptz
  Id: uuid
  MotivoRecusado: String
  Produtos: compras_PedidosDeCompra_Produtos_arr_rel_insert_input
  Situacao: compras_PedidosDeCompraSituacoes_obj_rel_insert_input
  Situacao_Id: compras_PedidosDeCompraSituacoes_enum
  Solicitante_Id: uuid
  TipoPagamento: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_PedidosDeCompra_max_fields {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataCompra: timestamptz
  DataEntrada: timestamptz
  DataEntregue: timestamptz
  DataOrcamento: timestamptz
  Id: uuid
  MotivoRecusado: String
  Solicitante_Id: uuid
  TipoPagamento: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_max_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataCompra: order_by
  DataEntrada: order_by
  DataEntregue: order_by
  DataOrcamento: order_by
  Id: order_by
  MotivoRecusado: order_by
  Solicitante_Id: order_by
  TipoPagamento: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type compras_PedidosDeCompra_min_fields {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataCompra: timestamptz
  DataEntrada: timestamptz
  DataEntregue: timestamptz
  DataOrcamento: timestamptz
  Id: uuid
  MotivoRecusado: String
  Solicitante_Id: uuid
  TipoPagamento: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_min_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataCompra: order_by
  DataEntrada: order_by
  DataEntregue: order_by
  DataOrcamento: order_by
  Id: order_by
  MotivoRecusado: order_by
  Solicitante_Id: order_by
  TipoPagamento: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "compras.PedidosDeCompra"
"""
type compras_PedidosDeCompra_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_PedidosDeCompra!]!
}

"""
input type for inserting object relation for remote table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_obj_rel_insert_input {
  data: compras_PedidosDeCompra_insert_input!

  """on conflict condition"""
  on_conflict: compras_PedidosDeCompra_on_conflict
}

"""
on conflict condition type for table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_on_conflict {
  constraint: compras_PedidosDeCompra_constraint!
  update_columns: [compras_PedidosDeCompra_update_column!]! = []
  where: compras_PedidosDeCompra_bool_exp
}

"""Ordering options when selecting data from "compras.PedidosDeCompra"."""
input compras_PedidosDeCompra_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataCompra: order_by
  DataEntrada: order_by
  DataEntregue: order_by
  DataOrcamento: order_by
  Id: order_by
  MotivoRecusado: order_by
  Produtos_aggregate: compras_PedidosDeCompra_Produtos_aggregate_order_by
  Situacao: compras_PedidosDeCompraSituacoes_order_by
  Situacao_Id: order_by
  Solicitante_Id: order_by
  TipoPagamento: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_PedidosDeCompra"""
input compras_PedidosDeCompra_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "compras.PedidosDeCompra"
"""
enum compras_PedidosDeCompra_select_column {
  """column name"""
  DataAbertura

  """column name"""
  DataAutorizacao

  """column name"""
  DataCompra

  """column name"""
  DataEntrada

  """column name"""
  DataEntregue

  """column name"""
  DataOrcamento

  """column name"""
  Id

  """column name"""
  MotivoRecusado

  """column name"""
  Situacao_Id

  """column name"""
  Solicitante_Id

  """column name"""
  TipoPagamento

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.PedidosDeCompra"
"""
input compras_PedidosDeCompra_set_input {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataCompra: timestamptz
  DataEntrada: timestamptz
  DataEntregue: timestamptz
  DataOrcamento: timestamptz
  Id: uuid
  MotivoRecusado: String
  Situacao_Id: compras_PedidosDeCompraSituacoes_enum
  Solicitante_Id: uuid
  TipoPagamento: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "compras.PedidosDeCompra"
"""
enum compras_PedidosDeCompra_update_column {
  """column name"""
  DataAbertura

  """column name"""
  DataAutorizacao

  """column name"""
  DataCompra

  """column name"""
  DataEntrada

  """column name"""
  DataEntregue

  """column name"""
  DataOrcamento

  """column name"""
  Id

  """column name"""
  MotivoRecusado

  """column name"""
  Situacao_Id

  """column name"""
  Solicitante_Id

  """column name"""
  TipoPagamento

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "compras.Produtos"
"""
type compras_Produtos {
  Descricao: String!
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!
  NCM: Int!
  Nome: String!
  UnidadeDeMedida_Id: String!
  Utilizacao: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "compras.Produtos"
"""
type compras_Produtos_aggregate {
  aggregate: compras_Produtos_aggregate_fields
  nodes: [compras_Produtos!]!
}

"""
aggregate fields of "compras.Produtos"
"""
type compras_Produtos_aggregate_fields {
  avg: compras_Produtos_avg_fields
  count(columns: [compras_Produtos_select_column!], distinct: Boolean): Int!
  max: compras_Produtos_max_fields
  min: compras_Produtos_min_fields
  stddev: compras_Produtos_stddev_fields
  stddev_pop: compras_Produtos_stddev_pop_fields
  stddev_samp: compras_Produtos_stddev_samp_fields
  sum: compras_Produtos_sum_fields
  var_pop: compras_Produtos_var_pop_fields
  var_samp: compras_Produtos_var_samp_fields
  variance: compras_Produtos_variance_fields
}

"""aggregate avg on columns"""
type compras_Produtos_avg_fields {
  NCM: Float
}

"""
Boolean expression to filter rows from the table "compras.Produtos". All fields are combined with a logical 'AND'.
"""
input compras_Produtos_bool_exp {
  Descricao: String_comparison_exp
  Id: uuid_comparison_exp
  Itens: estoque_Itens_bool_exp
  NCM: Int_comparison_exp
  Nome: String_comparison_exp
  UnidadeDeMedida_Id: String_comparison_exp
  Utilizacao: String_comparison_exp
  _and: [compras_Produtos_bool_exp!]
  _not: compras_Produtos_bool_exp
  _or: [compras_Produtos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "compras.Produtos"
"""
enum compras_Produtos_constraint {
  """unique or primary key constraint"""
  Produtos_pkey
}

"""
input type for incrementing numeric columns in table "compras.Produtos"
"""
input compras_Produtos_inc_input {
  NCM: Int
}

"""
input type for inserting data into table "compras.Produtos"
"""
input compras_Produtos_insert_input {
  Descricao: String
  Id: uuid
  Itens: estoque_Itens_arr_rel_insert_input
  NCM: Int
  Nome: String
  UnidadeDeMedida_Id: String
  Utilizacao: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type compras_Produtos_max_fields {
  Descricao: String
  Id: uuid
  NCM: Int
  Nome: String
  UnidadeDeMedida_Id: String
  Utilizacao: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type compras_Produtos_min_fields {
  Descricao: String
  Id: uuid
  NCM: Int
  Nome: String
  UnidadeDeMedida_Id: String
  Utilizacao: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "compras.Produtos"
"""
type compras_Produtos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [compras_Produtos!]!
}

"""
input type for inserting object relation for remote table "compras.Produtos"
"""
input compras_Produtos_obj_rel_insert_input {
  data: compras_Produtos_insert_input!

  """on conflict condition"""
  on_conflict: compras_Produtos_on_conflict
}

"""
on conflict condition type for table "compras.Produtos"
"""
input compras_Produtos_on_conflict {
  constraint: compras_Produtos_constraint!
  update_columns: [compras_Produtos_update_column!]! = []
  where: compras_Produtos_bool_exp
}

"""Ordering options when selecting data from "compras.Produtos"."""
input compras_Produtos_order_by {
  Descricao: order_by
  Id: order_by
  Itens_aggregate: estoque_Itens_aggregate_order_by
  NCM: order_by
  Nome: order_by
  UnidadeDeMedida_Id: order_by
  Utilizacao: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: compras_Produtos"""
input compras_Produtos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "compras.Produtos"
"""
enum compras_Produtos_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  NCM

  """column name"""
  Nome

  """column name"""
  UnidadeDeMedida_Id

  """column name"""
  Utilizacao

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "compras.Produtos"
"""
input compras_Produtos_set_input {
  Descricao: String
  Id: uuid
  NCM: Int
  Nome: String
  UnidadeDeMedida_Id: String
  Utilizacao: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type compras_Produtos_stddev_fields {
  NCM: Float
}

"""aggregate stddev_pop on columns"""
type compras_Produtos_stddev_pop_fields {
  NCM: Float
}

"""aggregate stddev_samp on columns"""
type compras_Produtos_stddev_samp_fields {
  NCM: Float
}

"""aggregate sum on columns"""
type compras_Produtos_sum_fields {
  NCM: Int
}

"""
update columns of table "compras.Produtos"
"""
enum compras_Produtos_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  NCM

  """column name"""
  Nome

  """column name"""
  UnidadeDeMedida_Id

  """column name"""
  Utilizacao

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type compras_Produtos_var_pop_fields {
  NCM: Float
}

"""aggregate var_samp on columns"""
type compras_Produtos_var_samp_fields {
  NCM: Float
}

"""aggregate variance on columns"""
type compras_Produtos_variance_fields {
  NCM: Float
}

"""
columns and relationships of "estoque.Enderecamentos"
"""
type estoque_Enderecamentos {
  Descricao: String!

  """An array relationship"""
  Filhos(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): [estoque_Enderecamentos!]!

  """An aggregate relationship"""
  Filhos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): estoque_Enderecamentos_aggregate!
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!
  Nome: String!

  """An object relationship"""
  Pai: estoque_Enderecamentos
  Pai_Id: uuid

  """An object relationship"""
  Tipo: estoque_TiposDeEnderecamentos!
  Tipo_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Enderecamentos"
"""
type estoque_Enderecamentos_aggregate {
  aggregate: estoque_Enderecamentos_aggregate_fields
  nodes: [estoque_Enderecamentos!]!
}

"""
aggregate fields of "estoque.Enderecamentos"
"""
type estoque_Enderecamentos_aggregate_fields {
  count(columns: [estoque_Enderecamentos_select_column!], distinct: Boolean): Int!
  max: estoque_Enderecamentos_max_fields
  min: estoque_Enderecamentos_min_fields
}

"""
order by aggregate values of table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_aggregate_order_by {
  count: order_by
  max: estoque_Enderecamentos_max_order_by
  min: estoque_Enderecamentos_min_order_by
}

"""
input type for inserting array relation for remote table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_arr_rel_insert_input {
  data: [estoque_Enderecamentos_insert_input!]!

  """on conflict condition"""
  on_conflict: estoque_Enderecamentos_on_conflict
}

"""
Boolean expression to filter rows from the table "estoque.Enderecamentos". All fields are combined with a logical 'AND'.
"""
input estoque_Enderecamentos_bool_exp {
  Descricao: String_comparison_exp
  Filhos: estoque_Enderecamentos_bool_exp
  Id: uuid_comparison_exp
  Itens: estoque_Itens_bool_exp
  Nome: String_comparison_exp
  Pai: estoque_Enderecamentos_bool_exp
  Pai_Id: uuid_comparison_exp
  Tipo: estoque_TiposDeEnderecamentos_bool_exp
  Tipo_Id: uuid_comparison_exp
  _and: [estoque_Enderecamentos_bool_exp!]
  _not: estoque_Enderecamentos_bool_exp
  _or: [estoque_Enderecamentos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Enderecamentos"
"""
enum estoque_Enderecamentos_constraint {
  """unique or primary key constraint"""
  Enderecamentos_Id_key

  """unique or primary key constraint"""
  Enderecamentos_pkey
}

"""
input type for inserting data into table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_insert_input {
  Descricao: String
  Filhos: estoque_Enderecamentos_arr_rel_insert_input
  Id: uuid
  Itens: estoque_Itens_arr_rel_insert_input
  Nome: String
  Pai: estoque_Enderecamentos_obj_rel_insert_input
  Pai_Id: uuid
  Tipo: estoque_TiposDeEnderecamentos_obj_rel_insert_input
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Enderecamentos_max_fields {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_max_order_by {
  Descricao: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type estoque_Enderecamentos_min_fields {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_min_order_by {
  Descricao: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "estoque.Enderecamentos"
"""
type estoque_Enderecamentos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Enderecamentos!]!
}

"""
input type for inserting object relation for remote table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_obj_rel_insert_input {
  data: estoque_Enderecamentos_insert_input!

  """on conflict condition"""
  on_conflict: estoque_Enderecamentos_on_conflict
}

"""
on conflict condition type for table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_on_conflict {
  constraint: estoque_Enderecamentos_constraint!
  update_columns: [estoque_Enderecamentos_update_column!]! = []
  where: estoque_Enderecamentos_bool_exp
}

"""Ordering options when selecting data from "estoque.Enderecamentos"."""
input estoque_Enderecamentos_order_by {
  Descricao: order_by
  Filhos_aggregate: estoque_Enderecamentos_aggregate_order_by
  Id: order_by
  Itens_aggregate: estoque_Itens_aggregate_order_by
  Nome: order_by
  Pai: estoque_Enderecamentos_order_by
  Pai_Id: order_by
  Tipo: estoque_TiposDeEnderecamentos_order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Enderecamentos"""
input estoque_Enderecamentos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Enderecamentos"
"""
enum estoque_Enderecamentos_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Enderecamentos"
"""
input estoque_Enderecamentos_set_input {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.Enderecamentos"
"""
enum estoque_Enderecamentos_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.Fabricantes"
"""
type estoque_Fabricantes {
  Descricao: String!
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!
  Nome: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Fabricantes"
"""
type estoque_Fabricantes_aggregate {
  aggregate: estoque_Fabricantes_aggregate_fields
  nodes: [estoque_Fabricantes!]!
}

"""
aggregate fields of "estoque.Fabricantes"
"""
type estoque_Fabricantes_aggregate_fields {
  count(columns: [estoque_Fabricantes_select_column!], distinct: Boolean): Int!
  max: estoque_Fabricantes_max_fields
  min: estoque_Fabricantes_min_fields
}

"""
Boolean expression to filter rows from the table "estoque.Fabricantes". All fields are combined with a logical 'AND'.
"""
input estoque_Fabricantes_bool_exp {
  Descricao: String_comparison_exp
  Id: uuid_comparison_exp
  Itens: estoque_Itens_bool_exp
  Nome: String_comparison_exp
  _and: [estoque_Fabricantes_bool_exp!]
  _not: estoque_Fabricantes_bool_exp
  _or: [estoque_Fabricantes_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Fabricantes"
"""
enum estoque_Fabricantes_constraint {
  """unique or primary key constraint"""
  Fabricantes_pkey
}

"""
input type for inserting data into table "estoque.Fabricantes"
"""
input estoque_Fabricantes_insert_input {
  Descricao: String
  Id: uuid
  Itens: estoque_Itens_arr_rel_insert_input
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Fabricantes_max_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type estoque_Fabricantes_min_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "estoque.Fabricantes"
"""
type estoque_Fabricantes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Fabricantes!]!
}

"""
input type for inserting object relation for remote table "estoque.Fabricantes"
"""
input estoque_Fabricantes_obj_rel_insert_input {
  data: estoque_Fabricantes_insert_input!

  """on conflict condition"""
  on_conflict: estoque_Fabricantes_on_conflict
}

"""
on conflict condition type for table "estoque.Fabricantes"
"""
input estoque_Fabricantes_on_conflict {
  constraint: estoque_Fabricantes_constraint!
  update_columns: [estoque_Fabricantes_update_column!]! = []
  where: estoque_Fabricantes_bool_exp
}

"""Ordering options when selecting data from "estoque.Fabricantes"."""
input estoque_Fabricantes_order_by {
  Descricao: order_by
  Id: order_by
  Itens_aggregate: estoque_Itens_aggregate_order_by
  Nome: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Fabricantes"""
input estoque_Fabricantes_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Fabricantes"
"""
enum estoque_Fabricantes_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Fabricantes"
"""
input estoque_Fabricantes_set_input {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.Fabricantes"
"""
enum estoque_Fabricantes_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.Familias"
"""
type estoque_Familias {
  Descricao: String!

  """An array relationship"""
  Filhos(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): [estoque_Familias!]!

  """An aggregate relationship"""
  Filhos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): estoque_Familias_aggregate!
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!
  Nome: String!

  """An object relationship"""
  Pai: estoque_Familias
  Pai_Id: uuid
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Familias"
"""
type estoque_Familias_aggregate {
  aggregate: estoque_Familias_aggregate_fields
  nodes: [estoque_Familias!]!
}

"""
aggregate fields of "estoque.Familias"
"""
type estoque_Familias_aggregate_fields {
  count(columns: [estoque_Familias_select_column!], distinct: Boolean): Int!
  max: estoque_Familias_max_fields
  min: estoque_Familias_min_fields
}

"""
order by aggregate values of table "estoque.Familias"
"""
input estoque_Familias_aggregate_order_by {
  count: order_by
  max: estoque_Familias_max_order_by
  min: estoque_Familias_min_order_by
}

"""
input type for inserting array relation for remote table "estoque.Familias"
"""
input estoque_Familias_arr_rel_insert_input {
  data: [estoque_Familias_insert_input!]!

  """on conflict condition"""
  on_conflict: estoque_Familias_on_conflict
}

"""
Boolean expression to filter rows from the table "estoque.Familias". All fields are combined with a logical 'AND'.
"""
input estoque_Familias_bool_exp {
  Descricao: String_comparison_exp
  Filhos: estoque_Familias_bool_exp
  Id: uuid_comparison_exp
  Itens: estoque_Itens_bool_exp
  Nome: String_comparison_exp
  Pai: estoque_Familias_bool_exp
  Pai_Id: uuid_comparison_exp
  _and: [estoque_Familias_bool_exp!]
  _not: estoque_Familias_bool_exp
  _or: [estoque_Familias_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Familias"
"""
enum estoque_Familias_constraint {
  """unique or primary key constraint"""
  Familias_pkey
}

"""
input type for inserting data into table "estoque.Familias"
"""
input estoque_Familias_insert_input {
  Descricao: String
  Filhos: estoque_Familias_arr_rel_insert_input
  Id: uuid
  Itens: estoque_Itens_arr_rel_insert_input
  Nome: String
  Pai: estoque_Familias_obj_rel_insert_input
  Pai_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Familias_max_fields {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "estoque.Familias"
"""
input estoque_Familias_max_order_by {
  Descricao: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type estoque_Familias_min_fields {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "estoque.Familias"
"""
input estoque_Familias_min_order_by {
  Descricao: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "estoque.Familias"
"""
type estoque_Familias_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Familias!]!
}

"""
input type for inserting object relation for remote table "estoque.Familias"
"""
input estoque_Familias_obj_rel_insert_input {
  data: estoque_Familias_insert_input!

  """on conflict condition"""
  on_conflict: estoque_Familias_on_conflict
}

"""
on conflict condition type for table "estoque.Familias"
"""
input estoque_Familias_on_conflict {
  constraint: estoque_Familias_constraint!
  update_columns: [estoque_Familias_update_column!]! = []
  where: estoque_Familias_bool_exp
}

"""Ordering options when selecting data from "estoque.Familias"."""
input estoque_Familias_order_by {
  Descricao: order_by
  Filhos_aggregate: estoque_Familias_aggregate_order_by
  Id: order_by
  Itens_aggregate: estoque_Itens_aggregate_order_by
  Nome: order_by
  Pai: estoque_Familias_order_by
  Pai_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Familias"""
input estoque_Familias_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Familias"
"""
enum estoque_Familias_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Familias"
"""
input estoque_Familias_set_input {
  Descricao: String
  Id: uuid
  Nome: String
  Pai_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.Familias"
"""
enum estoque_Familias_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.Grupos"
"""
type estoque_Grupos {
  Descricao: String!
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!
  Nome: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Grupos"
"""
type estoque_Grupos_aggregate {
  aggregate: estoque_Grupos_aggregate_fields
  nodes: [estoque_Grupos!]!
}

"""
aggregate fields of "estoque.Grupos"
"""
type estoque_Grupos_aggregate_fields {
  count(columns: [estoque_Grupos_select_column!], distinct: Boolean): Int!
  max: estoque_Grupos_max_fields
  min: estoque_Grupos_min_fields
}

"""
Boolean expression to filter rows from the table "estoque.Grupos". All fields are combined with a logical 'AND'.
"""
input estoque_Grupos_bool_exp {
  Descricao: String_comparison_exp
  Id: uuid_comparison_exp
  Itens: estoque_Itens_bool_exp
  Nome: String_comparison_exp
  _and: [estoque_Grupos_bool_exp!]
  _not: estoque_Grupos_bool_exp
  _or: [estoque_Grupos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Grupos"
"""
enum estoque_Grupos_constraint {
  """unique or primary key constraint"""
  Grupos_pkey
}

"""
input type for inserting data into table "estoque.Grupos"
"""
input estoque_Grupos_insert_input {
  Descricao: String
  Id: uuid
  Itens: estoque_Itens_arr_rel_insert_input
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Grupos_max_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type estoque_Grupos_min_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "estoque.Grupos"
"""
type estoque_Grupos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Grupos!]!
}

"""
input type for inserting object relation for remote table "estoque.Grupos"
"""
input estoque_Grupos_obj_rel_insert_input {
  data: estoque_Grupos_insert_input!

  """on conflict condition"""
  on_conflict: estoque_Grupos_on_conflict
}

"""
on conflict condition type for table "estoque.Grupos"
"""
input estoque_Grupos_on_conflict {
  constraint: estoque_Grupos_constraint!
  update_columns: [estoque_Grupos_update_column!]! = []
  where: estoque_Grupos_bool_exp
}

"""Ordering options when selecting data from "estoque.Grupos"."""
input estoque_Grupos_order_by {
  Descricao: order_by
  Id: order_by
  Itens_aggregate: estoque_Itens_aggregate_order_by
  Nome: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Grupos"""
input estoque_Grupos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Grupos"
"""
enum estoque_Grupos_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Grupos"
"""
input estoque_Grupos_set_input {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.Grupos"
"""
enum estoque_Grupos_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.Itens"
"""
type estoque_Itens {
  Classificacao: String!
  Criticidade: String!

  """An object relationship"""
  Enderecamento: estoque_Enderecamentos!
  Enderecamento_Id: uuid!
  EstoqueMinimo: Int!

  """An object relationship"""
  Fabricante: estoque_Fabricantes!
  Fabricante_Id: uuid!

  """An object relationship"""
  Familia: estoque_Familias!
  Familia_Id: uuid!

  """An object relationship"""
  Grupo: estoque_Grupos!
  Grupo_Id: uuid!
  Id: uuid!

  """An array relationship"""
  PedidosDeSaida(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): [estoque_PedidosDeSaida_Itens!]!

  """An aggregate relationship"""
  PedidosDeSaida_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): estoque_PedidosDeSaida_Itens_aggregate!

  """An object relationship"""
  Produto: compras_Produtos!
  Produto_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Itens"
"""
type estoque_Itens_aggregate {
  aggregate: estoque_Itens_aggregate_fields
  nodes: [estoque_Itens!]!
}

"""
aggregate fields of "estoque.Itens"
"""
type estoque_Itens_aggregate_fields {
  avg: estoque_Itens_avg_fields
  count(columns: [estoque_Itens_select_column!], distinct: Boolean): Int!
  max: estoque_Itens_max_fields
  min: estoque_Itens_min_fields
  stddev: estoque_Itens_stddev_fields
  stddev_pop: estoque_Itens_stddev_pop_fields
  stddev_samp: estoque_Itens_stddev_samp_fields
  sum: estoque_Itens_sum_fields
  var_pop: estoque_Itens_var_pop_fields
  var_samp: estoque_Itens_var_samp_fields
  variance: estoque_Itens_variance_fields
}

"""
order by aggregate values of table "estoque.Itens"
"""
input estoque_Itens_aggregate_order_by {
  avg: estoque_Itens_avg_order_by
  count: order_by
  max: estoque_Itens_max_order_by
  min: estoque_Itens_min_order_by
  stddev: estoque_Itens_stddev_order_by
  stddev_pop: estoque_Itens_stddev_pop_order_by
  stddev_samp: estoque_Itens_stddev_samp_order_by
  sum: estoque_Itens_sum_order_by
  var_pop: estoque_Itens_var_pop_order_by
  var_samp: estoque_Itens_var_samp_order_by
  variance: estoque_Itens_variance_order_by
}

"""
input type for inserting array relation for remote table "estoque.Itens"
"""
input estoque_Itens_arr_rel_insert_input {
  data: [estoque_Itens_insert_input!]!

  """on conflict condition"""
  on_conflict: estoque_Itens_on_conflict
}

"""aggregate avg on columns"""
type estoque_Itens_avg_fields {
  EstoqueMinimo: Float
}

"""
order by avg() on columns of table "estoque.Itens"
"""
input estoque_Itens_avg_order_by {
  EstoqueMinimo: order_by
}

"""
Boolean expression to filter rows from the table "estoque.Itens". All fields are combined with a logical 'AND'.
"""
input estoque_Itens_bool_exp {
  Classificacao: String_comparison_exp
  Criticidade: String_comparison_exp
  Enderecamento: estoque_Enderecamentos_bool_exp
  Enderecamento_Id: uuid_comparison_exp
  EstoqueMinimo: Int_comparison_exp
  Fabricante: estoque_Fabricantes_bool_exp
  Fabricante_Id: uuid_comparison_exp
  Familia: estoque_Familias_bool_exp
  Familia_Id: uuid_comparison_exp
  Grupo: estoque_Grupos_bool_exp
  Grupo_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  PedidosDeSaida: estoque_PedidosDeSaida_Itens_bool_exp
  Produto: compras_Produtos_bool_exp
  Produto_Id: uuid_comparison_exp
  _and: [estoque_Itens_bool_exp!]
  _not: estoque_Itens_bool_exp
  _or: [estoque_Itens_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Itens"
"""
enum estoque_Itens_constraint {
  """unique or primary key constraint"""
  Itens_pkey
}

"""
input type for incrementing numeric columns in table "estoque.Itens"
"""
input estoque_Itens_inc_input {
  EstoqueMinimo: Int
}

"""
input type for inserting data into table "estoque.Itens"
"""
input estoque_Itens_insert_input {
  Classificacao: String
  Criticidade: String
  Enderecamento: estoque_Enderecamentos_obj_rel_insert_input
  Enderecamento_Id: uuid
  EstoqueMinimo: Int
  Fabricante: estoque_Fabricantes_obj_rel_insert_input
  Fabricante_Id: uuid
  Familia: estoque_Familias_obj_rel_insert_input
  Familia_Id: uuid
  Grupo: estoque_Grupos_obj_rel_insert_input
  Grupo_Id: uuid
  Id: uuid
  PedidosDeSaida: estoque_PedidosDeSaida_Itens_arr_rel_insert_input
  Produto: compras_Produtos_obj_rel_insert_input
  Produto_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Itens_max_fields {
  Classificacao: String
  Criticidade: String
  Enderecamento_Id: uuid
  EstoqueMinimo: Int
  Fabricante_Id: uuid
  Familia_Id: uuid
  Grupo_Id: uuid
  Id: uuid
  Produto_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "estoque.Itens"
"""
input estoque_Itens_max_order_by {
  Classificacao: order_by
  Criticidade: order_by
  Enderecamento_Id: order_by
  EstoqueMinimo: order_by
  Fabricante_Id: order_by
  Familia_Id: order_by
  Grupo_Id: order_by
  Id: order_by
  Produto_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type estoque_Itens_min_fields {
  Classificacao: String
  Criticidade: String
  Enderecamento_Id: uuid
  EstoqueMinimo: Int
  Fabricante_Id: uuid
  Familia_Id: uuid
  Grupo_Id: uuid
  Id: uuid
  Produto_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "estoque.Itens"
"""
input estoque_Itens_min_order_by {
  Classificacao: order_by
  Criticidade: order_by
  Enderecamento_Id: order_by
  EstoqueMinimo: order_by
  Fabricante_Id: order_by
  Familia_Id: order_by
  Grupo_Id: order_by
  Id: order_by
  Produto_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "estoque.Itens"
"""
type estoque_Itens_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Itens!]!
}

"""
input type for inserting object relation for remote table "estoque.Itens"
"""
input estoque_Itens_obj_rel_insert_input {
  data: estoque_Itens_insert_input!

  """on conflict condition"""
  on_conflict: estoque_Itens_on_conflict
}

"""
on conflict condition type for table "estoque.Itens"
"""
input estoque_Itens_on_conflict {
  constraint: estoque_Itens_constraint!
  update_columns: [estoque_Itens_update_column!]! = []
  where: estoque_Itens_bool_exp
}

"""Ordering options when selecting data from "estoque.Itens"."""
input estoque_Itens_order_by {
  Classificacao: order_by
  Criticidade: order_by
  Enderecamento: estoque_Enderecamentos_order_by
  Enderecamento_Id: order_by
  EstoqueMinimo: order_by
  Fabricante: estoque_Fabricantes_order_by
  Fabricante_Id: order_by
  Familia: estoque_Familias_order_by
  Familia_Id: order_by
  Grupo: estoque_Grupos_order_by
  Grupo_Id: order_by
  Id: order_by
  PedidosDeSaida_aggregate: estoque_PedidosDeSaida_Itens_aggregate_order_by
  Produto: compras_Produtos_order_by
  Produto_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Itens"""
input estoque_Itens_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Itens"
"""
enum estoque_Itens_select_column {
  """column name"""
  Classificacao

  """column name"""
  Criticidade

  """column name"""
  Enderecamento_Id

  """column name"""
  EstoqueMinimo

  """column name"""
  Fabricante_Id

  """column name"""
  Familia_Id

  """column name"""
  Grupo_Id

  """column name"""
  Id

  """column name"""
  Produto_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Itens"
"""
input estoque_Itens_set_input {
  Classificacao: String
  Criticidade: String
  Enderecamento_Id: uuid
  EstoqueMinimo: Int
  Fabricante_Id: uuid
  Familia_Id: uuid
  Grupo_Id: uuid
  Id: uuid
  Produto_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type estoque_Itens_stddev_fields {
  EstoqueMinimo: Float
}

"""
order by stddev() on columns of table "estoque.Itens"
"""
input estoque_Itens_stddev_order_by {
  EstoqueMinimo: order_by
}

"""aggregate stddev_pop on columns"""
type estoque_Itens_stddev_pop_fields {
  EstoqueMinimo: Float
}

"""
order by stddev_pop() on columns of table "estoque.Itens"
"""
input estoque_Itens_stddev_pop_order_by {
  EstoqueMinimo: order_by
}

"""aggregate stddev_samp on columns"""
type estoque_Itens_stddev_samp_fields {
  EstoqueMinimo: Float
}

"""
order by stddev_samp() on columns of table "estoque.Itens"
"""
input estoque_Itens_stddev_samp_order_by {
  EstoqueMinimo: order_by
}

"""aggregate sum on columns"""
type estoque_Itens_sum_fields {
  EstoqueMinimo: Int
}

"""
order by sum() on columns of table "estoque.Itens"
"""
input estoque_Itens_sum_order_by {
  EstoqueMinimo: order_by
}

"""
update columns of table "estoque.Itens"
"""
enum estoque_Itens_update_column {
  """column name"""
  Classificacao

  """column name"""
  Criticidade

  """column name"""
  Enderecamento_Id

  """column name"""
  EstoqueMinimo

  """column name"""
  Fabricante_Id

  """column name"""
  Familia_Id

  """column name"""
  Grupo_Id

  """column name"""
  Id

  """column name"""
  Produto_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type estoque_Itens_var_pop_fields {
  EstoqueMinimo: Float
}

"""
order by var_pop() on columns of table "estoque.Itens"
"""
input estoque_Itens_var_pop_order_by {
  EstoqueMinimo: order_by
}

"""aggregate var_samp on columns"""
type estoque_Itens_var_samp_fields {
  EstoqueMinimo: Float
}

"""
order by var_samp() on columns of table "estoque.Itens"
"""
input estoque_Itens_var_samp_order_by {
  EstoqueMinimo: order_by
}

"""aggregate variance on columns"""
type estoque_Itens_variance_fields {
  EstoqueMinimo: Float
}

"""
order by variance() on columns of table "estoque.Itens"
"""
input estoque_Itens_variance_order_by {
  EstoqueMinimo: order_by
}

"""
columns and relationships of "estoque.Logs"
"""
type estoque_Logs {
  DadosAntigos(
    """JSON select path"""
    path: String
  ): jsonb!
  DadosNovos(
    """JSON select path"""
    path: String
  ): jsonb!
  Id: uuid!
  Operacao: String!
  Tipo: String!
  Tipo_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Logs"
"""
type estoque_Logs_aggregate {
  aggregate: estoque_Logs_aggregate_fields
  nodes: [estoque_Logs!]!
}

"""
aggregate fields of "estoque.Logs"
"""
type estoque_Logs_aggregate_fields {
  count(columns: [estoque_Logs_select_column!], distinct: Boolean): Int!
  max: estoque_Logs_max_fields
  min: estoque_Logs_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input estoque_Logs_append_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
Boolean expression to filter rows from the table "estoque.Logs". All fields are combined with a logical 'AND'.
"""
input estoque_Logs_bool_exp {
  DadosAntigos: jsonb_comparison_exp
  DadosNovos: jsonb_comparison_exp
  Id: uuid_comparison_exp
  Operacao: String_comparison_exp
  Tipo: String_comparison_exp
  Tipo_Id: uuid_comparison_exp
  _and: [estoque_Logs_bool_exp!]
  _not: estoque_Logs_bool_exp
  _or: [estoque_Logs_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Logs"
"""
enum estoque_Logs_constraint {
  """unique or primary key constraint"""
  Logs_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input estoque_Logs_delete_at_path_input {
  DadosAntigos: [String!]
  DadosNovos: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input estoque_Logs_delete_elem_input {
  DadosAntigos: Int
  DadosNovos: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input estoque_Logs_delete_key_input {
  DadosAntigos: String
  DadosNovos: String
}

"""
input type for inserting data into table "estoque.Logs"
"""
input estoque_Logs_insert_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Logs_max_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type estoque_Logs_min_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "estoque.Logs"
"""
type estoque_Logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Logs!]!
}

"""
on conflict condition type for table "estoque.Logs"
"""
input estoque_Logs_on_conflict {
  constraint: estoque_Logs_constraint!
  update_columns: [estoque_Logs_update_column!]! = []
  where: estoque_Logs_bool_exp
}

"""Ordering options when selecting data from "estoque.Logs"."""
input estoque_Logs_order_by {
  DadosAntigos: order_by
  DadosNovos: order_by
  Id: order_by
  Operacao: order_by
  Tipo: order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Logs"""
input estoque_Logs_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input estoque_Logs_prepend_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
select columns of table "estoque.Logs"
"""
enum estoque_Logs_select_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Logs"
"""
input estoque_Logs_set_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.Logs"
"""
enum estoque_Logs_update_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.Movimentacoes"
"""
type estoque_Movimentacoes {
  Data: timestamptz!
  Id: uuid!

  """An object relationship"""
  Item: estoque_Itens!
  Item_Id: uuid!
  Quantidade: Int!
  Tipo: String!
  Valor: float8!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.Movimentacoes"
"""
type estoque_Movimentacoes_aggregate {
  aggregate: estoque_Movimentacoes_aggregate_fields
  nodes: [estoque_Movimentacoes!]!
}

"""
aggregate fields of "estoque.Movimentacoes"
"""
type estoque_Movimentacoes_aggregate_fields {
  avg: estoque_Movimentacoes_avg_fields
  count(columns: [estoque_Movimentacoes_select_column!], distinct: Boolean): Int!
  max: estoque_Movimentacoes_max_fields
  min: estoque_Movimentacoes_min_fields
  stddev: estoque_Movimentacoes_stddev_fields
  stddev_pop: estoque_Movimentacoes_stddev_pop_fields
  stddev_samp: estoque_Movimentacoes_stddev_samp_fields
  sum: estoque_Movimentacoes_sum_fields
  var_pop: estoque_Movimentacoes_var_pop_fields
  var_samp: estoque_Movimentacoes_var_samp_fields
  variance: estoque_Movimentacoes_variance_fields
}

"""aggregate avg on columns"""
type estoque_Movimentacoes_avg_fields {
  Quantidade: Float
  Valor: Float
}

"""
Boolean expression to filter rows from the table "estoque.Movimentacoes". All fields are combined with a logical 'AND'.
"""
input estoque_Movimentacoes_bool_exp {
  Data: timestamptz_comparison_exp
  Id: uuid_comparison_exp
  Item: estoque_Itens_bool_exp
  Item_Id: uuid_comparison_exp
  Quantidade: Int_comparison_exp
  Tipo: String_comparison_exp
  Valor: float8_comparison_exp
  _and: [estoque_Movimentacoes_bool_exp!]
  _not: estoque_Movimentacoes_bool_exp
  _or: [estoque_Movimentacoes_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.Movimentacoes"
"""
enum estoque_Movimentacoes_constraint {
  """unique or primary key constraint"""
  Movimentacoes_pkey
}

"""
input type for incrementing numeric columns in table "estoque.Movimentacoes"
"""
input estoque_Movimentacoes_inc_input {
  Quantidade: Int
  Valor: float8
}

"""
input type for inserting data into table "estoque.Movimentacoes"
"""
input estoque_Movimentacoes_insert_input {
  Data: timestamptz
  Id: uuid
  Item: estoque_Itens_obj_rel_insert_input
  Item_Id: uuid
  Quantidade: Int
  Tipo: String
  Valor: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_Movimentacoes_max_fields {
  Data: timestamptz
  Id: uuid
  Item_Id: uuid
  Quantidade: Int
  Tipo: String
  Valor: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type estoque_Movimentacoes_min_fields {
  Data: timestamptz
  Id: uuid
  Item_Id: uuid
  Quantidade: Int
  Tipo: String
  Valor: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "estoque.Movimentacoes"
"""
type estoque_Movimentacoes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_Movimentacoes!]!
}

"""
on conflict condition type for table "estoque.Movimentacoes"
"""
input estoque_Movimentacoes_on_conflict {
  constraint: estoque_Movimentacoes_constraint!
  update_columns: [estoque_Movimentacoes_update_column!]! = []
  where: estoque_Movimentacoes_bool_exp
}

"""Ordering options when selecting data from "estoque.Movimentacoes"."""
input estoque_Movimentacoes_order_by {
  Data: order_by
  Id: order_by
  Item: estoque_Itens_order_by
  Item_Id: order_by
  Quantidade: order_by
  Tipo: order_by
  Valor: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_Movimentacoes"""
input estoque_Movimentacoes_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.Movimentacoes"
"""
enum estoque_Movimentacoes_select_column {
  """column name"""
  Data

  """column name"""
  Id

  """column name"""
  Item_Id

  """column name"""
  Quantidade

  """column name"""
  Tipo

  """column name"""
  Valor

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.Movimentacoes"
"""
input estoque_Movimentacoes_set_input {
  Data: timestamptz
  Id: uuid
  Item_Id: uuid
  Quantidade: Int
  Tipo: String
  Valor: float8
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type estoque_Movimentacoes_stddev_fields {
  Quantidade: Float
  Valor: Float
}

"""aggregate stddev_pop on columns"""
type estoque_Movimentacoes_stddev_pop_fields {
  Quantidade: Float
  Valor: Float
}

"""aggregate stddev_samp on columns"""
type estoque_Movimentacoes_stddev_samp_fields {
  Quantidade: Float
  Valor: Float
}

"""aggregate sum on columns"""
type estoque_Movimentacoes_sum_fields {
  Quantidade: Int
  Valor: float8
}

"""
update columns of table "estoque.Movimentacoes"
"""
enum estoque_Movimentacoes_update_column {
  """column name"""
  Data

  """column name"""
  Id

  """column name"""
  Item_Id

  """column name"""
  Quantidade

  """column name"""
  Tipo

  """column name"""
  Valor

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type estoque_Movimentacoes_var_pop_fields {
  Quantidade: Float
  Valor: Float
}

"""aggregate var_samp on columns"""
type estoque_Movimentacoes_var_samp_fields {
  Quantidade: Float
  Valor: Float
}

"""aggregate variance on columns"""
type estoque_Movimentacoes_variance_fields {
  Quantidade: Float
  Valor: Float
}

"""
columns and relationships of "estoque.PedidosDeSaida"
"""
type estoque_PedidosDeSaida {
  DataAbertura: timestamptz!
  DataAutorizacao: timestamptz
  DataEntregue: timestamptz
  DataRecebido: timestamptz
  Id: uuid!

  """An array relationship"""
  Itens(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): [estoque_PedidosDeSaida_Itens!]!

  """An aggregate relationship"""
  Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): estoque_PedidosDeSaida_Itens_aggregate!
  MotivoRecusado: String

  """An object relationship"""
  Situacao: estoque_PedidosDeSaidaSituacoes!
  Situacao_Id: estoque_PedidosDeSaidaSituacoes_enum!
  Solicitante_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
columns and relationships of "estoque.PedidosDeSaidaSituacoes"
"""
type estoque_PedidosDeSaidaSituacoes {
  Comentario: String!

  """An array relationship"""
  PedidosDeSaida(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): [estoque_PedidosDeSaida!]!

  """An aggregate relationship"""
  PedidosDeSaida_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): estoque_PedidosDeSaida_aggregate!
  Valor: String!
}

"""
aggregated selection of "estoque.PedidosDeSaidaSituacoes"
"""
type estoque_PedidosDeSaidaSituacoes_aggregate {
  aggregate: estoque_PedidosDeSaidaSituacoes_aggregate_fields
  nodes: [estoque_PedidosDeSaidaSituacoes!]!
}

"""
aggregate fields of "estoque.PedidosDeSaidaSituacoes"
"""
type estoque_PedidosDeSaidaSituacoes_aggregate_fields {
  count(columns: [estoque_PedidosDeSaidaSituacoes_select_column!], distinct: Boolean): Int!
  max: estoque_PedidosDeSaidaSituacoes_max_fields
  min: estoque_PedidosDeSaidaSituacoes_min_fields
}

"""
Boolean expression to filter rows from the table "estoque.PedidosDeSaidaSituacoes". All fields are combined with a logical 'AND'.
"""
input estoque_PedidosDeSaidaSituacoes_bool_exp {
  Comentario: String_comparison_exp
  PedidosDeSaida: estoque_PedidosDeSaida_bool_exp
  Valor: String_comparison_exp
  _and: [estoque_PedidosDeSaidaSituacoes_bool_exp!]
  _not: estoque_PedidosDeSaidaSituacoes_bool_exp
  _or: [estoque_PedidosDeSaidaSituacoes_bool_exp!]
}

"""
unique or primary key constraints on table "estoque.PedidosDeSaidaSituacoes"
"""
enum estoque_PedidosDeSaidaSituacoes_constraint {
  """unique or primary key constraint"""
  PedidosDeSaida_Situacoes_pkey
}

enum estoque_PedidosDeSaidaSituacoes_enum {
  """Aberto"""
  aberto

  """Autorizado"""
  autorizado

  """Entregue"""
  entregue

  """Finalizado"""
  finalizado

  """Recebido"""
  recebido

  """Recusado"""
  recusado
}

"""
Boolean expression to compare columns of type "estoque_PedidosDeSaidaSituacoes_enum". All fields are combined with logical 'AND'.
"""
input estoque_PedidosDeSaidaSituacoes_enum_comparison_exp {
  _eq: estoque_PedidosDeSaidaSituacoes_enum
  _in: [estoque_PedidosDeSaidaSituacoes_enum!]
  _is_null: Boolean
  _neq: estoque_PedidosDeSaidaSituacoes_enum
  _nin: [estoque_PedidosDeSaidaSituacoes_enum!]
}

"""
input type for inserting data into table "estoque.PedidosDeSaidaSituacoes"
"""
input estoque_PedidosDeSaidaSituacoes_insert_input {
  Comentario: String
  PedidosDeSaida: estoque_PedidosDeSaida_arr_rel_insert_input
  Valor: String
}

"""aggregate max on columns"""
type estoque_PedidosDeSaidaSituacoes_max_fields {
  Comentario: String
  Valor: String
}

"""aggregate min on columns"""
type estoque_PedidosDeSaidaSituacoes_min_fields {
  Comentario: String
  Valor: String
}

"""
response of any mutation on the table "estoque.PedidosDeSaidaSituacoes"
"""
type estoque_PedidosDeSaidaSituacoes_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_PedidosDeSaidaSituacoes!]!
}

"""
input type for inserting object relation for remote table "estoque.PedidosDeSaidaSituacoes"
"""
input estoque_PedidosDeSaidaSituacoes_obj_rel_insert_input {
  data: estoque_PedidosDeSaidaSituacoes_insert_input!

  """on conflict condition"""
  on_conflict: estoque_PedidosDeSaidaSituacoes_on_conflict
}

"""
on conflict condition type for table "estoque.PedidosDeSaidaSituacoes"
"""
input estoque_PedidosDeSaidaSituacoes_on_conflict {
  constraint: estoque_PedidosDeSaidaSituacoes_constraint!
  update_columns: [estoque_PedidosDeSaidaSituacoes_update_column!]! = []
  where: estoque_PedidosDeSaidaSituacoes_bool_exp
}

"""
Ordering options when selecting data from "estoque.PedidosDeSaidaSituacoes".
"""
input estoque_PedidosDeSaidaSituacoes_order_by {
  Comentario: order_by
  PedidosDeSaida_aggregate: estoque_PedidosDeSaida_aggregate_order_by
  Valor: order_by
}

"""primary key columns input for table: estoque_PedidosDeSaidaSituacoes"""
input estoque_PedidosDeSaidaSituacoes_pk_columns_input {
  Valor: String!
}

"""
select columns of table "estoque.PedidosDeSaidaSituacoes"
"""
enum estoque_PedidosDeSaidaSituacoes_select_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

"""
input type for updating data in table "estoque.PedidosDeSaidaSituacoes"
"""
input estoque_PedidosDeSaidaSituacoes_set_input {
  Comentario: String
  Valor: String
}

"""
update columns of table "estoque.PedidosDeSaidaSituacoes"
"""
enum estoque_PedidosDeSaidaSituacoes_update_column {
  """column name"""
  Comentario

  """column name"""
  Valor
}

"""
columns and relationships of "estoque.PedidosDeSaida_Itens"
"""
type estoque_PedidosDeSaida_Itens {
  Id: uuid!

  """An object relationship"""
  Item: estoque_Itens!
  Item_Id: uuid!
  Pedido_Id: uuid!

  """An object relationship"""
  PedidosDeSaida: estoque_PedidosDeSaida!
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int!
  QuantidadeRecebida: Int
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.PedidosDeSaida_Itens"
"""
type estoque_PedidosDeSaida_Itens_aggregate {
  aggregate: estoque_PedidosDeSaida_Itens_aggregate_fields
  nodes: [estoque_PedidosDeSaida_Itens!]!
}

"""
aggregate fields of "estoque.PedidosDeSaida_Itens"
"""
type estoque_PedidosDeSaida_Itens_aggregate_fields {
  avg: estoque_PedidosDeSaida_Itens_avg_fields
  count(columns: [estoque_PedidosDeSaida_Itens_select_column!], distinct: Boolean): Int!
  max: estoque_PedidosDeSaida_Itens_max_fields
  min: estoque_PedidosDeSaida_Itens_min_fields
  stddev: estoque_PedidosDeSaida_Itens_stddev_fields
  stddev_pop: estoque_PedidosDeSaida_Itens_stddev_pop_fields
  stddev_samp: estoque_PedidosDeSaida_Itens_stddev_samp_fields
  sum: estoque_PedidosDeSaida_Itens_sum_fields
  var_pop: estoque_PedidosDeSaida_Itens_var_pop_fields
  var_samp: estoque_PedidosDeSaida_Itens_var_samp_fields
  variance: estoque_PedidosDeSaida_Itens_variance_fields
}

"""
order by aggregate values of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_aggregate_order_by {
  avg: estoque_PedidosDeSaida_Itens_avg_order_by
  count: order_by
  max: estoque_PedidosDeSaida_Itens_max_order_by
  min: estoque_PedidosDeSaida_Itens_min_order_by
  stddev: estoque_PedidosDeSaida_Itens_stddev_order_by
  stddev_pop: estoque_PedidosDeSaida_Itens_stddev_pop_order_by
  stddev_samp: estoque_PedidosDeSaida_Itens_stddev_samp_order_by
  sum: estoque_PedidosDeSaida_Itens_sum_order_by
  var_pop: estoque_PedidosDeSaida_Itens_var_pop_order_by
  var_samp: estoque_PedidosDeSaida_Itens_var_samp_order_by
  variance: estoque_PedidosDeSaida_Itens_variance_order_by
}

"""
input type for inserting array relation for remote table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_arr_rel_insert_input {
  data: [estoque_PedidosDeSaida_Itens_insert_input!]!

  """on conflict condition"""
  on_conflict: estoque_PedidosDeSaida_Itens_on_conflict
}

"""aggregate avg on columns"""
type estoque_PedidosDeSaida_Itens_avg_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by avg() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_avg_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""
Boolean expression to filter rows from the table "estoque.PedidosDeSaida_Itens". All fields are combined with a logical 'AND'.
"""
input estoque_PedidosDeSaida_Itens_bool_exp {
  Id: uuid_comparison_exp
  Item: estoque_Itens_bool_exp
  Item_Id: uuid_comparison_exp
  Pedido_Id: uuid_comparison_exp
  PedidosDeSaida: estoque_PedidosDeSaida_bool_exp
  QuantidadeAutorizada: Int_comparison_exp
  QuantidadeEntregue: Int_comparison_exp
  QuantidadePedida: Int_comparison_exp
  QuantidadeRecebida: Int_comparison_exp
  _and: [estoque_PedidosDeSaida_Itens_bool_exp!]
  _not: estoque_PedidosDeSaida_Itens_bool_exp
  _or: [estoque_PedidosDeSaida_Itens_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.PedidosDeSaida_Itens"
"""
enum estoque_PedidosDeSaida_Itens_constraint {
  """unique or primary key constraint"""
  Itens_PedidosDeSaida_pkey
}

"""
input type for incrementing numeric columns in table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_inc_input {
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
}

"""
input type for inserting data into table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_insert_input {
  Id: uuid
  Item: estoque_Itens_obj_rel_insert_input
  Item_Id: uuid
  Pedido_Id: uuid
  PedidosDeSaida: estoque_PedidosDeSaida_obj_rel_insert_input
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_PedidosDeSaida_Itens_max_fields {
  Id: uuid
  Item_Id: uuid
  Pedido_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_max_order_by {
  Id: order_by
  Item_Id: order_by
  Pedido_Id: order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type estoque_PedidosDeSaida_Itens_min_fields {
  Id: uuid
  Item_Id: uuid
  Pedido_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_min_order_by {
  Id: order_by
  Item_Id: order_by
  Pedido_Id: order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "estoque.PedidosDeSaida_Itens"
"""
type estoque_PedidosDeSaida_Itens_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_PedidosDeSaida_Itens!]!
}

"""
on conflict condition type for table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_on_conflict {
  constraint: estoque_PedidosDeSaida_Itens_constraint!
  update_columns: [estoque_PedidosDeSaida_Itens_update_column!]! = []
  where: estoque_PedidosDeSaida_Itens_bool_exp
}

"""
Ordering options when selecting data from "estoque.PedidosDeSaida_Itens".
"""
input estoque_PedidosDeSaida_Itens_order_by {
  Id: order_by
  Item: estoque_Itens_order_by
  Item_Id: order_by
  Pedido_Id: order_by
  PedidosDeSaida: estoque_PedidosDeSaida_order_by
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_PedidosDeSaida_Itens"""
input estoque_PedidosDeSaida_Itens_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.PedidosDeSaida_Itens"
"""
enum estoque_PedidosDeSaida_Itens_select_column {
  """column name"""
  Id

  """column name"""
  Item_Id

  """column name"""
  Pedido_Id

  """column name"""
  QuantidadeAutorizada

  """column name"""
  QuantidadeEntregue

  """column name"""
  QuantidadePedida

  """column name"""
  QuantidadeRecebida

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_set_input {
  Id: uuid
  Item_Id: uuid
  Pedido_Id: uuid
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type estoque_PedidosDeSaida_Itens_stddev_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by stddev() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_stddev_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""aggregate stddev_pop on columns"""
type estoque_PedidosDeSaida_Itens_stddev_pop_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by stddev_pop() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_stddev_pop_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""aggregate stddev_samp on columns"""
type estoque_PedidosDeSaida_Itens_stddev_samp_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by stddev_samp() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_stddev_samp_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""aggregate sum on columns"""
type estoque_PedidosDeSaida_Itens_sum_fields {
  QuantidadeAutorizada: Int
  QuantidadeEntregue: Int
  QuantidadePedida: Int
  QuantidadeRecebida: Int
}

"""
order by sum() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_sum_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""
update columns of table "estoque.PedidosDeSaida_Itens"
"""
enum estoque_PedidosDeSaida_Itens_update_column {
  """column name"""
  Id

  """column name"""
  Item_Id

  """column name"""
  Pedido_Id

  """column name"""
  QuantidadeAutorizada

  """column name"""
  QuantidadeEntregue

  """column name"""
  QuantidadePedida

  """column name"""
  QuantidadeRecebida

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type estoque_PedidosDeSaida_Itens_var_pop_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by var_pop() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_var_pop_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""aggregate var_samp on columns"""
type estoque_PedidosDeSaida_Itens_var_samp_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by var_samp() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_var_samp_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""aggregate variance on columns"""
type estoque_PedidosDeSaida_Itens_variance_fields {
  QuantidadeAutorizada: Float
  QuantidadeEntregue: Float
  QuantidadePedida: Float
  QuantidadeRecebida: Float
}

"""
order by variance() on columns of table "estoque.PedidosDeSaida_Itens"
"""
input estoque_PedidosDeSaida_Itens_variance_order_by {
  QuantidadeAutorizada: order_by
  QuantidadeEntregue: order_by
  QuantidadePedida: order_by
  QuantidadeRecebida: order_by
}

"""
aggregated selection of "estoque.PedidosDeSaida"
"""
type estoque_PedidosDeSaida_aggregate {
  aggregate: estoque_PedidosDeSaida_aggregate_fields
  nodes: [estoque_PedidosDeSaida!]!
}

"""
aggregate fields of "estoque.PedidosDeSaida"
"""
type estoque_PedidosDeSaida_aggregate_fields {
  count(columns: [estoque_PedidosDeSaida_select_column!], distinct: Boolean): Int!
  max: estoque_PedidosDeSaida_max_fields
  min: estoque_PedidosDeSaida_min_fields
}

"""
order by aggregate values of table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_aggregate_order_by {
  count: order_by
  max: estoque_PedidosDeSaida_max_order_by
  min: estoque_PedidosDeSaida_min_order_by
}

"""
input type for inserting array relation for remote table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_arr_rel_insert_input {
  data: [estoque_PedidosDeSaida_insert_input!]!

  """on conflict condition"""
  on_conflict: estoque_PedidosDeSaida_on_conflict
}

"""
Boolean expression to filter rows from the table "estoque.PedidosDeSaida". All fields are combined with a logical 'AND'.
"""
input estoque_PedidosDeSaida_bool_exp {
  DataAbertura: timestamptz_comparison_exp
  DataAutorizacao: timestamptz_comparison_exp
  DataEntregue: timestamptz_comparison_exp
  DataRecebido: timestamptz_comparison_exp
  Id: uuid_comparison_exp
  Itens: estoque_PedidosDeSaida_Itens_bool_exp
  MotivoRecusado: String_comparison_exp
  Situacao: estoque_PedidosDeSaidaSituacoes_bool_exp
  Situacao_Id: estoque_PedidosDeSaidaSituacoes_enum_comparison_exp
  Solicitante_Id: uuid_comparison_exp
  _and: [estoque_PedidosDeSaida_bool_exp!]
  _not: estoque_PedidosDeSaida_bool_exp
  _or: [estoque_PedidosDeSaida_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.PedidosDeSaida"
"""
enum estoque_PedidosDeSaida_constraint {
  """unique or primary key constraint"""
  PedidosDeSaida_Id_key

  """unique or primary key constraint"""
  PedidosDeSaida_pkey
}

"""
input type for inserting data into table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_insert_input {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataEntregue: timestamptz
  DataRecebido: timestamptz
  Id: uuid
  Itens: estoque_PedidosDeSaida_Itens_arr_rel_insert_input
  MotivoRecusado: String
  Situacao: estoque_PedidosDeSaidaSituacoes_obj_rel_insert_input
  Situacao_Id: estoque_PedidosDeSaidaSituacoes_enum
  Solicitante_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_PedidosDeSaida_max_fields {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataEntregue: timestamptz
  DataRecebido: timestamptz
  Id: uuid
  MotivoRecusado: String
  Solicitante_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_max_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataEntregue: order_by
  DataRecebido: order_by
  Id: order_by
  MotivoRecusado: order_by
  Solicitante_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type estoque_PedidosDeSaida_min_fields {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataEntregue: timestamptz
  DataRecebido: timestamptz
  Id: uuid
  MotivoRecusado: String
  Solicitante_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_min_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataEntregue: order_by
  DataRecebido: order_by
  Id: order_by
  MotivoRecusado: order_by
  Solicitante_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "estoque.PedidosDeSaida"
"""
type estoque_PedidosDeSaida_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_PedidosDeSaida!]!
}

"""
input type for inserting object relation for remote table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_obj_rel_insert_input {
  data: estoque_PedidosDeSaida_insert_input!

  """on conflict condition"""
  on_conflict: estoque_PedidosDeSaida_on_conflict
}

"""
on conflict condition type for table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_on_conflict {
  constraint: estoque_PedidosDeSaida_constraint!
  update_columns: [estoque_PedidosDeSaida_update_column!]! = []
  where: estoque_PedidosDeSaida_bool_exp
}

"""Ordering options when selecting data from "estoque.PedidosDeSaida"."""
input estoque_PedidosDeSaida_order_by {
  DataAbertura: order_by
  DataAutorizacao: order_by
  DataEntregue: order_by
  DataRecebido: order_by
  Id: order_by
  Itens_aggregate: estoque_PedidosDeSaida_Itens_aggregate_order_by
  MotivoRecusado: order_by
  Situacao: estoque_PedidosDeSaidaSituacoes_order_by
  Situacao_Id: order_by
  Solicitante_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_PedidosDeSaida"""
input estoque_PedidosDeSaida_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.PedidosDeSaida"
"""
enum estoque_PedidosDeSaida_select_column {
  """column name"""
  DataAbertura

  """column name"""
  DataAutorizacao

  """column name"""
  DataEntregue

  """column name"""
  DataRecebido

  """column name"""
  Id

  """column name"""
  MotivoRecusado

  """column name"""
  Situacao_Id

  """column name"""
  Solicitante_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.PedidosDeSaida"
"""
input estoque_PedidosDeSaida_set_input {
  DataAbertura: timestamptz
  DataAutorizacao: timestamptz
  DataEntregue: timestamptz
  DataRecebido: timestamptz
  Id: uuid
  MotivoRecusado: String
  Situacao_Id: estoque_PedidosDeSaidaSituacoes_enum
  Solicitante_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.PedidosDeSaida"
"""
enum estoque_PedidosDeSaida_update_column {
  """column name"""
  DataAbertura

  """column name"""
  DataAutorizacao

  """column name"""
  DataEntregue

  """column name"""
  DataRecebido

  """column name"""
  Id

  """column name"""
  MotivoRecusado

  """column name"""
  Situacao_Id

  """column name"""
  Solicitante_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "estoque.TiposDeEnderecamentos"
"""
type estoque_TiposDeEnderecamentos {
  Descricao: String!

  """An array relationship"""
  Enderecamentos(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): [estoque_Enderecamentos!]!

  """An aggregate relationship"""
  Enderecamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): estoque_Enderecamentos_aggregate!
  Id: uuid!
  Nome: String!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "estoque.TiposDeEnderecamentos"
"""
type estoque_TiposDeEnderecamentos_aggregate {
  aggregate: estoque_TiposDeEnderecamentos_aggregate_fields
  nodes: [estoque_TiposDeEnderecamentos!]!
}

"""
aggregate fields of "estoque.TiposDeEnderecamentos"
"""
type estoque_TiposDeEnderecamentos_aggregate_fields {
  count(columns: [estoque_TiposDeEnderecamentos_select_column!], distinct: Boolean): Int!
  max: estoque_TiposDeEnderecamentos_max_fields
  min: estoque_TiposDeEnderecamentos_min_fields
}

"""
Boolean expression to filter rows from the table "estoque.TiposDeEnderecamentos". All fields are combined with a logical 'AND'.
"""
input estoque_TiposDeEnderecamentos_bool_exp {
  Descricao: String_comparison_exp
  Enderecamentos: estoque_Enderecamentos_bool_exp
  Id: uuid_comparison_exp
  Nome: String_comparison_exp
  _and: [estoque_TiposDeEnderecamentos_bool_exp!]
  _not: estoque_TiposDeEnderecamentos_bool_exp
  _or: [estoque_TiposDeEnderecamentos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "estoque.TiposDeEnderecamentos"
"""
enum estoque_TiposDeEnderecamentos_constraint {
  """unique or primary key constraint"""
  TiposDeEnderecamentos_pkey
}

"""
input type for inserting data into table "estoque.TiposDeEnderecamentos"
"""
input estoque_TiposDeEnderecamentos_insert_input {
  Descricao: String
  Enderecamentos: estoque_Enderecamentos_arr_rel_insert_input
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type estoque_TiposDeEnderecamentos_max_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type estoque_TiposDeEnderecamentos_min_fields {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "estoque.TiposDeEnderecamentos"
"""
type estoque_TiposDeEnderecamentos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [estoque_TiposDeEnderecamentos!]!
}

"""
input type for inserting object relation for remote table "estoque.TiposDeEnderecamentos"
"""
input estoque_TiposDeEnderecamentos_obj_rel_insert_input {
  data: estoque_TiposDeEnderecamentos_insert_input!

  """on conflict condition"""
  on_conflict: estoque_TiposDeEnderecamentos_on_conflict
}

"""
on conflict condition type for table "estoque.TiposDeEnderecamentos"
"""
input estoque_TiposDeEnderecamentos_on_conflict {
  constraint: estoque_TiposDeEnderecamentos_constraint!
  update_columns: [estoque_TiposDeEnderecamentos_update_column!]! = []
  where: estoque_TiposDeEnderecamentos_bool_exp
}

"""
Ordering options when selecting data from "estoque.TiposDeEnderecamentos".
"""
input estoque_TiposDeEnderecamentos_order_by {
  Descricao: order_by
  Enderecamentos_aggregate: estoque_Enderecamentos_aggregate_order_by
  Id: order_by
  Nome: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: estoque_TiposDeEnderecamentos"""
input estoque_TiposDeEnderecamentos_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "estoque.TiposDeEnderecamentos"
"""
enum estoque_TiposDeEnderecamentos_select_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "estoque.TiposDeEnderecamentos"
"""
input estoque_TiposDeEnderecamentos_set_input {
  Descricao: String
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "estoque.TiposDeEnderecamentos"
"""
enum estoque_TiposDeEnderecamentos_update_column {
  """column name"""
  Descricao

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
columns and relationships of "identidades.Enderecos"
"""
type identidades_Enderecos {
  Bairro: String!
  Categorias(
    """JSON select path"""
    path: String
  ): jsonb!
  Cep: String

  """An object relationship"""
  Cidadae: identidades_EstadosEMunicipios!
  Cidade_Id: uuid!
  Complemento: String

  """An object relationship"""
  Estado: identidades_EstadosEMunicipios!
  Estado_Id: uuid!
  Id: uuid!
  Identidades(
    """JSON select path"""
    path: String
  ): jsonb!
  Logradouro: String!
  Numero: String
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.Enderecos"
"""
type identidades_Enderecos_aggregate {
  aggregate: identidades_Enderecos_aggregate_fields
  nodes: [identidades_Enderecos!]!
}

"""
aggregate fields of "identidades.Enderecos"
"""
type identidades_Enderecos_aggregate_fields {
  count(columns: [identidades_Enderecos_select_column!], distinct: Boolean): Int!
  max: identidades_Enderecos_max_fields
  min: identidades_Enderecos_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input identidades_Enderecos_append_input {
  Categorias: jsonb
  Identidades: jsonb
}

"""
Boolean expression to filter rows from the table "identidades.Enderecos". All fields are combined with a logical 'AND'.
"""
input identidades_Enderecos_bool_exp {
  Bairro: String_comparison_exp
  Categorias: jsonb_comparison_exp
  Cep: String_comparison_exp
  Cidadae: identidades_EstadosEMunicipios_bool_exp
  Cidade_Id: uuid_comparison_exp
  Complemento: String_comparison_exp
  Estado: identidades_EstadosEMunicipios_bool_exp
  Estado_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  Identidades: jsonb_comparison_exp
  Logradouro: String_comparison_exp
  Numero: String_comparison_exp
  _and: [identidades_Enderecos_bool_exp!]
  _not: identidades_Enderecos_bool_exp
  _or: [identidades_Enderecos_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.Enderecos"
"""
enum identidades_Enderecos_constraint {
  """unique or primary key constraint"""
  Enderecos_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input identidades_Enderecos_delete_at_path_input {
  Categorias: [String!]
  Identidades: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input identidades_Enderecos_delete_elem_input {
  Categorias: Int
  Identidades: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input identidades_Enderecos_delete_key_input {
  Categorias: String
  Identidades: String
}

"""
input type for inserting data into table "identidades.Enderecos"
"""
input identidades_Enderecos_insert_input {
  Bairro: String
  Categorias: jsonb
  Cep: String
  Cidadae: identidades_EstadosEMunicipios_obj_rel_insert_input
  Cidade_Id: uuid
  Complemento: String
  Estado: identidades_EstadosEMunicipios_obj_rel_insert_input
  Estado_Id: uuid
  Id: uuid
  Identidades: jsonb
  Logradouro: String
  Numero: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_Enderecos_max_fields {
  Bairro: String
  Cep: String
  Cidade_Id: uuid
  Complemento: String
  Estado_Id: uuid
  Id: uuid
  Logradouro: String
  Numero: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type identidades_Enderecos_min_fields {
  Bairro: String
  Cep: String
  Cidade_Id: uuid
  Complemento: String
  Estado_Id: uuid
  Id: uuid
  Logradouro: String
  Numero: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "identidades.Enderecos"
"""
type identidades_Enderecos_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_Enderecos!]!
}

"""
on conflict condition type for table "identidades.Enderecos"
"""
input identidades_Enderecos_on_conflict {
  constraint: identidades_Enderecos_constraint!
  update_columns: [identidades_Enderecos_update_column!]! = []
  where: identidades_Enderecos_bool_exp
}

"""Ordering options when selecting data from "identidades.Enderecos"."""
input identidades_Enderecos_order_by {
  Bairro: order_by
  Categorias: order_by
  Cep: order_by
  Cidadae: identidades_EstadosEMunicipios_order_by
  Cidade_Id: order_by
  Complemento: order_by
  Estado: identidades_EstadosEMunicipios_order_by
  Estado_Id: order_by
  Id: order_by
  Identidades: order_by
  Logradouro: order_by
  Numero: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_Enderecos"""
input identidades_Enderecos_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input identidades_Enderecos_prepend_input {
  Categorias: jsonb
  Identidades: jsonb
}

"""
select columns of table "identidades.Enderecos"
"""
enum identidades_Enderecos_select_column {
  """column name"""
  Bairro

  """column name"""
  Categorias

  """column name"""
  Cep

  """column name"""
  Cidade_Id

  """column name"""
  Complemento

  """column name"""
  Estado_Id

  """column name"""
  Id

  """column name"""
  Identidades

  """column name"""
  Logradouro

  """column name"""
  Numero

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.Enderecos"
"""
input identidades_Enderecos_set_input {
  Bairro: String
  Categorias: jsonb
  Cep: String
  Cidade_Id: uuid
  Complemento: String
  Estado_Id: uuid
  Id: uuid
  Identidades: jsonb
  Logradouro: String
  Numero: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "identidades.Enderecos"
"""
enum identidades_Enderecos_update_column {
  """column name"""
  Bairro

  """column name"""
  Categorias

  """column name"""
  Cep

  """column name"""
  Cidade_Id

  """column name"""
  Complemento

  """column name"""
  Estado_Id

  """column name"""
  Id

  """column name"""
  Identidades

  """column name"""
  Logradouro

  """column name"""
  Numero

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "identidades.EstadosEMunicipios"
"""
type identidades_EstadosEMunicipios {
  """An array relationship"""
  Cidades(
    """distinct select on columns"""
    distinct_on: [identidades_EstadosEMunicipios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_EstadosEMunicipios_order_by!]

    """filter the rows returned"""
    where: identidades_EstadosEMunicipios_bool_exp
  ): [identidades_EstadosEMunicipios!]!

  """An aggregate relationship"""
  Cidades_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_EstadosEMunicipios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_EstadosEMunicipios_order_by!]

    """filter the rows returned"""
    where: identidades_EstadosEMunicipios_bool_exp
  ): identidades_EstadosEMunicipios_aggregate!
  CodigoIbge: bigint

  """An object relationship"""
  Estado: identidades_EstadosEMunicipios
  Id: uuid!
  Nome: String!
  Pai_Id: uuid
  Sigla: String
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.EstadosEMunicipios"
"""
type identidades_EstadosEMunicipios_aggregate {
  aggregate: identidades_EstadosEMunicipios_aggregate_fields
  nodes: [identidades_EstadosEMunicipios!]!
}

"""
aggregate fields of "identidades.EstadosEMunicipios"
"""
type identidades_EstadosEMunicipios_aggregate_fields {
  avg: identidades_EstadosEMunicipios_avg_fields
  count(columns: [identidades_EstadosEMunicipios_select_column!], distinct: Boolean): Int!
  max: identidades_EstadosEMunicipios_max_fields
  min: identidades_EstadosEMunicipios_min_fields
  stddev: identidades_EstadosEMunicipios_stddev_fields
  stddev_pop: identidades_EstadosEMunicipios_stddev_pop_fields
  stddev_samp: identidades_EstadosEMunicipios_stddev_samp_fields
  sum: identidades_EstadosEMunicipios_sum_fields
  var_pop: identidades_EstadosEMunicipios_var_pop_fields
  var_samp: identidades_EstadosEMunicipios_var_samp_fields
  variance: identidades_EstadosEMunicipios_variance_fields
}

"""
order by aggregate values of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_aggregate_order_by {
  avg: identidades_EstadosEMunicipios_avg_order_by
  count: order_by
  max: identidades_EstadosEMunicipios_max_order_by
  min: identidades_EstadosEMunicipios_min_order_by
  stddev: identidades_EstadosEMunicipios_stddev_order_by
  stddev_pop: identidades_EstadosEMunicipios_stddev_pop_order_by
  stddev_samp: identidades_EstadosEMunicipios_stddev_samp_order_by
  sum: identidades_EstadosEMunicipios_sum_order_by
  var_pop: identidades_EstadosEMunicipios_var_pop_order_by
  var_samp: identidades_EstadosEMunicipios_var_samp_order_by
  variance: identidades_EstadosEMunicipios_variance_order_by
}

"""
input type for inserting array relation for remote table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_arr_rel_insert_input {
  data: [identidades_EstadosEMunicipios_insert_input!]!

  """on conflict condition"""
  on_conflict: identidades_EstadosEMunicipios_on_conflict
}

"""aggregate avg on columns"""
type identidades_EstadosEMunicipios_avg_fields {
  CodigoIbge: Float
}

"""
order by avg() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_avg_order_by {
  CodigoIbge: order_by
}

"""
Boolean expression to filter rows from the table "identidades.EstadosEMunicipios". All fields are combined with a logical 'AND'.
"""
input identidades_EstadosEMunicipios_bool_exp {
  Cidades: identidades_EstadosEMunicipios_bool_exp
  CodigoIbge: bigint_comparison_exp
  Estado: identidades_EstadosEMunicipios_bool_exp
  Id: uuid_comparison_exp
  Nome: String_comparison_exp
  Pai_Id: uuid_comparison_exp
  Sigla: String_comparison_exp
  _and: [identidades_EstadosEMunicipios_bool_exp!]
  _not: identidades_EstadosEMunicipios_bool_exp
  _or: [identidades_EstadosEMunicipios_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.EstadosEMunicipios"
"""
enum identidades_EstadosEMunicipios_constraint {
  """unique or primary key constraint"""
  EstadosECidades_pkey
}

"""
input type for incrementing numeric columns in table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_inc_input {
  CodigoIbge: bigint
}

"""
input type for inserting data into table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_insert_input {
  Cidades: identidades_EstadosEMunicipios_arr_rel_insert_input
  CodigoIbge: bigint
  Estado: identidades_EstadosEMunicipios_obj_rel_insert_input
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Sigla: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_EstadosEMunicipios_max_fields {
  CodigoIbge: bigint
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Sigla: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_max_order_by {
  CodigoIbge: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  Sigla: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type identidades_EstadosEMunicipios_min_fields {
  CodigoIbge: bigint
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Sigla: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_min_order_by {
  CodigoIbge: order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  Sigla: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "identidades.EstadosEMunicipios"
"""
type identidades_EstadosEMunicipios_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_EstadosEMunicipios!]!
}

"""
input type for inserting object relation for remote table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_obj_rel_insert_input {
  data: identidades_EstadosEMunicipios_insert_input!

  """on conflict condition"""
  on_conflict: identidades_EstadosEMunicipios_on_conflict
}

"""
on conflict condition type for table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_on_conflict {
  constraint: identidades_EstadosEMunicipios_constraint!
  update_columns: [identidades_EstadosEMunicipios_update_column!]! = []
  where: identidades_EstadosEMunicipios_bool_exp
}

"""
Ordering options when selecting data from "identidades.EstadosEMunicipios".
"""
input identidades_EstadosEMunicipios_order_by {
  Cidades_aggregate: identidades_EstadosEMunicipios_aggregate_order_by
  CodigoIbge: order_by
  Estado: identidades_EstadosEMunicipios_order_by
  Id: order_by
  Nome: order_by
  Pai_Id: order_by
  Sigla: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_EstadosEMunicipios"""
input identidades_EstadosEMunicipios_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "identidades.EstadosEMunicipios"
"""
enum identidades_EstadosEMunicipios_select_column {
  """column name"""
  CodigoIbge

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  Sigla

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_set_input {
  CodigoIbge: bigint
  Id: uuid
  Nome: String
  Pai_Id: uuid
  Sigla: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate stddev on columns"""
type identidades_EstadosEMunicipios_stddev_fields {
  CodigoIbge: Float
}

"""
order by stddev() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_stddev_order_by {
  CodigoIbge: order_by
}

"""aggregate stddev_pop on columns"""
type identidades_EstadosEMunicipios_stddev_pop_fields {
  CodigoIbge: Float
}

"""
order by stddev_pop() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_stddev_pop_order_by {
  CodigoIbge: order_by
}

"""aggregate stddev_samp on columns"""
type identidades_EstadosEMunicipios_stddev_samp_fields {
  CodigoIbge: Float
}

"""
order by stddev_samp() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_stddev_samp_order_by {
  CodigoIbge: order_by
}

"""aggregate sum on columns"""
type identidades_EstadosEMunicipios_sum_fields {
  CodigoIbge: bigint
}

"""
order by sum() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_sum_order_by {
  CodigoIbge: order_by
}

"""
update columns of table "identidades.EstadosEMunicipios"
"""
enum identidades_EstadosEMunicipios_update_column {
  """column name"""
  CodigoIbge

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Pai_Id

  """column name"""
  Sigla

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""aggregate var_pop on columns"""
type identidades_EstadosEMunicipios_var_pop_fields {
  CodigoIbge: Float
}

"""
order by var_pop() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_var_pop_order_by {
  CodigoIbge: order_by
}

"""aggregate var_samp on columns"""
type identidades_EstadosEMunicipios_var_samp_fields {
  CodigoIbge: Float
}

"""
order by var_samp() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_var_samp_order_by {
  CodigoIbge: order_by
}

"""aggregate variance on columns"""
type identidades_EstadosEMunicipios_variance_fields {
  CodigoIbge: Float
}

"""
order by variance() on columns of table "identidades.EstadosEMunicipios"
"""
input identidades_EstadosEMunicipios_variance_order_by {
  CodigoIbge: order_by
}

"""
columns and relationships of "identidades.Fornecedores"
"""
type identidades_Fornecedores {
  Id: uuid!

  """An object relationship"""
  Pessoa: identidades_Pessoas!
  Pessoa_Id: uuid!

  """An array relationship"""
  Vendedores(
    """distinct select on columns"""
    distinct_on: [identidades_Vendedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Vendedores_order_by!]

    """filter the rows returned"""
    where: identidades_Vendedores_bool_exp
  ): [identidades_Vendedores!]!

  """An aggregate relationship"""
  Vendedores_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Vendedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Vendedores_order_by!]

    """filter the rows returned"""
    where: identidades_Vendedores_bool_exp
  ): identidades_Vendedores_aggregate!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.Fornecedores"
"""
type identidades_Fornecedores_aggregate {
  aggregate: identidades_Fornecedores_aggregate_fields
  nodes: [identidades_Fornecedores!]!
}

"""
aggregate fields of "identidades.Fornecedores"
"""
type identidades_Fornecedores_aggregate_fields {
  count(columns: [identidades_Fornecedores_select_column!], distinct: Boolean): Int!
  max: identidades_Fornecedores_max_fields
  min: identidades_Fornecedores_min_fields
}

"""
Boolean expression to filter rows from the table "identidades.Fornecedores". All fields are combined with a logical 'AND'.
"""
input identidades_Fornecedores_bool_exp {
  Id: uuid_comparison_exp
  Pessoa: identidades_Pessoas_bool_exp
  Pessoa_Id: uuid_comparison_exp
  Vendedores: identidades_Vendedores_bool_exp
  _and: [identidades_Fornecedores_bool_exp!]
  _not: identidades_Fornecedores_bool_exp
  _or: [identidades_Fornecedores_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
Boolean expression to filter rows from the table "identidades.Fornecedores". All fields are combined with a logical 'AND'.
"""
input identidades_Fornecedores_bool_exp_remote_rel_compras.OrcamentosFornecedor {
  Id: uuid_comparison_exp_remote_rel_compras.OrcamentosFornecedor
  Pessoa: identidades_Pessoas_bool_exp
  Pessoa_Id: uuid_comparison_exp
  Vendedores: identidades_Vendedores_bool_exp
  _and: [identidades_Fornecedores_bool_exp!]
  _not: identidades_Fornecedores_bool_exp
  _or: [identidades_Fornecedores_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.Fornecedores"
"""
enum identidades_Fornecedores_constraint {
  """unique or primary key constraint"""
  Fornecedores_pkey
}

"""
input type for inserting data into table "identidades.Fornecedores"
"""
input identidades_Fornecedores_insert_input {
  Id: uuid
  Pessoa: identidades_Pessoas_obj_rel_insert_input
  Pessoa_Id: uuid
  Vendedores: identidades_Vendedores_arr_rel_insert_input
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_Fornecedores_max_fields {
  Id: uuid
  Pessoa_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type identidades_Fornecedores_min_fields {
  Id: uuid
  Pessoa_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "identidades.Fornecedores"
"""
type identidades_Fornecedores_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_Fornecedores!]!
}

"""
input type for inserting object relation for remote table "identidades.Fornecedores"
"""
input identidades_Fornecedores_obj_rel_insert_input {
  data: identidades_Fornecedores_insert_input!

  """on conflict condition"""
  on_conflict: identidades_Fornecedores_on_conflict
}

"""
on conflict condition type for table "identidades.Fornecedores"
"""
input identidades_Fornecedores_on_conflict {
  constraint: identidades_Fornecedores_constraint!
  update_columns: [identidades_Fornecedores_update_column!]! = []
  where: identidades_Fornecedores_bool_exp
}

"""Ordering options when selecting data from "identidades.Fornecedores"."""
input identidades_Fornecedores_order_by {
  Id: order_by
  Pessoa: identidades_Pessoas_order_by
  Pessoa_Id: order_by
  Vendedores_aggregate: identidades_Vendedores_aggregate_order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_Fornecedores"""
input identidades_Fornecedores_pk_columns_input {
  Id: uuid!
}

"""
select columns of table "identidades.Fornecedores"
"""
enum identidades_Fornecedores_select_column {
  """column name"""
  Id

  """column name"""
  Pessoa_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.Fornecedores"
"""
input identidades_Fornecedores_set_input {
  Id: uuid
  Pessoa_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "identidades.Fornecedores"
"""
enum identidades_Fornecedores_update_column {
  """column name"""
  Id

  """column name"""
  Pessoa_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "identidades.Logs"
"""
type identidades_Logs {
  DadosAntigos(
    """JSON select path"""
    path: String
  ): jsonb!
  DadosNovos(
    """JSON select path"""
    path: String
  ): jsonb!
  Id: uuid!
  Operacao: String!
  Tipo: String!
  Tipo_Id: uuid!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.Logs"
"""
type identidades_Logs_aggregate {
  aggregate: identidades_Logs_aggregate_fields
  nodes: [identidades_Logs!]!
}

"""
aggregate fields of "identidades.Logs"
"""
type identidades_Logs_aggregate_fields {
  count(columns: [identidades_Logs_select_column!], distinct: Boolean): Int!
  max: identidades_Logs_max_fields
  min: identidades_Logs_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input identidades_Logs_append_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
Boolean expression to filter rows from the table "identidades.Logs". All fields are combined with a logical 'AND'.
"""
input identidades_Logs_bool_exp {
  DadosAntigos: jsonb_comparison_exp
  DadosNovos: jsonb_comparison_exp
  Id: uuid_comparison_exp
  Operacao: String_comparison_exp
  Tipo: String_comparison_exp
  Tipo_Id: uuid_comparison_exp
  _and: [identidades_Logs_bool_exp!]
  _not: identidades_Logs_bool_exp
  _or: [identidades_Logs_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.Logs"
"""
enum identidades_Logs_constraint {
  """unique or primary key constraint"""
  Logs_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input identidades_Logs_delete_at_path_input {
  DadosAntigos: [String!]
  DadosNovos: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input identidades_Logs_delete_elem_input {
  DadosAntigos: Int
  DadosNovos: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input identidades_Logs_delete_key_input {
  DadosAntigos: String
  DadosNovos: String
}

"""
input type for inserting data into table "identidades.Logs"
"""
input identidades_Logs_insert_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_Logs_max_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type identidades_Logs_min_fields {
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "identidades.Logs"
"""
type identidades_Logs_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_Logs!]!
}

"""
on conflict condition type for table "identidades.Logs"
"""
input identidades_Logs_on_conflict {
  constraint: identidades_Logs_constraint!
  update_columns: [identidades_Logs_update_column!]! = []
  where: identidades_Logs_bool_exp
}

"""Ordering options when selecting data from "identidades.Logs"."""
input identidades_Logs_order_by {
  DadosAntigos: order_by
  DadosNovos: order_by
  Id: order_by
  Operacao: order_by
  Tipo: order_by
  Tipo_Id: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_Logs"""
input identidades_Logs_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input identidades_Logs_prepend_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
}

"""
select columns of table "identidades.Logs"
"""
enum identidades_Logs_select_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.Logs"
"""
input identidades_Logs_set_input {
  DadosAntigos: jsonb
  DadosNovos: jsonb
  Id: uuid
  Operacao: String
  Tipo: String
  Tipo_Id: uuid
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "identidades.Logs"
"""
enum identidades_Logs_update_column {
  """column name"""
  DadosAntigos

  """column name"""
  DadosNovos

  """column name"""
  Id

  """column name"""
  Operacao

  """column name"""
  Tipo

  """column name"""
  Tipo_Id

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "identidades.Pessoas"
"""
type identidades_Pessoas {
  DadosDaApi(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  Fornecedor: identidades_Fornecedores
  Id: uuid!
  Identificador: String!
  Nome: String!
  PessoaJuridica: Boolean!
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.Pessoas"
"""
type identidades_Pessoas_aggregate {
  aggregate: identidades_Pessoas_aggregate_fields
  nodes: [identidades_Pessoas!]!
}

"""
aggregate fields of "identidades.Pessoas"
"""
type identidades_Pessoas_aggregate_fields {
  count(columns: [identidades_Pessoas_select_column!], distinct: Boolean): Int!
  max: identidades_Pessoas_max_fields
  min: identidades_Pessoas_min_fields
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input identidades_Pessoas_append_input {
  DadosDaApi: jsonb
}

"""
Boolean expression to filter rows from the table "identidades.Pessoas". All fields are combined with a logical 'AND'.
"""
input identidades_Pessoas_bool_exp {
  DadosDaApi: jsonb_comparison_exp
  Fornecedor: identidades_Fornecedores_bool_exp
  Id: uuid_comparison_exp
  Identificador: String_comparison_exp
  Nome: String_comparison_exp
  PessoaJuridica: Boolean_comparison_exp
  _and: [identidades_Pessoas_bool_exp!]
  _not: identidades_Pessoas_bool_exp
  _or: [identidades_Pessoas_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.Pessoas"
"""
enum identidades_Pessoas_constraint {
  """unique or primary key constraint"""
  Pessoa_pkey

  """unique or primary key constraint"""
  Pessoas_Identificador_key
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input identidades_Pessoas_delete_at_path_input {
  DadosDaApi: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input identidades_Pessoas_delete_elem_input {
  DadosDaApi: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input identidades_Pessoas_delete_key_input {
  DadosDaApi: String
}

"""
input type for inserting data into table "identidades.Pessoas"
"""
input identidades_Pessoas_insert_input {
  DadosDaApi: jsonb
  Fornecedor: identidades_Fornecedores_obj_rel_insert_input
  Id: uuid
  Identificador: String
  Nome: String
  PessoaJuridica: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_Pessoas_max_fields {
  Id: uuid
  Identificador: String
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate min on columns"""
type identidades_Pessoas_min_fields {
  Id: uuid
  Identificador: String
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
response of any mutation on the table "identidades.Pessoas"
"""
type identidades_Pessoas_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_Pessoas!]!
}

"""
input type for inserting object relation for remote table "identidades.Pessoas"
"""
input identidades_Pessoas_obj_rel_insert_input {
  data: identidades_Pessoas_insert_input!

  """on conflict condition"""
  on_conflict: identidades_Pessoas_on_conflict
}

"""
on conflict condition type for table "identidades.Pessoas"
"""
input identidades_Pessoas_on_conflict {
  constraint: identidades_Pessoas_constraint!
  update_columns: [identidades_Pessoas_update_column!]! = []
  where: identidades_Pessoas_bool_exp
}

"""Ordering options when selecting data from "identidades.Pessoas"."""
input identidades_Pessoas_order_by {
  DadosDaApi: order_by
  Fornecedor: identidades_Fornecedores_order_by
  Id: order_by
  Identificador: order_by
  Nome: order_by
  PessoaJuridica: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_Pessoas"""
input identidades_Pessoas_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input identidades_Pessoas_prepend_input {
  DadosDaApi: jsonb
}

"""
select columns of table "identidades.Pessoas"
"""
enum identidades_Pessoas_select_column {
  """column name"""
  DadosDaApi

  """column name"""
  Id

  """column name"""
  Identificador

  """column name"""
  Nome

  """column name"""
  PessoaJuridica

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.Pessoas"
"""
input identidades_Pessoas_set_input {
  DadosDaApi: jsonb
  Id: uuid
  Identificador: String
  Nome: String
  PessoaJuridica: Boolean
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "identidades.Pessoas"
"""
enum identidades_Pessoas_update_column {
  """column name"""
  DadosDaApi

  """column name"""
  Id

  """column name"""
  Identificador

  """column name"""
  Nome

  """column name"""
  PessoaJuridica

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
columns and relationships of "identidades.Vendedores"
"""
type identidades_Vendedores {
  Emails(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  Fornecedor: identidades_Fornecedores!
  Fornecedor_Id: uuid!
  Id: uuid!
  Nome: String!
  Telefones(
    """JSON select path"""
    path: String
  ): jsonb
  created_at: timestamptz!
  deleted_at: timestamptz
  updated_at: timestamptz!
}

"""
aggregated selection of "identidades.Vendedores"
"""
type identidades_Vendedores_aggregate {
  aggregate: identidades_Vendedores_aggregate_fields
  nodes: [identidades_Vendedores!]!
}

"""
aggregate fields of "identidades.Vendedores"
"""
type identidades_Vendedores_aggregate_fields {
  count(columns: [identidades_Vendedores_select_column!], distinct: Boolean): Int!
  max: identidades_Vendedores_max_fields
  min: identidades_Vendedores_min_fields
}

"""
order by aggregate values of table "identidades.Vendedores"
"""
input identidades_Vendedores_aggregate_order_by {
  count: order_by
  max: identidades_Vendedores_max_order_by
  min: identidades_Vendedores_min_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input identidades_Vendedores_append_input {
  Emails: jsonb
  Telefones: jsonb
}

"""
input type for inserting array relation for remote table "identidades.Vendedores"
"""
input identidades_Vendedores_arr_rel_insert_input {
  data: [identidades_Vendedores_insert_input!]!

  """on conflict condition"""
  on_conflict: identidades_Vendedores_on_conflict
}

"""
Boolean expression to filter rows from the table "identidades.Vendedores". All fields are combined with a logical 'AND'.
"""
input identidades_Vendedores_bool_exp {
  Emails: jsonb_comparison_exp
  Fornecedor: identidades_Fornecedores_bool_exp
  Fornecedor_Id: uuid_comparison_exp
  Id: uuid_comparison_exp
  Nome: String_comparison_exp
  Telefones: jsonb_comparison_exp
  _and: [identidades_Vendedores_bool_exp!]
  _not: identidades_Vendedores_bool_exp
  _or: [identidades_Vendedores_bool_exp!]
  created_at: timestamptz_comparison_exp
  deleted_at: timestamptz_comparison_exp
  updated_at: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "identidades.Vendedores"
"""
enum identidades_Vendedores_constraint {
  """unique or primary key constraint"""
  Vendedores_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input identidades_Vendedores_delete_at_path_input {
  Emails: [String!]
  Telefones: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input identidades_Vendedores_delete_elem_input {
  Emails: Int
  Telefones: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input identidades_Vendedores_delete_key_input {
  Emails: String
  Telefones: String
}

"""
input type for inserting data into table "identidades.Vendedores"
"""
input identidades_Vendedores_insert_input {
  Emails: jsonb
  Fornecedor: identidades_Fornecedores_obj_rel_insert_input
  Fornecedor_Id: uuid
  Id: uuid
  Nome: String
  Telefones: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""aggregate max on columns"""
type identidades_Vendedores_max_fields {
  Fornecedor_Id: uuid
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by max() on columns of table "identidades.Vendedores"
"""
input identidades_Vendedores_max_order_by {
  Fornecedor_Id: order_by
  Id: order_by
  Nome: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type identidades_Vendedores_min_fields {
  Fornecedor_Id: uuid
  Id: uuid
  Nome: String
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
order by min() on columns of table "identidades.Vendedores"
"""
input identidades_Vendedores_min_order_by {
  Fornecedor_Id: order_by
  Id: order_by
  Nome: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""
response of any mutation on the table "identidades.Vendedores"
"""
type identidades_Vendedores_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [identidades_Vendedores!]!
}

"""
on conflict condition type for table "identidades.Vendedores"
"""
input identidades_Vendedores_on_conflict {
  constraint: identidades_Vendedores_constraint!
  update_columns: [identidades_Vendedores_update_column!]! = []
  where: identidades_Vendedores_bool_exp
}

"""Ordering options when selecting data from "identidades.Vendedores"."""
input identidades_Vendedores_order_by {
  Emails: order_by
  Fornecedor: identidades_Fornecedores_order_by
  Fornecedor_Id: order_by
  Id: order_by
  Nome: order_by
  Telefones: order_by
  created_at: order_by
  deleted_at: order_by
  updated_at: order_by
}

"""primary key columns input for table: identidades_Vendedores"""
input identidades_Vendedores_pk_columns_input {
  Id: uuid!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input identidades_Vendedores_prepend_input {
  Emails: jsonb
  Telefones: jsonb
}

"""
select columns of table "identidades.Vendedores"
"""
enum identidades_Vendedores_select_column {
  """column name"""
  Emails

  """column name"""
  Fornecedor_Id

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Telefones

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

"""
input type for updating data in table "identidades.Vendedores"
"""
input identidades_Vendedores_set_input {
  Emails: jsonb
  Fornecedor_Id: uuid
  Id: uuid
  Nome: String
  Telefones: jsonb
  created_at: timestamptz
  deleted_at: timestamptz
  updated_at: timestamptz
}

"""
update columns of table "identidades.Vendedores"
"""
enum identidades_Vendedores_update_column {
  """column name"""
  Emails

  """column name"""
  Fornecedor_Id

  """column name"""
  Id

  """column name"""
  Nome

  """column name"""
  Telefones

  """column name"""
  created_at

  """column name"""
  deleted_at

  """column name"""
  updated_at
}

scalar jsonb

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  CadastrarFornecedor(Identificador: bigint, PessoaJuridica: Boolean): CadastrarFornecedorOutput

  """
  delete data from the table: "UnidadesDeMedidas"
  """
  delete_UnidadesDeMedidas(
    """filter the rows which have to be deleted"""
    where: UnidadesDeMedidas_bool_exp!
  ): UnidadesDeMedidas_mutation_response

  """
  delete single row from the table: "UnidadesDeMedidas"
  """
  delete_UnidadesDeMedidas_by_pk(Valor: String!): UnidadesDeMedidas

  """
  delete data from the table: "compras.Logs"
  """
  delete_compras_Logs(
    """filter the rows which have to be deleted"""
    where: compras_Logs_bool_exp!
  ): compras_Logs_mutation_response

  """
  delete single row from the table: "compras.Logs"
  """
  delete_compras_Logs_by_pk(Id: uuid!): compras_Logs

  """
  delete data from the table: "compras.Orcamentos"
  """
  delete_compras_Orcamentos(
    """filter the rows which have to be deleted"""
    where: compras_Orcamentos_bool_exp!
  ): compras_Orcamentos_mutation_response

  """
  delete data from the table: "compras.Orcamentos_Produtos"
  """
  delete_compras_Orcamentos_Produtos(
    """filter the rows which have to be deleted"""
    where: compras_Orcamentos_Produtos_bool_exp!
  ): compras_Orcamentos_Produtos_mutation_response

  """
  delete single row from the table: "compras.Orcamentos_Produtos"
  """
  delete_compras_Orcamentos_Produtos_by_pk(Id: uuid!): compras_Orcamentos_Produtos

  """
  delete single row from the table: "compras.Orcamentos"
  """
  delete_compras_Orcamentos_by_pk(Id: uuid!): compras_Orcamentos

  """
  delete data from the table: "compras.PedidosDeCompra"
  """
  delete_compras_PedidosDeCompra(
    """filter the rows which have to be deleted"""
    where: compras_PedidosDeCompra_bool_exp!
  ): compras_PedidosDeCompra_mutation_response

  """
  delete data from the table: "compras.PedidosDeCompraSituacoes"
  """
  delete_compras_PedidosDeCompraSituacoes(
    """filter the rows which have to be deleted"""
    where: compras_PedidosDeCompraSituacoes_bool_exp!
  ): compras_PedidosDeCompraSituacoes_mutation_response

  """
  delete single row from the table: "compras.PedidosDeCompraSituacoes"
  """
  delete_compras_PedidosDeCompraSituacoes_by_pk(Valor: String!): compras_PedidosDeCompraSituacoes

  """
  delete data from the table: "compras.PedidosDeCompra_Produtos"
  """
  delete_compras_PedidosDeCompra_Produtos(
    """filter the rows which have to be deleted"""
    where: compras_PedidosDeCompra_Produtos_bool_exp!
  ): compras_PedidosDeCompra_Produtos_mutation_response

  """
  delete single row from the table: "compras.PedidosDeCompra_Produtos"
  """
  delete_compras_PedidosDeCompra_Produtos_by_pk(Id: uuid!): compras_PedidosDeCompra_Produtos

  """
  delete single row from the table: "compras.PedidosDeCompra"
  """
  delete_compras_PedidosDeCompra_by_pk(Id: uuid!): compras_PedidosDeCompra

  """
  delete data from the table: "compras.Produtos"
  """
  delete_compras_Produtos(
    """filter the rows which have to be deleted"""
    where: compras_Produtos_bool_exp!
  ): compras_Produtos_mutation_response

  """
  delete single row from the table: "compras.Produtos"
  """
  delete_compras_Produtos_by_pk(Id: uuid!): compras_Produtos

  """
  delete data from the table: "estoque.Enderecamentos"
  """
  delete_estoque_Enderecamentos(
    """filter the rows which have to be deleted"""
    where: estoque_Enderecamentos_bool_exp!
  ): estoque_Enderecamentos_mutation_response

  """
  delete single row from the table: "estoque.Enderecamentos"
  """
  delete_estoque_Enderecamentos_by_pk(Id: uuid!): estoque_Enderecamentos

  """
  delete data from the table: "estoque.Fabricantes"
  """
  delete_estoque_Fabricantes(
    """filter the rows which have to be deleted"""
    where: estoque_Fabricantes_bool_exp!
  ): estoque_Fabricantes_mutation_response

  """
  delete single row from the table: "estoque.Fabricantes"
  """
  delete_estoque_Fabricantes_by_pk(Id: uuid!): estoque_Fabricantes

  """
  delete data from the table: "estoque.Familias"
  """
  delete_estoque_Familias(
    """filter the rows which have to be deleted"""
    where: estoque_Familias_bool_exp!
  ): estoque_Familias_mutation_response

  """
  delete single row from the table: "estoque.Familias"
  """
  delete_estoque_Familias_by_pk(Id: uuid!): estoque_Familias

  """
  delete data from the table: "estoque.Grupos"
  """
  delete_estoque_Grupos(
    """filter the rows which have to be deleted"""
    where: estoque_Grupos_bool_exp!
  ): estoque_Grupos_mutation_response

  """
  delete single row from the table: "estoque.Grupos"
  """
  delete_estoque_Grupos_by_pk(Id: uuid!): estoque_Grupos

  """
  delete data from the table: "estoque.Itens"
  """
  delete_estoque_Itens(
    """filter the rows which have to be deleted"""
    where: estoque_Itens_bool_exp!
  ): estoque_Itens_mutation_response

  """
  delete single row from the table: "estoque.Itens"
  """
  delete_estoque_Itens_by_pk(Id: uuid!): estoque_Itens

  """
  delete data from the table: "estoque.Logs"
  """
  delete_estoque_Logs(
    """filter the rows which have to be deleted"""
    where: estoque_Logs_bool_exp!
  ): estoque_Logs_mutation_response

  """
  delete single row from the table: "estoque.Logs"
  """
  delete_estoque_Logs_by_pk(Id: uuid!): estoque_Logs

  """
  delete data from the table: "estoque.Movimentacoes"
  """
  delete_estoque_Movimentacoes(
    """filter the rows which have to be deleted"""
    where: estoque_Movimentacoes_bool_exp!
  ): estoque_Movimentacoes_mutation_response

  """
  delete single row from the table: "estoque.Movimentacoes"
  """
  delete_estoque_Movimentacoes_by_pk(Id: uuid!): estoque_Movimentacoes

  """
  delete data from the table: "estoque.PedidosDeSaida"
  """
  delete_estoque_PedidosDeSaida(
    """filter the rows which have to be deleted"""
    where: estoque_PedidosDeSaida_bool_exp!
  ): estoque_PedidosDeSaida_mutation_response

  """
  delete data from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  delete_estoque_PedidosDeSaidaSituacoes(
    """filter the rows which have to be deleted"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp!
  ): estoque_PedidosDeSaidaSituacoes_mutation_response

  """
  delete single row from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  delete_estoque_PedidosDeSaidaSituacoes_by_pk(Valor: String!): estoque_PedidosDeSaidaSituacoes

  """
  delete data from the table: "estoque.PedidosDeSaida_Itens"
  """
  delete_estoque_PedidosDeSaida_Itens(
    """filter the rows which have to be deleted"""
    where: estoque_PedidosDeSaida_Itens_bool_exp!
  ): estoque_PedidosDeSaida_Itens_mutation_response

  """
  delete single row from the table: "estoque.PedidosDeSaida_Itens"
  """
  delete_estoque_PedidosDeSaida_Itens_by_pk(Id: uuid!): estoque_PedidosDeSaida_Itens

  """
  delete single row from the table: "estoque.PedidosDeSaida"
  """
  delete_estoque_PedidosDeSaida_by_pk(Id: uuid!): estoque_PedidosDeSaida

  """
  delete data from the table: "estoque.TiposDeEnderecamentos"
  """
  delete_estoque_TiposDeEnderecamentos(
    """filter the rows which have to be deleted"""
    where: estoque_TiposDeEnderecamentos_bool_exp!
  ): estoque_TiposDeEnderecamentos_mutation_response

  """
  delete single row from the table: "estoque.TiposDeEnderecamentos"
  """
  delete_estoque_TiposDeEnderecamentos_by_pk(Id: uuid!): estoque_TiposDeEnderecamentos

  """
  delete data from the table: "identidades.Enderecos"
  """
  delete_identidades_Enderecos(
    """filter the rows which have to be deleted"""
    where: identidades_Enderecos_bool_exp!
  ): identidades_Enderecos_mutation_response

  """
  delete single row from the table: "identidades.Enderecos"
  """
  delete_identidades_Enderecos_by_pk(Id: uuid!): identidades_Enderecos

  """
  delete data from the table: "identidades.EstadosEMunicipios"
  """
  delete_identidades_EstadosEMunicipios(
    """filter the rows which have to be deleted"""
    where: identidades_EstadosEMunicipios_bool_exp!
  ): identidades_EstadosEMunicipios_mutation_response

  """
  delete single row from the table: "identidades.EstadosEMunicipios"
  """
  delete_identidades_EstadosEMunicipios_by_pk(Id: uuid!): identidades_EstadosEMunicipios

  """
  delete data from the table: "identidades.Fornecedores"
  """
  delete_identidades_Fornecedores(
    """filter the rows which have to be deleted"""
    where: identidades_Fornecedores_bool_exp!
  ): identidades_Fornecedores_mutation_response

  """
  delete single row from the table: "identidades.Fornecedores"
  """
  delete_identidades_Fornecedores_by_pk(Id: uuid!): identidades_Fornecedores

  """
  delete data from the table: "identidades.Logs"
  """
  delete_identidades_Logs(
    """filter the rows which have to be deleted"""
    where: identidades_Logs_bool_exp!
  ): identidades_Logs_mutation_response

  """
  delete single row from the table: "identidades.Logs"
  """
  delete_identidades_Logs_by_pk(Id: uuid!): identidades_Logs

  """
  delete data from the table: "identidades.Pessoas"
  """
  delete_identidades_Pessoas(
    """filter the rows which have to be deleted"""
    where: identidades_Pessoas_bool_exp!
  ): identidades_Pessoas_mutation_response

  """
  delete single row from the table: "identidades.Pessoas"
  """
  delete_identidades_Pessoas_by_pk(Id: uuid!): identidades_Pessoas

  """
  delete data from the table: "identidades.Vendedores"
  """
  delete_identidades_Vendedores(
    """filter the rows which have to be deleted"""
    where: identidades_Vendedores_bool_exp!
  ): identidades_Vendedores_mutation_response

  """
  delete single row from the table: "identidades.Vendedores"
  """
  delete_identidades_Vendedores_by_pk(Id: uuid!): identidades_Vendedores

  """
  insert data into the table: "UnidadesDeMedidas"
  """
  insert_UnidadesDeMedidas(
    """the rows to be inserted"""
    objects: [UnidadesDeMedidas_insert_input!]!

    """on conflict condition"""
    on_conflict: UnidadesDeMedidas_on_conflict
  ): UnidadesDeMedidas_mutation_response

  """
  insert a single row into the table: "UnidadesDeMedidas"
  """
  insert_UnidadesDeMedidas_one(
    """the row to be inserted"""
    object: UnidadesDeMedidas_insert_input!

    """on conflict condition"""
    on_conflict: UnidadesDeMedidas_on_conflict
  ): UnidadesDeMedidas

  """
  insert data into the table: "compras.Logs"
  """
  insert_compras_Logs(
    """the rows to be inserted"""
    objects: [compras_Logs_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_Logs_on_conflict
  ): compras_Logs_mutation_response

  """
  insert a single row into the table: "compras.Logs"
  """
  insert_compras_Logs_one(
    """the row to be inserted"""
    object: compras_Logs_insert_input!

    """on conflict condition"""
    on_conflict: compras_Logs_on_conflict
  ): compras_Logs

  """
  insert data into the table: "compras.Orcamentos"
  """
  insert_compras_Orcamentos(
    """the rows to be inserted"""
    objects: [compras_Orcamentos_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_Orcamentos_on_conflict
  ): compras_Orcamentos_mutation_response

  """
  insert data into the table: "compras.Orcamentos_Produtos"
  """
  insert_compras_Orcamentos_Produtos(
    """the rows to be inserted"""
    objects: [compras_Orcamentos_Produtos_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_Orcamentos_Produtos_on_conflict
  ): compras_Orcamentos_Produtos_mutation_response

  """
  insert a single row into the table: "compras.Orcamentos_Produtos"
  """
  insert_compras_Orcamentos_Produtos_one(
    """the row to be inserted"""
    object: compras_Orcamentos_Produtos_insert_input!

    """on conflict condition"""
    on_conflict: compras_Orcamentos_Produtos_on_conflict
  ): compras_Orcamentos_Produtos

  """
  insert a single row into the table: "compras.Orcamentos"
  """
  insert_compras_Orcamentos_one(
    """the row to be inserted"""
    object: compras_Orcamentos_insert_input!

    """on conflict condition"""
    on_conflict: compras_Orcamentos_on_conflict
  ): compras_Orcamentos

  """
  insert data into the table: "compras.PedidosDeCompra"
  """
  insert_compras_PedidosDeCompra(
    """the rows to be inserted"""
    objects: [compras_PedidosDeCompra_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompra_on_conflict
  ): compras_PedidosDeCompra_mutation_response

  """
  insert data into the table: "compras.PedidosDeCompraSituacoes"
  """
  insert_compras_PedidosDeCompraSituacoes(
    """the rows to be inserted"""
    objects: [compras_PedidosDeCompraSituacoes_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompraSituacoes_on_conflict
  ): compras_PedidosDeCompraSituacoes_mutation_response

  """
  insert a single row into the table: "compras.PedidosDeCompraSituacoes"
  """
  insert_compras_PedidosDeCompraSituacoes_one(
    """the row to be inserted"""
    object: compras_PedidosDeCompraSituacoes_insert_input!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompraSituacoes_on_conflict
  ): compras_PedidosDeCompraSituacoes

  """
  insert data into the table: "compras.PedidosDeCompra_Produtos"
  """
  insert_compras_PedidosDeCompra_Produtos(
    """the rows to be inserted"""
    objects: [compras_PedidosDeCompra_Produtos_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompra_Produtos_on_conflict
  ): compras_PedidosDeCompra_Produtos_mutation_response

  """
  insert a single row into the table: "compras.PedidosDeCompra_Produtos"
  """
  insert_compras_PedidosDeCompra_Produtos_one(
    """the row to be inserted"""
    object: compras_PedidosDeCompra_Produtos_insert_input!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompra_Produtos_on_conflict
  ): compras_PedidosDeCompra_Produtos

  """
  insert a single row into the table: "compras.PedidosDeCompra"
  """
  insert_compras_PedidosDeCompra_one(
    """the row to be inserted"""
    object: compras_PedidosDeCompra_insert_input!

    """on conflict condition"""
    on_conflict: compras_PedidosDeCompra_on_conflict
  ): compras_PedidosDeCompra

  """
  insert data into the table: "compras.Produtos"
  """
  insert_compras_Produtos(
    """the rows to be inserted"""
    objects: [compras_Produtos_insert_input!]!

    """on conflict condition"""
    on_conflict: compras_Produtos_on_conflict
  ): compras_Produtos_mutation_response

  """
  insert a single row into the table: "compras.Produtos"
  """
  insert_compras_Produtos_one(
    """the row to be inserted"""
    object: compras_Produtos_insert_input!

    """on conflict condition"""
    on_conflict: compras_Produtos_on_conflict
  ): compras_Produtos

  """
  insert data into the table: "estoque.Enderecamentos"
  """
  insert_estoque_Enderecamentos(
    """the rows to be inserted"""
    objects: [estoque_Enderecamentos_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Enderecamentos_on_conflict
  ): estoque_Enderecamentos_mutation_response

  """
  insert a single row into the table: "estoque.Enderecamentos"
  """
  insert_estoque_Enderecamentos_one(
    """the row to be inserted"""
    object: estoque_Enderecamentos_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Enderecamentos_on_conflict
  ): estoque_Enderecamentos

  """
  insert data into the table: "estoque.Fabricantes"
  """
  insert_estoque_Fabricantes(
    """the rows to be inserted"""
    objects: [estoque_Fabricantes_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Fabricantes_on_conflict
  ): estoque_Fabricantes_mutation_response

  """
  insert a single row into the table: "estoque.Fabricantes"
  """
  insert_estoque_Fabricantes_one(
    """the row to be inserted"""
    object: estoque_Fabricantes_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Fabricantes_on_conflict
  ): estoque_Fabricantes

  """
  insert data into the table: "estoque.Familias"
  """
  insert_estoque_Familias(
    """the rows to be inserted"""
    objects: [estoque_Familias_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Familias_on_conflict
  ): estoque_Familias_mutation_response

  """
  insert a single row into the table: "estoque.Familias"
  """
  insert_estoque_Familias_one(
    """the row to be inserted"""
    object: estoque_Familias_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Familias_on_conflict
  ): estoque_Familias

  """
  insert data into the table: "estoque.Grupos"
  """
  insert_estoque_Grupos(
    """the rows to be inserted"""
    objects: [estoque_Grupos_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Grupos_on_conflict
  ): estoque_Grupos_mutation_response

  """
  insert a single row into the table: "estoque.Grupos"
  """
  insert_estoque_Grupos_one(
    """the row to be inserted"""
    object: estoque_Grupos_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Grupos_on_conflict
  ): estoque_Grupos

  """
  insert data into the table: "estoque.Itens"
  """
  insert_estoque_Itens(
    """the rows to be inserted"""
    objects: [estoque_Itens_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Itens_on_conflict
  ): estoque_Itens_mutation_response

  """
  insert a single row into the table: "estoque.Itens"
  """
  insert_estoque_Itens_one(
    """the row to be inserted"""
    object: estoque_Itens_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Itens_on_conflict
  ): estoque_Itens

  """
  insert data into the table: "estoque.Logs"
  """
  insert_estoque_Logs(
    """the rows to be inserted"""
    objects: [estoque_Logs_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Logs_on_conflict
  ): estoque_Logs_mutation_response

  """
  insert a single row into the table: "estoque.Logs"
  """
  insert_estoque_Logs_one(
    """the row to be inserted"""
    object: estoque_Logs_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Logs_on_conflict
  ): estoque_Logs

  """
  insert data into the table: "estoque.Movimentacoes"
  """
  insert_estoque_Movimentacoes(
    """the rows to be inserted"""
    objects: [estoque_Movimentacoes_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_Movimentacoes_on_conflict
  ): estoque_Movimentacoes_mutation_response

  """
  insert a single row into the table: "estoque.Movimentacoes"
  """
  insert_estoque_Movimentacoes_one(
    """the row to be inserted"""
    object: estoque_Movimentacoes_insert_input!

    """on conflict condition"""
    on_conflict: estoque_Movimentacoes_on_conflict
  ): estoque_Movimentacoes

  """
  insert data into the table: "estoque.PedidosDeSaida"
  """
  insert_estoque_PedidosDeSaida(
    """the rows to be inserted"""
    objects: [estoque_PedidosDeSaida_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaida_on_conflict
  ): estoque_PedidosDeSaida_mutation_response

  """
  insert data into the table: "estoque.PedidosDeSaidaSituacoes"
  """
  insert_estoque_PedidosDeSaidaSituacoes(
    """the rows to be inserted"""
    objects: [estoque_PedidosDeSaidaSituacoes_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaidaSituacoes_on_conflict
  ): estoque_PedidosDeSaidaSituacoes_mutation_response

  """
  insert a single row into the table: "estoque.PedidosDeSaidaSituacoes"
  """
  insert_estoque_PedidosDeSaidaSituacoes_one(
    """the row to be inserted"""
    object: estoque_PedidosDeSaidaSituacoes_insert_input!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaidaSituacoes_on_conflict
  ): estoque_PedidosDeSaidaSituacoes

  """
  insert data into the table: "estoque.PedidosDeSaida_Itens"
  """
  insert_estoque_PedidosDeSaida_Itens(
    """the rows to be inserted"""
    objects: [estoque_PedidosDeSaida_Itens_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaida_Itens_on_conflict
  ): estoque_PedidosDeSaida_Itens_mutation_response

  """
  insert a single row into the table: "estoque.PedidosDeSaida_Itens"
  """
  insert_estoque_PedidosDeSaida_Itens_one(
    """the row to be inserted"""
    object: estoque_PedidosDeSaida_Itens_insert_input!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaida_Itens_on_conflict
  ): estoque_PedidosDeSaida_Itens

  """
  insert a single row into the table: "estoque.PedidosDeSaida"
  """
  insert_estoque_PedidosDeSaida_one(
    """the row to be inserted"""
    object: estoque_PedidosDeSaida_insert_input!

    """on conflict condition"""
    on_conflict: estoque_PedidosDeSaida_on_conflict
  ): estoque_PedidosDeSaida

  """
  insert data into the table: "estoque.TiposDeEnderecamentos"
  """
  insert_estoque_TiposDeEnderecamentos(
    """the rows to be inserted"""
    objects: [estoque_TiposDeEnderecamentos_insert_input!]!

    """on conflict condition"""
    on_conflict: estoque_TiposDeEnderecamentos_on_conflict
  ): estoque_TiposDeEnderecamentos_mutation_response

  """
  insert a single row into the table: "estoque.TiposDeEnderecamentos"
  """
  insert_estoque_TiposDeEnderecamentos_one(
    """the row to be inserted"""
    object: estoque_TiposDeEnderecamentos_insert_input!

    """on conflict condition"""
    on_conflict: estoque_TiposDeEnderecamentos_on_conflict
  ): estoque_TiposDeEnderecamentos

  """
  insert data into the table: "identidades.Enderecos"
  """
  insert_identidades_Enderecos(
    """the rows to be inserted"""
    objects: [identidades_Enderecos_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_Enderecos_on_conflict
  ): identidades_Enderecos_mutation_response

  """
  insert a single row into the table: "identidades.Enderecos"
  """
  insert_identidades_Enderecos_one(
    """the row to be inserted"""
    object: identidades_Enderecos_insert_input!

    """on conflict condition"""
    on_conflict: identidades_Enderecos_on_conflict
  ): identidades_Enderecos

  """
  insert data into the table: "identidades.EstadosEMunicipios"
  """
  insert_identidades_EstadosEMunicipios(
    """the rows to be inserted"""
    objects: [identidades_EstadosEMunicipios_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_EstadosEMunicipios_on_conflict
  ): identidades_EstadosEMunicipios_mutation_response

  """
  insert a single row into the table: "identidades.EstadosEMunicipios"
  """
  insert_identidades_EstadosEMunicipios_one(
    """the row to be inserted"""
    object: identidades_EstadosEMunicipios_insert_input!

    """on conflict condition"""
    on_conflict: identidades_EstadosEMunicipios_on_conflict
  ): identidades_EstadosEMunicipios

  """
  insert data into the table: "identidades.Fornecedores"
  """
  insert_identidades_Fornecedores(
    """the rows to be inserted"""
    objects: [identidades_Fornecedores_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_Fornecedores_on_conflict
  ): identidades_Fornecedores_mutation_response

  """
  insert a single row into the table: "identidades.Fornecedores"
  """
  insert_identidades_Fornecedores_one(
    """the row to be inserted"""
    object: identidades_Fornecedores_insert_input!

    """on conflict condition"""
    on_conflict: identidades_Fornecedores_on_conflict
  ): identidades_Fornecedores

  """
  insert data into the table: "identidades.Logs"
  """
  insert_identidades_Logs(
    """the rows to be inserted"""
    objects: [identidades_Logs_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_Logs_on_conflict
  ): identidades_Logs_mutation_response

  """
  insert a single row into the table: "identidades.Logs"
  """
  insert_identidades_Logs_one(
    """the row to be inserted"""
    object: identidades_Logs_insert_input!

    """on conflict condition"""
    on_conflict: identidades_Logs_on_conflict
  ): identidades_Logs

  """
  insert data into the table: "identidades.Pessoas"
  """
  insert_identidades_Pessoas(
    """the rows to be inserted"""
    objects: [identidades_Pessoas_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_Pessoas_on_conflict
  ): identidades_Pessoas_mutation_response

  """
  insert a single row into the table: "identidades.Pessoas"
  """
  insert_identidades_Pessoas_one(
    """the row to be inserted"""
    object: identidades_Pessoas_insert_input!

    """on conflict condition"""
    on_conflict: identidades_Pessoas_on_conflict
  ): identidades_Pessoas

  """
  insert data into the table: "identidades.Vendedores"
  """
  insert_identidades_Vendedores(
    """the rows to be inserted"""
    objects: [identidades_Vendedores_insert_input!]!

    """on conflict condition"""
    on_conflict: identidades_Vendedores_on_conflict
  ): identidades_Vendedores_mutation_response

  """
  insert a single row into the table: "identidades.Vendedores"
  """
  insert_identidades_Vendedores_one(
    """the row to be inserted"""
    object: identidades_Vendedores_insert_input!

    """on conflict condition"""
    on_conflict: identidades_Vendedores_on_conflict
  ): identidades_Vendedores

  """
  update data of the table: "UnidadesDeMedidas"
  """
  update_UnidadesDeMedidas(
    """sets the columns of the filtered rows to the given values"""
    _set: UnidadesDeMedidas_set_input

    """filter the rows which have to be updated"""
    where: UnidadesDeMedidas_bool_exp!
  ): UnidadesDeMedidas_mutation_response

  """
  update single row of the table: "UnidadesDeMedidas"
  """
  update_UnidadesDeMedidas_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: UnidadesDeMedidas_set_input
    pk_columns: UnidadesDeMedidas_pk_columns_input!
  ): UnidadesDeMedidas

  """
  update data of the table: "compras.Logs"
  """
  update_compras_Logs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: compras_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: compras_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: compras_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: compras_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: compras_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Logs_set_input

    """filter the rows which have to be updated"""
    where: compras_Logs_bool_exp!
  ): compras_Logs_mutation_response

  """
  update single row of the table: "compras.Logs"
  """
  update_compras_Logs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: compras_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: compras_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: compras_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: compras_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: compras_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Logs_set_input
    pk_columns: compras_Logs_pk_columns_input!
  ): compras_Logs

  """
  update data of the table: "compras.Orcamentos"
  """
  update_compras_Orcamentos(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_Orcamentos_set_input

    """filter the rows which have to be updated"""
    where: compras_Orcamentos_bool_exp!
  ): compras_Orcamentos_mutation_response

  """
  update data of the table: "compras.Orcamentos_Produtos"
  """
  update_compras_Orcamentos_Produtos(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_Orcamentos_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Orcamentos_Produtos_set_input

    """filter the rows which have to be updated"""
    where: compras_Orcamentos_Produtos_bool_exp!
  ): compras_Orcamentos_Produtos_mutation_response

  """
  update single row of the table: "compras.Orcamentos_Produtos"
  """
  update_compras_Orcamentos_Produtos_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_Orcamentos_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Orcamentos_Produtos_set_input
    pk_columns: compras_Orcamentos_Produtos_pk_columns_input!
  ): compras_Orcamentos_Produtos

  """
  update single row of the table: "compras.Orcamentos"
  """
  update_compras_Orcamentos_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_Orcamentos_set_input
    pk_columns: compras_Orcamentos_pk_columns_input!
  ): compras_Orcamentos

  """
  update data of the table: "compras.PedidosDeCompra"
  """
  update_compras_PedidosDeCompra(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompra_set_input

    """filter the rows which have to be updated"""
    where: compras_PedidosDeCompra_bool_exp!
  ): compras_PedidosDeCompra_mutation_response

  """
  update data of the table: "compras.PedidosDeCompraSituacoes"
  """
  update_compras_PedidosDeCompraSituacoes(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompraSituacoes_set_input

    """filter the rows which have to be updated"""
    where: compras_PedidosDeCompraSituacoes_bool_exp!
  ): compras_PedidosDeCompraSituacoes_mutation_response

  """
  update single row of the table: "compras.PedidosDeCompraSituacoes"
  """
  update_compras_PedidosDeCompraSituacoes_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompraSituacoes_set_input
    pk_columns: compras_PedidosDeCompraSituacoes_pk_columns_input!
  ): compras_PedidosDeCompraSituacoes

  """
  update data of the table: "compras.PedidosDeCompra_Produtos"
  """
  update_compras_PedidosDeCompra_Produtos(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_PedidosDeCompra_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompra_Produtos_set_input

    """filter the rows which have to be updated"""
    where: compras_PedidosDeCompra_Produtos_bool_exp!
  ): compras_PedidosDeCompra_Produtos_mutation_response

  """
  update single row of the table: "compras.PedidosDeCompra_Produtos"
  """
  update_compras_PedidosDeCompra_Produtos_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_PedidosDeCompra_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompra_Produtos_set_input
    pk_columns: compras_PedidosDeCompra_Produtos_pk_columns_input!
  ): compras_PedidosDeCompra_Produtos

  """
  update single row of the table: "compras.PedidosDeCompra"
  """
  update_compras_PedidosDeCompra_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: compras_PedidosDeCompra_set_input
    pk_columns: compras_PedidosDeCompra_pk_columns_input!
  ): compras_PedidosDeCompra

  """
  update data of the table: "compras.Produtos"
  """
  update_compras_Produtos(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Produtos_set_input

    """filter the rows which have to be updated"""
    where: compras_Produtos_bool_exp!
  ): compras_Produtos_mutation_response

  """
  update single row of the table: "compras.Produtos"
  """
  update_compras_Produtos_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: compras_Produtos_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: compras_Produtos_set_input
    pk_columns: compras_Produtos_pk_columns_input!
  ): compras_Produtos

  """
  update data of the table: "estoque.Enderecamentos"
  """
  update_estoque_Enderecamentos(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Enderecamentos_set_input

    """filter the rows which have to be updated"""
    where: estoque_Enderecamentos_bool_exp!
  ): estoque_Enderecamentos_mutation_response

  """
  update single row of the table: "estoque.Enderecamentos"
  """
  update_estoque_Enderecamentos_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Enderecamentos_set_input
    pk_columns: estoque_Enderecamentos_pk_columns_input!
  ): estoque_Enderecamentos

  """
  update data of the table: "estoque.Fabricantes"
  """
  update_estoque_Fabricantes(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Fabricantes_set_input

    """filter the rows which have to be updated"""
    where: estoque_Fabricantes_bool_exp!
  ): estoque_Fabricantes_mutation_response

  """
  update single row of the table: "estoque.Fabricantes"
  """
  update_estoque_Fabricantes_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Fabricantes_set_input
    pk_columns: estoque_Fabricantes_pk_columns_input!
  ): estoque_Fabricantes

  """
  update data of the table: "estoque.Familias"
  """
  update_estoque_Familias(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Familias_set_input

    """filter the rows which have to be updated"""
    where: estoque_Familias_bool_exp!
  ): estoque_Familias_mutation_response

  """
  update single row of the table: "estoque.Familias"
  """
  update_estoque_Familias_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Familias_set_input
    pk_columns: estoque_Familias_pk_columns_input!
  ): estoque_Familias

  """
  update data of the table: "estoque.Grupos"
  """
  update_estoque_Grupos(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Grupos_set_input

    """filter the rows which have to be updated"""
    where: estoque_Grupos_bool_exp!
  ): estoque_Grupos_mutation_response

  """
  update single row of the table: "estoque.Grupos"
  """
  update_estoque_Grupos_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Grupos_set_input
    pk_columns: estoque_Grupos_pk_columns_input!
  ): estoque_Grupos

  """
  update data of the table: "estoque.Itens"
  """
  update_estoque_Itens(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_Itens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Itens_set_input

    """filter the rows which have to be updated"""
    where: estoque_Itens_bool_exp!
  ): estoque_Itens_mutation_response

  """
  update single row of the table: "estoque.Itens"
  """
  update_estoque_Itens_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_Itens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Itens_set_input
    pk_columns: estoque_Itens_pk_columns_input!
  ): estoque_Itens

  """
  update data of the table: "estoque.Logs"
  """
  update_estoque_Logs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: estoque_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: estoque_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: estoque_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: estoque_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: estoque_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Logs_set_input

    """filter the rows which have to be updated"""
    where: estoque_Logs_bool_exp!
  ): estoque_Logs_mutation_response

  """
  update single row of the table: "estoque.Logs"
  """
  update_estoque_Logs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: estoque_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: estoque_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: estoque_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: estoque_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: estoque_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Logs_set_input
    pk_columns: estoque_Logs_pk_columns_input!
  ): estoque_Logs

  """
  update data of the table: "estoque.Movimentacoes"
  """
  update_estoque_Movimentacoes(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_Movimentacoes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Movimentacoes_set_input

    """filter the rows which have to be updated"""
    where: estoque_Movimentacoes_bool_exp!
  ): estoque_Movimentacoes_mutation_response

  """
  update single row of the table: "estoque.Movimentacoes"
  """
  update_estoque_Movimentacoes_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_Movimentacoes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_Movimentacoes_set_input
    pk_columns: estoque_Movimentacoes_pk_columns_input!
  ): estoque_Movimentacoes

  """
  update data of the table: "estoque.PedidosDeSaida"
  """
  update_estoque_PedidosDeSaida(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaida_set_input

    """filter the rows which have to be updated"""
    where: estoque_PedidosDeSaida_bool_exp!
  ): estoque_PedidosDeSaida_mutation_response

  """
  update data of the table: "estoque.PedidosDeSaidaSituacoes"
  """
  update_estoque_PedidosDeSaidaSituacoes(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaidaSituacoes_set_input

    """filter the rows which have to be updated"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp!
  ): estoque_PedidosDeSaidaSituacoes_mutation_response

  """
  update single row of the table: "estoque.PedidosDeSaidaSituacoes"
  """
  update_estoque_PedidosDeSaidaSituacoes_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaidaSituacoes_set_input
    pk_columns: estoque_PedidosDeSaidaSituacoes_pk_columns_input!
  ): estoque_PedidosDeSaidaSituacoes

  """
  update data of the table: "estoque.PedidosDeSaida_Itens"
  """
  update_estoque_PedidosDeSaida_Itens(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_PedidosDeSaida_Itens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaida_Itens_set_input

    """filter the rows which have to be updated"""
    where: estoque_PedidosDeSaida_Itens_bool_exp!
  ): estoque_PedidosDeSaida_Itens_mutation_response

  """
  update single row of the table: "estoque.PedidosDeSaida_Itens"
  """
  update_estoque_PedidosDeSaida_Itens_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: estoque_PedidosDeSaida_Itens_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaida_Itens_set_input
    pk_columns: estoque_PedidosDeSaida_Itens_pk_columns_input!
  ): estoque_PedidosDeSaida_Itens

  """
  update single row of the table: "estoque.PedidosDeSaida"
  """
  update_estoque_PedidosDeSaida_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_PedidosDeSaida_set_input
    pk_columns: estoque_PedidosDeSaida_pk_columns_input!
  ): estoque_PedidosDeSaida

  """
  update data of the table: "estoque.TiposDeEnderecamentos"
  """
  update_estoque_TiposDeEnderecamentos(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_TiposDeEnderecamentos_set_input

    """filter the rows which have to be updated"""
    where: estoque_TiposDeEnderecamentos_bool_exp!
  ): estoque_TiposDeEnderecamentos_mutation_response

  """
  update single row of the table: "estoque.TiposDeEnderecamentos"
  """
  update_estoque_TiposDeEnderecamentos_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: estoque_TiposDeEnderecamentos_set_input
    pk_columns: estoque_TiposDeEnderecamentos_pk_columns_input!
  ): estoque_TiposDeEnderecamentos

  """
  update data of the table: "identidades.Enderecos"
  """
  update_identidades_Enderecos(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Enderecos_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Enderecos_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Enderecos_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Enderecos_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Enderecos_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Enderecos_set_input

    """filter the rows which have to be updated"""
    where: identidades_Enderecos_bool_exp!
  ): identidades_Enderecos_mutation_response

  """
  update single row of the table: "identidades.Enderecos"
  """
  update_identidades_Enderecos_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Enderecos_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Enderecos_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Enderecos_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Enderecos_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Enderecos_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Enderecos_set_input
    pk_columns: identidades_Enderecos_pk_columns_input!
  ): identidades_Enderecos

  """
  update data of the table: "identidades.EstadosEMunicipios"
  """
  update_identidades_EstadosEMunicipios(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identidades_EstadosEMunicipios_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_EstadosEMunicipios_set_input

    """filter the rows which have to be updated"""
    where: identidades_EstadosEMunicipios_bool_exp!
  ): identidades_EstadosEMunicipios_mutation_response

  """
  update single row of the table: "identidades.EstadosEMunicipios"
  """
  update_identidades_EstadosEMunicipios_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: identidades_EstadosEMunicipios_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_EstadosEMunicipios_set_input
    pk_columns: identidades_EstadosEMunicipios_pk_columns_input!
  ): identidades_EstadosEMunicipios

  """
  update data of the table: "identidades.Fornecedores"
  """
  update_identidades_Fornecedores(
    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Fornecedores_set_input

    """filter the rows which have to be updated"""
    where: identidades_Fornecedores_bool_exp!
  ): identidades_Fornecedores_mutation_response

  """
  update single row of the table: "identidades.Fornecedores"
  """
  update_identidades_Fornecedores_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Fornecedores_set_input
    pk_columns: identidades_Fornecedores_pk_columns_input!
  ): identidades_Fornecedores

  """
  update data of the table: "identidades.Logs"
  """
  update_identidades_Logs(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Logs_set_input

    """filter the rows which have to be updated"""
    where: identidades_Logs_bool_exp!
  ): identidades_Logs_mutation_response

  """
  update single row of the table: "identidades.Logs"
  """
  update_identidades_Logs_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Logs_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Logs_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Logs_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Logs_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Logs_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Logs_set_input
    pk_columns: identidades_Logs_pk_columns_input!
  ): identidades_Logs

  """
  update data of the table: "identidades.Pessoas"
  """
  update_identidades_Pessoas(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Pessoas_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Pessoas_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Pessoas_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Pessoas_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Pessoas_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Pessoas_set_input

    """filter the rows which have to be updated"""
    where: identidades_Pessoas_bool_exp!
  ): identidades_Pessoas_mutation_response

  """
  update single row of the table: "identidades.Pessoas"
  """
  update_identidades_Pessoas_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Pessoas_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Pessoas_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Pessoas_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Pessoas_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Pessoas_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Pessoas_set_input
    pk_columns: identidades_Pessoas_pk_columns_input!
  ): identidades_Pessoas

  """
  update data of the table: "identidades.Vendedores"
  """
  update_identidades_Vendedores(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Vendedores_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Vendedores_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Vendedores_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Vendedores_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Vendedores_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Vendedores_set_input

    """filter the rows which have to be updated"""
    where: identidades_Vendedores_bool_exp!
  ): identidades_Vendedores_mutation_response

  """
  update single row of the table: "identidades.Vendedores"
  """
  update_identidades_Vendedores_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: identidades_Vendedores_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: identidades_Vendedores_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: identidades_Vendedores_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: identidades_Vendedores_delete_key_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: identidades_Vendedores_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: identidades_Vendedores_set_input
    pk_columns: identidades_Vendedores_pk_columns_input!
  ): identidades_Vendedores
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type query_root {
  """
  fetch data from the table: "UnidadesDeMedidas"
  """
  UnidadesDeMedidas(
    """distinct select on columns"""
    distinct_on: [UnidadesDeMedidas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UnidadesDeMedidas_order_by!]

    """filter the rows returned"""
    where: UnidadesDeMedidas_bool_exp
  ): [UnidadesDeMedidas!]!

  """
  fetch aggregated fields from the table: "UnidadesDeMedidas"
  """
  UnidadesDeMedidas_aggregate(
    """distinct select on columns"""
    distinct_on: [UnidadesDeMedidas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UnidadesDeMedidas_order_by!]

    """filter the rows returned"""
    where: UnidadesDeMedidas_bool_exp
  ): UnidadesDeMedidas_aggregate!

  """
  fetch data from the table: "UnidadesDeMedidas" using primary key columns
  """
  UnidadesDeMedidas_by_pk(Valor: String!): UnidadesDeMedidas

  """
  fetch data from the table: "compras.Logs"
  """
  compras_Logs(
    """distinct select on columns"""
    distinct_on: [compras_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Logs_order_by!]

    """filter the rows returned"""
    where: compras_Logs_bool_exp
  ): [compras_Logs!]!

  """
  fetch aggregated fields from the table: "compras.Logs"
  """
  compras_Logs_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Logs_order_by!]

    """filter the rows returned"""
    where: compras_Logs_bool_exp
  ): compras_Logs_aggregate!

  """fetch data from the table: "compras.Logs" using primary key columns"""
  compras_Logs_by_pk(Id: uuid!): compras_Logs

  """
  fetch data from the table: "compras.Orcamentos"
  """
  compras_Orcamentos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_bool_exp
  ): [compras_Orcamentos!]!

  """
  fetch data from the table: "compras.Orcamentos_Produtos"
  """
  compras_Orcamentos_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): [compras_Orcamentos_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.Orcamentos_Produtos"
  """
  compras_Orcamentos_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): compras_Orcamentos_Produtos_aggregate!

  """
  fetch data from the table: "compras.Orcamentos_Produtos" using primary key columns
  """
  compras_Orcamentos_Produtos_by_pk(Id: uuid!): compras_Orcamentos_Produtos

  """
  fetch aggregated fields from the table: "compras.Orcamentos"
  """
  compras_Orcamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_bool_exp
  ): compras_Orcamentos_aggregate!

  """
  fetch data from the table: "compras.Orcamentos" using primary key columns
  """
  compras_Orcamentos_by_pk(Id: uuid!): compras_Orcamentos

  """
  fetch data from the table: "compras.PedidosDeCompra"
  """
  compras_PedidosDeCompra(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): [compras_PedidosDeCompra!]!

  """
  fetch data from the table: "compras.PedidosDeCompraSituacoes"
  """
  compras_PedidosDeCompraSituacoes(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompraSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompraSituacoes_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompraSituacoes_bool_exp
  ): [compras_PedidosDeCompraSituacoes!]!

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompraSituacoes"
  """
  compras_PedidosDeCompraSituacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompraSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompraSituacoes_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompraSituacoes_bool_exp
  ): compras_PedidosDeCompraSituacoes_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompraSituacoes" using primary key columns
  """
  compras_PedidosDeCompraSituacoes_by_pk(Valor: String!): compras_PedidosDeCompraSituacoes

  """
  fetch data from the table: "compras.PedidosDeCompra_Produtos"
  """
  compras_PedidosDeCompra_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): [compras_PedidosDeCompra_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompra_Produtos"
  """
  compras_PedidosDeCompra_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): compras_PedidosDeCompra_Produtos_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompra_Produtos" using primary key columns
  """
  compras_PedidosDeCompra_Produtos_by_pk(Id: uuid!): compras_PedidosDeCompra_Produtos

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompra"
  """
  compras_PedidosDeCompra_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): compras_PedidosDeCompra_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompra" using primary key columns
  """
  compras_PedidosDeCompra_by_pk(Id: uuid!): compras_PedidosDeCompra

  """
  fetch data from the table: "compras.Produtos"
  """
  compras_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Produtos_bool_exp
  ): [compras_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.Produtos"
  """
  compras_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Produtos_bool_exp
  ): compras_Produtos_aggregate!

  """
  fetch data from the table: "compras.Produtos" using primary key columns
  """
  compras_Produtos_by_pk(Id: uuid!): compras_Produtos

  """
  fetch data from the table: "estoque.Enderecamentos"
  """
  estoque_Enderecamentos(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): [estoque_Enderecamentos!]!

  """
  fetch aggregated fields from the table: "estoque.Enderecamentos"
  """
  estoque_Enderecamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): estoque_Enderecamentos_aggregate!

  """
  fetch data from the table: "estoque.Enderecamentos" using primary key columns
  """
  estoque_Enderecamentos_by_pk(Id: uuid!): estoque_Enderecamentos

  """
  fetch data from the table: "estoque.Fabricantes"
  """
  estoque_Fabricantes(
    """distinct select on columns"""
    distinct_on: [estoque_Fabricantes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Fabricantes_order_by!]

    """filter the rows returned"""
    where: estoque_Fabricantes_bool_exp
  ): [estoque_Fabricantes!]!

  """
  fetch aggregated fields from the table: "estoque.Fabricantes"
  """
  estoque_Fabricantes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Fabricantes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Fabricantes_order_by!]

    """filter the rows returned"""
    where: estoque_Fabricantes_bool_exp
  ): estoque_Fabricantes_aggregate!

  """
  fetch data from the table: "estoque.Fabricantes" using primary key columns
  """
  estoque_Fabricantes_by_pk(Id: uuid!): estoque_Fabricantes

  """
  fetch data from the table: "estoque.Familias"
  """
  estoque_Familias(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): [estoque_Familias!]!

  """
  fetch aggregated fields from the table: "estoque.Familias"
  """
  estoque_Familias_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): estoque_Familias_aggregate!

  """
  fetch data from the table: "estoque.Familias" using primary key columns
  """
  estoque_Familias_by_pk(Id: uuid!): estoque_Familias

  """
  fetch data from the table: "estoque.Grupos"
  """
  estoque_Grupos(
    """distinct select on columns"""
    distinct_on: [estoque_Grupos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Grupos_order_by!]

    """filter the rows returned"""
    where: estoque_Grupos_bool_exp
  ): [estoque_Grupos!]!

  """
  fetch aggregated fields from the table: "estoque.Grupos"
  """
  estoque_Grupos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Grupos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Grupos_order_by!]

    """filter the rows returned"""
    where: estoque_Grupos_bool_exp
  ): estoque_Grupos_aggregate!

  """fetch data from the table: "estoque.Grupos" using primary key columns"""
  estoque_Grupos_by_pk(Id: uuid!): estoque_Grupos

  """
  fetch data from the table: "estoque.Itens"
  """
  estoque_Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """
  fetch aggregated fields from the table: "estoque.Itens"
  """
  estoque_Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!

  """fetch data from the table: "estoque.Itens" using primary key columns"""
  estoque_Itens_by_pk(Id: uuid!): estoque_Itens

  """
  fetch data from the table: "estoque.Logs"
  """
  estoque_Logs(
    """distinct select on columns"""
    distinct_on: [estoque_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Logs_order_by!]

    """filter the rows returned"""
    where: estoque_Logs_bool_exp
  ): [estoque_Logs!]!

  """
  fetch aggregated fields from the table: "estoque.Logs"
  """
  estoque_Logs_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Logs_order_by!]

    """filter the rows returned"""
    where: estoque_Logs_bool_exp
  ): estoque_Logs_aggregate!

  """fetch data from the table: "estoque.Logs" using primary key columns"""
  estoque_Logs_by_pk(Id: uuid!): estoque_Logs

  """
  fetch data from the table: "estoque.Movimentacoes"
  """
  estoque_Movimentacoes(
    """distinct select on columns"""
    distinct_on: [estoque_Movimentacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Movimentacoes_order_by!]

    """filter the rows returned"""
    where: estoque_Movimentacoes_bool_exp
  ): [estoque_Movimentacoes!]!

  """
  fetch aggregated fields from the table: "estoque.Movimentacoes"
  """
  estoque_Movimentacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Movimentacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Movimentacoes_order_by!]

    """filter the rows returned"""
    where: estoque_Movimentacoes_bool_exp
  ): estoque_Movimentacoes_aggregate!

  """
  fetch data from the table: "estoque.Movimentacoes" using primary key columns
  """
  estoque_Movimentacoes_by_pk(Id: uuid!): estoque_Movimentacoes

  """
  fetch data from the table: "estoque.PedidosDeSaida"
  """
  estoque_PedidosDeSaida(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): [estoque_PedidosDeSaida!]!

  """
  fetch data from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  estoque_PedidosDeSaidaSituacoes(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaidaSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaidaSituacoes_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp
  ): [estoque_PedidosDeSaidaSituacoes!]!

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  estoque_PedidosDeSaidaSituacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaidaSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaidaSituacoes_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp
  ): estoque_PedidosDeSaidaSituacoes_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaidaSituacoes" using primary key columns
  """
  estoque_PedidosDeSaidaSituacoes_by_pk(Valor: String!): estoque_PedidosDeSaidaSituacoes

  """
  fetch data from the table: "estoque.PedidosDeSaida_Itens"
  """
  estoque_PedidosDeSaida_Itens(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): [estoque_PedidosDeSaida_Itens!]!

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaida_Itens"
  """
  estoque_PedidosDeSaida_Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): estoque_PedidosDeSaida_Itens_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaida_Itens" using primary key columns
  """
  estoque_PedidosDeSaida_Itens_by_pk(Id: uuid!): estoque_PedidosDeSaida_Itens

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaida"
  """
  estoque_PedidosDeSaida_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): estoque_PedidosDeSaida_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaida" using primary key columns
  """
  estoque_PedidosDeSaida_by_pk(Id: uuid!): estoque_PedidosDeSaida

  """
  fetch data from the table: "estoque.TiposDeEnderecamentos"
  """
  estoque_TiposDeEnderecamentos(
    """distinct select on columns"""
    distinct_on: [estoque_TiposDeEnderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_TiposDeEnderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_TiposDeEnderecamentos_bool_exp
  ): [estoque_TiposDeEnderecamentos!]!

  """
  fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos"
  """
  estoque_TiposDeEnderecamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_TiposDeEnderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_TiposDeEnderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_TiposDeEnderecamentos_bool_exp
  ): estoque_TiposDeEnderecamentos_aggregate!

  """
  fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns
  """
  estoque_TiposDeEnderecamentos_by_pk(Id: uuid!): estoque_TiposDeEnderecamentos

  """
  fetch data from the table: "identidades.Enderecos"
  """
  identidades_Enderecos(
    """distinct select on columns"""
    distinct_on: [identidades_Enderecos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Enderecos_order_by!]

    """filter the rows returned"""
    where: identidades_Enderecos_bool_exp
  ): [identidades_Enderecos!]!

  """
  fetch aggregated fields from the table: "identidades.Enderecos"
  """
  identidades_Enderecos_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Enderecos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Enderecos_order_by!]

    """filter the rows returned"""
    where: identidades_Enderecos_bool_exp
  ): identidades_Enderecos_aggregate!

  """
  fetch data from the table: "identidades.Enderecos" using primary key columns
  """
  identidades_Enderecos_by_pk(Id: uuid!): identidades_Enderecos

  """
  fetch data from the table: "identidades.EstadosEMunicipios"
  """
  identidades_EstadosEMunicipios(
    """distinct select on columns"""
    distinct_on: [identidades_EstadosEMunicipios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_EstadosEMunicipios_order_by!]

    """filter the rows returned"""
    where: identidades_EstadosEMunicipios_bool_exp
  ): [identidades_EstadosEMunicipios!]!

  """
  fetch aggregated fields from the table: "identidades.EstadosEMunicipios"
  """
  identidades_EstadosEMunicipios_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_EstadosEMunicipios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_EstadosEMunicipios_order_by!]

    """filter the rows returned"""
    where: identidades_EstadosEMunicipios_bool_exp
  ): identidades_EstadosEMunicipios_aggregate!

  """
  fetch data from the table: "identidades.EstadosEMunicipios" using primary key columns
  """
  identidades_EstadosEMunicipios_by_pk(Id: uuid!): identidades_EstadosEMunicipios

  """
  fetch data from the table: "identidades.Fornecedores"
  """
  identidades_Fornecedores(
    """distinct select on columns"""
    distinct_on: [identidades_Fornecedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Fornecedores_order_by!]

    """filter the rows returned"""
    where: identidades_Fornecedores_bool_exp
  ): [identidades_Fornecedores!]!

  """
  fetch aggregated fields from the table: "identidades.Fornecedores"
  """
  identidades_Fornecedores_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Fornecedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Fornecedores_order_by!]

    """filter the rows returned"""
    where: identidades_Fornecedores_bool_exp
  ): identidades_Fornecedores_aggregate!

  """
  fetch data from the table: "identidades.Fornecedores" using primary key columns
  """
  identidades_Fornecedores_by_pk(Id: uuid!): identidades_Fornecedores

  """
  fetch data from the table: "identidades.Logs"
  """
  identidades_Logs(
    """distinct select on columns"""
    distinct_on: [identidades_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Logs_order_by!]

    """filter the rows returned"""
    where: identidades_Logs_bool_exp
  ): [identidades_Logs!]!

  """
  fetch aggregated fields from the table: "identidades.Logs"
  """
  identidades_Logs_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Logs_order_by!]

    """filter the rows returned"""
    where: identidades_Logs_bool_exp
  ): identidades_Logs_aggregate!

  """
  fetch data from the table: "identidades.Logs" using primary key columns
  """
  identidades_Logs_by_pk(Id: uuid!): identidades_Logs

  """
  fetch data from the table: "identidades.Pessoas"
  """
  identidades_Pessoas(
    """distinct select on columns"""
    distinct_on: [identidades_Pessoas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Pessoas_order_by!]

    """filter the rows returned"""
    where: identidades_Pessoas_bool_exp
  ): [identidades_Pessoas!]!

  """
  fetch aggregated fields from the table: "identidades.Pessoas"
  """
  identidades_Pessoas_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Pessoas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Pessoas_order_by!]

    """filter the rows returned"""
    where: identidades_Pessoas_bool_exp
  ): identidades_Pessoas_aggregate!

  """
  fetch data from the table: "identidades.Pessoas" using primary key columns
  """
  identidades_Pessoas_by_pk(Id: uuid!): identidades_Pessoas

  """
  fetch data from the table: "identidades.Vendedores"
  """
  identidades_Vendedores(
    """distinct select on columns"""
    distinct_on: [identidades_Vendedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Vendedores_order_by!]

    """filter the rows returned"""
    where: identidades_Vendedores_bool_exp
  ): [identidades_Vendedores!]!

  """
  fetch aggregated fields from the table: "identidades.Vendedores"
  """
  identidades_Vendedores_aggregate(
    """distinct select on columns"""
    distinct_on: [identidades_Vendedores_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [identidades_Vendedores_order_by!]

    """filter the rows returned"""
    where: identidades_Vendedores_bool_exp
  ): identidades_Vendedores_aggregate!

  """
  fetch data from the table: "identidades.Vendedores" using primary key columns
  """
  identidades_Vendedores_by_pk(Id: uuid!): identidades_Vendedores
}

type subscription_root {
  """
  fetch data from the table: "UnidadesDeMedidas"
  """
  UnidadesDeMedidas(
    """distinct select on columns"""
    distinct_on: [UnidadesDeMedidas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UnidadesDeMedidas_order_by!]

    """filter the rows returned"""
    where: UnidadesDeMedidas_bool_exp
  ): [UnidadesDeMedidas!]!

  """
  fetch aggregated fields from the table: "UnidadesDeMedidas"
  """
  UnidadesDeMedidas_aggregate(
    """distinct select on columns"""
    distinct_on: [UnidadesDeMedidas_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [UnidadesDeMedidas_order_by!]

    """filter the rows returned"""
    where: UnidadesDeMedidas_bool_exp
  ): UnidadesDeMedidas_aggregate!

  """
  fetch data from the table: "UnidadesDeMedidas" using primary key columns
  """
  UnidadesDeMedidas_by_pk(Valor: String!): UnidadesDeMedidas

  """
  fetch data from the table: "compras.Logs"
  """
  compras_Logs(
    """distinct select on columns"""
    distinct_on: [compras_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Logs_order_by!]

    """filter the rows returned"""
    where: compras_Logs_bool_exp
  ): [compras_Logs!]!

  """
  fetch aggregated fields from the table: "compras.Logs"
  """
  compras_Logs_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Logs_order_by!]

    """filter the rows returned"""
    where: compras_Logs_bool_exp
  ): compras_Logs_aggregate!

  """fetch data from the table: "compras.Logs" using primary key columns"""
  compras_Logs_by_pk(Id: uuid!): compras_Logs

  """
  fetch data from the table: "compras.Orcamentos"
  """
  compras_Orcamentos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_bool_exp
  ): [compras_Orcamentos!]!

  """
  fetch data from the table: "compras.Orcamentos_Produtos"
  """
  compras_Orcamentos_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): [compras_Orcamentos_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.Orcamentos_Produtos"
  """
  compras_Orcamentos_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_Produtos_bool_exp
  ): compras_Orcamentos_Produtos_aggregate!

  """
  fetch data from the table: "compras.Orcamentos_Produtos" using primary key columns
  """
  compras_Orcamentos_Produtos_by_pk(Id: uuid!): compras_Orcamentos_Produtos

  """
  fetch aggregated fields from the table: "compras.Orcamentos"
  """
  compras_Orcamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Orcamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Orcamentos_order_by!]

    """filter the rows returned"""
    where: compras_Orcamentos_bool_exp
  ): compras_Orcamentos_aggregate!

  """
  fetch data from the table: "compras.Orcamentos" using primary key columns
  """
  compras_Orcamentos_by_pk(Id: uuid!): compras_Orcamentos

  """
  fetch data from the table: "compras.PedidosDeCompra"
  """
  compras_PedidosDeCompra(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): [compras_PedidosDeCompra!]!

  """
  fetch data from the table: "compras.PedidosDeCompraSituacoes"
  """
  compras_PedidosDeCompraSituacoes(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompraSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompraSituacoes_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompraSituacoes_bool_exp
  ): [compras_PedidosDeCompraSituacoes!]!

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompraSituacoes"
  """
  compras_PedidosDeCompraSituacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompraSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompraSituacoes_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompraSituacoes_bool_exp
  ): compras_PedidosDeCompraSituacoes_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompraSituacoes" using primary key columns
  """
  compras_PedidosDeCompraSituacoes_by_pk(Valor: String!): compras_PedidosDeCompraSituacoes

  """
  fetch data from the table: "compras.PedidosDeCompra_Produtos"
  """
  compras_PedidosDeCompra_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): [compras_PedidosDeCompra_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompra_Produtos"
  """
  compras_PedidosDeCompra_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_Produtos_bool_exp
  ): compras_PedidosDeCompra_Produtos_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompra_Produtos" using primary key columns
  """
  compras_PedidosDeCompra_Produtos_by_pk(Id: uuid!): compras_PedidosDeCompra_Produtos

  """
  fetch aggregated fields from the table: "compras.PedidosDeCompra"
  """
  compras_PedidosDeCompra_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_PedidosDeCompra_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_PedidosDeCompra_order_by!]

    """filter the rows returned"""
    where: compras_PedidosDeCompra_bool_exp
  ): compras_PedidosDeCompra_aggregate!

  """
  fetch data from the table: "compras.PedidosDeCompra" using primary key columns
  """
  compras_PedidosDeCompra_by_pk(Id: uuid!): compras_PedidosDeCompra

  """
  fetch data from the table: "compras.Produtos"
  """
  compras_Produtos(
    """distinct select on columns"""
    distinct_on: [compras_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Produtos_bool_exp
  ): [compras_Produtos!]!

  """
  fetch aggregated fields from the table: "compras.Produtos"
  """
  compras_Produtos_aggregate(
    """distinct select on columns"""
    distinct_on: [compras_Produtos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [compras_Produtos_order_by!]

    """filter the rows returned"""
    where: compras_Produtos_bool_exp
  ): compras_Produtos_aggregate!

  """
  fetch data from the table: "compras.Produtos" using primary key columns
  """
  compras_Produtos_by_pk(Id: uuid!): compras_Produtos

  """
  fetch data from the table: "estoque.Enderecamentos"
  """
  estoque_Enderecamentos(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): [estoque_Enderecamentos!]!

  """
  fetch aggregated fields from the table: "estoque.Enderecamentos"
  """
  estoque_Enderecamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Enderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Enderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_Enderecamentos_bool_exp
  ): estoque_Enderecamentos_aggregate!

  """
  fetch data from the table: "estoque.Enderecamentos" using primary key columns
  """
  estoque_Enderecamentos_by_pk(Id: uuid!): estoque_Enderecamentos

  """
  fetch data from the table: "estoque.Fabricantes"
  """
  estoque_Fabricantes(
    """distinct select on columns"""
    distinct_on: [estoque_Fabricantes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Fabricantes_order_by!]

    """filter the rows returned"""
    where: estoque_Fabricantes_bool_exp
  ): [estoque_Fabricantes!]!

  """
  fetch aggregated fields from the table: "estoque.Fabricantes"
  """
  estoque_Fabricantes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Fabricantes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Fabricantes_order_by!]

    """filter the rows returned"""
    where: estoque_Fabricantes_bool_exp
  ): estoque_Fabricantes_aggregate!

  """
  fetch data from the table: "estoque.Fabricantes" using primary key columns
  """
  estoque_Fabricantes_by_pk(Id: uuid!): estoque_Fabricantes

  """
  fetch data from the table: "estoque.Familias"
  """
  estoque_Familias(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): [estoque_Familias!]!

  """
  fetch aggregated fields from the table: "estoque.Familias"
  """
  estoque_Familias_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Familias_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Familias_order_by!]

    """filter the rows returned"""
    where: estoque_Familias_bool_exp
  ): estoque_Familias_aggregate!

  """
  fetch data from the table: "estoque.Familias" using primary key columns
  """
  estoque_Familias_by_pk(Id: uuid!): estoque_Familias

  """
  fetch data from the table: "estoque.Grupos"
  """
  estoque_Grupos(
    """distinct select on columns"""
    distinct_on: [estoque_Grupos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Grupos_order_by!]

    """filter the rows returned"""
    where: estoque_Grupos_bool_exp
  ): [estoque_Grupos!]!

  """
  fetch aggregated fields from the table: "estoque.Grupos"
  """
  estoque_Grupos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Grupos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Grupos_order_by!]

    """filter the rows returned"""
    where: estoque_Grupos_bool_exp
  ): estoque_Grupos_aggregate!

  """fetch data from the table: "estoque.Grupos" using primary key columns"""
  estoque_Grupos_by_pk(Id: uuid!): estoque_Grupos

  """
  fetch data from the table: "estoque.Itens"
  """
  estoque_Itens(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): [estoque_Itens!]!

  """
  fetch aggregated fields from the table: "estoque.Itens"
  """
  estoque_Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_Itens_bool_exp
  ): estoque_Itens_aggregate!

  """fetch data from the table: "estoque.Itens" using primary key columns"""
  estoque_Itens_by_pk(Id: uuid!): estoque_Itens

  """
  fetch data from the table: "estoque.Logs"
  """
  estoque_Logs(
    """distinct select on columns"""
    distinct_on: [estoque_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Logs_order_by!]

    """filter the rows returned"""
    where: estoque_Logs_bool_exp
  ): [estoque_Logs!]!

  """
  fetch aggregated fields from the table: "estoque.Logs"
  """
  estoque_Logs_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Logs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Logs_order_by!]

    """filter the rows returned"""
    where: estoque_Logs_bool_exp
  ): estoque_Logs_aggregate!

  """fetch data from the table: "estoque.Logs" using primary key columns"""
  estoque_Logs_by_pk(Id: uuid!): estoque_Logs

  """
  fetch data from the table: "estoque.Movimentacoes"
  """
  estoque_Movimentacoes(
    """distinct select on columns"""
    distinct_on: [estoque_Movimentacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Movimentacoes_order_by!]

    """filter the rows returned"""
    where: estoque_Movimentacoes_bool_exp
  ): [estoque_Movimentacoes!]!

  """
  fetch aggregated fields from the table: "estoque.Movimentacoes"
  """
  estoque_Movimentacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_Movimentacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_Movimentacoes_order_by!]

    """filter the rows returned"""
    where: estoque_Movimentacoes_bool_exp
  ): estoque_Movimentacoes_aggregate!

  """
  fetch data from the table: "estoque.Movimentacoes" using primary key columns
  """
  estoque_Movimentacoes_by_pk(Id: uuid!): estoque_Movimentacoes

  """
  fetch data from the table: "estoque.PedidosDeSaida"
  """
  estoque_PedidosDeSaida(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): [estoque_PedidosDeSaida!]!

  """
  fetch data from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  estoque_PedidosDeSaidaSituacoes(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaidaSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaidaSituacoes_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp
  ): [estoque_PedidosDeSaidaSituacoes!]!

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaidaSituacoes"
  """
  estoque_PedidosDeSaidaSituacoes_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaidaSituacoes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaidaSituacoes_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaidaSituacoes_bool_exp
  ): estoque_PedidosDeSaidaSituacoes_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaidaSituacoes" using primary key columns
  """
  estoque_PedidosDeSaidaSituacoes_by_pk(Valor: String!): estoque_PedidosDeSaidaSituacoes

  """
  fetch data from the table: "estoque.PedidosDeSaida_Itens"
  """
  estoque_PedidosDeSaida_Itens(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): [estoque_PedidosDeSaida_Itens!]!

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaida_Itens"
  """
  estoque_PedidosDeSaida_Itens_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_Itens_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_Itens_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_Itens_bool_exp
  ): estoque_PedidosDeSaida_Itens_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaida_Itens" using primary key columns
  """
  estoque_PedidosDeSaida_Itens_by_pk(Id: uuid!): estoque_PedidosDeSaida_Itens

  """
  fetch aggregated fields from the table: "estoque.PedidosDeSaida"
  """
  estoque_PedidosDeSaida_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_PedidosDeSaida_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_PedidosDeSaida_order_by!]

    """filter the rows returned"""
    where: estoque_PedidosDeSaida_bool_exp
  ): estoque_PedidosDeSaida_aggregate!

  """
  fetch data from the table: "estoque.PedidosDeSaida" using primary key columns
  """
  estoque_PedidosDeSaida_by_pk(Id: uuid!): estoque_PedidosDeSaida

  """
  fetch data from the table: "estoque.TiposDeEnderecamentos"
  """
  estoque_TiposDeEnderecamentos(
    """distinct select on columns"""
    distinct_on: [estoque_TiposDeEnderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_TiposDeEnderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_TiposDeEnderecamentos_bool_exp
  ): [estoque_TiposDeEnderecamentos!]!

  """
  fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos"
  """
  estoque_TiposDeEnderecamentos_aggregate(
    """distinct select on columns"""
    distinct_on: [estoque_TiposDeEnderecamentos_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [estoque_TiposDeEnderecamentos_order_by!]

    """filter the rows returned"""
    where: estoque_TiposDeEnderecamentos_bool_exp
  ): estoque_TiposDeEnderecamentos_aggregate!

  """
  fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns
  """
  estoque_TiposDeEnderecamentos_by_pk(Id: uuid!): estoque_TiposDeEnderecamentos
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp_remote_rel_compras.OrcamentosFornecedor {
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

