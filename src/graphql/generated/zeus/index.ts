/* eslint-disable */

import { AllTypesProps, ReturnTypes } from './const';
type ZEUS_INTERFACES = never
type ZEUS_UNIONS = never

export type ValueTypes = {
    /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
["Boolean_comparison_exp"]: {
	_eq?:boolean | null,
	_gt?:boolean | null,
	_gte?:boolean | null,
	_in?:boolean[],
	_is_null?:boolean | null,
	_lt?:boolean | null,
	_lte?:boolean | null,
	_neq?:boolean | null,
	_nin?:boolean[]
};
	["CadastrarClienteOutput"]: AliasType<{
	Id?:true,
		__typename?: true
}>;
	["CadastrarColaboradorOutput"]: AliasType<{
	Id?:true,
		__typename?: true
}>;
	["CadastrarFornecedorOutput"]: AliasType<{
	Id?:true,
		__typename?: true
}>;
	["CadastrarRepresentanteOutput"]: AliasType<{
	Id?:true,
		__typename?: true
}>;
	/** columns and relationships of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos"]: AliasType<{
	Id?:true,
	Nome?:true,
		__typename?: true
}>;
	/** aggregated selection of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["CategoriasDeVeiculos_aggregate_fields"],
	nodes?:ValueTypes["CategoriasDeVeiculos"],
		__typename?: true
}>;
	/** aggregate fields of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["CategoriasDeVeiculos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["CategoriasDeVeiculos_max_fields"],
	min?:ValueTypes["CategoriasDeVeiculos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "CategoriasDeVeiculos". All fields are combined with a logical 'AND'. */
["CategoriasDeVeiculos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["CategoriasDeVeiculos_bool_exp"][],
	_not?:ValueTypes["CategoriasDeVeiculos_bool_exp"] | null,
	_or?:ValueTypes["CategoriasDeVeiculos_bool_exp"][]
};
	/** unique or primary key constraints on table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_constraint"]:CategoriasDeVeiculos_constraint;
	/** input type for inserting data into table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null
};
	/** aggregate max on columns */
["CategoriasDeVeiculos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["CategoriasDeVeiculos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["CategoriasDeVeiculos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_obj_rel_insert_input"]: {
	data:ValueTypes["CategoriasDeVeiculos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["CategoriasDeVeiculos_on_conflict"] | null
};
	/** on conflict condition type for table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_on_conflict"]: {
	constraint:ValueTypes["CategoriasDeVeiculos_constraint"],
	update_columns:ValueTypes["CategoriasDeVeiculos_update_column"][],
	where?:ValueTypes["CategoriasDeVeiculos_bool_exp"] | null
};
	/** Ordering options when selecting data from "CategoriasDeVeiculos". */
["CategoriasDeVeiculos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: CategoriasDeVeiculos */
["CategoriasDeVeiculos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_select_column"]:CategoriasDeVeiculos_select_column;
	/** input type for updating data in table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null
};
	/** update columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_update_column"]:CategoriasDeVeiculos_update_column;
	/** columns and relationships of "Configuracoes" */
["Configuracoes"]: AliasType<{
	Id?:true,
	Nome?:true,
	Slug?:true,
Valor?: [{	/** JSON select path */
	path?:string | null},true],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "Configuracoes" */
["Configuracoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["Configuracoes_aggregate_fields"],
	nodes?:ValueTypes["Configuracoes"],
		__typename?: true
}>;
	/** aggregate fields of "Configuracoes" */
["Configuracoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["Configuracoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["Configuracoes_max_fields"],
	min?:ValueTypes["Configuracoes_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_append_input"]: {
	Valor?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "Configuracoes". All fields are combined with a logical 'AND'. */
["Configuracoes_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Slug?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["jsonb_comparison_exp"] | null,
	_and?:ValueTypes["Configuracoes_bool_exp"][],
	_not?:ValueTypes["Configuracoes_bool_exp"] | null,
	_or?:ValueTypes["Configuracoes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "Configuracoes" */
["Configuracoes_constraint"]:Configuracoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["Configuracoes_delete_at_path_input"]: {
	Valor?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["Configuracoes_delete_elem_input"]: {
	Valor?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["Configuracoes_delete_key_input"]: {
	Valor?:string | null
};
	/** input type for inserting data into table "Configuracoes" */
["Configuracoes_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Slug?:string | null,
	Valor?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["Configuracoes_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	Slug?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["Configuracoes_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	Slug?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "Configuracoes" */
["Configuracoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["Configuracoes"],
		__typename?: true
}>;
	/** on conflict condition type for table "Configuracoes" */
["Configuracoes_on_conflict"]: {
	constraint:ValueTypes["Configuracoes_constraint"],
	update_columns:ValueTypes["Configuracoes_update_column"][],
	where?:ValueTypes["Configuracoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "Configuracoes". */
["Configuracoes_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Slug?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: Configuracoes */
["Configuracoes_pk_columns_input"]: {
	Slug:string
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_prepend_input"]: {
	Valor?:ValueTypes["jsonb"] | null
};
	/** select columns of table "Configuracoes" */
["Configuracoes_select_column"]:Configuracoes_select_column;
	/** input type for updating data in table "Configuracoes" */
["Configuracoes_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Slug?:string | null,
	Valor?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "Configuracoes" */
["Configuracoes_update_column"]:Configuracoes_update_column;
	/** columns and relationships of "EstadosEMunicipios" */
["EstadosEMunicipios"]: AliasType<{
Cidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["EstadosEMunicipios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["EstadosEMunicipios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["EstadosEMunicipios_bool_exp"] | null},ValueTypes["EstadosEMunicipios"]],
Cidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["EstadosEMunicipios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["EstadosEMunicipios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["EstadosEMunicipios_bool_exp"] | null},ValueTypes["EstadosEMunicipios_aggregate"]],
	CodigoIbge?:true,
	/** An object relationship */
	Estado?:ValueTypes["EstadosEMunicipios"],
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	Sigla?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate"]: AliasType<{
	aggregate?:ValueTypes["EstadosEMunicipios_aggregate_fields"],
	nodes?:ValueTypes["EstadosEMunicipios"],
		__typename?: true
}>;
	/** aggregate fields of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["EstadosEMunicipios_avg_fields"],
count?: [{	columns?:ValueTypes["EstadosEMunicipios_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["EstadosEMunicipios_max_fields"],
	min?:ValueTypes["EstadosEMunicipios_min_fields"],
	stddev?:ValueTypes["EstadosEMunicipios_stddev_fields"],
	stddev_pop?:ValueTypes["EstadosEMunicipios_stddev_pop_fields"],
	stddev_samp?:ValueTypes["EstadosEMunicipios_stddev_samp_fields"],
	sum?:ValueTypes["EstadosEMunicipios_sum_fields"],
	var_pop?:ValueTypes["EstadosEMunicipios_var_pop_fields"],
	var_samp?:ValueTypes["EstadosEMunicipios_var_samp_fields"],
	variance?:ValueTypes["EstadosEMunicipios_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_order_by"]: {
	avg?:ValueTypes["EstadosEMunicipios_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["EstadosEMunicipios_max_order_by"] | null,
	min?:ValueTypes["EstadosEMunicipios_min_order_by"] | null,
	stddev?:ValueTypes["EstadosEMunicipios_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["EstadosEMunicipios_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["EstadosEMunicipios_stddev_samp_order_by"] | null,
	sum?:ValueTypes["EstadosEMunicipios_sum_order_by"] | null,
	var_pop?:ValueTypes["EstadosEMunicipios_var_pop_order_by"] | null,
	var_samp?:ValueTypes["EstadosEMunicipios_var_samp_order_by"] | null,
	variance?:ValueTypes["EstadosEMunicipios_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_arr_rel_insert_input"]: {
	data:ValueTypes["EstadosEMunicipios_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["EstadosEMunicipios_on_conflict"] | null
};
	/** aggregate avg on columns */
["EstadosEMunicipios_avg_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_avg_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "EstadosEMunicipios". All fields are combined with a logical 'AND'. */
["EstadosEMunicipios_bool_exp"]: {
	Cidades?:ValueTypes["EstadosEMunicipios_bool_exp"] | null,
	CodigoIbge?:ValueTypes["bigint_comparison_exp"] | null,
	Estado?:ValueTypes["EstadosEMunicipios_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Pai_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Sigla?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["EstadosEMunicipios_bool_exp"][],
	_not?:ValueTypes["EstadosEMunicipios_bool_exp"] | null,
	_or?:ValueTypes["EstadosEMunicipios_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "EstadosEMunicipios" */
["EstadosEMunicipios_constraint"]:EstadosEMunicipios_constraint;
	/** input type for incrementing numeric columns in table "EstadosEMunicipios" */
["EstadosEMunicipios_inc_input"]: {
	CodigoIbge?:ValueTypes["bigint"] | null
};
	/** input type for inserting data into table "EstadosEMunicipios" */
["EstadosEMunicipios_insert_input"]: {
	Cidades?:ValueTypes["EstadosEMunicipios_arr_rel_insert_input"] | null,
	CodigoIbge?:ValueTypes["bigint"] | null,
	Estado?:ValueTypes["EstadosEMunicipios_obj_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	Sigla?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["EstadosEMunicipios_max_fields"]: AliasType<{
	CodigoIbge?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	Sigla?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_max_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Sigla?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["EstadosEMunicipios_min_fields"]: AliasType<{
	CodigoIbge?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	Sigla?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_min_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Sigla?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "EstadosEMunicipios" */
["EstadosEMunicipios_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["EstadosEMunicipios"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_obj_rel_insert_input"]: {
	data:ValueTypes["EstadosEMunicipios_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["EstadosEMunicipios_on_conflict"] | null
};
	/** on conflict condition type for table "EstadosEMunicipios" */
["EstadosEMunicipios_on_conflict"]: {
	constraint:ValueTypes["EstadosEMunicipios_constraint"],
	update_columns:ValueTypes["EstadosEMunicipios_update_column"][],
	where?:ValueTypes["EstadosEMunicipios_bool_exp"] | null
};
	/** Ordering options when selecting data from "EstadosEMunicipios". */
["EstadosEMunicipios_order_by"]: {
	Cidades_aggregate?:ValueTypes["EstadosEMunicipios_aggregate_order_by"] | null,
	CodigoIbge?:ValueTypes["order_by"] | null,
	Estado?:ValueTypes["EstadosEMunicipios_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Sigla?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: EstadosEMunicipios */
["EstadosEMunicipios_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_select_column"]:EstadosEMunicipios_select_column;
	/** input type for updating data in table "EstadosEMunicipios" */
["EstadosEMunicipios_set_input"]: {
	CodigoIbge?:ValueTypes["bigint"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	Sigla?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["EstadosEMunicipios_stddev_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["EstadosEMunicipios_stddev_pop_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_pop_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["EstadosEMunicipios_stddev_samp_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_samp_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["EstadosEMunicipios_sum_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_sum_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** update columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_update_column"]:EstadosEMunicipios_update_column;
	/** aggregate var_pop on columns */
["EstadosEMunicipios_var_pop_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_pop_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["EstadosEMunicipios_var_samp_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_samp_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["EstadosEMunicipios_variance_fields"]: AliasType<{
	CodigoIbge?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_variance_order_by"]: {
	CodigoIbge?:ValueTypes["order_by"] | null
};
	/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
["Int_comparison_exp"]: {
	_eq?:number | null,
	_gt?:number | null,
	_gte?:number | null,
	_in?:number[],
	_is_null?:boolean | null,
	_lt?:number | null,
	_lte?:number | null,
	_neq?:number | null,
	_nin?:number[]
};
	/** columns and relationships of "Operadoras" */
["Operadoras"]: AliasType<{
	Apn?:true,
	Id?:true,
	Nome?:true,
	Senha?:true,
	Usuario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "Operadoras" */
["Operadoras_aggregate"]: AliasType<{
	aggregate?:ValueTypes["Operadoras_aggregate_fields"],
	nodes?:ValueTypes["Operadoras"],
		__typename?: true
}>;
	/** aggregate fields of "Operadoras" */
["Operadoras_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["Operadoras_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["Operadoras_max_fields"],
	min?:ValueTypes["Operadoras_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "Operadoras". All fields are combined with a logical 'AND'. */
["Operadoras_bool_exp"]: {
	Apn?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Senha?:ValueTypes["String_comparison_exp"] | null,
	Usuario?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["Operadoras_bool_exp"][],
	_not?:ValueTypes["Operadoras_bool_exp"] | null,
	_or?:ValueTypes["Operadoras_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "Operadoras" */
["Operadoras_constraint"]:Operadoras_constraint;
	/** input type for inserting data into table "Operadoras" */
["Operadoras_insert_input"]: {
	Apn?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Senha?:string | null,
	Usuario?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["Operadoras_max_fields"]: AliasType<{
	Apn?:true,
	Id?:true,
	Nome?:true,
	Senha?:true,
	Usuario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["Operadoras_min_fields"]: AliasType<{
	Apn?:true,
	Id?:true,
	Nome?:true,
	Senha?:true,
	Usuario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "Operadoras" */
["Operadoras_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["Operadoras"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "Operadoras" */
["Operadoras_obj_rel_insert_input"]: {
	data:ValueTypes["Operadoras_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["Operadoras_on_conflict"] | null
};
	/** on conflict condition type for table "Operadoras" */
["Operadoras_on_conflict"]: {
	constraint:ValueTypes["Operadoras_constraint"],
	update_columns:ValueTypes["Operadoras_update_column"][],
	where?:ValueTypes["Operadoras_bool_exp"] | null
};
	/** Ordering options when selecting data from "Operadoras". */
["Operadoras_order_by"]: {
	Apn?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Senha?:ValueTypes["order_by"] | null,
	Usuario?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: Operadoras */
["Operadoras_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "Operadoras" */
["Operadoras_select_column"]:Operadoras_select_column;
	/** input type for updating data in table "Operadoras" */
["Operadoras_set_input"]: {
	Apn?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Senha?:string | null,
	Usuario?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "Operadoras" */
["Operadoras_update_column"]:Operadoras_update_column;
	/** columns and relationships of "Produtos" */
["Produtos"]: AliasType<{
	Descricao?:true,
	Id?:true,
	NCM?:true,
	Nome?:true,
	UnidadeDeMedida_Id?:true,
	Utilizacao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "Produtos" */
["Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["Produtos_aggregate_fields"],
	nodes?:ValueTypes["Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "Produtos" */
["Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["Produtos_max_fields"],
	min?:ValueTypes["Produtos_min_fields"],
	stddev?:ValueTypes["Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["Produtos_stddev_samp_fields"],
	sum?:ValueTypes["Produtos_sum_fields"],
	var_pop?:ValueTypes["Produtos_var_pop_fields"],
	var_samp?:ValueTypes["Produtos_var_samp_fields"],
	variance?:ValueTypes["Produtos_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["Produtos_avg_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "Produtos". All fields are combined with a logical 'AND'. */
["Produtos_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	NCM?:ValueTypes["Int_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	UnidadeDeMedida_Id?:ValueTypes["String_comparison_exp"] | null,
	Utilizacao?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["Produtos_bool_exp"][],
	_not?:ValueTypes["Produtos_bool_exp"] | null,
	_or?:ValueTypes["Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "Produtos" */
["Produtos_constraint"]:Produtos_constraint;
	/** input type for incrementing numeric columns in table "Produtos" */
["Produtos_inc_input"]: {
	NCM?:number | null
};
	/** input type for inserting data into table "Produtos" */
["Produtos_insert_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	NCM?:number | null,
	Nome?:string | null,
	UnidadeDeMedida_Id?:string | null,
	Utilizacao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["Produtos_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	NCM?:true,
	Nome?:true,
	UnidadeDeMedida_Id?:true,
	Utilizacao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["Produtos_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	NCM?:true,
	Nome?:true,
	UnidadeDeMedida_Id?:true,
	Utilizacao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "Produtos" */
["Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["Produtos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "Produtos" */
["Produtos_obj_rel_insert_input"]: {
	data:ValueTypes["Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["Produtos_on_conflict"] | null
};
	/** on conflict condition type for table "Produtos" */
["Produtos_on_conflict"]: {
	constraint:ValueTypes["Produtos_constraint"],
	update_columns:ValueTypes["Produtos_update_column"][],
	where?:ValueTypes["Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "Produtos". */
["Produtos_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	NCM?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	UnidadeDeMedida_Id?:ValueTypes["order_by"] | null,
	Utilizacao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: Produtos */
["Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "Produtos" */
["Produtos_select_column"]:Produtos_select_column;
	/** input type for updating data in table "Produtos" */
["Produtos_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	NCM?:number | null,
	Nome?:string | null,
	UnidadeDeMedida_Id?:string | null,
	Utilizacao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["Produtos_stddev_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["Produtos_stddev_pop_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["Produtos_stddev_samp_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["Produtos_sum_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** update columns of table "Produtos" */
["Produtos_update_column"]:Produtos_update_column;
	/** aggregate var_pop on columns */
["Produtos_var_pop_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["Produtos_var_samp_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["Produtos_variance_fields"]: AliasType<{
	NCM?:true,
		__typename?: true
}>;
	/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
["String_comparison_exp"]: {
	_eq?:string | null,
	_gt?:string | null,
	_gte?:string | null,
	/** does the column match the given case-insensitive pattern */
	_ilike?:string | null,
	_in?:string[],
	/** does the column match the given POSIX regular expression, case insensitive */
	_iregex?:string | null,
	_is_null?:boolean | null,
	/** does the column match the given pattern */
	_like?:string | null,
	_lt?:string | null,
	_lte?:string | null,
	_neq?:string | null,
	/** does the column NOT match the given case-insensitive pattern */
	_nilike?:string | null,
	_nin?:string[],
	/** does the column NOT match the given POSIX regular expression, case insensitive */
	_niregex?:string | null,
	/** does the column NOT match the given pattern */
	_nlike?:string | null,
	/** does the column NOT match the given POSIX regular expression, case sensitive */
	_nregex?:string | null,
	/** does the column NOT match the given SQL regular expression */
	_nsimilar?:string | null,
	/** does the column match the given POSIX regular expression, case sensitive */
	_regex?:string | null,
	/** does the column match the given SQL regular expression */
	_similar?:string | null
};
	/** columns and relationships of "UnidadesDeMedidas" */
["UnidadesDeMedidas"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["UnidadesDeMedidas_aggregate_fields"],
	nodes?:ValueTypes["UnidadesDeMedidas"],
		__typename?: true
}>;
	/** aggregate fields of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["UnidadesDeMedidas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["UnidadesDeMedidas_max_fields"],
	min?:ValueTypes["UnidadesDeMedidas_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "UnidadesDeMedidas". All fields are combined with a logical 'AND'. */
["UnidadesDeMedidas_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["UnidadesDeMedidas_bool_exp"][],
	_not?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null,
	_or?:ValueTypes["UnidadesDeMedidas_bool_exp"][]
};
	/** unique or primary key constraints on table "UnidadesDeMedidas" */
["UnidadesDeMedidas_constraint"]:UnidadesDeMedidas_constraint;
	/** input type for inserting data into table "UnidadesDeMedidas" */
["UnidadesDeMedidas_insert_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["UnidadesDeMedidas_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["UnidadesDeMedidas_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "UnidadesDeMedidas" */
["UnidadesDeMedidas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["UnidadesDeMedidas"],
		__typename?: true
}>;
	/** on conflict condition type for table "UnidadesDeMedidas" */
["UnidadesDeMedidas_on_conflict"]: {
	constraint:ValueTypes["UnidadesDeMedidas_constraint"],
	update_columns:ValueTypes["UnidadesDeMedidas_update_column"][],
	where?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null
};
	/** Ordering options when selecting data from "UnidadesDeMedidas". */
["UnidadesDeMedidas_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: UnidadesDeMedidas */
["UnidadesDeMedidas_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_select_column"]:UnidadesDeMedidas_select_column;
	/** input type for updating data in table "UnidadesDeMedidas" */
["UnidadesDeMedidas_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_update_column"]:UnidadesDeMedidas_update_column;
	/** columns and relationships of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos"]: AliasType<{
	/** An object relationship */
	Fluxo?:ValueTypes["atendimentos_Fluxos"],
	Fluxo_Id?:true,
	Id?:true,
	Nome?:true,
	Posicao?:true,
Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["atendimentos_EtapasDosFluxos_aggregate_fields"],
	nodes?:ValueTypes["atendimentos_EtapasDosFluxos"],
		__typename?: true
}>;
	/** aggregate fields of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["atendimentos_EtapasDosFluxos_avg_fields"],
count?: [{	columns?:ValueTypes["atendimentos_EtapasDosFluxos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["atendimentos_EtapasDosFluxos_max_fields"],
	min?:ValueTypes["atendimentos_EtapasDosFluxos_min_fields"],
	stddev?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_fields"],
	stddev_pop?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_samp_fields"],
	sum?:ValueTypes["atendimentos_EtapasDosFluxos_sum_fields"],
	var_pop?:ValueTypes["atendimentos_EtapasDosFluxos_var_pop_fields"],
	var_samp?:ValueTypes["atendimentos_EtapasDosFluxos_var_samp_fields"],
	variance?:ValueTypes["atendimentos_EtapasDosFluxos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_order_by"]: {
	avg?:ValueTypes["atendimentos_EtapasDosFluxos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["atendimentos_EtapasDosFluxos_max_order_by"] | null,
	min?:ValueTypes["atendimentos_EtapasDosFluxos_min_order_by"] | null,
	stddev?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["atendimentos_EtapasDosFluxos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["atendimentos_EtapasDosFluxos_sum_order_by"] | null,
	var_pop?:ValueTypes["atendimentos_EtapasDosFluxos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["atendimentos_EtapasDosFluxos_var_samp_order_by"] | null,
	variance?:ValueTypes["atendimentos_EtapasDosFluxos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_arr_rel_insert_input"]: {
	data:ValueTypes["atendimentos_EtapasDosFluxos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_EtapasDosFluxos_on_conflict"] | null
};
	/** aggregate avg on columns */
["atendimentos_EtapasDosFluxos_avg_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_avg_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "atendimentos.EtapasDosFluxos". All fields are combined with a logical 'AND'. */
["atendimentos_EtapasDosFluxos_bool_exp"]: {
	Fluxo?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null,
	Fluxo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Posicao?:ValueTypes["Int_comparison_exp"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	_and?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"][],
	_not?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null,
	_or?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_constraint"]:atendimentos_EtapasDosFluxos_constraint;
	/** input type for incrementing numeric columns in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_inc_input"]: {
	Posicao?:number | null
};
	/** input type for inserting data into table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_insert_input"]: {
	Fluxo?:ValueTypes["atendimentos_Fluxos_obj_rel_insert_input"] | null,
	Fluxo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Posicao?:number | null,
	Tickets?:ValueTypes["atendimentos_Tickets_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["atendimentos_EtapasDosFluxos_max_fields"]: AliasType<{
	Fluxo_Id?:true,
	Id?:true,
	Nome?:true,
	Posicao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_max_order_by"]: {
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Posicao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["atendimentos_EtapasDosFluxos_min_fields"]: AliasType<{
	Fluxo_Id?:true,
	Id?:true,
	Nome?:true,
	Posicao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_min_order_by"]: {
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Posicao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["atendimentos_EtapasDosFluxos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_obj_rel_insert_input"]: {
	data:ValueTypes["atendimentos_EtapasDosFluxos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_EtapasDosFluxos_on_conflict"] | null
};
	/** on conflict condition type for table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_on_conflict"]: {
	constraint:ValueTypes["atendimentos_EtapasDosFluxos_constraint"],
	update_columns:ValueTypes["atendimentos_EtapasDosFluxos_update_column"][],
	where?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null
};
	/** Ordering options when selecting data from "atendimentos.EtapasDosFluxos". */
["atendimentos_EtapasDosFluxos_order_by"]: {
	Fluxo?:ValueTypes["atendimentos_Fluxos_order_by"] | null,
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Posicao?:ValueTypes["order_by"] | null,
	Tickets_aggregate?:ValueTypes["atendimentos_Tickets_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: atendimentos_EtapasDosFluxos */
["atendimentos_EtapasDosFluxos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_select_column"]:atendimentos_EtapasDosFluxos_select_column;
	/** input type for updating data in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_set_input"]: {
	Fluxo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Posicao?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["atendimentos_EtapasDosFluxos_stddev_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["atendimentos_EtapasDosFluxos_stddev_pop_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_pop_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["atendimentos_EtapasDosFluxos_stddev_samp_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_samp_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["atendimentos_EtapasDosFluxos_sum_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_sum_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** update columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_update_column"]:atendimentos_EtapasDosFluxos_update_column;
	/** aggregate var_pop on columns */
["atendimentos_EtapasDosFluxos_var_pop_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_pop_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["atendimentos_EtapasDosFluxos_var_samp_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_samp_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["atendimentos_EtapasDosFluxos_variance_fields"]: AliasType<{
	Posicao?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_variance_order_by"]: {
	Posicao?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "atendimentos.Fluxos" */
["atendimentos_Fluxos"]: AliasType<{
Etapas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_EtapasDosFluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_EtapasDosFluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null},ValueTypes["atendimentos_EtapasDosFluxos"]],
Etapas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_EtapasDosFluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_EtapasDosFluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null},ValueTypes["atendimentos_EtapasDosFluxos_aggregate"]],
	Id?:true,
	Nome?:true,
Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["atendimentos_Fluxos_aggregate_fields"],
	nodes?:ValueTypes["atendimentos_Fluxos"],
		__typename?: true
}>;
	/** aggregate fields of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["atendimentos_Fluxos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["atendimentos_Fluxos_max_fields"],
	min?:ValueTypes["atendimentos_Fluxos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "atendimentos.Fluxos". All fields are combined with a logical 'AND'. */
["atendimentos_Fluxos_bool_exp"]: {
	Etapas?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	_and?:ValueTypes["atendimentos_Fluxos_bool_exp"][],
	_not?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null,
	_or?:ValueTypes["atendimentos_Fluxos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "atendimentos.Fluxos" */
["atendimentos_Fluxos_constraint"]:atendimentos_Fluxos_constraint;
	/** input type for inserting data into table "atendimentos.Fluxos" */
["atendimentos_Fluxos_insert_input"]: {
	Etapas?:ValueTypes["atendimentos_EtapasDosFluxos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Tickets?:ValueTypes["atendimentos_Tickets_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["atendimentos_Fluxos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["atendimentos_Fluxos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "atendimentos.Fluxos" */
["atendimentos_Fluxos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["atendimentos_Fluxos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "atendimentos.Fluxos" */
["atendimentos_Fluxos_obj_rel_insert_input"]: {
	data:ValueTypes["atendimentos_Fluxos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Fluxos_on_conflict"] | null
};
	/** on conflict condition type for table "atendimentos.Fluxos" */
["atendimentos_Fluxos_on_conflict"]: {
	constraint:ValueTypes["atendimentos_Fluxos_constraint"],
	update_columns:ValueTypes["atendimentos_Fluxos_update_column"][],
	where?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null
};
	/** Ordering options when selecting data from "atendimentos.Fluxos". */
["atendimentos_Fluxos_order_by"]: {
	Etapas_aggregate?:ValueTypes["atendimentos_EtapasDosFluxos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Tickets_aggregate?:ValueTypes["atendimentos_Tickets_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: atendimentos_Fluxos */
["atendimentos_Fluxos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_select_column"]:atendimentos_Fluxos_select_column;
	/** input type for updating data in table "atendimentos.Fluxos" */
["atendimentos_Fluxos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_update_column"]:atendimentos_Fluxos_update_column;
	/** columns and relationships of "atendimentos.Tickets" */
["atendimentos_Tickets"]: AliasType<{
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
	Cliente_Id?:true,
	CodigoReferencia?:true,
	/** An object relationship */
	Etapa?:ValueTypes["atendimentos_EtapasDosFluxos"],
	Etapa_Id?:true,
	/** An object relationship */
	Fluxo?:ValueTypes["atendimentos_Fluxos"],
	Fluxo_Id?:true,
	Id?:true,
	/** An object relationship */
	Lead?:ValueTypes["clientes_Leads"],
	Lead_Id?:true,
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas_aggregate"]],
	/** An object relationship */
	Tipo?:ValueTypes["atendimentos_TiposDeTickets"],
	Tipo_Id?:true,
	/** An object relationship */
	Usuario?:ValueTypes["autenticacao_Usuarios"],
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate"]: AliasType<{
	aggregate?:ValueTypes["atendimentos_Tickets_aggregate_fields"],
	nodes?:ValueTypes["atendimentos_Tickets"],
		__typename?: true
}>;
	/** aggregate fields of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["atendimentos_Tickets_avg_fields"],
count?: [{	columns?:ValueTypes["atendimentos_Tickets_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["atendimentos_Tickets_max_fields"],
	min?:ValueTypes["atendimentos_Tickets_min_fields"],
	stddev?:ValueTypes["atendimentos_Tickets_stddev_fields"],
	stddev_pop?:ValueTypes["atendimentos_Tickets_stddev_pop_fields"],
	stddev_samp?:ValueTypes["atendimentos_Tickets_stddev_samp_fields"],
	sum?:ValueTypes["atendimentos_Tickets_sum_fields"],
	var_pop?:ValueTypes["atendimentos_Tickets_var_pop_fields"],
	var_samp?:ValueTypes["atendimentos_Tickets_var_samp_fields"],
	variance?:ValueTypes["atendimentos_Tickets_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_order_by"]: {
	avg?:ValueTypes["atendimentos_Tickets_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["atendimentos_Tickets_max_order_by"] | null,
	min?:ValueTypes["atendimentos_Tickets_min_order_by"] | null,
	stddev?:ValueTypes["atendimentos_Tickets_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["atendimentos_Tickets_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["atendimentos_Tickets_stddev_samp_order_by"] | null,
	sum?:ValueTypes["atendimentos_Tickets_sum_order_by"] | null,
	var_pop?:ValueTypes["atendimentos_Tickets_var_pop_order_by"] | null,
	var_samp?:ValueTypes["atendimentos_Tickets_var_samp_order_by"] | null,
	variance?:ValueTypes["atendimentos_Tickets_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_arr_rel_insert_input"]: {
	data:ValueTypes["atendimentos_Tickets_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Tickets_on_conflict"] | null
};
	/** aggregate avg on columns */
["atendimentos_Tickets_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_avg_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "atendimentos.Tickets". All fields are combined with a logical 'AND'. */
["atendimentos_Tickets_bool_exp"]: {
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Cliente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Etapa?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null,
	Etapa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Fluxo?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null,
	Fluxo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Lead?:ValueTypes["clientes_Leads_bool_exp"] | null,
	Lead_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Tipo?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"] | null,
	Tipo_Id?:ValueTypes["atendimentos_TiposDeTickets_enum_comparison_exp"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null,
	Usuario_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["atendimentos_Tickets_bool_exp"][],
	_not?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	_or?:ValueTypes["atendimentos_Tickets_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "atendimentos.Tickets" */
["atendimentos_Tickets_constraint"]:atendimentos_Tickets_constraint;
	/** input type for incrementing numeric columns in table "atendimentos.Tickets" */
["atendimentos_Tickets_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "atendimentos.Tickets" */
["atendimentos_Tickets_insert_input"]: {
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	CodigoReferencia?:number | null,
	Etapa?:ValueTypes["atendimentos_EtapasDosFluxos_obj_rel_insert_input"] | null,
	Etapa_Id?:ValueTypes["uuid"] | null,
	Fluxo?:ValueTypes["atendimentos_Fluxos_obj_rel_insert_input"] | null,
	Fluxo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Lead?:ValueTypes["clientes_Leads_obj_rel_insert_input"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Propostas?:ValueTypes["comercial_Propostas_arr_rel_insert_input"] | null,
	Tipo?:ValueTypes["atendimentos_TiposDeTickets_obj_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["atendimentos_TiposDeTickets_enum"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_obj_rel_insert_input"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["atendimentos_Tickets_max_fields"]: AliasType<{
	Cliente_Id?:true,
	CodigoReferencia?:true,
	Etapa_Id?:true,
	Fluxo_Id?:true,
	Id?:true,
	Lead_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_max_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Etapa_Id?:ValueTypes["order_by"] | null,
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["atendimentos_Tickets_min_fields"]: AliasType<{
	Cliente_Id?:true,
	CodigoReferencia?:true,
	Etapa_Id?:true,
	Fluxo_Id?:true,
	Id?:true,
	Lead_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_min_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Etapa_Id?:ValueTypes["order_by"] | null,
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "atendimentos.Tickets" */
["atendimentos_Tickets_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["atendimentos_Tickets"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_obj_rel_insert_input"]: {
	data:ValueTypes["atendimentos_Tickets_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Tickets_on_conflict"] | null
};
	/** on conflict condition type for table "atendimentos.Tickets" */
["atendimentos_Tickets_on_conflict"]: {
	constraint:ValueTypes["atendimentos_Tickets_constraint"],
	update_columns:ValueTypes["atendimentos_Tickets_update_column"][],
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null
};
	/** Ordering options when selecting data from "atendimentos.Tickets". */
["atendimentos_Tickets_order_by"]: {
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Cliente_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Etapa?:ValueTypes["atendimentos_EtapasDosFluxos_order_by"] | null,
	Etapa_Id?:ValueTypes["order_by"] | null,
	Fluxo?:ValueTypes["atendimentos_Fluxos_order_by"] | null,
	Fluxo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead?:ValueTypes["clientes_Leads_order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_aggregate_order_by"] | null,
	Tipo?:ValueTypes["atendimentos_TiposDeTickets_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: atendimentos_Tickets */
["atendimentos_Tickets_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_select_column"]:atendimentos_Tickets_select_column;
	/** input type for updating data in table "atendimentos.Tickets" */
["atendimentos_Tickets_set_input"]: {
	Cliente_Id?:ValueTypes["uuid"] | null,
	CodigoReferencia?:number | null,
	Etapa_Id?:ValueTypes["uuid"] | null,
	Fluxo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Tipo_Id?:ValueTypes["atendimentos_TiposDeTickets_enum"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["atendimentos_Tickets_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["atendimentos_Tickets_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["atendimentos_Tickets_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["atendimentos_Tickets_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_sum_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** update columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_update_column"]:atendimentos_Tickets_update_column;
	/** aggregate var_pop on columns */
["atendimentos_Tickets_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["atendimentos_Tickets_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["atendimentos_Tickets_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_variance_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets"]: AliasType<{
	Comentario?:true,
Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate"]: AliasType<{
	aggregate?:ValueTypes["atendimentos_TiposDeTickets_aggregate_fields"],
	nodes?:ValueTypes["atendimentos_TiposDeTickets"],
		__typename?: true
}>;
	/** aggregate fields of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["atendimentos_TiposDeTickets_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["atendimentos_TiposDeTickets_max_fields"],
	min?:ValueTypes["atendimentos_TiposDeTickets_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "atendimentos.TiposDeTickets". All fields are combined with a logical 'AND'. */
["atendimentos_TiposDeTickets_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"][],
	_not?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"] | null,
	_or?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"][]
};
	/** unique or primary key constraints on table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_constraint"]:atendimentos_TiposDeTickets_constraint;
	["atendimentos_TiposDeTickets_enum"]:atendimentos_TiposDeTickets_enum;
	/** Boolean expression to compare columns of type "atendimentos_TiposDeTickets_enum". All fields are combined with logical 'AND'. */
["atendimentos_TiposDeTickets_enum_comparison_exp"]: {
	_eq?:ValueTypes["atendimentos_TiposDeTickets_enum"] | null,
	_in?:ValueTypes["atendimentos_TiposDeTickets_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["atendimentos_TiposDeTickets_enum"] | null,
	_nin?:ValueTypes["atendimentos_TiposDeTickets_enum"][]
};
	/** input type for inserting data into table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_insert_input"]: {
	Comentario?:string | null,
	Tickets?:ValueTypes["atendimentos_Tickets_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["atendimentos_TiposDeTickets_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["atendimentos_TiposDeTickets_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["atendimentos_TiposDeTickets"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_obj_rel_insert_input"]: {
	data:ValueTypes["atendimentos_TiposDeTickets_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_TiposDeTickets_on_conflict"] | null
};
	/** on conflict condition type for table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_on_conflict"]: {
	constraint:ValueTypes["atendimentos_TiposDeTickets_constraint"],
	update_columns:ValueTypes["atendimentos_TiposDeTickets_update_column"][],
	where?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"] | null
};
	/** Ordering options when selecting data from "atendimentos.TiposDeTickets". */
["atendimentos_TiposDeTickets_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Tickets_aggregate?:ValueTypes["atendimentos_Tickets_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: atendimentos_TiposDeTickets */
["atendimentos_TiposDeTickets_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_select_column"]:atendimentos_TiposDeTickets_select_column;
	/** input type for updating data in table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_update_column"]:atendimentos_TiposDeTickets_update_column;
	/** columns and relationships of "autenticacao.Atendentes" */
["autenticacao_Atendentes"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Usuario?:ValueTypes["autenticacao_Usuarios"],
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["autenticacao_Atendentes_aggregate_fields"],
	nodes?:ValueTypes["autenticacao_Atendentes"],
		__typename?: true
}>;
	/** aggregate fields of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["autenticacao_Atendentes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["autenticacao_Atendentes_max_fields"],
	min?:ValueTypes["autenticacao_Atendentes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "autenticacao.Atendentes". All fields are combined with a logical 'AND'. */
["autenticacao_Atendentes_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null,
	Usuario_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["autenticacao_Atendentes_bool_exp"][],
	_not?:ValueTypes["autenticacao_Atendentes_bool_exp"] | null,
	_or?:ValueTypes["autenticacao_Atendentes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "autenticacao.Atendentes" */
["autenticacao_Atendentes_constraint"]:autenticacao_Atendentes_constraint;
	/** input type for inserting data into table "autenticacao.Atendentes" */
["autenticacao_Atendentes_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_obj_rel_insert_input"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["autenticacao_Atendentes_max_fields"]: AliasType<{
	Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["autenticacao_Atendentes_min_fields"]: AliasType<{
	Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "autenticacao.Atendentes" */
["autenticacao_Atendentes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["autenticacao_Atendentes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "autenticacao.Atendentes" */
["autenticacao_Atendentes_obj_rel_insert_input"]: {
	data:ValueTypes["autenticacao_Atendentes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Atendentes_on_conflict"] | null
};
	/** on conflict condition type for table "autenticacao.Atendentes" */
["autenticacao_Atendentes_on_conflict"]: {
	constraint:ValueTypes["autenticacao_Atendentes_constraint"],
	update_columns:ValueTypes["autenticacao_Atendentes_update_column"][],
	where?:ValueTypes["autenticacao_Atendentes_bool_exp"] | null
};
	/** Ordering options when selecting data from "autenticacao.Atendentes". */
["autenticacao_Atendentes_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: autenticacao_Atendentes */
["autenticacao_Atendentes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_select_column"]:autenticacao_Atendentes_select_column;
	/** input type for updating data in table "autenticacao.Atendentes" */
["autenticacao_Atendentes_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_update_column"]:autenticacao_Atendentes_update_column;
	/** columns and relationships of "autenticacao.Usuarios" */
["autenticacao_Usuarios"]: AliasType<{
	/** An object relationship */
	Atendente?:ValueTypes["autenticacao_Atendentes"],
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
	Cliente_Id?:true,
	/** An object relationship */
	Colaborador?:ValueTypes["identidades_Colaboradores"],
	Colaborador_Id?:true,
	Email?:true,
	Id?:true,
	Senha?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate"]: AliasType<{
	aggregate?:ValueTypes["autenticacao_Usuarios_aggregate_fields"],
	nodes?:ValueTypes["autenticacao_Usuarios"],
		__typename?: true
}>;
	/** aggregate fields of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["autenticacao_Usuarios_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["autenticacao_Usuarios_max_fields"],
	min?:ValueTypes["autenticacao_Usuarios_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["autenticacao_Usuarios_max_order_by"] | null,
	min?:ValueTypes["autenticacao_Usuarios_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_arr_rel_insert_input"]: {
	data:ValueTypes["autenticacao_Usuarios_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Usuarios_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "autenticacao.Usuarios". All fields are combined with a logical 'AND'. */
["autenticacao_Usuarios_bool_exp"]: {
	Atendente?:ValueTypes["autenticacao_Atendentes_bool_exp"] | null,
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Cliente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Colaborador?:ValueTypes["identidades_Colaboradores_bool_exp"] | null,
	Colaborador_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Email?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Senha?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["autenticacao_Usuarios_bool_exp"][],
	_not?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null,
	_or?:ValueTypes["autenticacao_Usuarios_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "autenticacao.Usuarios" */
["autenticacao_Usuarios_constraint"]:autenticacao_Usuarios_constraint;
	/** input type for inserting data into table "autenticacao.Usuarios" */
["autenticacao_Usuarios_insert_input"]: {
	Atendente?:ValueTypes["autenticacao_Atendentes_obj_rel_insert_input"] | null,
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	Colaborador?:ValueTypes["identidades_Colaboradores_obj_rel_insert_input"] | null,
	Colaborador_Id?:ValueTypes["uuid"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Senha?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["autenticacao_Usuarios_max_fields"]: AliasType<{
	Cliente_Id?:true,
	Colaborador_Id?:true,
	Email?:true,
	Id?:true,
	Senha?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_max_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	Colaborador_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Senha?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["autenticacao_Usuarios_min_fields"]: AliasType<{
	Cliente_Id?:true,
	Colaborador_Id?:true,
	Email?:true,
	Id?:true,
	Senha?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_min_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	Colaborador_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Senha?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "autenticacao.Usuarios" */
["autenticacao_Usuarios_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["autenticacao_Usuarios"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_obj_rel_insert_input"]: {
	data:ValueTypes["autenticacao_Usuarios_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Usuarios_on_conflict"] | null
};
	/** on conflict condition type for table "autenticacao.Usuarios" */
["autenticacao_Usuarios_on_conflict"]: {
	constraint:ValueTypes["autenticacao_Usuarios_constraint"],
	update_columns:ValueTypes["autenticacao_Usuarios_update_column"][],
	where?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null
};
	/** Ordering options when selecting data from "autenticacao.Usuarios". */
["autenticacao_Usuarios_order_by"]: {
	Atendente?:ValueTypes["autenticacao_Atendentes_order_by"] | null,
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Cliente_Id?:ValueTypes["order_by"] | null,
	Colaborador?:ValueTypes["identidades_Colaboradores_order_by"] | null,
	Colaborador_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Senha?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: autenticacao_Usuarios */
["autenticacao_Usuarios_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_select_column"]:autenticacao_Usuarios_select_column;
	/** input type for updating data in table "autenticacao.Usuarios" */
["autenticacao_Usuarios_set_input"]: {
	Cliente_Id?:ValueTypes["uuid"] | null,
	Colaborador_Id?:ValueTypes["uuid"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Senha?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_update_column"]:autenticacao_Usuarios_update_column;
	["bigint"]:unknown;
	/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
["bigint_comparison_exp"]: {
	_eq?:ValueTypes["bigint"] | null,
	_gt?:ValueTypes["bigint"] | null,
	_gte?:ValueTypes["bigint"] | null,
	_in?:ValueTypes["bigint"][],
	_is_null?:boolean | null,
	_lt?:ValueTypes["bigint"] | null,
	_lte?:ValueTypes["bigint"] | null,
	_neq?:ValueTypes["bigint"] | null,
	_nin?:ValueTypes["bigint"][]
};
	/** columns and relationships of "clientes.Leads" */
["clientes_Leads"]: AliasType<{
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
	Cliente_Id?:true,
	Email?:true,
	Id?:true,
	Nome?:true,
PerfisComerciais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_PerfisComerciais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_PerfisComerciais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null},ValueTypes["clientes_PerfisComerciais"]],
PerfisComerciais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_PerfisComerciais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_PerfisComerciais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null},ValueTypes["clientes_PerfisComerciais_aggregate"]],
	Telefone?:true,
Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "clientes.Leads" */
["clientes_Leads_aggregate"]: AliasType<{
	aggregate?:ValueTypes["clientes_Leads_aggregate_fields"],
	nodes?:ValueTypes["clientes_Leads"],
		__typename?: true
}>;
	/** aggregate fields of "clientes.Leads" */
["clientes_Leads_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["clientes_Leads_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["clientes_Leads_max_fields"],
	min?:ValueTypes["clientes_Leads_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "clientes.Leads" */
["clientes_Leads_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["clientes_Leads_max_order_by"] | null,
	min?:ValueTypes["clientes_Leads_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "clientes.Leads" */
["clientes_Leads_arr_rel_insert_input"]: {
	data:ValueTypes["clientes_Leads_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Leads_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "clientes.Leads". All fields are combined with a logical 'AND'. */
["clientes_Leads_bool_exp"]: {
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Cliente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Email?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	PerfisComerciais?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null,
	Telefone?:ValueTypes["String_comparison_exp"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	_and?:ValueTypes["clientes_Leads_bool_exp"][],
	_not?:ValueTypes["clientes_Leads_bool_exp"] | null,
	_or?:ValueTypes["clientes_Leads_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "clientes.Leads" */
["clientes_Leads_constraint"]:clientes_Leads_constraint;
	/** input type for inserting data into table "clientes.Leads" */
["clientes_Leads_insert_input"]: {
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	PerfisComerciais?:ValueTypes["clientes_PerfisComerciais_arr_rel_insert_input"] | null,
	Telefone?:string | null,
	Tickets?:ValueTypes["atendimentos_Tickets_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["clientes_Leads_max_fields"]: AliasType<{
	Cliente_Id?:true,
	Email?:true,
	Id?:true,
	Nome?:true,
	Telefone?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "clientes.Leads" */
["clientes_Leads_max_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Telefone?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["clientes_Leads_min_fields"]: AliasType<{
	Cliente_Id?:true,
	Email?:true,
	Id?:true,
	Nome?:true,
	Telefone?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "clientes.Leads" */
["clientes_Leads_min_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Telefone?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "clientes.Leads" */
["clientes_Leads_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["clientes_Leads"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "clientes.Leads" */
["clientes_Leads_obj_rel_insert_input"]: {
	data:ValueTypes["clientes_Leads_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Leads_on_conflict"] | null
};
	/** on conflict condition type for table "clientes.Leads" */
["clientes_Leads_on_conflict"]: {
	constraint:ValueTypes["clientes_Leads_constraint"],
	update_columns:ValueTypes["clientes_Leads_update_column"][],
	where?:ValueTypes["clientes_Leads_bool_exp"] | null
};
	/** Ordering options when selecting data from "clientes.Leads". */
["clientes_Leads_order_by"]: {
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Cliente_Id?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	PerfisComerciais_aggregate?:ValueTypes["clientes_PerfisComerciais_aggregate_order_by"] | null,
	Telefone?:ValueTypes["order_by"] | null,
	Tickets_aggregate?:ValueTypes["atendimentos_Tickets_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: clientes_Leads */
["clientes_Leads_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "clientes.Leads" */
["clientes_Leads_select_column"]:clientes_Leads_select_column;
	/** input type for updating data in table "clientes.Leads" */
["clientes_Leads_set_input"]: {
	Cliente_Id?:ValueTypes["uuid"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Telefone?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "clientes.Leads" */
["clientes_Leads_update_column"]:clientes_Leads_update_column;
	/** columns and relationships of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais"]: AliasType<{
	/** An object relationship */
	GrupoDePergunta?:ValueTypes["vendas_GruposDePerguntas"],
	Grupo_Id?:true,
	Id?:true,
	/** An object relationship */
	Lead?:ValueTypes["clientes_Leads"],
	Lead_Id?:true,
	/** An object relationship */
	Pergunta?:ValueTypes["vendas_Perguntas"],
	Pergunta_Id?:true,
	Resposta?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate"]: AliasType<{
	aggregate?:ValueTypes["clientes_PerfisComerciais_aggregate_fields"],
	nodes?:ValueTypes["clientes_PerfisComerciais"],
		__typename?: true
}>;
	/** aggregate fields of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["clientes_PerfisComerciais_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["clientes_PerfisComerciais_max_fields"],
	min?:ValueTypes["clientes_PerfisComerciais_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["clientes_PerfisComerciais_max_order_by"] | null,
	min?:ValueTypes["clientes_PerfisComerciais_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_arr_rel_insert_input"]: {
	data:ValueTypes["clientes_PerfisComerciais_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_PerfisComerciais_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "clientes.PerfisComerciais". All fields are combined with a logical 'AND'. */
["clientes_PerfisComerciais_bool_exp"]: {
	GrupoDePergunta?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null,
	Grupo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Lead?:ValueTypes["clientes_Leads_bool_exp"] | null,
	Lead_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_bool_exp"] | null,
	Pergunta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Resposta?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["clientes_PerfisComerciais_bool_exp"][],
	_not?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null,
	_or?:ValueTypes["clientes_PerfisComerciais_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_constraint"]:clientes_PerfisComerciais_constraint;
	/** input type for inserting data into table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_insert_input"]: {
	GrupoDePergunta?:ValueTypes["vendas_GruposDePerguntas_obj_rel_insert_input"] | null,
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Lead?:ValueTypes["clientes_Leads_obj_rel_insert_input"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_obj_rel_insert_input"] | null,
	Pergunta_Id?:ValueTypes["uuid"] | null,
	Resposta?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["clientes_PerfisComerciais_max_fields"]: AliasType<{
	Grupo_Id?:true,
	Id?:true,
	Lead_Id?:true,
	Pergunta_Id?:true,
	Resposta?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_max_order_by"]: {
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	Resposta?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["clientes_PerfisComerciais_min_fields"]: AliasType<{
	Grupo_Id?:true,
	Id?:true,
	Lead_Id?:true,
	Pergunta_Id?:true,
	Resposta?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_min_order_by"]: {
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	Resposta?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["clientes_PerfisComerciais"],
		__typename?: true
}>;
	/** on conflict condition type for table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_on_conflict"]: {
	constraint:ValueTypes["clientes_PerfisComerciais_constraint"],
	update_columns:ValueTypes["clientes_PerfisComerciais_update_column"][],
	where?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null
};
	/** Ordering options when selecting data from "clientes.PerfisComerciais". */
["clientes_PerfisComerciais_order_by"]: {
	GrupoDePergunta?:ValueTypes["vendas_GruposDePerguntas_order_by"] | null,
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead?:ValueTypes["clientes_Leads_order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	Resposta?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: clientes_PerfisComerciais */
["clientes_PerfisComerciais_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_select_column"]:clientes_PerfisComerciais_select_column;
	/** input type for updating data in table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_set_input"]: {
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Pergunta_Id?:ValueTypes["uuid"] | null,
	Resposta?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_update_column"]:clientes_PerfisComerciais_update_column;
	/** columns and relationships of "clientes.Veiculos" */
["clientes_Veiculos"]: AliasType<{
	Apelido?:true,
	/** An object relationship */
	Categoria?:ValueTypes["CategoriasDeVeiculos"],
	Categoria_Id?:true,
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
	Cliente_Id?:true,
DadosDaApi?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	NumeroDoChassi?:true,
	Placa?:true,
PropostasInstalacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes"]],
PropostasInstalacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "clientes.Veiculos" */
["clientes_Veiculos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["clientes_Veiculos_aggregate_fields"],
	nodes?:ValueTypes["clientes_Veiculos"],
		__typename?: true
}>;
	/** aggregate fields of "clientes.Veiculos" */
["clientes_Veiculos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["clientes_Veiculos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["clientes_Veiculos_max_fields"],
	min?:ValueTypes["clientes_Veiculos_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_append_input"]: {
	DadosDaApi?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "clientes.Veiculos". All fields are combined with a logical 'AND'. */
["clientes_Veiculos_bool_exp"]: {
	Apelido?:ValueTypes["String_comparison_exp"] | null,
	Categoria?:ValueTypes["CategoriasDeVeiculos_bool_exp"] | null,
	Categoria_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Cliente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	DadosDaApi?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	NumeroDoChassi?:ValueTypes["String_comparison_exp"] | null,
	Placa?:ValueTypes["String_comparison_exp"] | null,
	PropostasInstalacoes?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null,
	_and?:ValueTypes["clientes_Veiculos_bool_exp"][],
	_not?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	_or?:ValueTypes["clientes_Veiculos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "clientes.Veiculos" */
["clientes_Veiculos_constraint"]:clientes_Veiculos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["clientes_Veiculos_delete_at_path_input"]: {
	DadosDaApi?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["clientes_Veiculos_delete_elem_input"]: {
	DadosDaApi?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["clientes_Veiculos_delete_key_input"]: {
	DadosDaApi?:string | null
};
	/** input type for inserting data into table "clientes.Veiculos" */
["clientes_Veiculos_insert_input"]: {
	Apelido?:string | null,
	Categoria?:ValueTypes["CategoriasDeVeiculos_obj_rel_insert_input"] | null,
	Categoria_Id?:ValueTypes["uuid"] | null,
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	DadosDaApi?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	NumeroDoChassi?:string | null,
	Placa?:string | null,
	PropostasInstalacoes?:ValueTypes["comercial_Propostas_Instalacoes_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["clientes_Veiculos_max_fields"]: AliasType<{
	Apelido?:true,
	Categoria_Id?:true,
	Cliente_Id?:true,
	Id?:true,
	NumeroDoChassi?:true,
	Placa?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["clientes_Veiculos_min_fields"]: AliasType<{
	Apelido?:true,
	Categoria_Id?:true,
	Cliente_Id?:true,
	Id?:true,
	NumeroDoChassi?:true,
	Placa?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "clientes.Veiculos" */
["clientes_Veiculos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["clientes_Veiculos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "clientes.Veiculos" */
["clientes_Veiculos_obj_rel_insert_input"]: {
	data:ValueTypes["clientes_Veiculos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Veiculos_on_conflict"] | null
};
	/** on conflict condition type for table "clientes.Veiculos" */
["clientes_Veiculos_on_conflict"]: {
	constraint:ValueTypes["clientes_Veiculos_constraint"],
	update_columns:ValueTypes["clientes_Veiculos_update_column"][],
	where?:ValueTypes["clientes_Veiculos_bool_exp"] | null
};
	/** Ordering options when selecting data from "clientes.Veiculos". */
["clientes_Veiculos_order_by"]: {
	Apelido?:ValueTypes["order_by"] | null,
	Categoria?:ValueTypes["CategoriasDeVeiculos_order_by"] | null,
	Categoria_Id?:ValueTypes["order_by"] | null,
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Cliente_Id?:ValueTypes["order_by"] | null,
	DadosDaApi?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	NumeroDoChassi?:ValueTypes["order_by"] | null,
	Placa?:ValueTypes["order_by"] | null,
	PropostasInstalacoes_aggregate?:ValueTypes["comercial_Propostas_Instalacoes_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: clientes_Veiculos */
["clientes_Veiculos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_prepend_input"]: {
	DadosDaApi?:ValueTypes["jsonb"] | null
};
	/** select columns of table "clientes.Veiculos" */
["clientes_Veiculos_select_column"]:clientes_Veiculos_select_column;
	/** input type for updating data in table "clientes.Veiculos" */
["clientes_Veiculos_set_input"]: {
	Apelido?:string | null,
	Categoria_Id?:ValueTypes["uuid"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	DadosDaApi?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	NumeroDoChassi?:string | null,
	Placa?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "clientes.Veiculos" */
["clientes_Veiculos_update_column"]:clientes_Veiculos_update_column;
	/** columns and relationships of "comercial.Acoes" */
["comercial_Acoes"]: AliasType<{
Etapas_Id?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Titulo?:true,
	Url?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Acoes" */
["comercial_Acoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Acoes_aggregate_fields"],
	nodes?:ValueTypes["comercial_Acoes"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Acoes" */
["comercial_Acoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Acoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Acoes_max_fields"],
	min?:ValueTypes["comercial_Acoes_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_append_input"]: {
	Etapas_Id?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Acoes". All fields are combined with a logical 'AND'. */
["comercial_Acoes_bool_exp"]: {
	Etapas_Id?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Titulo?:ValueTypes["String_comparison_exp"] | null,
	Url?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Acoes_bool_exp"][],
	_not?:ValueTypes["comercial_Acoes_bool_exp"] | null,
	_or?:ValueTypes["comercial_Acoes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Acoes" */
["comercial_Acoes_constraint"]:comercial_Acoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Acoes_delete_at_path_input"]: {
	Etapas_Id?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Acoes_delete_elem_input"]: {
	Etapas_Id?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Acoes_delete_key_input"]: {
	Etapas_Id?:string | null
};
	/** input type for inserting data into table "comercial.Acoes" */
["comercial_Acoes_insert_input"]: {
	Etapas_Id?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Titulo?:string | null,
	Url?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Acoes_max_fields"]: AliasType<{
	Id?:true,
	Titulo?:true,
	Url?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Acoes_min_fields"]: AliasType<{
	Id?:true,
	Titulo?:true,
	Url?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Acoes" */
["comercial_Acoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Acoes"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Acoes" */
["comercial_Acoes_on_conflict"]: {
	constraint:ValueTypes["comercial_Acoes_constraint"],
	update_columns:ValueTypes["comercial_Acoes_update_column"][],
	where?:ValueTypes["comercial_Acoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Acoes". */
["comercial_Acoes_order_by"]: {
	Etapas_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Titulo?:ValueTypes["order_by"] | null,
	Url?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Acoes */
["comercial_Acoes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_prepend_input"]: {
	Etapas_Id?:ValueTypes["jsonb"] | null
};
	/** select columns of table "comercial.Acoes" */
["comercial_Acoes_select_column"]:comercial_Acoes_select_column;
	/** input type for updating data in table "comercial.Acoes" */
["comercial_Acoes_set_input"]: {
	Etapas_Id?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Titulo?:string | null,
	Url?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Acoes" */
["comercial_Acoes_update_column"]:comercial_Acoes_update_column;
	/** columns and relationships of "comercial.Atributos" */
["comercial_Atributos"]: AliasType<{
	Id?:true,
	Nome?:true,
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos_aggregate"]],
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Atributos" */
["comercial_Atributos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Atributos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Atributos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Atributos" */
["comercial_Atributos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Atributos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Atributos_max_fields"],
	min?:ValueTypes["comercial_Atributos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Atributos". All fields are combined with a logical 'AND'. */
["comercial_Atributos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Produtos?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null,
	Servicos?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null,
	_and?:ValueTypes["comercial_Atributos_bool_exp"][],
	_not?:ValueTypes["comercial_Atributos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Atributos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Atributos" */
["comercial_Atributos_constraint"]:comercial_Atributos_constraint;
	/** input type for inserting data into table "comercial.Atributos" */
["comercial_Atributos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Produtos?:ValueTypes["comercial_Produtos_Atributos_arr_rel_insert_input"] | null,
	Servicos?:ValueTypes["comercial_Servicos_Atributos_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Atributos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Atributos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Atributos" */
["comercial_Atributos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Atributos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Atributos" */
["comercial_Atributos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Atributos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Atributos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Atributos" */
["comercial_Atributos_on_conflict"]: {
	constraint:ValueTypes["comercial_Atributos_constraint"],
	update_columns:ValueTypes["comercial_Atributos_update_column"][],
	where?:ValueTypes["comercial_Atributos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Atributos". */
["comercial_Atributos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produtos_aggregate?:ValueTypes["comercial_Produtos_Atributos_aggregate_order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Servicos_Atributos_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Atributos */
["comercial_Atributos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Atributos" */
["comercial_Atributos_select_column"]:comercial_Atributos_select_column;
	/** input type for updating data in table "comercial.Atributos" */
["comercial_Atributos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Atributos" */
["comercial_Atributos_update_column"]:comercial_Atributos_update_column;
	/** columns and relationships of "comercial.Coberturas" */
["comercial_Coberturas"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Coberturas" */
["comercial_Coberturas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Coberturas_aggregate_fields"],
	nodes?:ValueTypes["comercial_Coberturas"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Coberturas" */
["comercial_Coberturas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Coberturas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Coberturas_max_fields"],
	min?:ValueTypes["comercial_Coberturas_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Coberturas". All fields are combined with a logical 'AND'. */
["comercial_Coberturas_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Coberturas_bool_exp"][],
	_not?:ValueTypes["comercial_Coberturas_bool_exp"] | null,
	_or?:ValueTypes["comercial_Coberturas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Coberturas" */
["comercial_Coberturas_constraint"]:comercial_Coberturas_constraint;
	/** input type for inserting data into table "comercial.Coberturas" */
["comercial_Coberturas_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Coberturas_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Coberturas_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Coberturas" */
["comercial_Coberturas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Coberturas"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Coberturas" */
["comercial_Coberturas_on_conflict"]: {
	constraint:ValueTypes["comercial_Coberturas_constraint"],
	update_columns:ValueTypes["comercial_Coberturas_update_column"][],
	where?:ValueTypes["comercial_Coberturas_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Coberturas". */
["comercial_Coberturas_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Coberturas */
["comercial_Coberturas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Coberturas" */
["comercial_Coberturas_select_column"]:comercial_Coberturas_select_column;
	/** input type for updating data in table "comercial.Coberturas" */
["comercial_Coberturas_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Coberturas" */
["comercial_Coberturas_update_column"]:comercial_Coberturas_update_column;
	/** columns and relationships of "comercial.Combos" */
["comercial_Combos"]: AliasType<{
ComboPai?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos"]],
ComboPai_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos_aggregate"]],
Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos"]],
Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos_aggregate"]],
	Id?:true,
	Nome?:true,
OportunidadesDeProdutos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades"]],
OportunidadesDeProdutos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades_aggregate"]],
OportunidadesDeServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades"]],
OportunidadesDeServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades_aggregate"]],
Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos"]],
Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos_aggregate"]],
Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null},ValueTypes["comercial_Combos_Precos"]],
Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null},ValueTypes["comercial_Combos_Precos_aggregate"]],
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos_aggregate"]],
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos_aggregate"]],
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Combos_Combos" */
["comercial_Combos_Combos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	/** An object relationship */
	ComboPertencente?:ValueTypes["comercial_Combos"],
	ComboPertencente_Id?:true,
	Combo_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_Combos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos_Combos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Combos_Combos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Combos_Combos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_Combos_max_fields"],
	min?:ValueTypes["comercial_Combos_Combos_min_fields"],
	stddev?:ValueTypes["comercial_Combos_Combos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Combos_Combos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Combos_Combos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Combos_Combos_sum_fields"],
	var_pop?:ValueTypes["comercial_Combos_Combos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Combos_Combos_var_samp_fields"],
	variance?:ValueTypes["comercial_Combos_Combos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Combos_Combos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Combos_Combos_max_order_by"] | null,
	min?:ValueTypes["comercial_Combos_Combos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Combos_Combos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Combos_Combos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Combos_Combos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Combos_Combos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Combos_Combos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Combos_Combos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Combos_Combos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Combos_Combos" */
["comercial_Combos_Combos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Combos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Combos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Combos_Combos_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Combos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	ComboPertencente?:ValueTypes["comercial_Combos_bool_exp"] | null,
	ComboPertencente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Combos_Combos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_Combos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos_Combos" */
["comercial_Combos_Combos_constraint"]:comercial_Combos_Combos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Combos_Combos" */
["comercial_Combos_Combos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	ComboPertencente?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	ComboPertencente_Id?:ValueTypes["uuid"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_Combos_max_fields"]: AliasType<{
	ComboPertencente_Id?:true,
	Combo_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_max_order_by"]: {
	ComboPertencente_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Combos_Combos_min_fields"]: AliasType<{
	ComboPertencente_Id?:true,
	Combo_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_min_order_by"]: {
	ComboPertencente_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Combos_Combos" */
["comercial_Combos_Combos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos_Combos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Combos_Combos" */
["comercial_Combos_Combos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_Combos_constraint"],
	update_columns:ValueTypes["comercial_Combos_Combos_update_column"][],
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos_Combos". */
["comercial_Combos_Combos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	ComboPertencente?:ValueTypes["comercial_Combos_order_by"] | null,
	ComboPertencente_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos_Combos */
["comercial_Combos_Combos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_select_column"]:comercial_Combos_Combos_select_column;
	/** input type for updating data in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_set_input"]: {
	ComboPertencente_Id?:ValueTypes["uuid"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Combos_Combos_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Combos_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Combos_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Combos_Combos_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_update_column"]:comercial_Combos_Combos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Combos_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Combos_Combos_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Combos_Combos_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Combos_Planos" */
["comercial_Combos_Planos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
	/** An object relationship */
	Plano?:ValueTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco?:ValueTypes["comercial_Planos_Precos"],
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_Planos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos_Planos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Combos_Planos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Combos_Planos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_Planos_max_fields"],
	min?:ValueTypes["comercial_Combos_Planos_min_fields"],
	stddev?:ValueTypes["comercial_Combos_Planos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Combos_Planos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Combos_Planos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Combos_Planos_sum_fields"],
	var_pop?:ValueTypes["comercial_Combos_Planos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Combos_Planos_var_samp_fields"],
	variance?:ValueTypes["comercial_Combos_Planos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Combos_Planos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Combos_Planos_max_order_by"] | null,
	min?:ValueTypes["comercial_Combos_Planos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Combos_Planos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Combos_Planos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Combos_Planos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Combos_Planos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Combos_Planos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Combos_Planos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Combos_Planos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Combos_Planos" */
["comercial_Combos_Planos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Planos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Planos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Combos_Planos_avg_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_avg_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Planos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Planos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano?:ValueTypes["comercial_Planos_bool_exp"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null,
	PlanoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano_Id?:ValueTypes["uuid_comparison_exp"] | null,
	ValorPraticado?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Combos_Planos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_Planos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos_Planos" */
["comercial_Combos_Planos_constraint"]:comercial_Combos_Planos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_inc_input"]: {
	ValorPraticado?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Combos_Planos" */
["comercial_Combos_Planos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Plano?:ValueTypes["comercial_Planos_obj_rel_insert_input"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_obj_rel_insert_input"] | null,
	PlanoPreco_Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_Planos_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Combos_Planos_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Combos_Planos" */
["comercial_Combos_Planos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos_Planos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Combos_Planos" */
["comercial_Combos_Planos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_Planos_constraint"],
	update_columns:ValueTypes["comercial_Combos_Planos_update_column"][],
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos_Planos". */
["comercial_Combos_Planos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Plano?:ValueTypes["comercial_Planos_order_by"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos_Planos */
["comercial_Combos_Planos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_select_column"]:comercial_Combos_Planos_select_column;
	/** input type for updating data in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	PlanoPreco_Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Combos_Planos_stddev_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Planos_stddev_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Planos_stddev_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Combos_Planos_sum_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_sum_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_update_column"]:comercial_Combos_Planos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Planos_var_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Combos_Planos_var_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Combos_Planos_variance_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_variance_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Combos_Precos" */
["comercial_Combos_Precos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
PropostasCombos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos"]],
PropostasCombos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos_aggregate"]],
	ValorBase?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_Precos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos_Precos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Combos_Precos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Combos_Precos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_Precos_max_fields"],
	min?:ValueTypes["comercial_Combos_Precos_min_fields"],
	stddev?:ValueTypes["comercial_Combos_Precos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Combos_Precos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Combos_Precos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Combos_Precos_sum_fields"],
	var_pop?:ValueTypes["comercial_Combos_Precos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Combos_Precos_var_samp_fields"],
	variance?:ValueTypes["comercial_Combos_Precos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Combos_Precos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Combos_Precos_max_order_by"] | null,
	min?:ValueTypes["comercial_Combos_Precos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Combos_Precos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Combos_Precos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Combos_Precos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Combos_Precos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Combos_Precos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Combos_Precos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Combos_Precos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Precos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Precos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Combos_Precos_avg_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_avg_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Precos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	PropostasCombos?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null,
	ValorBase?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Combos_Precos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_Precos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos_Precos" */
["comercial_Combos_Precos_constraint"]:comercial_Combos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_inc_input"]: {
	ValorBase?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Combos_Precos" */
["comercial_Combos_Precos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	PropostasCombos?:ValueTypes["comercial_Propostas_Combos_arr_rel_insert_input"] | null,
	ValorBase?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_Precos_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ValorBase?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Combos_Precos_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ValorBase?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Combos_Precos" */
["comercial_Combos_Precos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos_Precos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Precos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Combos_Precos" */
["comercial_Combos_Precos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_Precos_constraint"],
	update_columns:ValueTypes["comercial_Combos_Precos_update_column"][],
	where?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos_Precos". */
["comercial_Combos_Precos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PropostasCombos_aggregate?:ValueTypes["comercial_Propostas_Combos_aggregate_order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos_Precos */
["comercial_Combos_Precos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_select_column"]:comercial_Combos_Precos_select_column;
	/** input type for updating data in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	ValorBase?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Combos_Precos_stddev_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Precos_stddev_pop_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_pop_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Precos_stddev_samp_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_samp_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Combos_Precos_sum_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_sum_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_update_column"]:comercial_Combos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Precos_var_pop_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_pop_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Combos_Precos_var_samp_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_samp_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Combos_Precos_variance_fields"]: AliasType<{
	ValorBase?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_variance_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Combos_Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Combos_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_Produtos_max_fields"],
	min?:ValueTypes["comercial_Combos_Produtos_min_fields"],
	stddev?:ValueTypes["comercial_Combos_Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Combos_Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Combos_Produtos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Combos_Produtos_sum_fields"],
	var_pop?:ValueTypes["comercial_Combos_Produtos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Combos_Produtos_var_samp_fields"],
	variance?:ValueTypes["comercial_Combos_Produtos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Combos_Produtos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Combos_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Combos_Produtos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Combos_Produtos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Combos_Produtos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Combos_Produtos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Combos_Produtos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Combos_Produtos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Combos_Produtos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Combos_Produtos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Produtos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Combos_Produtos_avg_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_avg_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Produtos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	ValorPraticado?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Combos_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_constraint"]:comercial_Combos_Produtos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_inc_input"]: {
	ValorPraticado?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_Produtos_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Combos_Produtos_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Combos_Produtos_update_column"][],
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos_Produtos". */
["comercial_Combos_Produtos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos_Produtos */
["comercial_Combos_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_select_column"]:comercial_Combos_Produtos_select_column;
	/** input type for updating data in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Combos_Produtos_stddev_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Produtos_stddev_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Produtos_stddev_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Combos_Produtos_sum_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_sum_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_update_column"]:comercial_Combos_Produtos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Produtos_var_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Combos_Produtos_var_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Combos_Produtos_variance_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_variance_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	ServicoPreco_Id?:true,
	Servico_Id?:true,
	/** An object relationship */
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos"],
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Combos_Servicos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Combos_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_Servicos_max_fields"],
	min?:ValueTypes["comercial_Combos_Servicos_min_fields"],
	stddev?:ValueTypes["comercial_Combos_Servicos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Combos_Servicos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Combos_Servicos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Combos_Servicos_sum_fields"],
	var_pop?:ValueTypes["comercial_Combos_Servicos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Combos_Servicos_var_samp_fields"],
	variance?:ValueTypes["comercial_Combos_Servicos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Combos_Servicos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Combos_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Combos_Servicos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Combos_Servicos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Combos_Servicos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Combos_Servicos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Combos_Servicos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Combos_Servicos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Combos_Servicos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Combos_Servicos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Servicos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Combos_Servicos_avg_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_avg_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Servicos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	ServicoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null,
	ValorPraticado?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Combos_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_constraint"]:comercial_Combos_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_inc_input"]: {
	ValorPraticado?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	ServicoPreco_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_Servicos_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ServicoPreco_Id?:true,
	Servico_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Combos_Servicos_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	ServicoPreco_Id?:true,
	Servico_Id?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos_Servicos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Combos_Servicos_update_column"][],
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos_Servicos". */
["comercial_Combos_Servicos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos_Servicos */
["comercial_Combos_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_select_column"]:comercial_Combos_Servicos_select_column;
	/** input type for updating data in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	ServicoPreco_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Combos_Servicos_stddev_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Servicos_stddev_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Servicos_stddev_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Combos_Servicos_sum_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_sum_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_update_column"]:comercial_Combos_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Servicos_var_pop_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_pop_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Combos_Servicos_var_samp_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_samp_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Combos_Servicos_variance_fields"]: AliasType<{
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_variance_order_by"]: {
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregated selection of "comercial.Combos" */
["comercial_Combos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Combos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Combos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Combos" */
["comercial_Combos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Combos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Combos_max_fields"],
	min?:ValueTypes["comercial_Combos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_bool_exp"]: {
	ComboPai?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null,
	Combos?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	OportunidadesDeProdutos?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null,
	OportunidadesDeServicos?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null,
	Planos?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null,
	Precos?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null,
	Produtos?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null,
	Servicos?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null,
	_and?:ValueTypes["comercial_Combos_bool_exp"][],
	_not?:ValueTypes["comercial_Combos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Combos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Combos" */
["comercial_Combos_constraint"]:comercial_Combos_constraint;
	/** input type for inserting data into table "comercial.Combos" */
["comercial_Combos_insert_input"]: {
	ComboPai?:ValueTypes["comercial_Combos_Combos_arr_rel_insert_input"] | null,
	Combos?:ValueTypes["comercial_Combos_Combos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	OportunidadesDeProdutos?:ValueTypes["comercial_Produtos_Oportunidades_arr_rel_insert_input"] | null,
	OportunidadesDeServicos?:ValueTypes["comercial_Servicos_Oportunidades_arr_rel_insert_input"] | null,
	Planos?:ValueTypes["comercial_Combos_Planos_arr_rel_insert_input"] | null,
	Precos?:ValueTypes["comercial_Combos_Precos_arr_rel_insert_input"] | null,
	Produtos?:ValueTypes["comercial_Combos_Produtos_arr_rel_insert_input"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Combos_arr_rel_insert_input"] | null,
	Servicos?:ValueTypes["comercial_Combos_Servicos_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Combos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Combos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Combos" */
["comercial_Combos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Combos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Combos" */
["comercial_Combos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Combos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Combos" */
["comercial_Combos_on_conflict"]: {
	constraint:ValueTypes["comercial_Combos_constraint"],
	update_columns:ValueTypes["comercial_Combos_update_column"][],
	where?:ValueTypes["comercial_Combos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Combos". */
["comercial_Combos_order_by"]: {
	ComboPai_aggregate?:ValueTypes["comercial_Combos_Combos_aggregate_order_by"] | null,
	Combos_aggregate?:ValueTypes["comercial_Combos_Combos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	OportunidadesDeProdutos_aggregate?:ValueTypes["comercial_Produtos_Oportunidades_aggregate_order_by"] | null,
	OportunidadesDeServicos_aggregate?:ValueTypes["comercial_Servicos_Oportunidades_aggregate_order_by"] | null,
	Planos_aggregate?:ValueTypes["comercial_Combos_Planos_aggregate_order_by"] | null,
	Precos_aggregate?:ValueTypes["comercial_Combos_Precos_aggregate_order_by"] | null,
	Produtos_aggregate?:ValueTypes["comercial_Combos_Produtos_aggregate_order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_Combos_aggregate_order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Combos_Servicos_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Combos */
["comercial_Combos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Combos" */
["comercial_Combos_select_column"]:comercial_Combos_select_column;
	/** input type for updating data in table "comercial.Combos" */
["comercial_Combos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Combos" */
["comercial_Combos_update_column"]:comercial_Combos_update_column;
	/** columns and relationships of "comercial.Condicionais" */
["comercial_Condicionais"]: AliasType<{
	Id?:true,
	Nome?:true,
Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais"]],
Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais_aggregate"]],
	/** An object relationship */
	Situacao?:ValueTypes["comercial_CondicionaisSituacoes"],
	Situacao_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes"]: AliasType<{
	Comentario?:true,
Condicionais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Condicionais_bool_exp"] | null},ValueTypes["comercial_Condicionais"]],
Condicionais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Condicionais_bool_exp"] | null},ValueTypes["comercial_Condicionais_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_CondicionaisSituacoes_aggregate_fields"],
	nodes?:ValueTypes["comercial_CondicionaisSituacoes"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_CondicionaisSituacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_CondicionaisSituacoes_max_fields"],
	min?:ValueTypes["comercial_CondicionaisSituacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.CondicionaisSituacoes". All fields are combined with a logical 'AND'. */
["comercial_CondicionaisSituacoes_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Condicionais?:ValueTypes["comercial_Condicionais_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"][],
	_not?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"] | null,
	_or?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_constraint"]:comercial_CondicionaisSituacoes_constraint;
	["comercial_CondicionaisSituacoes_enum"]:comercial_CondicionaisSituacoes_enum;
	/** Boolean expression to compare columns of type "comercial_CondicionaisSituacoes_enum". All fields are combined with logical 'AND'. */
["comercial_CondicionaisSituacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["comercial_CondicionaisSituacoes_enum"] | null,
	_in?:ValueTypes["comercial_CondicionaisSituacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["comercial_CondicionaisSituacoes_enum"] | null,
	_nin?:ValueTypes["comercial_CondicionaisSituacoes_enum"][]
};
	/** input type for inserting data into table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_insert_input"]: {
	Comentario?:string | null,
	Condicionais?:ValueTypes["comercial_Condicionais_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["comercial_CondicionaisSituacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_CondicionaisSituacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_CondicionaisSituacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_CondicionaisSituacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_CondicionaisSituacoes_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_on_conflict"]: {
	constraint:ValueTypes["comercial_CondicionaisSituacoes_constraint"],
	update_columns:ValueTypes["comercial_CondicionaisSituacoes_update_column"][],
	where?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.CondicionaisSituacoes". */
["comercial_CondicionaisSituacoes_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Condicionais_aggregate?:ValueTypes["comercial_Condicionais_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_CondicionaisSituacoes */
["comercial_CondicionaisSituacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_select_column"]:comercial_CondicionaisSituacoes_select_column;
	/** input type for updating data in table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_update_column"]:comercial_CondicionaisSituacoes_update_column;
	/** aggregated selection of "comercial.Condicionais" */
["comercial_Condicionais_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Condicionais_aggregate_fields"],
	nodes?:ValueTypes["comercial_Condicionais"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Condicionais" */
["comercial_Condicionais_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Condicionais_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Condicionais_max_fields"],
	min?:ValueTypes["comercial_Condicionais_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Condicionais" */
["comercial_Condicionais_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Condicionais_max_order_by"] | null,
	min?:ValueTypes["comercial_Condicionais_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Condicionais_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Condicionais_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Condicionais_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Planos?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null,
	Situacao?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["comercial_CondicionaisSituacoes_enum_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Condicionais_bool_exp"][],
	_not?:ValueTypes["comercial_Condicionais_bool_exp"] | null,
	_or?:ValueTypes["comercial_Condicionais_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Condicionais" */
["comercial_Condicionais_constraint"]:comercial_Condicionais_constraint;
	/** input type for inserting data into table "comercial.Condicionais" */
["comercial_Condicionais_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Planos?:ValueTypes["comercial_Planos_Condicionais_arr_rel_insert_input"] | null,
	Situacao?:ValueTypes["comercial_CondicionaisSituacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["comercial_CondicionaisSituacoes_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Condicionais_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Condicionais_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Condicionais" */
["comercial_Condicionais_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Condicionais"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Condicionais_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Condicionais_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Condicionais" */
["comercial_Condicionais_on_conflict"]: {
	constraint:ValueTypes["comercial_Condicionais_constraint"],
	update_columns:ValueTypes["comercial_Condicionais_update_column"][],
	where?:ValueTypes["comercial_Condicionais_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Condicionais". */
["comercial_Condicionais_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Planos_aggregate?:ValueTypes["comercial_Planos_Condicionais_aggregate_order_by"] | null,
	Situacao?:ValueTypes["comercial_CondicionaisSituacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Condicionais */
["comercial_Condicionais_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Condicionais" */
["comercial_Condicionais_select_column"]:comercial_Condicionais_select_column;
	/** input type for updating data in table "comercial.Condicionais" */
["comercial_Condicionais_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Situacao_Id?:ValueTypes["comercial_CondicionaisSituacoes_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Condicionais" */
["comercial_Condicionais_update_column"]:comercial_Condicionais_update_column;
	/** columns and relationships of "comercial.ContratosBase" */
["comercial_ContratosBase"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Nome?:true,
	/** An object relationship */
	Parceiro?:ValueTypes["comercial_Fornecedores"],
	Parceiro_Id?:true,
Versoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_Versoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_Versoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null},ValueTypes["comercial_ContratosBase_Versoes"]],
Versoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_Versoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_Versoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null},ValueTypes["comercial_ContratosBase_Versoes_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes"]: AliasType<{
	/** An object relationship */
	ContratoBase?:ValueTypes["comercial_ContratosBase"],
	ContratoBase_Id?:true,
	Id?:true,
	Versao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_ContratosBase_Versoes_aggregate_fields"],
	nodes?:ValueTypes["comercial_ContratosBase_Versoes"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_ContratosBase_Versoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_ContratosBase_Versoes_max_fields"],
	min?:ValueTypes["comercial_ContratosBase_Versoes_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_ContratosBase_Versoes_max_order_by"] | null,
	min?:ValueTypes["comercial_ContratosBase_Versoes_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_ContratosBase_Versoes_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_Versoes_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.ContratosBase_Versoes". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_Versoes_bool_exp"]: {
	ContratoBase?:ValueTypes["comercial_ContratosBase_bool_exp"] | null,
	ContratoBase_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Versao?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"][],
	_not?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null,
	_or?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_constraint"]:comercial_ContratosBase_Versoes_constraint;
	/** input type for inserting data into table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_insert_input"]: {
	ContratoBase?:ValueTypes["comercial_ContratosBase_obj_rel_insert_input"] | null,
	ContratoBase_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Versao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_ContratosBase_Versoes_max_fields"]: AliasType<{
	ContratoBase_Id?:true,
	Id?:true,
	Versao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_max_order_by"]: {
	ContratoBase_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Versao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_ContratosBase_Versoes_min_fields"]: AliasType<{
	ContratoBase_Id?:true,
	Id?:true,
	Versao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_min_order_by"]: {
	ContratoBase_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Versao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_ContratosBase_Versoes"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_on_conflict"]: {
	constraint:ValueTypes["comercial_ContratosBase_Versoes_constraint"],
	update_columns:ValueTypes["comercial_ContratosBase_Versoes_update_column"][],
	where?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.ContratosBase_Versoes". */
["comercial_ContratosBase_Versoes_order_by"]: {
	ContratoBase?:ValueTypes["comercial_ContratosBase_order_by"] | null,
	ContratoBase_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Versao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_ContratosBase_Versoes */
["comercial_ContratosBase_Versoes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_select_column"]:comercial_ContratosBase_Versoes_select_column;
	/** input type for updating data in table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_set_input"]: {
	ContratoBase_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Versao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_update_column"]:comercial_ContratosBase_Versoes_update_column;
	/** aggregated selection of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_ContratosBase_aggregate_fields"],
	nodes?:ValueTypes["comercial_ContratosBase"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_ContratosBase_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_ContratosBase_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_ContratosBase_max_fields"],
	min?:ValueTypes["comercial_ContratosBase_min_fields"],
	stddev?:ValueTypes["comercial_ContratosBase_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_ContratosBase_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_ContratosBase_stddev_samp_fields"],
	sum?:ValueTypes["comercial_ContratosBase_sum_fields"],
	var_pop?:ValueTypes["comercial_ContratosBase_var_pop_fields"],
	var_samp?:ValueTypes["comercial_ContratosBase_var_samp_fields"],
	variance?:ValueTypes["comercial_ContratosBase_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_ContratosBase_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_ContratosBase_max_order_by"] | null,
	min?:ValueTypes["comercial_ContratosBase_min_order_by"] | null,
	stddev?:ValueTypes["comercial_ContratosBase_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_ContratosBase_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_ContratosBase_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_ContratosBase_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_ContratosBase_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_ContratosBase_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_ContratosBase_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_ContratosBase_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_ContratosBase_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_avg_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.ContratosBase". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_bool_exp"]: {
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Parceiro?:ValueTypes["comercial_Fornecedores_bool_exp"] | null,
	Parceiro_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Versoes?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null,
	_and?:ValueTypes["comercial_ContratosBase_bool_exp"][],
	_not?:ValueTypes["comercial_ContratosBase_bool_exp"] | null,
	_or?:ValueTypes["comercial_ContratosBase_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.ContratosBase" */
["comercial_ContratosBase_constraint"]:comercial_ContratosBase_constraint;
	/** input type for incrementing numeric columns in table "comercial.ContratosBase" */
["comercial_ContratosBase_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "comercial.ContratosBase" */
["comercial_ContratosBase_insert_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Parceiro?:ValueTypes["comercial_Fornecedores_obj_rel_insert_input"] | null,
	Parceiro_Id?:ValueTypes["uuid"] | null,
	Versoes?:ValueTypes["comercial_ContratosBase_Versoes_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_ContratosBase_max_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Nome?:true,
	Parceiro_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_max_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Parceiro_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_ContratosBase_min_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Nome?:true,
	Parceiro_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_min_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Parceiro_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.ContratosBase" */
["comercial_ContratosBase_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_ContratosBase"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_ContratosBase_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.ContratosBase" */
["comercial_ContratosBase_on_conflict"]: {
	constraint:ValueTypes["comercial_ContratosBase_constraint"],
	update_columns:ValueTypes["comercial_ContratosBase_update_column"][],
	where?:ValueTypes["comercial_ContratosBase_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.ContratosBase". */
["comercial_ContratosBase_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Parceiro?:ValueTypes["comercial_Fornecedores_order_by"] | null,
	Parceiro_Id?:ValueTypes["order_by"] | null,
	Versoes_aggregate?:ValueTypes["comercial_ContratosBase_Versoes_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_ContratosBase */
["comercial_ContratosBase_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_select_column"]:comercial_ContratosBase_select_column;
	/** input type for updating data in table "comercial.ContratosBase" */
["comercial_ContratosBase_set_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Parceiro_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_ContratosBase_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_ContratosBase_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_ContratosBase_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_ContratosBase_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_sum_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_update_column"]:comercial_ContratosBase_update_column;
	/** aggregate var_pop on columns */
["comercial_ContratosBase_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_ContratosBase_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_ContratosBase_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_variance_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Fornecedores" */
["comercial_Fornecedores"]: AliasType<{
ContratosBases?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_bool_exp"] | null},ValueTypes["comercial_ContratosBase"]],
ContratosBases_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_bool_exp"] | null},ValueTypes["comercial_ContratosBase_aggregate"]],
	Id?:true,
	Nome?:true,
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_aggregate"]],
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos"]: AliasType<{
	/** An object relationship */
	Fornecedor?:ValueTypes["comercial_Fornecedores"],
	Fornecedor_Id?:true,
	Id?:true,
Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos_aggregate"]],
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos"]: AliasType<{
CombosProdutos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos"]],
CombosProdutos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos_aggregate"]],
	Fornecedor_Produto_Id?:true,
	/** An object relationship */
	Fornecedores_Produto?:ValueTypes["comercial_Fornecedores_Produtos"],
	Id?:true,
PropostasProdutos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos"]],
PropostasProdutos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos_aggregate"]],
	/** An object relationship */
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_Produtos_Precos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores_Produtos_Precos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Fornecedores_Produtos_Precos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Fornecedores_Produtos_Precos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_Produtos_Precos_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_Produtos_Precos_min_fields"],
	stddev?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Fornecedores_Produtos_Precos_sum_fields"],
	var_pop?:ValueTypes["comercial_Fornecedores_Produtos_Precos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Fornecedores_Produtos_Precos_var_samp_fields"],
	variance?:ValueTypes["comercial_Fornecedores_Produtos_Precos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Fornecedores_Produtos_Precos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Fornecedores_Produtos_Precos_max_order_by"] | null,
	min?:ValueTypes["comercial_Fornecedores_Produtos_Precos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Fornecedores_Produtos_Precos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Fornecedores_Produtos_Precos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Produtos_Precos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Produtos_Precos_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_Precos_bool_exp"]: {
	CombosProdutos?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null,
	Fornecedor_Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Fornecedores_Produto?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	PropostasProdutos?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_constraint"]:comercial_Fornecedores_Produtos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_insert_input"]: {
	CombosProdutos?:ValueTypes["comercial_Combos_Produtos_arr_rel_insert_input"] | null,
	Fornecedor_Produto_Id?:ValueTypes["uuid"] | null,
	Fornecedores_Produto?:ValueTypes["comercial_Fornecedores_Produtos_obj_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	PropostasProdutos?:ValueTypes["comercial_Propostas_Produtos_arr_rel_insert_input"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_Precos_max_fields"]: AliasType<{
	Fornecedor_Produto_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_max_order_by"]: {
	Fornecedor_Produto_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_Precos_min_fields"]: AliasType<{
	Fornecedor_Produto_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_min_order_by"]: {
	Fornecedor_Produto_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores_Produtos_Precos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Produtos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_Produtos_Precos_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_Produtos_Precos_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos_Precos". */
["comercial_Fornecedores_Produtos_Precos_order_by"]: {
	CombosProdutos_aggregate?:ValueTypes["comercial_Combos_Produtos_aggregate_order_by"] | null,
	Fornecedor_Produto_Id?:ValueTypes["order_by"] | null,
	Fornecedores_Produto?:ValueTypes["comercial_Fornecedores_Produtos_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PropostasProdutos_aggregate?:ValueTypes["comercial_Propostas_Produtos_aggregate_order_by"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_order_by"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores_Produtos_Precos */
["comercial_Fornecedores_Produtos_Precos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_select_column"]:comercial_Fornecedores_Produtos_Precos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_set_input"]: {
	Fornecedor_Produto_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Produtos_Precos_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_update_column"]:comercial_Fornecedores_Produtos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Produtos_Precos_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Produtos_Precos_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Produtos_Precos_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregated selection of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_Produtos_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_Produtos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Fornecedores_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Fornecedores_Produtos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_bool_exp"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_bool_exp"] | null,
	Fornecedor_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Precos?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_constraint"]:comercial_Fornecedores_Produtos_constraint;
	/** input type for inserting data into table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_insert_input"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_obj_rel_insert_input"] | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Precos?:ValueTypes["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_max_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_max_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_min_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_min_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores_Produtos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_Produtos_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos". */
["comercial_Fornecedores_Produtos_order_by"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_order_by"] | null,
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Precos_aggregate?:ValueTypes["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores_Produtos */
["comercial_Fornecedores_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_select_column"]:comercial_Fornecedores_Produtos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_set_input"]: {
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_update_column"]:comercial_Fornecedores_Produtos_update_column;
	/** columns and relationships of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos"]: AliasType<{
	/** An object relationship */
	Fornecedor?:ValueTypes["comercial_Fornecedores"],
	Fornecedor_Id?:true,
	Id?:true,
Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos_aggregate"]],
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
Tarifas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
Tarifas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos"]: AliasType<{
CombosServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos"]],
CombosServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos_aggregate"]],
	Fornecedor_Servico_Id?:true,
	/** An object relationship */
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos"],
	Id?:true,
PropostasServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos"]],
PropostasServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos_aggregate"]],
	/** An object relationship */
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_Servicos_Precos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores_Servicos_Precos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Fornecedores_Servicos_Precos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Fornecedores_Servicos_Precos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_Servicos_Precos_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_Servicos_Precos_min_fields"],
	stddev?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Fornecedores_Servicos_Precos_sum_fields"],
	var_pop?:ValueTypes["comercial_Fornecedores_Servicos_Precos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Fornecedores_Servicos_Precos_var_samp_fields"],
	variance?:ValueTypes["comercial_Fornecedores_Servicos_Precos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Fornecedores_Servicos_Precos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Fornecedores_Servicos_Precos_max_order_by"] | null,
	min?:ValueTypes["comercial_Fornecedores_Servicos_Precos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Fornecedores_Servicos_Precos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Fornecedores_Servicos_Precos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Servicos_Precos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Precos_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Precos_bool_exp"]: {
	CombosServicos?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null,
	Fornecedor_Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	PropostasServicos?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_constraint"]:comercial_Fornecedores_Servicos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_insert_input"]: {
	CombosServicos?:ValueTypes["comercial_Combos_Servicos_arr_rel_insert_input"] | null,
	Fornecedor_Servico_Id?:ValueTypes["uuid"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_obj_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	PropostasServicos?:ValueTypes["comercial_Propostas_Servicos_arr_rel_insert_input"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Precos_max_fields"]: AliasType<{
	Fornecedor_Servico_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_max_order_by"]: {
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Precos_min_fields"]: AliasType<{
	Fornecedor_Servico_Id?:true,
	Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_min_order_by"]: {
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores_Servicos_Precos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Servicos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_Servicos_Precos_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_Servicos_Precos_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Precos". */
["comercial_Fornecedores_Servicos_Precos_order_by"]: {
	CombosServicos_aggregate?:ValueTypes["comercial_Combos_Servicos_aggregate_order_by"] | null,
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PropostasServicos_aggregate?:ValueTypes["comercial_Propostas_Servicos_aggregate_order_by"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_order_by"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Precos */
["comercial_Fornecedores_Servicos_Precos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_select_column"]:comercial_Fornecedores_Servicos_Precos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_set_input"]: {
	Fornecedor_Servico_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Precos_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_update_column"]:comercial_Fornecedores_Servicos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Precos_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Precos_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Precos_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas"]: AliasType<{
	Fornecedor_Servico_Id?:true,
	/** An object relationship */
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos"],
	Id?:true,
	/** An object relationship */
	Tarifa?:ValueTypes["comercial_Tarifas"],
	Tarifa_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_min_fields"],
	stddev?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_sum_fields"],
	var_pop?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"],
	variance?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_max_order_by"] | null,
	min?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Tarifas_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]: {
	Fornecedor_Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_bool_exp"] | null,
	Tarifa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_constraint"]:comercial_Fornecedores_Servicos_Tarifas_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_insert_input"]: {
	Fornecedor_Servico_Id?:ValueTypes["uuid"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_obj_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_obj_rel_insert_input"] | null,
	Tarifa_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Tarifas_max_fields"]: AliasType<{
	Fornecedor_Servico_Id?:true,
	Id?:true,
	Tarifa_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_max_order_by"]: {
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Tarifas_min_fields"]: AliasType<{
	Fornecedor_Servico_Id?:true,
	Id?:true,
	Tarifa_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_min_order_by"]: {
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Tarifas". */
["comercial_Fornecedores_Servicos_Tarifas_order_by"]: {
	Fornecedor_Servico_Id?:ValueTypes["order_by"] | null,
	Fornecedores_Servico?:ValueTypes["comercial_Fornecedores_Servicos_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Tarifas */
["comercial_Fornecedores_Servicos_Tarifas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_select_column"]:comercial_Fornecedores_Servicos_Tarifas_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_set_input"]: {
	Fornecedor_Servico_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Tarifa_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Tarifas_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_update_column"]:comercial_Fornecedores_Servicos_Tarifas_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Tarifas_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregated selection of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_Servicos_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_Servicos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Fornecedores_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Fornecedores_Servicos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_bool_exp"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_bool_exp"] | null,
	Fornecedor_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Precos?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Tarifas?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_constraint"]:comercial_Fornecedores_Servicos_constraint;
	/** input type for inserting data into table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_insert_input"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_obj_rel_insert_input"] | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Precos?:ValueTypes["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Tarifas?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_max_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_max_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_min_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_min_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores_Servicos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_Servicos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_Servicos_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos". */
["comercial_Fornecedores_Servicos_order_by"]: {
	Fornecedor?:ValueTypes["comercial_Fornecedores_order_by"] | null,
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Precos_aggregate?:ValueTypes["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Tarifas_aggregate?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos */
["comercial_Fornecedores_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_select_column"]:comercial_Fornecedores_Servicos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_set_input"]: {
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_update_column"]:comercial_Fornecedores_Servicos_update_column;
	/** aggregated selection of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Fornecedores_aggregate_fields"],
	nodes?:ValueTypes["comercial_Fornecedores"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Fornecedores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Fornecedores_max_fields"],
	min?:ValueTypes["comercial_Fornecedores_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Fornecedores". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_bool_exp"]: {
	ContratosBases?:ValueTypes["comercial_ContratosBase_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Produtos?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null,
	Servicos?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null,
	_and?:ValueTypes["comercial_Fornecedores_bool_exp"][],
	_not?:ValueTypes["comercial_Fornecedores_bool_exp"] | null,
	_or?:ValueTypes["comercial_Fornecedores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Fornecedores" */
["comercial_Fornecedores_constraint"]:comercial_Fornecedores_constraint;
	/** input type for inserting data into table "comercial.Fornecedores" */
["comercial_Fornecedores_insert_input"]: {
	ContratosBases?:ValueTypes["comercial_ContratosBase_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Produtos?:ValueTypes["comercial_Fornecedores_Produtos_arr_rel_insert_input"] | null,
	Servicos?:ValueTypes["comercial_Fornecedores_Servicos_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Fornecedores_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Fornecedores_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Fornecedores" */
["comercial_Fornecedores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Fornecedores"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Fornecedores" */
["comercial_Fornecedores_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Fornecedores_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Fornecedores" */
["comercial_Fornecedores_on_conflict"]: {
	constraint:ValueTypes["comercial_Fornecedores_constraint"],
	update_columns:ValueTypes["comercial_Fornecedores_update_column"][],
	where?:ValueTypes["comercial_Fornecedores_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Fornecedores". */
["comercial_Fornecedores_order_by"]: {
	ContratosBases_aggregate?:ValueTypes["comercial_ContratosBase_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produtos_aggregate?:ValueTypes["comercial_Fornecedores_Produtos_aggregate_order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Fornecedores_Servicos_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Fornecedores */
["comercial_Fornecedores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_select_column"]:comercial_Fornecedores_select_column;
	/** input type for updating data in table "comercial.Fornecedores" */
["comercial_Fornecedores_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_update_column"]:comercial_Fornecedores_update_column;
	/** columns and relationships of "comercial.Planos" */
["comercial_Planos"]: AliasType<{
Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos"]],
Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos_aggregate"]],
Condicionais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais"]],
Condicionais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais_aggregate"]],
	Id?:true,
	Nome?:true,
Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null},ValueTypes["comercial_Planos_Precos"]],
Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null},ValueTypes["comercial_Planos_Precos_aggregate"]],
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos_aggregate"]],
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais"]: AliasType<{
	/** An object relationship */
	Condicional?:ValueTypes["comercial_Condicionais"],
	Condicional_Id?:true,
	Id?:true,
	/** An object relationship */
	Plano?:ValueTypes["comercial_Planos"],
	Plano_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Planos_Condicionais_aggregate_fields"],
	nodes?:ValueTypes["comercial_Planos_Condicionais"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Planos_Condicionais_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Planos_Condicionais_max_fields"],
	min?:ValueTypes["comercial_Planos_Condicionais_min_fields"],
	stddev?:ValueTypes["comercial_Planos_Condicionais_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Planos_Condicionais_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Planos_Condicionais_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Planos_Condicionais_sum_fields"],
	var_pop?:ValueTypes["comercial_Planos_Condicionais_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Planos_Condicionais_var_samp_fields"],
	variance?:ValueTypes["comercial_Planos_Condicionais_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Planos_Condicionais_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Planos_Condicionais_max_order_by"] | null,
	min?:ValueTypes["comercial_Planos_Condicionais_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Planos_Condicionais_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Planos_Condicionais_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Planos_Condicionais_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Planos_Condicionais_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Planos_Condicionais_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Planos_Condicionais_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Planos_Condicionais_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Planos_Condicionais_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Condicionais_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Planos_Condicionais_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Planos_Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Planos_Condicionais_bool_exp"]: {
	Condicional?:ValueTypes["comercial_Condicionais_bool_exp"] | null,
	Condicional_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano?:ValueTypes["comercial_Planos_bool_exp"] | null,
	Plano_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Planos_Condicionais_bool_exp"][],
	_not?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null,
	_or?:ValueTypes["comercial_Planos_Condicionais_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_constraint"]:comercial_Planos_Condicionais_constraint;
	/** input type for incrementing numeric columns in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_insert_input"]: {
	Condicional?:ValueTypes["comercial_Condicionais_obj_rel_insert_input"] | null,
	Condicional_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Plano?:ValueTypes["comercial_Planos_obj_rel_insert_input"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Planos_Condicionais_max_fields"]: AliasType<{
	Condicional_Id?:true,
	Id?:true,
	Plano_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_max_order_by"]: {
	Condicional_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Planos_Condicionais_min_fields"]: AliasType<{
	Condicional_Id?:true,
	Id?:true,
	Plano_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_min_order_by"]: {
	Condicional_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Planos_Condicionais"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_on_conflict"]: {
	constraint:ValueTypes["comercial_Planos_Condicionais_constraint"],
	update_columns:ValueTypes["comercial_Planos_Condicionais_update_column"][],
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Planos_Condicionais". */
["comercial_Planos_Condicionais_order_by"]: {
	Condicional?:ValueTypes["comercial_Condicionais_order_by"] | null,
	Condicional_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Plano?:ValueTypes["comercial_Planos_order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Planos_Condicionais */
["comercial_Planos_Condicionais_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_select_column"]:comercial_Planos_Condicionais_select_column;
	/** input type for updating data in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_set_input"]: {
	Condicional_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Planos_Condicionais_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Planos_Condicionais_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Planos_Condicionais_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Planos_Condicionais_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_update_column"]:comercial_Planos_Condicionais_update_column;
	/** aggregate var_pop on columns */
["comercial_Planos_Condicionais_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Planos_Condicionais_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Planos_Condicionais_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Planos_Precos" */
["comercial_Planos_Precos"]: AliasType<{
CombosPlanos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos"]],
CombosPlanos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos_aggregate"]],
	Id?:true,
	/** An object relationship */
	Plano?:ValueTypes["comercial_Planos"],
	Plano_Id?:true,
PropostasPlanos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos"]],
PropostasPlanos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos_aggregate"]],
	/** An object relationship */
	ServicoPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicoPreco_Id?:true,
	ValorBase?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Planos_Precos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Planos_Precos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Planos_Precos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Planos_Precos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Planos_Precos_max_fields"],
	min?:ValueTypes["comercial_Planos_Precos_min_fields"],
	stddev?:ValueTypes["comercial_Planos_Precos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Planos_Precos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Planos_Precos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Planos_Precos_sum_fields"],
	var_pop?:ValueTypes["comercial_Planos_Precos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Planos_Precos_var_samp_fields"],
	variance?:ValueTypes["comercial_Planos_Precos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Planos_Precos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Planos_Precos_max_order_by"] | null,
	min?:ValueTypes["comercial_Planos_Precos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Planos_Precos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Planos_Precos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Planos_Precos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Planos_Precos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Planos_Precos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Planos_Precos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Planos_Precos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Planos_Precos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Precos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Planos_Precos_avg_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_avg_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Planos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Planos_Precos_bool_exp"]: {
	CombosPlanos?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano?:ValueTypes["comercial_Planos_bool_exp"] | null,
	Plano_Id?:ValueTypes["uuid_comparison_exp"] | null,
	PropostasPlanos?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null,
	ServicoPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null,
	ServicoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	ValorBase?:ValueTypes["float8_comparison_exp"] | null,
	ValorPraticado?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Planos_Precos_bool_exp"][],
	_not?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Planos_Precos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Planos_Precos" */
["comercial_Planos_Precos_constraint"]:comercial_Planos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_inc_input"]: {
	ValorBase?:ValueTypes["float8"] | null,
	ValorPraticado?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Planos_Precos" */
["comercial_Planos_Precos_insert_input"]: {
	CombosPlanos?:ValueTypes["comercial_Combos_Planos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Plano?:ValueTypes["comercial_Planos_obj_rel_insert_input"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	PropostasPlanos?:ValueTypes["comercial_Propostas_Planos_arr_rel_insert_input"] | null,
	ServicoPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"] | null,
	ServicoPreco_Id?:ValueTypes["uuid"] | null,
	ValorBase?:ValueTypes["float8"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Planos_Precos_max_fields"]: AliasType<{
	Id?:true,
	Plano_Id?:true,
	ServicoPreco_Id?:true,
	ValorBase?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Planos_Precos_min_fields"]: AliasType<{
	Id?:true,
	Plano_Id?:true,
	ServicoPreco_Id?:true,
	ValorBase?:true,
	ValorPraticado?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Planos_Precos" */
["comercial_Planos_Precos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Planos_Precos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Planos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Precos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Planos_Precos" */
["comercial_Planos_Precos_on_conflict"]: {
	constraint:ValueTypes["comercial_Planos_Precos_constraint"],
	update_columns:ValueTypes["comercial_Planos_Precos_update_column"][],
	where?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Planos_Precos". */
["comercial_Planos_Precos_order_by"]: {
	CombosPlanos_aggregate?:ValueTypes["comercial_Combos_Planos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Plano?:ValueTypes["comercial_Planos_order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	PropostasPlanos_aggregate?:ValueTypes["comercial_Propostas_Planos_aggregate_order_by"] | null,
	ServicoPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"] | null,
	ServicoPreco_Id?:ValueTypes["order_by"] | null,
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Planos_Precos */
["comercial_Planos_Precos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_select_column"]:comercial_Planos_Precos_select_column;
	/** input type for updating data in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	ServicoPreco_Id?:ValueTypes["uuid"] | null,
	ValorBase?:ValueTypes["float8"] | null,
	ValorPraticado?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Planos_Precos_stddev_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Planos_Precos_stddev_pop_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_pop_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Planos_Precos_stddev_samp_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_samp_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Planos_Precos_sum_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_sum_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_update_column"]:comercial_Planos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Planos_Precos_var_pop_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_pop_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Planos_Precos_var_samp_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_samp_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Planos_Precos_variance_fields"]: AliasType<{
	ValorBase?:true,
	ValorPraticado?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_variance_order_by"]: {
	ValorBase?:ValueTypes["order_by"] | null,
	ValorPraticado?:ValueTypes["order_by"] | null
};
	/** aggregated selection of "comercial.Planos" */
["comercial_Planos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Planos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Planos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Planos" */
["comercial_Planos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Planos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Planos_max_fields"],
	min?:ValueTypes["comercial_Planos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Planos" */
["comercial_Planos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Planos_max_order_by"] | null,
	min?:ValueTypes["comercial_Planos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Planos" */
["comercial_Planos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Planos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Planos". All fields are combined with a logical 'AND'. */
["comercial_Planos_bool_exp"]: {
	Combos?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null,
	Condicionais?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Precos?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Planos_bool_exp"][],
	_not?:ValueTypes["comercial_Planos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Planos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Planos" */
["comercial_Planos_constraint"]:comercial_Planos_constraint;
	/** input type for inserting data into table "comercial.Planos" */
["comercial_Planos_insert_input"]: {
	Combos?:ValueTypes["comercial_Combos_Planos_arr_rel_insert_input"] | null,
	Condicionais?:ValueTypes["comercial_Planos_Condicionais_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Precos?:ValueTypes["comercial_Planos_Precos_arr_rel_insert_input"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Planos_arr_rel_insert_input"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Planos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Planos" */
["comercial_Planos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Planos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Planos" */
["comercial_Planos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Planos" */
["comercial_Planos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Planos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Planos" */
["comercial_Planos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Planos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Planos" */
["comercial_Planos_on_conflict"]: {
	constraint:ValueTypes["comercial_Planos_constraint"],
	update_columns:ValueTypes["comercial_Planos_update_column"][],
	where?:ValueTypes["comercial_Planos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Planos". */
["comercial_Planos_order_by"]: {
	Combos_aggregate?:ValueTypes["comercial_Combos_Planos_aggregate_order_by"] | null,
	Condicionais_aggregate?:ValueTypes["comercial_Planos_Condicionais_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Precos_aggregate?:ValueTypes["comercial_Planos_Precos_aggregate_order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_Planos_aggregate_order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Planos */
["comercial_Planos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Planos" */
["comercial_Planos_select_column"]:comercial_Planos_select_column;
	/** input type for updating data in table "comercial.Planos" */
["comercial_Planos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Planos" */
["comercial_Planos_update_column"]:comercial_Planos_update_column;
	/** columns and relationships of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Prestador?:ValueTypes["identidades_Fornecedores"],
	Prestador_Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_PrestadorDeServicos_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_PrestadorDeServicos_Servicos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_PrestadorDeServicos_Servicos_max_fields"],
	min?:ValueTypes["comercial_PrestadorDeServicos_Servicos_min_fields"],
	stddev?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_PrestadorDeServicos_Servicos_sum_fields"],
	var_pop?:ValueTypes["comercial_PrestadorDeServicos_Servicos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_PrestadorDeServicos_Servicos_var_samp_fields"],
	variance?:ValueTypes["comercial_PrestadorDeServicos_Servicos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_PrestadorDeServicos_Servicos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_PrestadorDeServicos_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_PrestadorDeServicos_Servicos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_PrestadorDeServicos_Servicos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_PrestadorDeServicos_Servicos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_PrestadorDeServicos_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_PrestadorDeServicos_Servicos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_PrestadorDeServicos_Servicos_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.PrestadorDeServicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_PrestadorDeServicos_Servicos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Prestador?:ValueTypes["identidades_Fornecedores_bool_exp"] | null,
	Prestador_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_constraint"]:comercial_PrestadorDeServicos_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Prestador?:ValueTypes["identidades_Fornecedores_obj_rel_insert_input"] | null,
	Prestador_Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_PrestadorDeServicos_Servicos_max_fields"]: AliasType<{
	Id?:true,
	Prestador_Id?:true,
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Prestador_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_PrestadorDeServicos_Servicos_min_fields"]: AliasType<{
	Id?:true,
	Prestador_Id?:true,
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Prestador_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_PrestadorDeServicos_Servicos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_PrestadorDeServicos_Servicos_constraint"],
	update_columns:ValueTypes["comercial_PrestadorDeServicos_Servicos_update_column"][],
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.PrestadorDeServicos_Servicos". */
["comercial_PrestadorDeServicos_Servicos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Prestador?:ValueTypes["identidades_Fornecedores_order_by"] | null,
	Prestador_Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_PrestadorDeServicos_Servicos */
["comercial_PrestadorDeServicos_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_select_column"]:comercial_PrestadorDeServicos_Servicos_select_column;
	/** input type for updating data in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Prestador_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_PrestadorDeServicos_Servicos_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_update_column"]:comercial_PrestadorDeServicos_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_PrestadorDeServicos_Servicos_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_PrestadorDeServicos_Servicos_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_PrestadorDeServicos_Servicos_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Produtos" */
["comercial_Produtos"]: AliasType<{
Atributos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos"]],
Atributos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos_aggregate"]],
Categorias?: [{	/** JSON select path */
	path?:string | null},true],
Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos"]],
Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos_aggregate"]],
Fornecedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos"]],
Fornecedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_aggregate"]],
	Id?:true,
	Nome?:true,
Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades"]],
Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades_aggregate"]],
ProdutosDependentes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos"]],
ProdutosDependentes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos_aggregate"]],
ProdutosQueDependo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos"]],
ProdutosQueDependo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos_aggregate"]],
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos_aggregate"]],
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos"]],
Servicos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos"]],
Servicos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos_aggregate"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos_aggregate"]],
	/** An object relationship */
	Tipo?:ValueTypes["comercial_Produtos_Tipos"],
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos"]: AliasType<{
	/** An object relationship */
	Atributo?:ValueTypes["comercial_Atributos"],
	Atributo_Id?:true,
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_Atributos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos_Atributos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_Atributos_max_fields"],
	min?:ValueTypes["comercial_Produtos_Atributos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Produtos_Atributos_max_order_by"] | null,
	min?:ValueTypes["comercial_Produtos_Atributos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Atributos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Atributos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Atributos_bool_exp"]: {
	Atributo?:ValueTypes["comercial_Atributos_bool_exp"] | null,
	Atributo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_Atributos_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_Atributos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_constraint"]:comercial_Produtos_Atributos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_insert_input"]: {
	Atributo?:ValueTypes["comercial_Atributos_obj_rel_insert_input"] | null,
	Atributo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Produtos_Atributos_max_fields"]: AliasType<{
	Atributo_Id?:true,
	Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_max_order_by"]: {
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Produtos_Atributos_min_fields"]: AliasType<{
	Atributo_Id?:true,
	Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_min_order_by"]: {
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos_Atributos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_Atributos_constraint"],
	update_columns:ValueTypes["comercial_Produtos_Atributos_update_column"][],
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos_Atributos". */
["comercial_Produtos_Atributos_order_by"]: {
	Atributo?:ValueTypes["comercial_Atributos_order_by"] | null,
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos_Atributos */
["comercial_Produtos_Atributos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_select_column"]:comercial_Produtos_Atributos_select_column;
	/** input type for updating data in table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_set_input"]: {
	Atributo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_update_column"]:comercial_Produtos_Atributos_update_column;
	/** columns and relationships of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
OportunidadesDePropostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades"]],
OportunidadesDePropostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades_aggregate"]],
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	Produto_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_Oportunidades_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos_Oportunidades"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Produtos_Oportunidades_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_Oportunidades_max_fields"],
	min?:ValueTypes["comercial_Produtos_Oportunidades_min_fields"],
	stddev?:ValueTypes["comercial_Produtos_Oportunidades_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Produtos_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Produtos_Oportunidades_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Produtos_Oportunidades_sum_fields"],
	var_pop?:ValueTypes["comercial_Produtos_Oportunidades_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Produtos_Oportunidades_var_samp_fields"],
	variance?:ValueTypes["comercial_Produtos_Oportunidades_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Produtos_Oportunidades_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Produtos_Oportunidades_max_order_by"] | null,
	min?:ValueTypes["comercial_Produtos_Oportunidades_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Produtos_Oportunidades_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Produtos_Oportunidades_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Produtos_Oportunidades_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Produtos_Oportunidades_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Produtos_Oportunidades_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Produtos_Oportunidades_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Produtos_Oportunidades_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Oportunidades_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Oportunidades_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Produtos_Oportunidades_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Oportunidades_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	OportunidadesDePropostas?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_constraint"]:comercial_Produtos_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	OportunidadesDePropostas?:ValueTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Produtos_Oportunidades_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
	Produto_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Produtos_Oportunidades_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
	Produto_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos_Oportunidades"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Oportunidades_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Oportunidades_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_Oportunidades_constraint"],
	update_columns:ValueTypes["comercial_Produtos_Oportunidades_update_column"][],
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos_Oportunidades". */
["comercial_Produtos_Oportunidades_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	OportunidadesDePropostas_aggregate?:ValueTypes["comercial_Propostas_Oportunidades_aggregate_order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos_Oportunidades */
["comercial_Produtos_Oportunidades_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_select_column"]:comercial_Produtos_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Produtos_Oportunidades_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Produtos_Oportunidades_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Produtos_Oportunidades_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Produtos_Oportunidades_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_update_column"]:comercial_Produtos_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Produtos_Oportunidades_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Produtos_Oportunidades_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Produtos_Oportunidades_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoDependente?:ValueTypes["comercial_Produtos"],
	ProdutoDependente_Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_Produtos_max_fields"],
	min?:ValueTypes["comercial_Produtos_Produtos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Produtos_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Produtos_Produtos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Produtos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Produtos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	ProdutoDependente?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	ProdutoDependente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_constraint"]:comercial_Produtos_Produtos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	ProdutoDependente?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	ProdutoDependente_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Produtos_Produtos_max_fields"]: AliasType<{
	Id?:true,
	ProdutoDependente_Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ProdutoDependente_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Produtos_Produtos_min_fields"]: AliasType<{
	Id?:true,
	ProdutoDependente_Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ProdutoDependente_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Produtos_Produtos_update_column"][],
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos_Produtos". */
["comercial_Produtos_Produtos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	ProdutoDependente?:ValueTypes["comercial_Produtos_order_by"] | null,
	ProdutoDependente_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos_Produtos */
["comercial_Produtos_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_select_column"]:comercial_Produtos_Produtos_select_column;
	/** input type for updating data in table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	ProdutoDependente_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_update_column"]:comercial_Produtos_Produtos_update_column;
	/** columns and relationships of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	Produto_Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_Servicos_max_fields"],
	min?:ValueTypes["comercial_Produtos_Servicos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Produtos_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Produtos_Servicos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Servicos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Servicos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_constraint"]:comercial_Produtos_Servicos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Produtos_Servicos_max_fields"]: AliasType<{
	Id?:true,
	Produto_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Produtos_Servicos_min_fields"]: AliasType<{
	Id?:true,
	Produto_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos_Servicos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Produtos_Servicos_update_column"][],
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos_Servicos". */
["comercial_Produtos_Servicos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos_Servicos */
["comercial_Produtos_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_select_column"]:comercial_Produtos_Servicos_select_column;
	/** input type for updating data in table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_update_column"]:comercial_Produtos_Servicos_update_column;
	/** columns and relationships of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos"]: AliasType<{
	Comentario?:true,
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_Tipos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos_Tipos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Produtos_Tipos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_Tipos_max_fields"],
	min?:ValueTypes["comercial_Produtos_Tipos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Produtos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Tipos_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Produtos?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_Tipos_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_Tipos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_Tipos_bool_exp"][]
};
	/** unique or primary key constraints on table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_constraint"]:comercial_Produtos_Tipos_constraint;
	["comercial_Produtos_Tipos_enum"]:comercial_Produtos_Tipos_enum;
	/** Boolean expression to compare columns of type "comercial_Produtos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Produtos_Tipos_enum_comparison_exp"]: {
	_eq?:ValueTypes["comercial_Produtos_Tipos_enum"] | null,
	_in?:ValueTypes["comercial_Produtos_Tipos_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["comercial_Produtos_Tipos_enum"] | null,
	_nin?:ValueTypes["comercial_Produtos_Tipos_enum"][]
};
	/** input type for inserting data into table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_insert_input"]: {
	Comentario?:string | null,
	Produtos?:ValueTypes["comercial_Produtos_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["comercial_Produtos_Tipos_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Produtos_Tipos_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos_Tipos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_Tipos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Tipos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_Tipos_constraint"],
	update_columns:ValueTypes["comercial_Produtos_Tipos_update_column"][],
	where?:ValueTypes["comercial_Produtos_Tipos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos_Tipos". */
["comercial_Produtos_Tipos_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Produtos_aggregate?:ValueTypes["comercial_Produtos_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos_Tipos */
["comercial_Produtos_Tipos_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_select_column"]:comercial_Produtos_Tipos_select_column;
	/** input type for updating data in table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_update_column"]:comercial_Produtos_Tipos_update_column;
	/** aggregated selection of "comercial.Produtos" */
["comercial_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Produtos" */
["comercial_Produtos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Produtos_max_fields"],
	min?:ValueTypes["comercial_Produtos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Produtos" */
["comercial_Produtos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Produtos_min_order_by"] | null
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_append_input"]: {
	Categorias?:ValueTypes["jsonb"] | null
};
	/** input type for inserting array relation for remote table "comercial.Produtos" */
["comercial_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_bool_exp"]: {
	Atributos?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null,
	Categorias?:ValueTypes["jsonb_comparison_exp"] | null,
	Combos?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null,
	Fornecedores?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Oportunidades?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null,
	ProdutosDependentes?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null,
	ProdutosQueDependo?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null,
	Servicos?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null,
	Servicos_Produtos?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null,
	Tipo?:ValueTypes["comercial_Produtos_Tipos_bool_exp"] | null,
	Tipo_Id?:ValueTypes["comercial_Produtos_Tipos_enum_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Produtos" */
["comercial_Produtos_constraint"]:comercial_Produtos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Produtos_delete_at_path_input"]: {
	Categorias?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Produtos_delete_elem_input"]: {
	Categorias?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Produtos_delete_key_input"]: {
	Categorias?:string | null
};
	/** input type for inserting data into table "comercial.Produtos" */
["comercial_Produtos_insert_input"]: {
	Atributos?:ValueTypes["comercial_Produtos_Atributos_arr_rel_insert_input"] | null,
	Categorias?:ValueTypes["jsonb"] | null,
	Combos?:ValueTypes["comercial_Combos_Produtos_arr_rel_insert_input"] | null,
	Fornecedores?:ValueTypes["comercial_Fornecedores_Produtos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Oportunidades?:ValueTypes["comercial_Produtos_Oportunidades_arr_rel_insert_input"] | null,
	ProdutosDependentes?:ValueTypes["comercial_Produtos_Produtos_arr_rel_insert_input"] | null,
	ProdutosQueDependo?:ValueTypes["comercial_Produtos_Produtos_arr_rel_insert_input"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Produtos_arr_rel_insert_input"] | null,
	Servicos?:ValueTypes["comercial_Produtos_Servicos_arr_rel_insert_input"] | null,
	Servicos_Produtos?:ValueTypes["comercial_Servicos_Produtos_arr_rel_insert_input"] | null,
	Tipo?:ValueTypes["comercial_Produtos_Tipos_obj_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["comercial_Produtos_Tipos_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Produtos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Produtos" */
["comercial_Produtos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Produtos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Produtos" */
["comercial_Produtos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Produtos" */
["comercial_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Produtos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Produtos" */
["comercial_Produtos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Produtos" */
["comercial_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Produtos_update_column"][],
	where?:ValueTypes["comercial_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Produtos". */
["comercial_Produtos_order_by"]: {
	Atributos_aggregate?:ValueTypes["comercial_Produtos_Atributos_aggregate_order_by"] | null,
	Categorias?:ValueTypes["order_by"] | null,
	Combos_aggregate?:ValueTypes["comercial_Combos_Produtos_aggregate_order_by"] | null,
	Fornecedores_aggregate?:ValueTypes["comercial_Fornecedores_Produtos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Oportunidades_aggregate?:ValueTypes["comercial_Produtos_Oportunidades_aggregate_order_by"] | null,
	ProdutosDependentes_aggregate?:ValueTypes["comercial_Produtos_Produtos_aggregate_order_by"] | null,
	ProdutosQueDependo_aggregate?:ValueTypes["comercial_Produtos_Produtos_aggregate_order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_Produtos_aggregate_order_by"] | null,
	Servicos_Produtos_aggregate?:ValueTypes["comercial_Servicos_Produtos_aggregate_order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Produtos_Servicos_aggregate_order_by"] | null,
	Tipo?:ValueTypes["comercial_Produtos_Tipos_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Produtos */
["comercial_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_prepend_input"]: {
	Categorias?:ValueTypes["jsonb"] | null
};
	/** select columns of table "comercial.Produtos" */
["comercial_Produtos_select_column"]:comercial_Produtos_select_column;
	/** input type for updating data in table "comercial.Produtos" */
["comercial_Produtos_set_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Tipo_Id?:ValueTypes["comercial_Produtos_Tipos_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Produtos" */
["comercial_Produtos_update_column"]:comercial_Produtos_update_column;
	/** columns and relationships of "comercial.Propostas" */
["comercial_Propostas"]: AliasType<{
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
	Cliente_Id?:true,
Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos"]],
Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos_aggregate"]],
	DataAceito?:true,
	Id?:true,
Instalacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes"]],
Instalacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes_aggregate"]],
	/** An object relationship */
	Lead?:ValueTypes["clientes_Leads"],
	Lead_Id?:true,
Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades"]],
Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades_aggregate"]],
Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos"]],
Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos_aggregate"]],
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos_aggregate"]],
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos_aggregate"]],
	/** An object relationship */
	Situacao?:ValueTypes["comercial_Propostas_Situacoes"],
	Situacao_Id?:true,
	/** An object relationship */
	Ticket?:ValueTypes["atendimentos_Tickets"],
	Ticket_Id?:true,
	/** An object relationship */
	TipoDePagamento?:ValueTypes["vendas_TiposDePagamento"],
	TipoDePagamento_Id?:true,
	/** An object relationship */
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id?:true,
	/** An object relationship */
	Usuario?:ValueTypes["autenticacao_Usuarios"],
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	/** An object relationship */
	ComboPreco?:ValueTypes["comercial_Combos_Precos"],
	ComboPreco_Id?:true,
	Combo_Id?:true,
	Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Combos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Combos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Combos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Combos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Combos_max_fields"],
	min?:ValueTypes["comercial_Propostas_Combos_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Combos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Combos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Combos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Combos_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Combos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Combos_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Combos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Combos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Combos_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Combos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Combos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Combos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Combos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Combos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Combos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Combos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Combos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Combos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Combos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Combos_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Combos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Combos_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	ComboPreco?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null,
	ComboPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Combos_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Combos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_constraint"]:comercial_Propostas_Combos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	ComboPreco?:ValueTypes["comercial_Combos_Precos_obj_rel_insert_input"] | null,
	ComboPreco_Id?:ValueTypes["uuid"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Combos_max_fields"]: AliasType<{
	ComboPreco_Id?:true,
	Combo_Id?:true,
	Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_max_order_by"]: {
	ComboPreco_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Combos_min_fields"]: AliasType<{
	ComboPreco_Id?:true,
	Combo_Id?:true,
	Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_min_order_by"]: {
	ComboPreco_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Combos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Combos_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Combos_update_column"][],
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Combos". */
["comercial_Propostas_Combos_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	ComboPreco?:ValueTypes["comercial_Combos_Precos_order_by"] | null,
	ComboPreco_Id?:ValueTypes["order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Combos */
["comercial_Propostas_Combos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_select_column"]:comercial_Propostas_Combos_select_column;
	/** input type for updating data in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_set_input"]: {
	ComboPreco_Id?:ValueTypes["uuid"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Combos_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Combos_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Combos_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Combos_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_update_column"]:comercial_Propostas_Combos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Combos_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Combos_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Combos_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes"]: AliasType<{
Endereco?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Instalacoes_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Instalacoes"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Instalacoes_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Instalacoes_max_fields"],
	min?:ValueTypes["comercial_Propostas_Instalacoes_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Instalacoes_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Instalacoes_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Instalacoes_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Instalacoes_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Instalacoes_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Instalacoes_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Instalacoes_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Instalacoes_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Instalacoes_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Instalacoes_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Instalacoes_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Instalacoes_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Instalacoes_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Instalacoes_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Instalacoes_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Instalacoes_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Instalacoes_variance_order_by"] | null
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_append_input"]: {
	Endereco?:ValueTypes["jsonb"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Instalacoes_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Instalacoes_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Instalacoes_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Instalacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Instalacoes_bool_exp"]: {
	Endereco?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_constraint"]:comercial_Propostas_Instalacoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Propostas_Instalacoes_delete_at_path_input"]: {
	Endereco?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Propostas_Instalacoes_delete_elem_input"]: {
	Endereco?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Propostas_Instalacoes_delete_key_input"]: {
	Endereco?:string | null
};
	/** input type for incrementing numeric columns in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_insert_input"]: {
	Endereco?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Instalacoes_max_fields"]: AliasType<{
	Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Instalacoes_min_fields"]: AliasType<{
	Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Instalacoes"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Instalacoes_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Instalacoes_update_column"][],
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Instalacoes". */
["comercial_Propostas_Instalacoes_order_by"]: {
	Endereco?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Instalacoes */
["comercial_Propostas_Instalacoes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_prepend_input"]: {
	Endereco?:ValueTypes["jsonb"] | null
};
	/** select columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_select_column"]:comercial_Propostas_Instalacoes_select_column;
	/** input type for updating data in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_set_input"]: {
	Endereco?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Instalacoes_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Instalacoes_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Instalacoes_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Instalacoes_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_update_column"]:comercial_Propostas_Instalacoes_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Instalacoes_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Instalacoes_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Instalacoes_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades"]: AliasType<{
	Id?:true,
	/** An object relationship */
	OportunidadeDeProduto?:ValueTypes["comercial_Produtos_Oportunidades"],
	/** An object relationship */
	OportunidadeDeServico?:ValueTypes["comercial_Servicos_Oportunidades"],
	OportunidadeProduto_Id?:true,
	OportunidadeServico_Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Oportunidades_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Oportunidades"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Oportunidades_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Oportunidades_max_fields"],
	min?:ValueTypes["comercial_Propostas_Oportunidades_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Oportunidades_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Oportunidades_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Oportunidades_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Oportunidades_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Oportunidades_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Oportunidades_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Oportunidades_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Oportunidades_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Oportunidades_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Oportunidades_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Oportunidades_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Oportunidades_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Oportunidades_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Oportunidades_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Oportunidades_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Oportunidades_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Oportunidades_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Oportunidades_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Oportunidades_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Oportunidades_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	OportunidadeDeProduto?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null,
	OportunidadeDeServico?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null,
	OportunidadeProduto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	OportunidadeServico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_constraint"]:comercial_Propostas_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	OportunidadeDeProduto?:ValueTypes["comercial_Produtos_Oportunidades_obj_rel_insert_input"] | null,
	OportunidadeDeServico?:ValueTypes["comercial_Servicos_Oportunidades_obj_rel_insert_input"] | null,
	OportunidadeProduto_Id?:ValueTypes["uuid"] | null,
	OportunidadeServico_Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Oportunidades_max_fields"]: AliasType<{
	Id?:true,
	OportunidadeProduto_Id?:true,
	OportunidadeServico_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	OportunidadeProduto_Id?:ValueTypes["order_by"] | null,
	OportunidadeServico_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Oportunidades_min_fields"]: AliasType<{
	Id?:true,
	OportunidadeProduto_Id?:true,
	OportunidadeServico_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	OportunidadeProduto_Id?:ValueTypes["order_by"] | null,
	OportunidadeServico_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Oportunidades"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Oportunidades_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Oportunidades_update_column"][],
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Oportunidades". */
["comercial_Propostas_Oportunidades_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	OportunidadeDeProduto?:ValueTypes["comercial_Produtos_Oportunidades_order_by"] | null,
	OportunidadeDeServico?:ValueTypes["comercial_Servicos_Oportunidades_order_by"] | null,
	OportunidadeProduto_Id?:ValueTypes["order_by"] | null,
	OportunidadeServico_Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Oportunidades */
["comercial_Propostas_Oportunidades_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_select_column"]:comercial_Propostas_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	OportunidadeProduto_Id?:ValueTypes["uuid"] | null,
	OportunidadeServico_Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Oportunidades_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Oportunidades_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Oportunidades_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Oportunidades_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_update_column"]:comercial_Propostas_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Oportunidades_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Oportunidades_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Oportunidades_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Plano?:ValueTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco?:ValueTypes["comercial_Planos_Precos"],
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Planos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Planos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Planos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Planos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Planos_max_fields"],
	min?:ValueTypes["comercial_Propostas_Planos_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Planos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Planos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Planos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Planos_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Planos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Planos_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Planos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Planos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Planos_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Planos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Planos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Planos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Planos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Planos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Planos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Planos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Planos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Planos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Planos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Planos_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Planos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Planos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano?:ValueTypes["comercial_Planos_bool_exp"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null,
	PlanoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Plano_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Planos_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Planos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_constraint"]:comercial_Propostas_Planos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Plano?:ValueTypes["comercial_Planos_obj_rel_insert_input"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_obj_rel_insert_input"] | null,
	PlanoPreco_Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Planos_max_fields"]: AliasType<{
	Id?:true,
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Planos_min_fields"]: AliasType<{
	Id?:true,
	PlanoPreco_Id?:true,
	Plano_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Planos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Planos_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Planos_update_column"][],
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Planos". */
["comercial_Propostas_Planos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Plano?:ValueTypes["comercial_Planos_order_by"] | null,
	PlanoPreco?:ValueTypes["comercial_Planos_Precos_order_by"] | null,
	PlanoPreco_Id?:ValueTypes["order_by"] | null,
	Plano_Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Planos */
["comercial_Propostas_Planos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_select_column"]:comercial_Propostas_Planos_select_column;
	/** input type for updating data in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	PlanoPreco_Id?:ValueTypes["uuid"] | null,
	Plano_Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Planos_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Planos_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Planos_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Planos_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_update_column"]:comercial_Propostas_Planos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Planos_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Planos_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Planos_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Produtos_max_fields"],
	min?:ValueTypes["comercial_Propostas_Produtos_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Produtos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Produtos_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Produtos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Produtos_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Produtos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Produtos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Produtos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Produtos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Produtos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Produtos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Produtos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Produtos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Produtos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Produtos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Produtos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Produtos_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Produtos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_constraint"]:comercial_Propostas_Produtos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Produtos_max_fields"]: AliasType<{
	Id?:true,
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Produtos_min_fields"]: AliasType<{
	Id?:true,
	ProdutoPreco_Id?:true,
	Produto_Id?:true,
	Proposta_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Produtos_update_column"][],
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Produtos". */
["comercial_Propostas_Produtos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	ProdutoPreco?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"] | null,
	ProdutoPreco_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Produtos */
["comercial_Propostas_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_select_column"]:comercial_Propostas_Produtos_select_column;
	/** input type for updating data in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	ProdutoPreco_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Produtos_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Produtos_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Produtos_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Produtos_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_update_column"]:comercial_Propostas_Produtos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Produtos_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Produtos_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Produtos_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Proposta?:ValueTypes["comercial_Propostas"],
	Proposta_Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	/** An object relationship */
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicosPreco_Id?:true,
	Veiculo?:true,
	/** An object relationship */
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos"],
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Propostas_Servicos_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Servicos_max_fields"],
	min?:ValueTypes["comercial_Propostas_Servicos_min_fields"],
	stddev?:ValueTypes["comercial_Propostas_Servicos_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Propostas_Servicos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Propostas_Servicos_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Propostas_Servicos_sum_fields"],
	var_pop?:ValueTypes["comercial_Propostas_Servicos_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Propostas_Servicos_var_samp_fields"],
	variance?:ValueTypes["comercial_Propostas_Servicos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Propostas_Servicos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_Servicos_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Propostas_Servicos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Propostas_Servicos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Propostas_Servicos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Propostas_Servicos_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Propostas_Servicos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Propostas_Servicos_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Propostas_Servicos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Servicos_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Propostas_Servicos_avg_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_avg_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Servicos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null,
	ServicosPreco_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Veiculo?:ValueTypes["Int_comparison_exp"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_bool_exp"] | null,
	Veiculo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_constraint"]:comercial_Propostas_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_inc_input"]: {
	Veiculo?:number | null
};
	/** input type for inserting data into table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Proposta?:ValueTypes["comercial_Propostas_obj_rel_insert_input"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"] | null,
	ServicosPreco_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_obj_rel_insert_input"] | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_Servicos_max_fields"]: AliasType<{
	Id?:true,
	Proposta_Id?:true,
	Servico_Id?:true,
	ServicosPreco_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ServicosPreco_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_Servicos_min_fields"]: AliasType<{
	Id?:true,
	Proposta_Id?:true,
	Servico_Id?:true,
	ServicosPreco_Id?:true,
	Veiculo?:true,
	Veiculo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ServicosPreco_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Servicos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Servicos_update_column"][],
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Servicos". */
["comercial_Propostas_Servicos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Proposta?:ValueTypes["comercial_Propostas_order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	ServicosPreco?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"] | null,
	ServicosPreco_Id?:ValueTypes["order_by"] | null,
	Veiculo?:ValueTypes["order_by"] | null,
	VeiculoRelacionamento?:ValueTypes["clientes_Veiculos_order_by"] | null,
	Veiculo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Servicos */
["comercial_Propostas_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_select_column"]:comercial_Propostas_Servicos_select_column;
	/** input type for updating data in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	ServicosPreco_Id?:ValueTypes["uuid"] | null,
	Veiculo?:number | null,
	Veiculo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Propostas_Servicos_stddev_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Servicos_stddev_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Servicos_stddev_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Propostas_Servicos_sum_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_sum_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_update_column"]:comercial_Propostas_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Servicos_var_pop_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_pop_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Servicos_var_samp_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_samp_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Propostas_Servicos_variance_fields"]: AliasType<{
	Veiculo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_variance_order_by"]: {
	Veiculo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes"]: AliasType<{
	Comentario?:true,
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_Situacoes_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas_Situacoes"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Propostas_Situacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_Situacoes_max_fields"],
	min?:ValueTypes["comercial_Propostas_Situacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Propostas_Situacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Situacoes_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_constraint"]:comercial_Propostas_Situacoes_constraint;
	["comercial_Propostas_Situacoes_enum"]:comercial_Propostas_Situacoes_enum;
	/** Boolean expression to compare columns of type "comercial_Propostas_Situacoes_enum". All fields are combined with logical 'AND'. */
["comercial_Propostas_Situacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["comercial_Propostas_Situacoes_enum"] | null,
	_in?:ValueTypes["comercial_Propostas_Situacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["comercial_Propostas_Situacoes_enum"] | null,
	_nin?:ValueTypes["comercial_Propostas_Situacoes_enum"][]
};
	/** input type for inserting data into table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_insert_input"]: {
	Comentario?:string | null,
	Propostas?:ValueTypes["comercial_Propostas_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["comercial_Propostas_Situacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Propostas_Situacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas_Situacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Situacoes_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_Situacoes_constraint"],
	update_columns:ValueTypes["comercial_Propostas_Situacoes_update_column"][],
	where?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas_Situacoes". */
["comercial_Propostas_Situacoes_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas_Situacoes */
["comercial_Propostas_Situacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_select_column"]:comercial_Propostas_Situacoes_select_column;
	/** input type for updating data in table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_update_column"]:comercial_Propostas_Situacoes_update_column;
	/** aggregated selection of "comercial.Propostas" */
["comercial_Propostas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Propostas_aggregate_fields"],
	nodes?:ValueTypes["comercial_Propostas"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Propostas" */
["comercial_Propostas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Propostas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Propostas_max_fields"],
	min?:ValueTypes["comercial_Propostas_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Propostas" */
["comercial_Propostas_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Propostas_max_order_by"] | null,
	min?:ValueTypes["comercial_Propostas_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Propostas" */
["comercial_Propostas_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Propostas". All fields are combined with a logical 'AND'. */
["comercial_Propostas_bool_exp"]: {
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Cliente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Combos?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null,
	DataAceito?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Instalacoes?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null,
	Lead?:ValueTypes["clientes_Leads_bool_exp"] | null,
	Lead_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Oportunidades?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null,
	Planos?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null,
	Produtos?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null,
	Servicos?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null,
	Situacao?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["comercial_Propostas_Situacoes_enum_comparison_exp"] | null,
	Ticket?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	Ticket_Id?:ValueTypes["uuid_comparison_exp"] | null,
	TipoDePagamento?:ValueTypes["vendas_TiposDePagamento_bool_exp"] | null,
	TipoDePagamento_Id?:ValueTypes["vendas_TiposDePagamento_enum_comparison_exp"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null,
	Usuario_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Propostas_bool_exp"][],
	_not?:ValueTypes["comercial_Propostas_bool_exp"] | null,
	_or?:ValueTypes["comercial_Propostas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Propostas" */
["comercial_Propostas_constraint"]:comercial_Propostas_constraint;
	/** input type for inserting data into table "comercial.Propostas" */
["comercial_Propostas_insert_input"]: {
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Cliente_Id?:ValueTypes["uuid"] | null,
	Combos?:ValueTypes["comercial_Propostas_Combos_arr_rel_insert_input"] | null,
	DataAceito?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Instalacoes?:ValueTypes["comercial_Propostas_Instalacoes_arr_rel_insert_input"] | null,
	Lead?:ValueTypes["clientes_Leads_obj_rel_insert_input"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Oportunidades?:ValueTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"] | null,
	Planos?:ValueTypes["comercial_Propostas_Planos_arr_rel_insert_input"] | null,
	Produtos?:ValueTypes["comercial_Propostas_Produtos_arr_rel_insert_input"] | null,
	Servicos?:ValueTypes["comercial_Propostas_Servicos_arr_rel_insert_input"] | null,
	Situacao?:ValueTypes["comercial_Propostas_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["comercial_Propostas_Situacoes_enum"] | null,
	Ticket?:ValueTypes["atendimentos_Tickets_obj_rel_insert_input"] | null,
	Ticket_Id?:ValueTypes["uuid"] | null,
	TipoDePagamento?:ValueTypes["vendas_TiposDePagamento_obj_rel_insert_input"] | null,
	TipoDePagamento_Id?:ValueTypes["vendas_TiposDePagamento_enum"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_obj_rel_insert_input"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Propostas_max_fields"]: AliasType<{
	Cliente_Id?:true,
	DataAceito?:true,
	Id?:true,
	Lead_Id?:true,
	Ticket_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Propostas" */
["comercial_Propostas_max_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	DataAceito?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Ticket_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Propostas_min_fields"]: AliasType<{
	Cliente_Id?:true,
	DataAceito?:true,
	Id?:true,
	Lead_Id?:true,
	Ticket_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Propostas" */
["comercial_Propostas_min_order_by"]: {
	Cliente_Id?:ValueTypes["order_by"] | null,
	DataAceito?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Ticket_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Propostas" */
["comercial_Propostas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Propostas"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Propostas" */
["comercial_Propostas_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Propostas_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Propostas" */
["comercial_Propostas_on_conflict"]: {
	constraint:ValueTypes["comercial_Propostas_constraint"],
	update_columns:ValueTypes["comercial_Propostas_update_column"][],
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Propostas". */
["comercial_Propostas_order_by"]: {
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Cliente_Id?:ValueTypes["order_by"] | null,
	Combos_aggregate?:ValueTypes["comercial_Propostas_Combos_aggregate_order_by"] | null,
	DataAceito?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Instalacoes_aggregate?:ValueTypes["comercial_Propostas_Instalacoes_aggregate_order_by"] | null,
	Lead?:ValueTypes["clientes_Leads_order_by"] | null,
	Lead_Id?:ValueTypes["order_by"] | null,
	Oportunidades_aggregate?:ValueTypes["comercial_Propostas_Oportunidades_aggregate_order_by"] | null,
	Planos_aggregate?:ValueTypes["comercial_Propostas_Planos_aggregate_order_by"] | null,
	Produtos_aggregate?:ValueTypes["comercial_Propostas_Produtos_aggregate_order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Propostas_Servicos_aggregate_order_by"] | null,
	Situacao?:ValueTypes["comercial_Propostas_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	Ticket?:ValueTypes["atendimentos_Tickets_order_by"] | null,
	Ticket_Id?:ValueTypes["order_by"] | null,
	TipoDePagamento?:ValueTypes["vendas_TiposDePagamento_order_by"] | null,
	TipoDePagamento_Id?:ValueTypes["order_by"] | null,
	TipoDeRecorrencia?:ValueTypes["vendas_TiposDeRecorrencia_order_by"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["order_by"] | null,
	Usuario?:ValueTypes["autenticacao_Usuarios_order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Propostas */
["comercial_Propostas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Propostas" */
["comercial_Propostas_select_column"]:comercial_Propostas_select_column;
	/** input type for updating data in table "comercial.Propostas" */
["comercial_Propostas_set_input"]: {
	Cliente_Id?:ValueTypes["uuid"] | null,
	DataAceito?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Lead_Id?:ValueTypes["uuid"] | null,
	Situacao_Id?:ValueTypes["comercial_Propostas_Situacoes_enum"] | null,
	Ticket_Id?:ValueTypes["uuid"] | null,
	TipoDePagamento_Id?:ValueTypes["vendas_TiposDePagamento_enum"] | null,
	TipoDeRecorrencia_Id?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Propostas" */
["comercial_Propostas_update_column"]:comercial_Propostas_update_column;
	/** columns and relationships of "comercial.Servicos" */
["comercial_Servicos"]: AliasType<{
Atributos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos"]],
Atributos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos_aggregate"]],
Categorias?: [{	/** JSON select path */
	path?:string | null},true],
Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos"]],
Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos_aggregate"]],
Fornecedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos"]],
Fornecedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_aggregate"]],
	Id?:true,
	Nome?:true,
Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades"]],
Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades_aggregate"]],
Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_bool_exp"] | null},ValueTypes["comercial_Planos"]],
Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_bool_exp"] | null},ValueTypes["comercial_Planos_aggregate"]],
PrestadoresDeServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
PrestadoresDeServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate"]],
Produtos_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos"]],
Produtos_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos_aggregate"]],
Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos"]],
Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos_aggregate"]],
Servicos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos"]],
Servicos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos_aggregate"]],
Servicos_ServicosDependente?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos"]],
Servicos_ServicosDependente_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos_aggregate"]],
Tarifas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas"]],
Tarifas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas_aggregate"]],
	/** An object relationship */
	Tipo?:ValueTypes["comercial_Servicos_Tipos"],
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
servicosServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos"]],
servicosServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos_aggregate"]],
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos"]: AliasType<{
	/** An object relationship */
	Atributo?:ValueTypes["comercial_Atributos"],
	Atributo_Id?:true,
	Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Atributos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Atributos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Atributos_max_fields"],
	min?:ValueTypes["comercial_Servicos_Atributos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_Atributos_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_Atributos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Atributos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Atributos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Atributos_bool_exp"]: {
	Atributo?:ValueTypes["comercial_Atributos_bool_exp"] | null,
	Atributo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Atributos_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Atributos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_constraint"]:comercial_Servicos_Atributos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_insert_input"]: {
	Atributo?:ValueTypes["comercial_Atributos_obj_rel_insert_input"] | null,
	Atributo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_Atributos_max_fields"]: AliasType<{
	Atributo_Id?:true,
	Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_max_order_by"]: {
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_Atributos_min_fields"]: AliasType<{
	Atributo_Id?:true,
	Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_min_order_by"]: {
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Atributos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Atributos_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Atributos_update_column"][],
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Atributos". */
["comercial_Servicos_Atributos_order_by"]: {
	Atributo?:ValueTypes["comercial_Atributos_order_by"] | null,
	Atributo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Atributos */
["comercial_Servicos_Atributos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_select_column"]:comercial_Servicos_Atributos_select_column;
	/** input type for updating data in table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_set_input"]: {
	Atributo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_update_column"]:comercial_Servicos_Atributos_update_column;
	/** columns and relationships of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades"]: AliasType<{
	/** An object relationship */
	Combo?:ValueTypes["comercial_Combos"],
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
OportunidadesDePropostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades"]],
OportunidadesDePropostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades_aggregate"]],
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Oportunidades_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Oportunidades"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["comercial_Servicos_Oportunidades_avg_fields"],
count?: [{	columns?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Oportunidades_max_fields"],
	min?:ValueTypes["comercial_Servicos_Oportunidades_min_fields"],
	stddev?:ValueTypes["comercial_Servicos_Oportunidades_stddev_fields"],
	stddev_pop?:ValueTypes["comercial_Servicos_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ValueTypes["comercial_Servicos_Oportunidades_stddev_samp_fields"],
	sum?:ValueTypes["comercial_Servicos_Oportunidades_sum_fields"],
	var_pop?:ValueTypes["comercial_Servicos_Oportunidades_var_pop_fields"],
	var_samp?:ValueTypes["comercial_Servicos_Oportunidades_var_samp_fields"],
	variance?:ValueTypes["comercial_Servicos_Oportunidades_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_order_by"]: {
	avg?:ValueTypes["comercial_Servicos_Oportunidades_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_Oportunidades_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_Oportunidades_min_order_by"] | null,
	stddev?:ValueTypes["comercial_Servicos_Oportunidades_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["comercial_Servicos_Oportunidades_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["comercial_Servicos_Oportunidades_stddev_samp_order_by"] | null,
	sum?:ValueTypes["comercial_Servicos_Oportunidades_sum_order_by"] | null,
	var_pop?:ValueTypes["comercial_Servicos_Oportunidades_var_pop_order_by"] | null,
	var_samp?:ValueTypes["comercial_Servicos_Oportunidades_var_samp_order_by"] | null,
	variance?:ValueTypes["comercial_Servicos_Oportunidades_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Oportunidades_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Oportunidades_on_conflict"] | null
};
	/** aggregate avg on columns */
["comercial_Servicos_Oportunidades_avg_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_avg_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Oportunidades_bool_exp"]: {
	Combo?:ValueTypes["comercial_Combos_bool_exp"] | null,
	Combo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	OportunidadesDePropostas?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_constraint"]:comercial_Servicos_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_inc_input"]: {
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_insert_input"]: {
	Combo?:ValueTypes["comercial_Combos_obj_rel_insert_input"] | null,
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	OportunidadesDePropostas?:ValueTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_Oportunidades_max_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_max_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_Oportunidades_min_fields"]: AliasType<{
	Combo_Id?:true,
	Id?:true,
	Nome?:true,
	Servico_Id?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_min_order_by"]: {
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Oportunidades"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Oportunidades_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Oportunidades_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Oportunidades_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Oportunidades_update_column"][],
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Oportunidades". */
["comercial_Servicos_Oportunidades_order_by"]: {
	Combo?:ValueTypes["comercial_Combos_order_by"] | null,
	Combo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	OportunidadesDePropostas_aggregate?:ValueTypes["comercial_Propostas_Oportunidades_aggregate_order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Oportunidades */
["comercial_Servicos_Oportunidades_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_select_column"]:comercial_Servicos_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_set_input"]: {
	Combo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["comercial_Servicos_Oportunidades_stddev_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["comercial_Servicos_Oportunidades_stddev_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["comercial_Servicos_Oportunidades_stddev_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["comercial_Servicos_Oportunidades_sum_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_sum_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_update_column"]:comercial_Servicos_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Servicos_Oportunidades_var_pop_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_pop_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["comercial_Servicos_Oportunidades_var_samp_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_samp_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["comercial_Servicos_Oportunidades_variance_fields"]: AliasType<{
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_variance_order_by"]: {
	Valor?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["comercial_Produtos"],
	Produto_Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Produtos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Produtos_max_fields"],
	min?:ValueTypes["comercial_Servicos_Produtos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_Produtos_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_Produtos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Produtos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Produtos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["comercial_Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Produtos_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_constraint"]:comercial_Servicos_Produtos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["comercial_Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_Produtos_max_fields"]: AliasType<{
	Id?:true,
	Produto_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_Produtos_min_fields"]: AliasType<{
	Id?:true,
	Produto_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Produtos_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Produtos_update_column"][],
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Produtos". */
["comercial_Servicos_Produtos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["comercial_Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Produtos */
["comercial_Servicos_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_select_column"]:comercial_Servicos_Produtos_select_column;
	/** input type for updating data in table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_update_column"]:comercial_Servicos_Produtos_update_column;
	/** columns and relationships of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	/** An object relationship */
	ServicoDependente?:ValueTypes["comercial_Servicos"],
	ServicoDependente_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Servicos_max_fields"],
	min?:ValueTypes["comercial_Servicos_Servicos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_Servicos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Servicos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Servicos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	ServicoDependente?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	ServicoDependente_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_constraint"]:comercial_Servicos_Servicos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	ServicoDependente?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	ServicoDependente_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_Servicos_max_fields"]: AliasType<{
	Id?:true,
	ServicoDependente_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ServicoDependente_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_Servicos_min_fields"]: AliasType<{
	Id?:true,
	ServicoDependente_Id?:true,
	Servico_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	ServicoDependente_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Servicos"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Servicos_update_column"][],
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Servicos". */
["comercial_Servicos_Servicos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	ServicoDependente?:ValueTypes["comercial_Servicos_order_by"] | null,
	ServicoDependente_Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Servicos */
["comercial_Servicos_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_select_column"]:comercial_Servicos_Servicos_select_column;
	/** input type for updating data in table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	ServicoDependente_Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_update_column"]:comercial_Servicos_Servicos_update_column;
	/** columns and relationships of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Servico?:ValueTypes["comercial_Servicos"],
	Servico_Id?:true,
	/** An object relationship */
	Tarifa?:ValueTypes["comercial_Tarifas"],
	Tarifa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Tarifas_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Tarifas"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Tarifas_max_fields"],
	min?:ValueTypes["comercial_Servicos_Tarifas_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_Tarifas_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_Tarifas_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Tarifas_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tarifas_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tarifas_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Servico?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Servico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_bool_exp"] | null,
	Tarifa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_constraint"]:comercial_Servicos_Tarifas_constraint;
	/** input type for inserting data into table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Servico?:ValueTypes["comercial_Servicos_obj_rel_insert_input"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_obj_rel_insert_input"] | null,
	Tarifa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_Tarifas_max_fields"]: AliasType<{
	Id?:true,
	Servico_Id?:true,
	Tarifa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_Tarifas_min_fields"]: AliasType<{
	Id?:true,
	Servico_Id?:true,
	Tarifa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Tarifas"],
		__typename?: true
}>;
	/** on conflict condition type for table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Tarifas_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Tarifas_update_column"][],
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Tarifas". */
["comercial_Servicos_Tarifas_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Servico?:ValueTypes["comercial_Servicos_order_by"] | null,
	Servico_Id?:ValueTypes["order_by"] | null,
	Tarifa?:ValueTypes["comercial_Tarifas_order_by"] | null,
	Tarifa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Tarifas */
["comercial_Servicos_Tarifas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_select_column"]:comercial_Servicos_Tarifas_select_column;
	/** input type for updating data in table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Servico_Id?:ValueTypes["uuid"] | null,
	Tarifa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_update_column"]:comercial_Servicos_Tarifas_update_column;
	/** columns and relationships of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos"]: AliasType<{
	Comentario?:true,
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_Tipos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos_Tipos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_Tipos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_Tipos_max_fields"],
	min?:ValueTypes["comercial_Servicos_Tipos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tipos_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Servicos?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_Tipos_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_Tipos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_Tipos_bool_exp"][]
};
	/** unique or primary key constraints on table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_constraint"]:comercial_Servicos_Tipos_constraint;
	["comercial_Servicos_Tipos_enum"]:comercial_Servicos_Tipos_enum;
	/** Boolean expression to compare columns of type "comercial_Servicos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Servicos_Tipos_enum_comparison_exp"]: {
	_eq?:ValueTypes["comercial_Servicos_Tipos_enum"] | null,
	_in?:ValueTypes["comercial_Servicos_Tipos_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["comercial_Servicos_Tipos_enum"] | null,
	_nin?:ValueTypes["comercial_Servicos_Tipos_enum"][]
};
	/** input type for inserting data into table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_insert_input"]: {
	Comentario?:string | null,
	Servicos?:ValueTypes["comercial_Servicos_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["comercial_Servicos_Tipos_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Servicos_Tipos_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos_Tipos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_Tipos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tipos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_Tipos_constraint"],
	update_columns:ValueTypes["comercial_Servicos_Tipos_update_column"][],
	where?:ValueTypes["comercial_Servicos_Tipos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos_Tipos". */
["comercial_Servicos_Tipos_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Servicos_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos_Tipos */
["comercial_Servicos_Tipos_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_select_column"]:comercial_Servicos_Tipos_select_column;
	/** input type for updating data in table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_update_column"]:comercial_Servicos_Tipos_update_column;
	/** aggregated selection of "comercial.Servicos" */
["comercial_Servicos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Servicos_aggregate_fields"],
	nodes?:ValueTypes["comercial_Servicos"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Servicos" */
["comercial_Servicos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Servicos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Servicos_max_fields"],
	min?:ValueTypes["comercial_Servicos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "comercial.Servicos" */
["comercial_Servicos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["comercial_Servicos_max_order_by"] | null,
	min?:ValueTypes["comercial_Servicos_min_order_by"] | null
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_append_input"]: {
	Categorias?:ValueTypes["jsonb"] | null
};
	/** input type for inserting array relation for remote table "comercial.Servicos" */
["comercial_Servicos_arr_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "comercial.Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_bool_exp"]: {
	Atributos?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null,
	Categorias?:ValueTypes["jsonb_comparison_exp"] | null,
	Combos?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null,
	Fornecedores?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Oportunidades?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null,
	Planos?:ValueTypes["comercial_Planos_bool_exp"] | null,
	PrestadoresDeServicos?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null,
	Produtos_Servicos?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null,
	Servicos_Produtos?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null,
	Servicos_ServicosDependente?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null,
	Tarifas?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null,
	Tipo?:ValueTypes["comercial_Servicos_Tipos_bool_exp"] | null,
	Tipo_Id?:ValueTypes["comercial_Servicos_Tipos_enum_comparison_exp"] | null,
	_and?:ValueTypes["comercial_Servicos_bool_exp"][],
	_not?:ValueTypes["comercial_Servicos_bool_exp"] | null,
	_or?:ValueTypes["comercial_Servicos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	servicosServicos?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Servicos" */
["comercial_Servicos_constraint"]:comercial_Servicos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Servicos_delete_at_path_input"]: {
	Categorias?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Servicos_delete_elem_input"]: {
	Categorias?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Servicos_delete_key_input"]: {
	Categorias?:string | null
};
	/** input type for inserting data into table "comercial.Servicos" */
["comercial_Servicos_insert_input"]: {
	Atributos?:ValueTypes["comercial_Servicos_Atributos_arr_rel_insert_input"] | null,
	Categorias?:ValueTypes["jsonb"] | null,
	Combos?:ValueTypes["comercial_Combos_Servicos_arr_rel_insert_input"] | null,
	Fornecedores?:ValueTypes["comercial_Fornecedores_Servicos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Oportunidades?:ValueTypes["comercial_Servicos_Oportunidades_arr_rel_insert_input"] | null,
	Planos?:ValueTypes["comercial_Planos_arr_rel_insert_input"] | null,
	PrestadoresDeServicos?:ValueTypes["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"] | null,
	Produtos_Servicos?:ValueTypes["comercial_Produtos_Servicos_arr_rel_insert_input"] | null,
	Propostas?:ValueTypes["comercial_Propostas_Servicos_arr_rel_insert_input"] | null,
	Servicos_Produtos?:ValueTypes["comercial_Servicos_Produtos_arr_rel_insert_input"] | null,
	Servicos_ServicosDependente?:ValueTypes["comercial_Servicos_Servicos_arr_rel_insert_input"] | null,
	Tarifas?:ValueTypes["comercial_Servicos_Tarifas_arr_rel_insert_input"] | null,
	Tipo?:ValueTypes["comercial_Servicos_Tipos_obj_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["comercial_Servicos_Tipos_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	servicosServicos?:ValueTypes["comercial_Servicos_Servicos_arr_rel_insert_input"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Servicos_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "comercial.Servicos" */
["comercial_Servicos_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["comercial_Servicos_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "comercial.Servicos" */
["comercial_Servicos_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "comercial.Servicos" */
["comercial_Servicos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Servicos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Servicos" */
["comercial_Servicos_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Servicos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Servicos" */
["comercial_Servicos_on_conflict"]: {
	constraint:ValueTypes["comercial_Servicos_constraint"],
	update_columns:ValueTypes["comercial_Servicos_update_column"][],
	where?:ValueTypes["comercial_Servicos_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Servicos". */
["comercial_Servicos_order_by"]: {
	Atributos_aggregate?:ValueTypes["comercial_Servicos_Atributos_aggregate_order_by"] | null,
	Categorias?:ValueTypes["order_by"] | null,
	Combos_aggregate?:ValueTypes["comercial_Combos_Servicos_aggregate_order_by"] | null,
	Fornecedores_aggregate?:ValueTypes["comercial_Fornecedores_Servicos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Oportunidades_aggregate?:ValueTypes["comercial_Servicos_Oportunidades_aggregate_order_by"] | null,
	Planos_aggregate?:ValueTypes["comercial_Planos_aggregate_order_by"] | null,
	PrestadoresDeServicos_aggregate?:ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"] | null,
	Produtos_Servicos_aggregate?:ValueTypes["comercial_Produtos_Servicos_aggregate_order_by"] | null,
	Propostas_aggregate?:ValueTypes["comercial_Propostas_Servicos_aggregate_order_by"] | null,
	Servicos_Produtos_aggregate?:ValueTypes["comercial_Servicos_Produtos_aggregate_order_by"] | null,
	Servicos_ServicosDependente_aggregate?:ValueTypes["comercial_Servicos_Servicos_aggregate_order_by"] | null,
	Tarifas_aggregate?:ValueTypes["comercial_Servicos_Tarifas_aggregate_order_by"] | null,
	Tipo?:ValueTypes["comercial_Servicos_Tipos_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	servicosServicos_aggregate?:ValueTypes["comercial_Servicos_Servicos_aggregate_order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Servicos */
["comercial_Servicos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_prepend_input"]: {
	Categorias?:ValueTypes["jsonb"] | null
};
	/** select columns of table "comercial.Servicos" */
["comercial_Servicos_select_column"]:comercial_Servicos_select_column;
	/** input type for updating data in table "comercial.Servicos" */
["comercial_Servicos_set_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Tipo_Id?:ValueTypes["comercial_Servicos_Tipos_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Servicos" */
["comercial_Servicos_update_column"]:comercial_Servicos_update_column;
	/** columns and relationships of "comercial.Tarifas" */
["comercial_Tarifas"]: AliasType<{
Fornecedores_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
Fornecedores_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"]],
	Id?:true,
	Nome?:true,
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "comercial.Tarifas" */
["comercial_Tarifas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["comercial_Tarifas_aggregate_fields"],
	nodes?:ValueTypes["comercial_Tarifas"],
		__typename?: true
}>;
	/** aggregate fields of "comercial.Tarifas" */
["comercial_Tarifas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["comercial_Tarifas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["comercial_Tarifas_max_fields"],
	min?:ValueTypes["comercial_Tarifas_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "comercial.Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Tarifas_bool_exp"]: {
	Fornecedores_Servicos?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Servicos?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null,
	_and?:ValueTypes["comercial_Tarifas_bool_exp"][],
	_not?:ValueTypes["comercial_Tarifas_bool_exp"] | null,
	_or?:ValueTypes["comercial_Tarifas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "comercial.Tarifas" */
["comercial_Tarifas_constraint"]:comercial_Tarifas_constraint;
	/** input type for inserting data into table "comercial.Tarifas" */
["comercial_Tarifas_insert_input"]: {
	Fornecedores_Servicos?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Servicos?:ValueTypes["comercial_Servicos_Tarifas_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["comercial_Tarifas_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["comercial_Tarifas_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "comercial.Tarifas" */
["comercial_Tarifas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["comercial_Tarifas"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "comercial.Tarifas" */
["comercial_Tarifas_obj_rel_insert_input"]: {
	data:ValueTypes["comercial_Tarifas_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Tarifas_on_conflict"] | null
};
	/** on conflict condition type for table "comercial.Tarifas" */
["comercial_Tarifas_on_conflict"]: {
	constraint:ValueTypes["comercial_Tarifas_constraint"],
	update_columns:ValueTypes["comercial_Tarifas_update_column"][],
	where?:ValueTypes["comercial_Tarifas_bool_exp"] | null
};
	/** Ordering options when selecting data from "comercial.Tarifas". */
["comercial_Tarifas_order_by"]: {
	Fornecedores_Servicos_aggregate?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_Servicos_Tarifas_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: comercial_Tarifas */
["comercial_Tarifas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "comercial.Tarifas" */
["comercial_Tarifas_select_column"]:comercial_Tarifas_select_column;
	/** input type for updating data in table "comercial.Tarifas" */
["comercial_Tarifas_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "comercial.Tarifas" */
["comercial_Tarifas_update_column"]:comercial_Tarifas_update_column;
	/** columns and relationships of "contatos.Emails" */
["contatos_Emails"]: AliasType<{
Categorias?: [{	/** JSON select path */
	path?:string | null},true],
	Email?:true,
	Id?:true,
Identidades?: [{	/** JSON select path */
	path?:string | null},true],
	NomeDoResponsavel?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "contatos.Emails" */
["contatos_Emails_aggregate"]: AliasType<{
	aggregate?:ValueTypes["contatos_Emails_aggregate_fields"],
	nodes?:ValueTypes["contatos_Emails"],
		__typename?: true
}>;
	/** aggregate fields of "contatos.Emails" */
["contatos_Emails_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["contatos_Emails_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["contatos_Emails_max_fields"],
	min?:ValueTypes["contatos_Emails_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_append_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "contatos.Emails". All fields are combined with a logical 'AND'. */
["contatos_Emails_bool_exp"]: {
	Categorias?:ValueTypes["jsonb_comparison_exp"] | null,
	Email?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Identidades?:ValueTypes["jsonb_comparison_exp"] | null,
	NomeDoResponsavel?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["contatos_Emails_bool_exp"][],
	_not?:ValueTypes["contatos_Emails_bool_exp"] | null,
	_or?:ValueTypes["contatos_Emails_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "contatos.Emails" */
["contatos_Emails_constraint"]:contatos_Emails_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Emails_delete_at_path_input"]: {
	Categorias?:string[],
	Identidades?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Emails_delete_elem_input"]: {
	Categorias?:number | null,
	Identidades?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Emails_delete_key_input"]: {
	Categorias?:string | null,
	Identidades?:string | null
};
	/** input type for inserting data into table "contatos.Emails" */
["contatos_Emails_insert_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	NomeDoResponsavel?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["contatos_Emails_max_fields"]: AliasType<{
	Email?:true,
	Id?:true,
	NomeDoResponsavel?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["contatos_Emails_min_fields"]: AliasType<{
	Email?:true,
	Id?:true,
	NomeDoResponsavel?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "contatos.Emails" */
["contatos_Emails_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["contatos_Emails"],
		__typename?: true
}>;
	/** on conflict condition type for table "contatos.Emails" */
["contatos_Emails_on_conflict"]: {
	constraint:ValueTypes["contatos_Emails_constraint"],
	update_columns:ValueTypes["contatos_Emails_update_column"][],
	where?:ValueTypes["contatos_Emails_bool_exp"] | null
};
	/** Ordering options when selecting data from "contatos.Emails". */
["contatos_Emails_order_by"]: {
	Categorias?:ValueTypes["order_by"] | null,
	Email?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Identidades?:ValueTypes["order_by"] | null,
	NomeDoResponsavel?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: contatos_Emails */
["contatos_Emails_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_prepend_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null
};
	/** select columns of table "contatos.Emails" */
["contatos_Emails_select_column"]:contatos_Emails_select_column;
	/** input type for updating data in table "contatos.Emails" */
["contatos_Emails_set_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Email?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	NomeDoResponsavel?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "contatos.Emails" */
["contatos_Emails_update_column"]:contatos_Emails_update_column;
	/** columns and relationships of "contatos.Enderecos" */
["contatos_Enderecos"]: AliasType<{
	Bairro?:true,
Categorias?: [{	/** JSON select path */
	path?:string | null},true],
	Cep?:true,
	/** An object relationship */
	Cidade?:ValueTypes["EstadosEMunicipios"],
	Cidade_Id?:true,
	Complemento?:true,
	/** An object relationship */
	Estado?:ValueTypes["EstadosEMunicipios"],
	Estado_Id?:true,
	Id?:true,
Identidades?: [{	/** JSON select path */
	path?:string | null},true],
	Logradouro?:true,
	Numero?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "contatos.Enderecos" */
["contatos_Enderecos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["contatos_Enderecos_aggregate_fields"],
	nodes?:ValueTypes["contatos_Enderecos"],
		__typename?: true
}>;
	/** aggregate fields of "contatos.Enderecos" */
["contatos_Enderecos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["contatos_Enderecos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["contatos_Enderecos_max_fields"],
	min?:ValueTypes["contatos_Enderecos_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_append_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "contatos.Enderecos". All fields are combined with a logical 'AND'. */
["contatos_Enderecos_bool_exp"]: {
	Bairro?:ValueTypes["String_comparison_exp"] | null,
	Categorias?:ValueTypes["jsonb_comparison_exp"] | null,
	Cep?:ValueTypes["String_comparison_exp"] | null,
	Cidade?:ValueTypes["EstadosEMunicipios_bool_exp"] | null,
	Cidade_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Complemento?:ValueTypes["String_comparison_exp"] | null,
	Estado?:ValueTypes["EstadosEMunicipios_bool_exp"] | null,
	Estado_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Identidades?:ValueTypes["jsonb_comparison_exp"] | null,
	Logradouro?:ValueTypes["String_comparison_exp"] | null,
	Numero?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["contatos_Enderecos_bool_exp"][],
	_not?:ValueTypes["contatos_Enderecos_bool_exp"] | null,
	_or?:ValueTypes["contatos_Enderecos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "contatos.Enderecos" */
["contatos_Enderecos_constraint"]:contatos_Enderecos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Enderecos_delete_at_path_input"]: {
	Categorias?:string[],
	Identidades?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Enderecos_delete_elem_input"]: {
	Categorias?:number | null,
	Identidades?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Enderecos_delete_key_input"]: {
	Categorias?:string | null,
	Identidades?:string | null
};
	/** input type for inserting data into table "contatos.Enderecos" */
["contatos_Enderecos_insert_input"]: {
	Bairro?:string | null,
	Categorias?:ValueTypes["jsonb"] | null,
	Cep?:string | null,
	Cidade?:ValueTypes["EstadosEMunicipios_obj_rel_insert_input"] | null,
	Cidade_Id?:ValueTypes["uuid"] | null,
	Complemento?:string | null,
	Estado?:ValueTypes["EstadosEMunicipios_obj_rel_insert_input"] | null,
	Estado_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	Logradouro?:string | null,
	Numero?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["contatos_Enderecos_max_fields"]: AliasType<{
	Bairro?:true,
	Cep?:true,
	Cidade_Id?:true,
	Complemento?:true,
	Estado_Id?:true,
	Id?:true,
	Logradouro?:true,
	Numero?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["contatos_Enderecos_min_fields"]: AliasType<{
	Bairro?:true,
	Cep?:true,
	Cidade_Id?:true,
	Complemento?:true,
	Estado_Id?:true,
	Id?:true,
	Logradouro?:true,
	Numero?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "contatos.Enderecos" */
["contatos_Enderecos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["contatos_Enderecos"],
		__typename?: true
}>;
	/** on conflict condition type for table "contatos.Enderecos" */
["contatos_Enderecos_on_conflict"]: {
	constraint:ValueTypes["contatos_Enderecos_constraint"],
	update_columns:ValueTypes["contatos_Enderecos_update_column"][],
	where?:ValueTypes["contatos_Enderecos_bool_exp"] | null
};
	/** Ordering options when selecting data from "contatos.Enderecos". */
["contatos_Enderecos_order_by"]: {
	Bairro?:ValueTypes["order_by"] | null,
	Categorias?:ValueTypes["order_by"] | null,
	Cep?:ValueTypes["order_by"] | null,
	Cidade?:ValueTypes["EstadosEMunicipios_order_by"] | null,
	Cidade_Id?:ValueTypes["order_by"] | null,
	Complemento?:ValueTypes["order_by"] | null,
	Estado?:ValueTypes["EstadosEMunicipios_order_by"] | null,
	Estado_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Identidades?:ValueTypes["order_by"] | null,
	Logradouro?:ValueTypes["order_by"] | null,
	Numero?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: contatos_Enderecos */
["contatos_Enderecos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_prepend_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null
};
	/** select columns of table "contatos.Enderecos" */
["contatos_Enderecos_select_column"]:contatos_Enderecos_select_column;
	/** input type for updating data in table "contatos.Enderecos" */
["contatos_Enderecos_set_input"]: {
	Bairro?:string | null,
	Categorias?:ValueTypes["jsonb"] | null,
	Cep?:string | null,
	Cidade_Id?:ValueTypes["uuid"] | null,
	Complemento?:string | null,
	Estado_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	Logradouro?:string | null,
	Numero?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "contatos.Enderecos" */
["contatos_Enderecos_update_column"]:contatos_Enderecos_update_column;
	/** columns and relationships of "contatos.Logs" */
["contatos_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "contatos.Logs" */
["contatos_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["contatos_Logs_aggregate_fields"],
	nodes?:ValueTypes["contatos_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "contatos.Logs" */
["contatos_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["contatos_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["contatos_Logs_max_fields"],
	min?:ValueTypes["contatos_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "contatos.Logs". All fields are combined with a logical 'AND'. */
["contatos_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["contatos_Logs_bool_exp"][],
	_not?:ValueTypes["contatos_Logs_bool_exp"] | null,
	_or?:ValueTypes["contatos_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "contatos.Logs" */
["contatos_Logs_constraint"]:contatos_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "contatos.Logs" */
["contatos_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["contatos_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["contatos_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "contatos.Logs" */
["contatos_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["contatos_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "contatos.Logs" */
["contatos_Logs_on_conflict"]: {
	constraint:ValueTypes["contatos_Logs_constraint"],
	update_columns:ValueTypes["contatos_Logs_update_column"][],
	where?:ValueTypes["contatos_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "contatos.Logs". */
["contatos_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: contatos_Logs */
["contatos_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "contatos.Logs" */
["contatos_Logs_select_column"]:contatos_Logs_select_column;
	/** input type for updating data in table "contatos.Logs" */
["contatos_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "contatos.Logs" */
["contatos_Logs_update_column"]:contatos_Logs_update_column;
	/** columns and relationships of "contatos.Telefones" */
["contatos_Telefones"]: AliasType<{
Categorias?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
Identidades?: [{	/** JSON select path */
	path?:string | null},true],
	NomeDoResponsavel?:true,
	Telefone?:true,
Tipos?: [{	/** JSON select path */
	path?:string | null},true],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "contatos.Telefones" */
["contatos_Telefones_aggregate"]: AliasType<{
	aggregate?:ValueTypes["contatos_Telefones_aggregate_fields"],
	nodes?:ValueTypes["contatos_Telefones"],
		__typename?: true
}>;
	/** aggregate fields of "contatos.Telefones" */
["contatos_Telefones_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["contatos_Telefones_avg_fields"],
count?: [{	columns?:ValueTypes["contatos_Telefones_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["contatos_Telefones_max_fields"],
	min?:ValueTypes["contatos_Telefones_min_fields"],
	stddev?:ValueTypes["contatos_Telefones_stddev_fields"],
	stddev_pop?:ValueTypes["contatos_Telefones_stddev_pop_fields"],
	stddev_samp?:ValueTypes["contatos_Telefones_stddev_samp_fields"],
	sum?:ValueTypes["contatos_Telefones_sum_fields"],
	var_pop?:ValueTypes["contatos_Telefones_var_pop_fields"],
	var_samp?:ValueTypes["contatos_Telefones_var_samp_fields"],
	variance?:ValueTypes["contatos_Telefones_variance_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_append_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	Tipos?:ValueTypes["jsonb"] | null
};
	/** aggregate avg on columns */
["contatos_Telefones_avg_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "contatos.Telefones". All fields are combined with a logical 'AND'. */
["contatos_Telefones_bool_exp"]: {
	Categorias?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Identidades?:ValueTypes["jsonb_comparison_exp"] | null,
	NomeDoResponsavel?:ValueTypes["String_comparison_exp"] | null,
	Telefone?:ValueTypes["bigint_comparison_exp"] | null,
	Tipos?:ValueTypes["jsonb_comparison_exp"] | null,
	_and?:ValueTypes["contatos_Telefones_bool_exp"][],
	_not?:ValueTypes["contatos_Telefones_bool_exp"] | null,
	_or?:ValueTypes["contatos_Telefones_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "contatos.Telefones" */
["contatos_Telefones_constraint"]:contatos_Telefones_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Telefones_delete_at_path_input"]: {
	Categorias?:string[],
	Identidades?:string[],
	Tipos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Telefones_delete_elem_input"]: {
	Categorias?:number | null,
	Identidades?:number | null,
	Tipos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Telefones_delete_key_input"]: {
	Categorias?:string | null,
	Identidades?:string | null,
	Tipos?:string | null
};
	/** input type for incrementing numeric columns in table "contatos.Telefones" */
["contatos_Telefones_inc_input"]: {
	Telefone?:ValueTypes["bigint"] | null
};
	/** input type for inserting data into table "contatos.Telefones" */
["contatos_Telefones_insert_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	NomeDoResponsavel?:string | null,
	Telefone?:ValueTypes["bigint"] | null,
	Tipos?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["contatos_Telefones_max_fields"]: AliasType<{
	Id?:true,
	NomeDoResponsavel?:true,
	Telefone?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["contatos_Telefones_min_fields"]: AliasType<{
	Id?:true,
	NomeDoResponsavel?:true,
	Telefone?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "contatos.Telefones" */
["contatos_Telefones_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["contatos_Telefones"],
		__typename?: true
}>;
	/** on conflict condition type for table "contatos.Telefones" */
["contatos_Telefones_on_conflict"]: {
	constraint:ValueTypes["contatos_Telefones_constraint"],
	update_columns:ValueTypes["contatos_Telefones_update_column"][],
	where?:ValueTypes["contatos_Telefones_bool_exp"] | null
};
	/** Ordering options when selecting data from "contatos.Telefones". */
["contatos_Telefones_order_by"]: {
	Categorias?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Identidades?:ValueTypes["order_by"] | null,
	NomeDoResponsavel?:ValueTypes["order_by"] | null,
	Telefone?:ValueTypes["order_by"] | null,
	Tipos?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: contatos_Telefones */
["contatos_Telefones_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_prepend_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	Tipos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "contatos.Telefones" */
["contatos_Telefones_select_column"]:contatos_Telefones_select_column;
	/** input type for updating data in table "contatos.Telefones" */
["contatos_Telefones_set_input"]: {
	Categorias?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identidades?:ValueTypes["jsonb"] | null,
	NomeDoResponsavel?:string | null,
	Telefone?:ValueTypes["bigint"] | null,
	Tipos?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["contatos_Telefones_stddev_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["contatos_Telefones_stddev_pop_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["contatos_Telefones_stddev_samp_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["contatos_Telefones_sum_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** update columns of table "contatos.Telefones" */
["contatos_Telefones_update_column"]:contatos_Telefones_update_column;
	/** aggregate var_pop on columns */
["contatos_Telefones_var_pop_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["contatos_Telefones_var_samp_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["contatos_Telefones_variance_fields"]: AliasType<{
	Telefone?:true,
		__typename?: true
}>;
	/** columns and relationships of "estoque.Enderecamentos" */
["estoque_Enderecamentos"]: AliasType<{
	Descricao?:true,
Filhos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos"]],
Filhos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos_aggregate"]],
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
	Nome?:true,
	/** An object relationship */
	Pai?:ValueTypes["estoque_Enderecamentos"],
	Pai_Id?:true,
	/** An object relationship */
	Tipo?:ValueTypes["estoque_TiposDeEnderecamentos"],
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Enderecamentos_aggregate_fields"],
	nodes?:ValueTypes["estoque_Enderecamentos"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Enderecamentos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Enderecamentos_max_fields"],
	min?:ValueTypes["estoque_Enderecamentos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["estoque_Enderecamentos_max_order_by"] | null,
	min?:ValueTypes["estoque_Enderecamentos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_arr_rel_insert_input"]: {
	data:ValueTypes["estoque_Enderecamentos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Enderecamentos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "estoque.Enderecamentos". All fields are combined with a logical 'AND'. */
["estoque_Enderecamentos_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Filhos?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Pai?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null,
	Pai_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Tipo?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Enderecamentos_bool_exp"][],
	_not?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null,
	_or?:ValueTypes["estoque_Enderecamentos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Enderecamentos" */
["estoque_Enderecamentos_constraint"]:estoque_Enderecamentos_constraint;
	/** input type for inserting data into table "estoque.Enderecamentos" */
["estoque_Enderecamentos_insert_input"]: {
	Descricao?:string | null,
	Filhos?:ValueTypes["estoque_Enderecamentos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["estoque_Itens_arr_rel_insert_input"] | null,
	Nome?:string | null,
	Pai?:ValueTypes["estoque_Enderecamentos_obj_rel_insert_input"] | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	Tipo?:ValueTypes["estoque_TiposDeEnderecamentos_obj_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Enderecamentos_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["estoque_Enderecamentos_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "estoque.Enderecamentos" */
["estoque_Enderecamentos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Enderecamentos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Enderecamentos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Enderecamentos_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Enderecamentos" */
["estoque_Enderecamentos_on_conflict"]: {
	constraint:ValueTypes["estoque_Enderecamentos_constraint"],
	update_columns:ValueTypes["estoque_Enderecamentos_update_column"][],
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Enderecamentos". */
["estoque_Enderecamentos_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Filhos_aggregate?:ValueTypes["estoque_Enderecamentos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["estoque_Itens_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai?:ValueTypes["estoque_Enderecamentos_order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["estoque_TiposDeEnderecamentos_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Enderecamentos */
["estoque_Enderecamentos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_select_column"]:estoque_Enderecamentos_select_column;
	/** input type for updating data in table "estoque.Enderecamentos" */
["estoque_Enderecamentos_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_update_column"]:estoque_Enderecamentos_update_column;
	/** columns and relationships of "estoque.Fabricantes" */
["estoque_Fabricantes"]: AliasType<{
	Descricao?:true,
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
Modelos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos"]],
Modelos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos_aggregate"]],
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Fabricantes_aggregate_fields"],
	nodes?:ValueTypes["estoque_Fabricantes"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Fabricantes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Fabricantes_max_fields"],
	min?:ValueTypes["estoque_Fabricantes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "estoque.Fabricantes". All fields are combined with a logical 'AND'. */
["estoque_Fabricantes_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Modelos?:ValueTypes["estoque_Modelos_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Fabricantes_bool_exp"][],
	_not?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	_or?:ValueTypes["estoque_Fabricantes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Fabricantes" */
["estoque_Fabricantes_constraint"]:estoque_Fabricantes_constraint;
	/** input type for inserting data into table "estoque.Fabricantes" */
["estoque_Fabricantes_insert_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["estoque_Itens_arr_rel_insert_input"] | null,
	Modelos?:ValueTypes["estoque_Modelos_arr_rel_insert_input"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Fabricantes_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["estoque_Fabricantes_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "estoque.Fabricantes" */
["estoque_Fabricantes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Fabricantes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Fabricantes" */
["estoque_Fabricantes_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Fabricantes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Fabricantes_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Fabricantes" */
["estoque_Fabricantes_on_conflict"]: {
	constraint:ValueTypes["estoque_Fabricantes_constraint"],
	update_columns:ValueTypes["estoque_Fabricantes_update_column"][],
	where?:ValueTypes["estoque_Fabricantes_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Fabricantes". */
["estoque_Fabricantes_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["estoque_Itens_aggregate_order_by"] | null,
	Modelos_aggregate?:ValueTypes["estoque_Modelos_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Fabricantes */
["estoque_Fabricantes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_select_column"]:estoque_Fabricantes_select_column;
	/** input type for updating data in table "estoque.Fabricantes" */
["estoque_Fabricantes_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_update_column"]:estoque_Fabricantes_update_column;
	/** columns and relationships of "estoque.Familias" */
["estoque_Familias"]: AliasType<{
	Descricao?:true,
Filhos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias"]],
Filhos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias_aggregate"]],
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
	Nome?:true,
	/** An object relationship */
	Pai?:ValueTypes["estoque_Familias"],
	Pai_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Familias" */
["estoque_Familias_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Familias_aggregate_fields"],
	nodes?:ValueTypes["estoque_Familias"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Familias" */
["estoque_Familias_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Familias_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Familias_max_fields"],
	min?:ValueTypes["estoque_Familias_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "estoque.Familias" */
["estoque_Familias_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["estoque_Familias_max_order_by"] | null,
	min?:ValueTypes["estoque_Familias_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "estoque.Familias" */
["estoque_Familias_arr_rel_insert_input"]: {
	data:ValueTypes["estoque_Familias_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Familias_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "estoque.Familias". All fields are combined with a logical 'AND'. */
["estoque_Familias_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Filhos?:ValueTypes["estoque_Familias_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Pai?:ValueTypes["estoque_Familias_bool_exp"] | null,
	Pai_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Familias_bool_exp"][],
	_not?:ValueTypes["estoque_Familias_bool_exp"] | null,
	_or?:ValueTypes["estoque_Familias_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Familias" */
["estoque_Familias_constraint"]:estoque_Familias_constraint;
	/** input type for inserting data into table "estoque.Familias" */
["estoque_Familias_insert_input"]: {
	Descricao?:string | null,
	Filhos?:ValueTypes["estoque_Familias_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["estoque_Itens_arr_rel_insert_input"] | null,
	Nome?:string | null,
	Pai?:ValueTypes["estoque_Familias_obj_rel_insert_input"] | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Familias_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "estoque.Familias" */
["estoque_Familias_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["estoque_Familias_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Pai_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "estoque.Familias" */
["estoque_Familias_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "estoque.Familias" */
["estoque_Familias_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Familias"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Familias" */
["estoque_Familias_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Familias_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Familias_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Familias" */
["estoque_Familias_on_conflict"]: {
	constraint:ValueTypes["estoque_Familias_constraint"],
	update_columns:ValueTypes["estoque_Familias_update_column"][],
	where?:ValueTypes["estoque_Familias_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Familias". */
["estoque_Familias_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Filhos_aggregate?:ValueTypes["estoque_Familias_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["estoque_Itens_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pai?:ValueTypes["estoque_Familias_order_by"] | null,
	Pai_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Familias */
["estoque_Familias_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Familias" */
["estoque_Familias_select_column"]:estoque_Familias_select_column;
	/** input type for updating data in table "estoque.Familias" */
["estoque_Familias_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Pai_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Familias" */
["estoque_Familias_update_column"]:estoque_Familias_update_column;
	/** columns and relationships of "estoque.Grupos" */
["estoque_Grupos"]: AliasType<{
	Descricao?:true,
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Grupos" */
["estoque_Grupos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Grupos_aggregate_fields"],
	nodes?:ValueTypes["estoque_Grupos"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Grupos" */
["estoque_Grupos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Grupos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Grupos_max_fields"],
	min?:ValueTypes["estoque_Grupos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "estoque.Grupos". All fields are combined with a logical 'AND'. */
["estoque_Grupos_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Grupos_bool_exp"][],
	_not?:ValueTypes["estoque_Grupos_bool_exp"] | null,
	_or?:ValueTypes["estoque_Grupos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Grupos" */
["estoque_Grupos_constraint"]:estoque_Grupos_constraint;
	/** input type for inserting data into table "estoque.Grupos" */
["estoque_Grupos_insert_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["estoque_Itens_arr_rel_insert_input"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Grupos_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["estoque_Grupos_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "estoque.Grupos" */
["estoque_Grupos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Grupos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Grupos" */
["estoque_Grupos_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Grupos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Grupos_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Grupos" */
["estoque_Grupos_on_conflict"]: {
	constraint:ValueTypes["estoque_Grupos_constraint"],
	update_columns:ValueTypes["estoque_Grupos_update_column"][],
	where?:ValueTypes["estoque_Grupos_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Grupos". */
["estoque_Grupos_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["estoque_Itens_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Grupos */
["estoque_Grupos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Grupos" */
["estoque_Grupos_select_column"]:estoque_Grupos_select_column;
	/** input type for updating data in table "estoque.Grupos" */
["estoque_Grupos_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Grupos" */
["estoque_Grupos_update_column"]:estoque_Grupos_update_column;
	/** columns and relationships of "estoque.Itens" */
["estoque_Itens"]: AliasType<{
	Classificacao?:true,
	Criticidade?:true,
	/** An object relationship */
	Enderecamento?:ValueTypes["estoque_Enderecamentos"],
	Enderecamento_Id?:true,
	EstoqueMinimo?:true,
	/** An object relationship */
	Fabricante?:ValueTypes["estoque_Fabricantes"],
	Fabricante_Id?:true,
	/** An object relationship */
	Familia?:ValueTypes["estoque_Familias"],
	Familia_Id?:true,
	/** An object relationship */
	Grupo?:ValueTypes["estoque_Grupos"],
	Grupo_Id?:true,
	Id?:true,
	/** An object relationship */
	Modelo?:ValueTypes["estoque_Modelos"],
	Modelo_Id?:true,
Movimentacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes"]],
Movimentacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes_aggregate"]],
	/** An object relationship */
	Produto?:ValueTypes["Produtos"],
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Itens" */
["estoque_Itens_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Itens_aggregate_fields"],
	nodes?:ValueTypes["estoque_Itens"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Itens" */
["estoque_Itens_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["estoque_Itens_avg_fields"],
count?: [{	columns?:ValueTypes["estoque_Itens_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Itens_max_fields"],
	min?:ValueTypes["estoque_Itens_min_fields"],
	stddev?:ValueTypes["estoque_Itens_stddev_fields"],
	stddev_pop?:ValueTypes["estoque_Itens_stddev_pop_fields"],
	stddev_samp?:ValueTypes["estoque_Itens_stddev_samp_fields"],
	sum?:ValueTypes["estoque_Itens_sum_fields"],
	var_pop?:ValueTypes["estoque_Itens_var_pop_fields"],
	var_samp?:ValueTypes["estoque_Itens_var_samp_fields"],
	variance?:ValueTypes["estoque_Itens_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "estoque.Itens" */
["estoque_Itens_aggregate_order_by"]: {
	avg?:ValueTypes["estoque_Itens_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["estoque_Itens_max_order_by"] | null,
	min?:ValueTypes["estoque_Itens_min_order_by"] | null,
	stddev?:ValueTypes["estoque_Itens_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["estoque_Itens_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["estoque_Itens_stddev_samp_order_by"] | null,
	sum?:ValueTypes["estoque_Itens_sum_order_by"] | null,
	var_pop?:ValueTypes["estoque_Itens_var_pop_order_by"] | null,
	var_samp?:ValueTypes["estoque_Itens_var_samp_order_by"] | null,
	variance?:ValueTypes["estoque_Itens_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "estoque.Itens" */
["estoque_Itens_arr_rel_insert_input"]: {
	data:ValueTypes["estoque_Itens_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Itens_on_conflict"] | null
};
	/** aggregate avg on columns */
["estoque_Itens_avg_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "estoque.Itens" */
["estoque_Itens_avg_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "estoque.Itens". All fields are combined with a logical 'AND'. */
["estoque_Itens_bool_exp"]: {
	Classificacao?:ValueTypes["String_comparison_exp"] | null,
	Criticidade?:ValueTypes["String_comparison_exp"] | null,
	Enderecamento?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null,
	Enderecamento_Id?:ValueTypes["uuid_comparison_exp"] | null,
	EstoqueMinimo?:ValueTypes["Int_comparison_exp"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	Fabricante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Familia?:ValueTypes["estoque_Familias_bool_exp"] | null,
	Familia_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Grupo?:ValueTypes["estoque_Grupos_bool_exp"] | null,
	Grupo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Modelo?:ValueTypes["estoque_Modelos_bool_exp"] | null,
	Modelo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Movimentacoes?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null,
	Produto?:ValueTypes["Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Itens_bool_exp"][],
	_not?:ValueTypes["estoque_Itens_bool_exp"] | null,
	_or?:ValueTypes["estoque_Itens_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Itens" */
["estoque_Itens_constraint"]:estoque_Itens_constraint;
	/** input type for incrementing numeric columns in table "estoque.Itens" */
["estoque_Itens_inc_input"]: {
	EstoqueMinimo?:number | null
};
	/** input type for inserting data into table "estoque.Itens" */
["estoque_Itens_insert_input"]: {
	Classificacao?:string | null,
	Criticidade?:string | null,
	Enderecamento?:ValueTypes["estoque_Enderecamentos_obj_rel_insert_input"] | null,
	Enderecamento_Id?:ValueTypes["uuid"] | null,
	EstoqueMinimo?:number | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_obj_rel_insert_input"] | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Familia?:ValueTypes["estoque_Familias_obj_rel_insert_input"] | null,
	Familia_Id?:ValueTypes["uuid"] | null,
	Grupo?:ValueTypes["estoque_Grupos_obj_rel_insert_input"] | null,
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Modelo?:ValueTypes["estoque_Modelos_obj_rel_insert_input"] | null,
	Modelo_Id?:ValueTypes["uuid"] | null,
	Movimentacoes?:ValueTypes["movimentacoes_Movimentacoes_arr_rel_insert_input"] | null,
	Produto?:ValueTypes["Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Itens_max_fields"]: AliasType<{
	Classificacao?:true,
	Criticidade?:true,
	Enderecamento_Id?:true,
	EstoqueMinimo?:true,
	Fabricante_Id?:true,
	Familia_Id?:true,
	Grupo_Id?:true,
	Id?:true,
	Modelo_Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "estoque.Itens" */
["estoque_Itens_max_order_by"]: {
	Classificacao?:ValueTypes["order_by"] | null,
	Criticidade?:ValueTypes["order_by"] | null,
	Enderecamento_Id?:ValueTypes["order_by"] | null,
	EstoqueMinimo?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Familia_Id?:ValueTypes["order_by"] | null,
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Modelo_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["estoque_Itens_min_fields"]: AliasType<{
	Classificacao?:true,
	Criticidade?:true,
	Enderecamento_Id?:true,
	EstoqueMinimo?:true,
	Fabricante_Id?:true,
	Familia_Id?:true,
	Grupo_Id?:true,
	Id?:true,
	Modelo_Id?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "estoque.Itens" */
["estoque_Itens_min_order_by"]: {
	Classificacao?:ValueTypes["order_by"] | null,
	Criticidade?:ValueTypes["order_by"] | null,
	Enderecamento_Id?:ValueTypes["order_by"] | null,
	EstoqueMinimo?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Familia_Id?:ValueTypes["order_by"] | null,
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Modelo_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "estoque.Itens" */
["estoque_Itens_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Itens"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Itens" */
["estoque_Itens_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Itens_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Itens_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Itens" */
["estoque_Itens_on_conflict"]: {
	constraint:ValueTypes["estoque_Itens_constraint"],
	update_columns:ValueTypes["estoque_Itens_update_column"][],
	where?:ValueTypes["estoque_Itens_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Itens". */
["estoque_Itens_order_by"]: {
	Classificacao?:ValueTypes["order_by"] | null,
	Criticidade?:ValueTypes["order_by"] | null,
	Enderecamento?:ValueTypes["estoque_Enderecamentos_order_by"] | null,
	Enderecamento_Id?:ValueTypes["order_by"] | null,
	EstoqueMinimo?:ValueTypes["order_by"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Familia?:ValueTypes["estoque_Familias_order_by"] | null,
	Familia_Id?:ValueTypes["order_by"] | null,
	Grupo?:ValueTypes["estoque_Grupos_order_by"] | null,
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Modelo?:ValueTypes["estoque_Modelos_order_by"] | null,
	Modelo_Id?:ValueTypes["order_by"] | null,
	Movimentacoes_aggregate?:ValueTypes["movimentacoes_Movimentacoes_aggregate_order_by"] | null,
	Produto?:ValueTypes["Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Itens */
["estoque_Itens_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Itens" */
["estoque_Itens_select_column"]:estoque_Itens_select_column;
	/** input type for updating data in table "estoque.Itens" */
["estoque_Itens_set_input"]: {
	Classificacao?:string | null,
	Criticidade?:string | null,
	Enderecamento_Id?:ValueTypes["uuid"] | null,
	EstoqueMinimo?:number | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Familia_Id?:ValueTypes["uuid"] | null,
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Modelo_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["estoque_Itens_stddev_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["estoque_Itens_stddev_pop_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_pop_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["estoque_Itens_stddev_samp_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_samp_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["estoque_Itens_sum_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "estoque.Itens" */
["estoque_Itens_sum_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** update columns of table "estoque.Itens" */
["estoque_Itens_update_column"]:estoque_Itens_update_column;
	/** aggregate var_pop on columns */
["estoque_Itens_var_pop_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "estoque.Itens" */
["estoque_Itens_var_pop_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["estoque_Itens_var_samp_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "estoque.Itens" */
["estoque_Itens_var_samp_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["estoque_Itens_variance_fields"]: AliasType<{
	EstoqueMinimo?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "estoque.Itens" */
["estoque_Itens_variance_order_by"]: {
	EstoqueMinimo?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "estoque.Logs" */
["estoque_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Logs" */
["estoque_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Logs_aggregate_fields"],
	nodes?:ValueTypes["estoque_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Logs" */
["estoque_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Logs_max_fields"],
	min?:ValueTypes["estoque_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "estoque.Logs". All fields are combined with a logical 'AND'. */
["estoque_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Logs_bool_exp"][],
	_not?:ValueTypes["estoque_Logs_bool_exp"] | null,
	_or?:ValueTypes["estoque_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Logs" */
["estoque_Logs_constraint"]:estoque_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["estoque_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["estoque_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["estoque_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "estoque.Logs" */
["estoque_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["estoque_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "estoque.Logs" */
["estoque_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "estoque.Logs" */
["estoque_Logs_on_conflict"]: {
	constraint:ValueTypes["estoque_Logs_constraint"],
	update_columns:ValueTypes["estoque_Logs_update_column"][],
	where?:ValueTypes["estoque_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Logs". */
["estoque_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Logs */
["estoque_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "estoque.Logs" */
["estoque_Logs_select_column"]:estoque_Logs_select_column;
	/** input type for updating data in table "estoque.Logs" */
["estoque_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Logs" */
["estoque_Logs_update_column"]:estoque_Logs_update_column;
	/** columns and relationships of "estoque.Modelos" */
["estoque_Modelos"]: AliasType<{
	Descricao?:true,
	/** An object relationship */
	Fabricante?:ValueTypes["estoque_Fabricantes"],
	Fabricante_Id?:true,
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
	Nome?:true,
	/** An object relationship */
	Produto?:ValueTypes["Produtos"],
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.Modelos" */
["estoque_Modelos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_Modelos_aggregate_fields"],
	nodes?:ValueTypes["estoque_Modelos"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.Modelos" */
["estoque_Modelos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["estoque_Modelos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_Modelos_max_fields"],
	min?:ValueTypes["estoque_Modelos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "estoque.Modelos" */
["estoque_Modelos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["estoque_Modelos_max_order_by"] | null,
	min?:ValueTypes["estoque_Modelos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "estoque.Modelos" */
["estoque_Modelos_arr_rel_insert_input"]: {
	data:ValueTypes["estoque_Modelos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Modelos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "estoque.Modelos". All fields are combined with a logical 'AND'. */
["estoque_Modelos_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	Fabricante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Produto?:ValueTypes["Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["estoque_Modelos_bool_exp"][],
	_not?:ValueTypes["estoque_Modelos_bool_exp"] | null,
	_or?:ValueTypes["estoque_Modelos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.Modelos" */
["estoque_Modelos_constraint"]:estoque_Modelos_constraint;
	/** input type for inserting data into table "estoque.Modelos" */
["estoque_Modelos_insert_input"]: {
	Descricao?:string | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_obj_rel_insert_input"] | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["estoque_Itens_arr_rel_insert_input"] | null,
	Nome?:string | null,
	Produto?:ValueTypes["Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_Modelos_max_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Nome?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "estoque.Modelos" */
["estoque_Modelos_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["estoque_Modelos_min_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Nome?:true,
	Produto_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "estoque.Modelos" */
["estoque_Modelos_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "estoque.Modelos" */
["estoque_Modelos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_Modelos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.Modelos" */
["estoque_Modelos_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_Modelos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Modelos_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.Modelos" */
["estoque_Modelos_on_conflict"]: {
	constraint:ValueTypes["estoque_Modelos_constraint"],
	update_columns:ValueTypes["estoque_Modelos_update_column"][],
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.Modelos". */
["estoque_Modelos_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["estoque_Itens_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_Modelos */
["estoque_Modelos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.Modelos" */
["estoque_Modelos_select_column"]:estoque_Modelos_select_column;
	/** input type for updating data in table "estoque.Modelos" */
["estoque_Modelos_set_input"]: {
	Descricao?:string | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "estoque.Modelos" */
["estoque_Modelos_update_column"]:estoque_Modelos_update_column;
	/** columns and relationships of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos"]: AliasType<{
	CodigoReferencia?:true,
	Descricao?:true,
Enderecamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos"]],
Enderecamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos_aggregate"]],
	Id?:true,
	Nome?:true,
	Slug?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["estoque_TiposDeEnderecamentos_aggregate_fields"],
	nodes?:ValueTypes["estoque_TiposDeEnderecamentos"],
		__typename?: true
}>;
	/** aggregate fields of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["estoque_TiposDeEnderecamentos_avg_fields"],
count?: [{	columns?:ValueTypes["estoque_TiposDeEnderecamentos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["estoque_TiposDeEnderecamentos_max_fields"],
	min?:ValueTypes["estoque_TiposDeEnderecamentos_min_fields"],
	stddev?:ValueTypes["estoque_TiposDeEnderecamentos_stddev_fields"],
	stddev_pop?:ValueTypes["estoque_TiposDeEnderecamentos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["estoque_TiposDeEnderecamentos_stddev_samp_fields"],
	sum?:ValueTypes["estoque_TiposDeEnderecamentos_sum_fields"],
	var_pop?:ValueTypes["estoque_TiposDeEnderecamentos_var_pop_fields"],
	var_samp?:ValueTypes["estoque_TiposDeEnderecamentos_var_samp_fields"],
	variance?:ValueTypes["estoque_TiposDeEnderecamentos_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["estoque_TiposDeEnderecamentos_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "estoque.TiposDeEnderecamentos". All fields are combined with a logical 'AND'. */
["estoque_TiposDeEnderecamentos_bool_exp"]: {
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Enderecamentos?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Slug?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"][],
	_not?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null,
	_or?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_constraint"]:estoque_TiposDeEnderecamentos_constraint;
	/** input type for incrementing numeric columns in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_insert_input"]: {
	CodigoReferencia?:number | null,
	Descricao?:string | null,
	Enderecamentos?:ValueTypes["estoque_Enderecamentos_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Slug?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["estoque_TiposDeEnderecamentos_max_fields"]: AliasType<{
	CodigoReferencia?:true,
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Slug?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["estoque_TiposDeEnderecamentos_min_fields"]: AliasType<{
	CodigoReferencia?:true,
	Descricao?:true,
	Id?:true,
	Nome?:true,
	Slug?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["estoque_TiposDeEnderecamentos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_obj_rel_insert_input"]: {
	data:ValueTypes["estoque_TiposDeEnderecamentos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_TiposDeEnderecamentos_on_conflict"] | null
};
	/** on conflict condition type for table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_on_conflict"]: {
	constraint:ValueTypes["estoque_TiposDeEnderecamentos_constraint"],
	update_columns:ValueTypes["estoque_TiposDeEnderecamentos_update_column"][],
	where?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null
};
	/** Ordering options when selecting data from "estoque.TiposDeEnderecamentos". */
["estoque_TiposDeEnderecamentos_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Descricao?:ValueTypes["order_by"] | null,
	Enderecamentos_aggregate?:ValueTypes["estoque_Enderecamentos_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Slug?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: estoque_TiposDeEnderecamentos */
["estoque_TiposDeEnderecamentos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_select_column"]:estoque_TiposDeEnderecamentos_select_column;
	/** input type for updating data in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_set_input"]: {
	CodigoReferencia?:number | null,
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Slug?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["estoque_TiposDeEnderecamentos_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["estoque_TiposDeEnderecamentos_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["estoque_TiposDeEnderecamentos_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["estoque_TiposDeEnderecamentos_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** update columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_update_column"]:estoque_TiposDeEnderecamentos_update_column;
	/** aggregate var_pop on columns */
["estoque_TiposDeEnderecamentos_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["estoque_TiposDeEnderecamentos_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["estoque_TiposDeEnderecamentos_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	["float8"]:unknown;
	/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
["float8_comparison_exp"]: {
	_eq?:ValueTypes["float8"] | null,
	_gt?:ValueTypes["float8"] | null,
	_gte?:ValueTypes["float8"] | null,
	_in?:ValueTypes["float8"][],
	_is_null?:boolean | null,
	_lt?:ValueTypes["float8"] | null,
	_lte?:ValueTypes["float8"] | null,
	_neq?:ValueTypes["float8"] | null,
	_nin?:ValueTypes["float8"][]
};
	/** columns and relationships of "identidades.Clientes" */
["identidades_Clientes"]: AliasType<{
	Id?:true,
Leads?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Leads_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Leads_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Leads_bool_exp"] | null},ValueTypes["clientes_Leads"]],
Leads_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Leads_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Leads_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Leads_bool_exp"] | null},ValueTypes["clientes_Leads_aggregate"]],
	/** An object relationship */
	Pessoa?:ValueTypes["identidades_Pessoas"],
	Pessoa_Id?:true,
Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
Usuarios?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Usuarios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Usuarios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null},ValueTypes["autenticacao_Usuarios"]],
Usuarios_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Usuarios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Usuarios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null},ValueTypes["autenticacao_Usuarios_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos"]: AliasType<{
	DataAprovado?:true,
	DataRecusado?:true,
	Id?:true,
	MotivoRecusa?:true,
	Nome?:true,
	/** An object relationship */
	Pessoa?:ValueTypes["identidades_Pessoas"],
	Pessoa_Id?:true,
	/** An object relationship */
	Situacao?:ValueTypes["identidades_Clientes_Documentos_Situacoes"],
	Situacao_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes"]: AliasType<{
Clientes_Documentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos"]],
Clientes_Documentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos_aggregate"]],
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Clientes_Documentos_Situacoes_aggregate_fields"],
	nodes?:ValueTypes["identidades_Clientes_Documentos_Situacoes"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Clientes_Documentos_Situacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Clientes_Documentos_Situacoes_max_fields"],
	min?:ValueTypes["identidades_Clientes_Documentos_Situacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos_Situacoes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_bool_exp"]: {
	Clientes_Documentos?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null,
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"][],
	_not?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"] | null,
	_or?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_constraint"]:identidades_Clientes_Documentos_Situacoes_constraint;
	["identidades_Clientes_Documentos_Situacoes_enum"]:identidades_Clientes_Documentos_Situacoes_enum;
	/** Boolean expression to compare columns of type "identidades_Clientes_Documentos_Situacoes_enum". All fields are combined with logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"] | null,
	_in?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"] | null,
	_nin?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"][]
};
	/** input type for inserting data into table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_insert_input"]: {
	Clientes_Documentos?:ValueTypes["identidades_Clientes_Documentos_arr_rel_insert_input"] | null,
	Comentario?:string | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["identidades_Clientes_Documentos_Situacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["identidades_Clientes_Documentos_Situacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Clientes_Documentos_Situacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"]: {
	data:ValueTypes["identidades_Clientes_Documentos_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_Situacoes_on_conflict"] | null
};
	/** on conflict condition type for table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_on_conflict"]: {
	constraint:ValueTypes["identidades_Clientes_Documentos_Situacoes_constraint"],
	update_columns:ValueTypes["identidades_Clientes_Documentos_Situacoes_update_column"][],
	where?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Clientes_Documentos_Situacoes". */
["identidades_Clientes_Documentos_Situacoes_order_by"]: {
	Clientes_Documentos_aggregate?:ValueTypes["identidades_Clientes_Documentos_aggregate_order_by"] | null,
	Comentario?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Clientes_Documentos_Situacoes */
["identidades_Clientes_Documentos_Situacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_select_column"]:identidades_Clientes_Documentos_Situacoes_select_column;
	/** input type for updating data in table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_update_column"]:identidades_Clientes_Documentos_Situacoes_update_column;
	/** aggregated selection of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Clientes_Documentos_aggregate_fields"],
	nodes?:ValueTypes["identidades_Clientes_Documentos"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Clientes_Documentos_max_fields"],
	min?:ValueTypes["identidades_Clientes_Documentos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["identidades_Clientes_Documentos_max_order_by"] | null,
	min?:ValueTypes["identidades_Clientes_Documentos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_arr_rel_insert_input"]: {
	data:ValueTypes["identidades_Clientes_Documentos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_bool_exp"]: {
	DataAprovado?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataRecusado?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	MotivoRecusa?:ValueTypes["String_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	Pessoa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Situacao?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Clientes_Documentos_bool_exp"][],
	_not?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null,
	_or?:ValueTypes["identidades_Clientes_Documentos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_constraint"]:identidades_Clientes_Documentos_constraint;
	/** input type for inserting data into table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_insert_input"]: {
	DataAprovado?:ValueTypes["timestamptz"] | null,
	DataRecusado?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusa?:string | null,
	Nome?:string | null,
	Pessoa?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	Situacao?:ValueTypes["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Clientes_Documentos_max_fields"]: AliasType<{
	DataAprovado?:true,
	DataRecusado?:true,
	Id?:true,
	MotivoRecusa?:true,
	Nome?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_max_order_by"]: {
	DataAprovado?:ValueTypes["order_by"] | null,
	DataRecusado?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusa?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["identidades_Clientes_Documentos_min_fields"]: AliasType<{
	DataAprovado?:true,
	DataRecusado?:true,
	Id?:true,
	MotivoRecusa?:true,
	Nome?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_min_order_by"]: {
	DataAprovado?:ValueTypes["order_by"] | null,
	DataRecusado?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusa?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Clientes_Documentos"],
		__typename?: true
}>;
	/** on conflict condition type for table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_on_conflict"]: {
	constraint:ValueTypes["identidades_Clientes_Documentos_constraint"],
	update_columns:ValueTypes["identidades_Clientes_Documentos_update_column"][],
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Clientes_Documentos". */
["identidades_Clientes_Documentos_order_by"]: {
	DataAprovado?:ValueTypes["order_by"] | null,
	DataRecusado?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusa?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	Situacao?:ValueTypes["identidades_Clientes_Documentos_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Clientes_Documentos */
["identidades_Clientes_Documentos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_select_column"]:identidades_Clientes_Documentos_select_column;
	/** input type for updating data in table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_set_input"]: {
	DataAprovado?:ValueTypes["timestamptz"] | null,
	DataRecusado?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusa?:string | null,
	Nome?:string | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	Situacao_Id?:ValueTypes["identidades_Clientes_Documentos_Situacoes_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_update_column"]:identidades_Clientes_Documentos_update_column;
	/** aggregated selection of "identidades.Clientes" */
["identidades_Clientes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Clientes_aggregate_fields"],
	nodes?:ValueTypes["identidades_Clientes"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Clientes" */
["identidades_Clientes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Clientes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Clientes_max_fields"],
	min?:ValueTypes["identidades_Clientes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "identidades.Clientes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Leads?:ValueTypes["clientes_Leads_bool_exp"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	Pessoa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_bool_exp"] | null,
	Usuarios?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null,
	_and?:ValueTypes["identidades_Clientes_bool_exp"][],
	_not?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	_or?:ValueTypes["identidades_Clientes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Clientes" */
["identidades_Clientes_constraint"]:identidades_Clientes_constraint;
	/** input type for inserting data into table "identidades.Clientes" */
["identidades_Clientes_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Leads?:ValueTypes["clientes_Leads_arr_rel_insert_input"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	Tickets?:ValueTypes["atendimentos_Tickets_arr_rel_insert_input"] | null,
	Usuarios?:ValueTypes["autenticacao_Usuarios_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Clientes_max_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["identidades_Clientes_min_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "identidades.Clientes" */
["identidades_Clientes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Clientes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "identidades.Clientes" */
["identidades_Clientes_obj_rel_insert_input"]: {
	data:ValueTypes["identidades_Clientes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_on_conflict"] | null
};
	/** on conflict condition type for table "identidades.Clientes" */
["identidades_Clientes_on_conflict"]: {
	constraint:ValueTypes["identidades_Clientes_constraint"],
	update_columns:ValueTypes["identidades_Clientes_update_column"][],
	where?:ValueTypes["identidades_Clientes_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Clientes". */
["identidades_Clientes_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Leads_aggregate?:ValueTypes["clientes_Leads_aggregate_order_by"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	Tickets_aggregate?:ValueTypes["atendimentos_Tickets_aggregate_order_by"] | null,
	Usuarios_aggregate?:ValueTypes["autenticacao_Usuarios_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Clientes */
["identidades_Clientes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "identidades.Clientes" */
["identidades_Clientes_select_column"]:identidades_Clientes_select_column;
	/** input type for updating data in table "identidades.Clientes" */
["identidades_Clientes_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Clientes" */
["identidades_Clientes_update_column"]:identidades_Clientes_update_column;
	/** columns and relationships of "identidades.Colaboradores" */
["identidades_Colaboradores"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Pessoa?:ValueTypes["identidades_Pessoas"],
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Colaboradores_aggregate_fields"],
	nodes?:ValueTypes["identidades_Colaboradores"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Colaboradores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Colaboradores_max_fields"],
	min?:ValueTypes["identidades_Colaboradores_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["identidades_Colaboradores_max_order_by"] | null,
	min?:ValueTypes["identidades_Colaboradores_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_arr_rel_insert_input"]: {
	data:ValueTypes["identidades_Colaboradores_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Colaboradores_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Colaboradores". All fields are combined with a logical 'AND'. */
["identidades_Colaboradores_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	Pessoa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Colaboradores_bool_exp"][],
	_not?:ValueTypes["identidades_Colaboradores_bool_exp"] | null,
	_or?:ValueTypes["identidades_Colaboradores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Colaboradores" */
["identidades_Colaboradores_constraint"]:identidades_Colaboradores_constraint;
	/** input type for inserting data into table "identidades.Colaboradores" */
["identidades_Colaboradores_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Colaboradores_max_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["identidades_Colaboradores_min_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "identidades.Colaboradores" */
["identidades_Colaboradores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Colaboradores"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_obj_rel_insert_input"]: {
	data:ValueTypes["identidades_Colaboradores_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Colaboradores_on_conflict"] | null
};
	/** on conflict condition type for table "identidades.Colaboradores" */
["identidades_Colaboradores_on_conflict"]: {
	constraint:ValueTypes["identidades_Colaboradores_constraint"],
	update_columns:ValueTypes["identidades_Colaboradores_update_column"][],
	where?:ValueTypes["identidades_Colaboradores_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Colaboradores". */
["identidades_Colaboradores_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Colaboradores */
["identidades_Colaboradores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_select_column"]:identidades_Colaboradores_select_column;
	/** input type for updating data in table "identidades.Colaboradores" */
["identidades_Colaboradores_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_update_column"]:identidades_Colaboradores_update_column;
	/** columns and relationships of "identidades.Fornecedores" */
["identidades_Fornecedores"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Pessoa?:ValueTypes["identidades_Pessoas"],
	Pessoa_Id?:true,
	PrecoDoKm?:true,
	PrestadorDeServico?:true,
Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate"]],
Vendedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Vendedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Vendedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Vendedores_bool_exp"] | null},ValueTypes["identidades_Vendedores"]],
Vendedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Vendedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Vendedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Vendedores_bool_exp"] | null},ValueTypes["identidades_Vendedores_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Fornecedores_aggregate_fields"],
	nodes?:ValueTypes["identidades_Fornecedores"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["identidades_Fornecedores_avg_fields"],
count?: [{	columns?:ValueTypes["identidades_Fornecedores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Fornecedores_max_fields"],
	min?:ValueTypes["identidades_Fornecedores_min_fields"],
	stddev?:ValueTypes["identidades_Fornecedores_stddev_fields"],
	stddev_pop?:ValueTypes["identidades_Fornecedores_stddev_pop_fields"],
	stddev_samp?:ValueTypes["identidades_Fornecedores_stddev_samp_fields"],
	sum?:ValueTypes["identidades_Fornecedores_sum_fields"],
	var_pop?:ValueTypes["identidades_Fornecedores_var_pop_fields"],
	var_samp?:ValueTypes["identidades_Fornecedores_var_samp_fields"],
	variance?:ValueTypes["identidades_Fornecedores_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["identidades_Fornecedores_avg_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "identidades.Fornecedores". All fields are combined with a logical 'AND'. */
["identidades_Fornecedores_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	Pessoa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	PrecoDoKm?:ValueTypes["float8_comparison_exp"] | null,
	PrestadorDeServico?:ValueTypes["Boolean_comparison_exp"] | null,
	Servicos?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null,
	Vendedores?:ValueTypes["identidades_Vendedores_bool_exp"] | null,
	_and?:ValueTypes["identidades_Fornecedores_bool_exp"][],
	_not?:ValueTypes["identidades_Fornecedores_bool_exp"] | null,
	_or?:ValueTypes["identidades_Fornecedores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Fornecedores" */
["identidades_Fornecedores_constraint"]:identidades_Fornecedores_constraint;
	/** input type for incrementing numeric columns in table "identidades.Fornecedores" */
["identidades_Fornecedores_inc_input"]: {
	PrecoDoKm?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "identidades.Fornecedores" */
["identidades_Fornecedores_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	PrecoDoKm?:ValueTypes["float8"] | null,
	PrestadorDeServico?:boolean | null,
	Servicos?:ValueTypes["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"] | null,
	Vendedores?:ValueTypes["identidades_Vendedores_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Fornecedores_max_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	PrecoDoKm?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["identidades_Fornecedores_min_fields"]: AliasType<{
	Id?:true,
	Pessoa_Id?:true,
	PrecoDoKm?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "identidades.Fornecedores" */
["identidades_Fornecedores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Fornecedores"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "identidades.Fornecedores" */
["identidades_Fornecedores_obj_rel_insert_input"]: {
	data:ValueTypes["identidades_Fornecedores_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Fornecedores_on_conflict"] | null
};
	/** on conflict condition type for table "identidades.Fornecedores" */
["identidades_Fornecedores_on_conflict"]: {
	constraint:ValueTypes["identidades_Fornecedores_constraint"],
	update_columns:ValueTypes["identidades_Fornecedores_update_column"][],
	where?:ValueTypes["identidades_Fornecedores_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Fornecedores". */
["identidades_Fornecedores_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	PrecoDoKm?:ValueTypes["order_by"] | null,
	PrestadorDeServico?:ValueTypes["order_by"] | null,
	Servicos_aggregate?:ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"] | null,
	Vendedores_aggregate?:ValueTypes["identidades_Vendedores_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Fornecedores */
["identidades_Fornecedores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_select_column"]:identidades_Fornecedores_select_column;
	/** input type for updating data in table "identidades.Fornecedores" */
["identidades_Fornecedores_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	PrecoDoKm?:ValueTypes["float8"] | null,
	PrestadorDeServico?:boolean | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["identidades_Fornecedores_stddev_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["identidades_Fornecedores_stddev_pop_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["identidades_Fornecedores_stddev_samp_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["identidades_Fornecedores_sum_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** update columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_update_column"]:identidades_Fornecedores_update_column;
	/** aggregate var_pop on columns */
["identidades_Fornecedores_var_pop_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["identidades_Fornecedores_var_samp_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["identidades_Fornecedores_variance_fields"]: AliasType<{
	PrecoDoKm?:true,
		__typename?: true
}>;
	/** columns and relationships of "identidades.Logs" */
["identidades_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Logs" */
["identidades_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Logs_aggregate_fields"],
	nodes?:ValueTypes["identidades_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Logs" */
["identidades_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Logs_max_fields"],
	min?:ValueTypes["identidades_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Logs". All fields are combined with a logical 'AND'. */
["identidades_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Logs_bool_exp"][],
	_not?:ValueTypes["identidades_Logs_bool_exp"] | null,
	_or?:ValueTypes["identidades_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Logs" */
["identidades_Logs_constraint"]:identidades_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "identidades.Logs" */
["identidades_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["identidades_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "identidades.Logs" */
["identidades_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "identidades.Logs" */
["identidades_Logs_on_conflict"]: {
	constraint:ValueTypes["identidades_Logs_constraint"],
	update_columns:ValueTypes["identidades_Logs_update_column"][],
	where?:ValueTypes["identidades_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Logs". */
["identidades_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Logs */
["identidades_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "identidades.Logs" */
["identidades_Logs_select_column"]:identidades_Logs_select_column;
	/** input type for updating data in table "identidades.Logs" */
["identidades_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Logs" */
["identidades_Logs_update_column"]:identidades_Logs_update_column;
	/** columns and relationships of "identidades.Pessoas" */
["identidades_Pessoas"]: AliasType<{
	/** An object relationship */
	Cliente?:ValueTypes["identidades_Clientes"],
Colaboradores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Colaboradores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Colaboradores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Colaboradores_bool_exp"] | null},ValueTypes["identidades_Colaboradores"]],
Colaboradores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Colaboradores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Colaboradores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Colaboradores_bool_exp"] | null},ValueTypes["identidades_Colaboradores_aggregate"]],
DadosDaApi?: [{	/** JSON select path */
	path?:string | null},true],
Documentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos"]],
Documentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos_aggregate"]],
	/** An object relationship */
	Fornecedor?:ValueTypes["identidades_Fornecedores"],
	Id?:true,
	Identificador?:true,
	Nome?:true,
	PessoaJuridica?:true,
Representantes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Representantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Representantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Representantes_bool_exp"] | null},ValueTypes["identidades_Representantes"]],
Representantes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Representantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Representantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Representantes_bool_exp"] | null},ValueTypes["identidades_Representantes_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Pessoas" */
["identidades_Pessoas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Pessoas_aggregate_fields"],
	nodes?:ValueTypes["identidades_Pessoas"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Pessoas" */
["identidades_Pessoas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Pessoas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Pessoas_max_fields"],
	min?:ValueTypes["identidades_Pessoas_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_append_input"]: {
	DadosDaApi?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Pessoas". All fields are combined with a logical 'AND'. */
["identidades_Pessoas_bool_exp"]: {
	Cliente?:ValueTypes["identidades_Clientes_bool_exp"] | null,
	Colaboradores?:ValueTypes["identidades_Colaboradores_bool_exp"] | null,
	DadosDaApi?:ValueTypes["jsonb_comparison_exp"] | null,
	Documentos?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Identificador?:ValueTypes["String_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	PessoaJuridica?:ValueTypes["Boolean_comparison_exp"] | null,
	Representantes?:ValueTypes["identidades_Representantes_bool_exp"] | null,
	_and?:ValueTypes["identidades_Pessoas_bool_exp"][],
	_not?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	_or?:ValueTypes["identidades_Pessoas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Pessoas" */
["identidades_Pessoas_constraint"]:identidades_Pessoas_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Pessoas_delete_at_path_input"]: {
	DadosDaApi?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Pessoas_delete_elem_input"]: {
	DadosDaApi?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Pessoas_delete_key_input"]: {
	DadosDaApi?:string | null
};
	/** input type for inserting data into table "identidades.Pessoas" */
["identidades_Pessoas_insert_input"]: {
	Cliente?:ValueTypes["identidades_Clientes_obj_rel_insert_input"] | null,
	Colaboradores?:ValueTypes["identidades_Colaboradores_arr_rel_insert_input"] | null,
	DadosDaApi?:ValueTypes["jsonb"] | null,
	Documentos?:ValueTypes["identidades_Clientes_Documentos_arr_rel_insert_input"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_obj_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identificador?:string | null,
	Nome?:string | null,
	PessoaJuridica?:boolean | null,
	Representantes?:ValueTypes["identidades_Representantes_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Pessoas_max_fields"]: AliasType<{
	Id?:true,
	Identificador?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["identidades_Pessoas_min_fields"]: AliasType<{
	Id?:true,
	Identificador?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "identidades.Pessoas" */
["identidades_Pessoas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Pessoas"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "identidades.Pessoas" */
["identidades_Pessoas_obj_rel_insert_input"]: {
	data:ValueTypes["identidades_Pessoas_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Pessoas_on_conflict"] | null
};
	/** on conflict condition type for table "identidades.Pessoas" */
["identidades_Pessoas_on_conflict"]: {
	constraint:ValueTypes["identidades_Pessoas_constraint"],
	update_columns:ValueTypes["identidades_Pessoas_update_column"][],
	where?:ValueTypes["identidades_Pessoas_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Pessoas". */
["identidades_Pessoas_order_by"]: {
	Cliente?:ValueTypes["identidades_Clientes_order_by"] | null,
	Colaboradores_aggregate?:ValueTypes["identidades_Colaboradores_aggregate_order_by"] | null,
	DadosDaApi?:ValueTypes["order_by"] | null,
	Documentos_aggregate?:ValueTypes["identidades_Clientes_Documentos_aggregate_order_by"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Identificador?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	PessoaJuridica?:ValueTypes["order_by"] | null,
	Representantes_aggregate?:ValueTypes["identidades_Representantes_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Pessoas */
["identidades_Pessoas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_prepend_input"]: {
	DadosDaApi?:ValueTypes["jsonb"] | null
};
	/** select columns of table "identidades.Pessoas" */
["identidades_Pessoas_select_column"]:identidades_Pessoas_select_column;
	/** input type for updating data in table "identidades.Pessoas" */
["identidades_Pessoas_set_input"]: {
	DadosDaApi?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Identificador?:string | null,
	Nome?:string | null,
	PessoaJuridica?:boolean | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Pessoas" */
["identidades_Pessoas_update_column"]:identidades_Pessoas_update_column;
	/** columns and relationships of "identidades.Representantes" */
["identidades_Representantes"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Pessoa?:ValueTypes["identidades_Pessoas"],
	/** An object relationship */
	PessoaRepresentada?:ValueTypes["identidades_Pessoas"],
	PessoaRepresentada_Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Representantes" */
["identidades_Representantes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Representantes_aggregate_fields"],
	nodes?:ValueTypes["identidades_Representantes"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Representantes" */
["identidades_Representantes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Representantes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Representantes_max_fields"],
	min?:ValueTypes["identidades_Representantes_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "identidades.Representantes" */
["identidades_Representantes_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["identidades_Representantes_max_order_by"] | null,
	min?:ValueTypes["identidades_Representantes_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "identidades.Representantes" */
["identidades_Representantes_arr_rel_insert_input"]: {
	data:ValueTypes["identidades_Representantes_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Representantes_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Representantes". All fields are combined with a logical 'AND'. */
["identidades_Representantes_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	PessoaRepresentada?:ValueTypes["identidades_Pessoas_bool_exp"] | null,
	PessoaRepresentada_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pessoa_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Representantes_bool_exp"][],
	_not?:ValueTypes["identidades_Representantes_bool_exp"] | null,
	_or?:ValueTypes["identidades_Representantes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Representantes" */
["identidades_Representantes_constraint"]:identidades_Representantes_constraint;
	/** input type for inserting data into table "identidades.Representantes" */
["identidades_Representantes_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	PessoaRepresentada?:ValueTypes["identidades_Pessoas_obj_rel_insert_input"] | null,
	PessoaRepresentada_Id?:ValueTypes["uuid"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Representantes_max_fields"]: AliasType<{
	Id?:true,
	PessoaRepresentada_Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "identidades.Representantes" */
["identidades_Representantes_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	PessoaRepresentada_Id?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["identidades_Representantes_min_fields"]: AliasType<{
	Id?:true,
	PessoaRepresentada_Id?:true,
	Pessoa_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "identidades.Representantes" */
["identidades_Representantes_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	PessoaRepresentada_Id?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "identidades.Representantes" */
["identidades_Representantes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Representantes"],
		__typename?: true
}>;
	/** on conflict condition type for table "identidades.Representantes" */
["identidades_Representantes_on_conflict"]: {
	constraint:ValueTypes["identidades_Representantes_constraint"],
	update_columns:ValueTypes["identidades_Representantes_update_column"][],
	where?:ValueTypes["identidades_Representantes_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Representantes". */
["identidades_Representantes_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Pessoa?:ValueTypes["identidades_Pessoas_order_by"] | null,
	PessoaRepresentada?:ValueTypes["identidades_Pessoas_order_by"] | null,
	PessoaRepresentada_Id?:ValueTypes["order_by"] | null,
	Pessoa_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Representantes */
["identidades_Representantes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "identidades.Representantes" */
["identidades_Representantes_select_column"]:identidades_Representantes_select_column;
	/** input type for updating data in table "identidades.Representantes" */
["identidades_Representantes_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	PessoaRepresentada_Id?:ValueTypes["uuid"] | null,
	Pessoa_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Representantes" */
["identidades_Representantes_update_column"]:identidades_Representantes_update_column;
	/** columns and relationships of "identidades.Vendedores" */
["identidades_Vendedores"]: AliasType<{
Emails?: [{	/** JSON select path */
	path?:string | null},true],
	/** An object relationship */
	Fornecedor?:ValueTypes["identidades_Fornecedores"],
	Fornecedor_Id?:true,
	Id?:true,
	Nome?:true,
Telefones?: [{	/** JSON select path */
	path?:string | null},true],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "identidades.Vendedores" */
["identidades_Vendedores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["identidades_Vendedores_aggregate_fields"],
	nodes?:ValueTypes["identidades_Vendedores"],
		__typename?: true
}>;
	/** aggregate fields of "identidades.Vendedores" */
["identidades_Vendedores_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["identidades_Vendedores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["identidades_Vendedores_max_fields"],
	min?:ValueTypes["identidades_Vendedores_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "identidades.Vendedores" */
["identidades_Vendedores_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["identidades_Vendedores_max_order_by"] | null,
	min?:ValueTypes["identidades_Vendedores_min_order_by"] | null
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_append_input"]: {
	Emails?:ValueTypes["jsonb"] | null,
	Telefones?:ValueTypes["jsonb"] | null
};
	/** input type for inserting array relation for remote table "identidades.Vendedores" */
["identidades_Vendedores_arr_rel_insert_input"]: {
	data:ValueTypes["identidades_Vendedores_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Vendedores_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "identidades.Vendedores". All fields are combined with a logical 'AND'. */
["identidades_Vendedores_bool_exp"]: {
	Emails?:ValueTypes["jsonb_comparison_exp"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_bool_exp"] | null,
	Fornecedor_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Telefones?:ValueTypes["jsonb_comparison_exp"] | null,
	_and?:ValueTypes["identidades_Vendedores_bool_exp"][],
	_not?:ValueTypes["identidades_Vendedores_bool_exp"] | null,
	_or?:ValueTypes["identidades_Vendedores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "identidades.Vendedores" */
["identidades_Vendedores_constraint"]:identidades_Vendedores_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Vendedores_delete_at_path_input"]: {
	Emails?:string[],
	Telefones?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Vendedores_delete_elem_input"]: {
	Emails?:number | null,
	Telefones?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Vendedores_delete_key_input"]: {
	Emails?:string | null,
	Telefones?:string | null
};
	/** input type for inserting data into table "identidades.Vendedores" */
["identidades_Vendedores_insert_input"]: {
	Emails?:ValueTypes["jsonb"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_obj_rel_insert_input"] | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Telefones?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["identidades_Vendedores_max_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_max_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["identidades_Vendedores_min_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_min_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "identidades.Vendedores" */
["identidades_Vendedores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["identidades_Vendedores"],
		__typename?: true
}>;
	/** on conflict condition type for table "identidades.Vendedores" */
["identidades_Vendedores_on_conflict"]: {
	constraint:ValueTypes["identidades_Vendedores_constraint"],
	update_columns:ValueTypes["identidades_Vendedores_update_column"][],
	where?:ValueTypes["identidades_Vendedores_bool_exp"] | null
};
	/** Ordering options when selecting data from "identidades.Vendedores". */
["identidades_Vendedores_order_by"]: {
	Emails?:ValueTypes["order_by"] | null,
	Fornecedor?:ValueTypes["identidades_Fornecedores_order_by"] | null,
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Telefones?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: identidades_Vendedores */
["identidades_Vendedores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_prepend_input"]: {
	Emails?:ValueTypes["jsonb"] | null,
	Telefones?:ValueTypes["jsonb"] | null
};
	/** select columns of table "identidades.Vendedores" */
["identidades_Vendedores_select_column"]:identidades_Vendedores_select_column;
	/** input type for updating data in table "identidades.Vendedores" */
["identidades_Vendedores_set_input"]: {
	Emails?:ValueTypes["jsonb"] | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Telefones?:ValueTypes["jsonb"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "identidades.Vendedores" */
["identidades_Vendedores_update_column"]:identidades_Vendedores_update_column;
	["jsonb"]:unknown;
	/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
["jsonb_comparison_exp"]: {
	/** is the column contained in the given json value */
	_contained_in?:ValueTypes["jsonb"] | null,
	/** does the column contain the given json value at the top level */
	_contains?:ValueTypes["jsonb"] | null,
	_eq?:ValueTypes["jsonb"] | null,
	_gt?:ValueTypes["jsonb"] | null,
	_gte?:ValueTypes["jsonb"] | null,
	/** does the string exist as a top-level key in the column */
	_has_key?:string | null,
	/** do all of these strings exist as top-level keys in the column */
	_has_keys_all?:string[],
	/** do any of these strings exist as top-level keys in the column */
	_has_keys_any?:string[],
	_in?:ValueTypes["jsonb"][],
	_is_null?:boolean | null,
	_lt?:ValueTypes["jsonb"] | null,
	_lte?:ValueTypes["jsonb"] | null,
	_neq?:ValueTypes["jsonb"] | null,
	_nin?:ValueTypes["jsonb"][]
};
	/** columns and relationships of "movimentacoes.Motivos" */
["movimentacoes_Motivos"]: AliasType<{
	Comentario?:true,
Movimentacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes"]],
Movimentacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["movimentacoes_Motivos_aggregate_fields"],
	nodes?:ValueTypes["movimentacoes_Motivos"],
		__typename?: true
}>;
	/** aggregate fields of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["movimentacoes_Motivos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["movimentacoes_Motivos_max_fields"],
	min?:ValueTypes["movimentacoes_Motivos_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "movimentacoes.Motivos". All fields are combined with a logical 'AND'. */
["movimentacoes_Motivos_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Movimentacoes?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["movimentacoes_Motivos_bool_exp"][],
	_not?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null,
	_or?:ValueTypes["movimentacoes_Motivos_bool_exp"][]
};
	/** unique or primary key constraints on table "movimentacoes.Motivos" */
["movimentacoes_Motivos_constraint"]:movimentacoes_Motivos_constraint;
	["movimentacoes_Motivos_enum"]:movimentacoes_Motivos_enum;
	/** Boolean expression to compare columns of type "movimentacoes_Motivos_enum". All fields are combined with logical 'AND'. */
["movimentacoes_Motivos_enum_comparison_exp"]: {
	_eq?:ValueTypes["movimentacoes_Motivos_enum"] | null,
	_in?:ValueTypes["movimentacoes_Motivos_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["movimentacoes_Motivos_enum"] | null,
	_nin?:ValueTypes["movimentacoes_Motivos_enum"][]
};
	/** input type for inserting data into table "movimentacoes.Motivos" */
["movimentacoes_Motivos_insert_input"]: {
	Comentario?:string | null,
	Movimentacoes?:ValueTypes["movimentacoes_Movimentacoes_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["movimentacoes_Motivos_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["movimentacoes_Motivos_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "movimentacoes.Motivos" */
["movimentacoes_Motivos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["movimentacoes_Motivos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "movimentacoes.Motivos" */
["movimentacoes_Motivos_obj_rel_insert_input"]: {
	data:ValueTypes["movimentacoes_Motivos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Motivos_on_conflict"] | null
};
	/** on conflict condition type for table "movimentacoes.Motivos" */
["movimentacoes_Motivos_on_conflict"]: {
	constraint:ValueTypes["movimentacoes_Motivos_constraint"],
	update_columns:ValueTypes["movimentacoes_Motivos_update_column"][],
	where?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null
};
	/** Ordering options when selecting data from "movimentacoes.Motivos". */
["movimentacoes_Motivos_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Movimentacoes_aggregate?:ValueTypes["movimentacoes_Movimentacoes_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: movimentacoes_Motivos */
["movimentacoes_Motivos_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_select_column"]:movimentacoes_Motivos_select_column;
	/** input type for updating data in table "movimentacoes.Motivos" */
["movimentacoes_Motivos_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_update_column"]:movimentacoes_Motivos_update_column;
	/** columns and relationships of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes"]: AliasType<{
	Data?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	/** An object relationship */
	Motivo?:ValueTypes["movimentacoes_Motivos"],
	Motivo_Id?:true,
	Quantidade?:true,
	Tipo?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["movimentacoes_Movimentacoes_aggregate_fields"],
	nodes?:ValueTypes["movimentacoes_Movimentacoes"],
		__typename?: true
}>;
	/** aggregate fields of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["movimentacoes_Movimentacoes_avg_fields"],
count?: [{	columns?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["movimentacoes_Movimentacoes_max_fields"],
	min?:ValueTypes["movimentacoes_Movimentacoes_min_fields"],
	stddev?:ValueTypes["movimentacoes_Movimentacoes_stddev_fields"],
	stddev_pop?:ValueTypes["movimentacoes_Movimentacoes_stddev_pop_fields"],
	stddev_samp?:ValueTypes["movimentacoes_Movimentacoes_stddev_samp_fields"],
	sum?:ValueTypes["movimentacoes_Movimentacoes_sum_fields"],
	var_pop?:ValueTypes["movimentacoes_Movimentacoes_var_pop_fields"],
	var_samp?:ValueTypes["movimentacoes_Movimentacoes_var_samp_fields"],
	variance?:ValueTypes["movimentacoes_Movimentacoes_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_order_by"]: {
	avg?:ValueTypes["movimentacoes_Movimentacoes_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["movimentacoes_Movimentacoes_max_order_by"] | null,
	min?:ValueTypes["movimentacoes_Movimentacoes_min_order_by"] | null,
	stddev?:ValueTypes["movimentacoes_Movimentacoes_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["movimentacoes_Movimentacoes_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["movimentacoes_Movimentacoes_stddev_samp_order_by"] | null,
	sum?:ValueTypes["movimentacoes_Movimentacoes_sum_order_by"] | null,
	var_pop?:ValueTypes["movimentacoes_Movimentacoes_var_pop_order_by"] | null,
	var_samp?:ValueTypes["movimentacoes_Movimentacoes_var_samp_order_by"] | null,
	variance?:ValueTypes["movimentacoes_Movimentacoes_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_arr_rel_insert_input"]: {
	data:ValueTypes["movimentacoes_Movimentacoes_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Movimentacoes_on_conflict"] | null
};
	/** aggregate avg on columns */
["movimentacoes_Movimentacoes_avg_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_avg_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "movimentacoes.Movimentacoes". All fields are combined with a logical 'AND'. */
["movimentacoes_Movimentacoes_bool_exp"]: {
	Data?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Motivo?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null,
	Motivo_Id?:ValueTypes["movimentacoes_Motivos_enum_comparison_exp"] | null,
	Quantidade?:ValueTypes["Int_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"][],
	_not?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null,
	_or?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_constraint"]:movimentacoes_Movimentacoes_constraint;
	/** input type for incrementing numeric columns in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_inc_input"]: {
	Quantidade?:number | null,
	Valor?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_insert_input"]: {
	Data?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Motivo?:ValueTypes["movimentacoes_Motivos_obj_rel_insert_input"] | null,
	Motivo_Id?:ValueTypes["movimentacoes_Motivos_enum"] | null,
	Quantidade?:number | null,
	Tipo?:string | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["movimentacoes_Movimentacoes_max_fields"]: AliasType<{
	Data?:true,
	Id?:true,
	Item_Id?:true,
	Quantidade?:true,
	Tipo?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_max_order_by"]: {
	Data?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["movimentacoes_Movimentacoes_min_fields"]: AliasType<{
	Data?:true,
	Id?:true,
	Item_Id?:true,
	Quantidade?:true,
	Tipo?:true,
	Valor?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_min_order_by"]: {
	Data?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["movimentacoes_Movimentacoes"],
		__typename?: true
}>;
	/** on conflict condition type for table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_on_conflict"]: {
	constraint:ValueTypes["movimentacoes_Movimentacoes_constraint"],
	update_columns:ValueTypes["movimentacoes_Movimentacoes_update_column"][],
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "movimentacoes.Movimentacoes". */
["movimentacoes_Movimentacoes_order_by"]: {
	Data?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Motivo?:ValueTypes["movimentacoes_Motivos_order_by"] | null,
	Motivo_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: movimentacoes_Movimentacoes */
["movimentacoes_Movimentacoes_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_select_column"]:movimentacoes_Movimentacoes_select_column;
	/** input type for updating data in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_set_input"]: {
	Data?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Motivo_Id?:ValueTypes["movimentacoes_Motivos_enum"] | null,
	Quantidade?:number | null,
	Tipo?:string | null,
	Valor?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["movimentacoes_Movimentacoes_stddev_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["movimentacoes_Movimentacoes_stddev_pop_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["movimentacoes_Movimentacoes_stddev_samp_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["movimentacoes_Movimentacoes_sum_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_sum_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** update columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_update_column"]:movimentacoes_Movimentacoes_update_column;
	/** aggregate var_pop on columns */
["movimentacoes_Movimentacoes_var_pop_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["movimentacoes_Movimentacoes_var_samp_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["movimentacoes_Movimentacoes_variance_fields"]: AliasType<{
	Quantidade?:true,
	Valor?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_variance_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** mutation root */
["mutation_root"]: AliasType<{
CadastrarCliente?: [{	Identificador?:ValueTypes["bigint"] | null,	PessoaJuridica?:boolean | null},ValueTypes["CadastrarClienteOutput"]],
CadastrarColaborador?: [{	Identificador?:ValueTypes["bigint"] | null,	PessoaJuridica?:boolean | null},ValueTypes["CadastrarColaboradorOutput"]],
CadastrarFornecedor?: [{	Identificador?:ValueTypes["bigint"] | null,	PessoaJuridica?:boolean | null},ValueTypes["CadastrarFornecedorOutput"]],
CadastrarRepresentante?: [{	Identificador?:ValueTypes["bigint"] | null,	PessoaJuridica?:boolean | null,	PessoaRepresentada?:ValueTypes["uuid"] | null},ValueTypes["CadastrarRepresentanteOutput"]],
delete_CategoriasDeVeiculos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["CategoriasDeVeiculos_bool_exp"]},ValueTypes["CategoriasDeVeiculos_mutation_response"]],
delete_CategoriasDeVeiculos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["CategoriasDeVeiculos"]],
delete_Configuracoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["Configuracoes_bool_exp"]},ValueTypes["Configuracoes_mutation_response"]],
delete_Configuracoes_by_pk?: [{	Slug:string},ValueTypes["Configuracoes"]],
delete_EstadosEMunicipios?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["EstadosEMunicipios_bool_exp"]},ValueTypes["EstadosEMunicipios_mutation_response"]],
delete_EstadosEMunicipios_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["EstadosEMunicipios"]],
delete_Operadoras?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["Operadoras_bool_exp"]},ValueTypes["Operadoras_mutation_response"]],
delete_Operadoras_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Operadoras"]],
delete_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["Produtos_bool_exp"]},ValueTypes["Produtos_mutation_response"]],
delete_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Produtos"]],
delete_UnidadesDeMedidas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["UnidadesDeMedidas_bool_exp"]},ValueTypes["UnidadesDeMedidas_mutation_response"]],
delete_UnidadesDeMedidas_by_pk?: [{	Valor:string},ValueTypes["UnidadesDeMedidas"]],
delete_atendimentos_EtapasDosFluxos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"]},ValueTypes["atendimentos_EtapasDosFluxos_mutation_response"]],
delete_atendimentos_EtapasDosFluxos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_EtapasDosFluxos"]],
delete_atendimentos_Fluxos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["atendimentos_Fluxos_bool_exp"]},ValueTypes["atendimentos_Fluxos_mutation_response"]],
delete_atendimentos_Fluxos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_Fluxos"]],
delete_atendimentos_Tickets?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["atendimentos_Tickets_bool_exp"]},ValueTypes["atendimentos_Tickets_mutation_response"]],
delete_atendimentos_Tickets_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_Tickets"]],
delete_atendimentos_TiposDeTickets?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["atendimentos_TiposDeTickets_bool_exp"]},ValueTypes["atendimentos_TiposDeTickets_mutation_response"]],
delete_atendimentos_TiposDeTickets_by_pk?: [{	Valor:string},ValueTypes["atendimentos_TiposDeTickets"]],
delete_autenticacao_Atendentes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["autenticacao_Atendentes_bool_exp"]},ValueTypes["autenticacao_Atendentes_mutation_response"]],
delete_autenticacao_Atendentes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["autenticacao_Atendentes"]],
delete_autenticacao_Usuarios?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["autenticacao_Usuarios_bool_exp"]},ValueTypes["autenticacao_Usuarios_mutation_response"]],
delete_autenticacao_Usuarios_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["autenticacao_Usuarios"]],
delete_clientes_Leads?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["clientes_Leads_bool_exp"]},ValueTypes["clientes_Leads_mutation_response"]],
delete_clientes_Leads_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_Leads"]],
delete_clientes_PerfisComerciais?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["clientes_PerfisComerciais_bool_exp"]},ValueTypes["clientes_PerfisComerciais_mutation_response"]],
delete_clientes_PerfisComerciais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_PerfisComerciais"]],
delete_clientes_Veiculos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["clientes_Veiculos_bool_exp"]},ValueTypes["clientes_Veiculos_mutation_response"]],
delete_clientes_Veiculos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_Veiculos"]],
delete_comercial_Acoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Acoes_bool_exp"]},ValueTypes["comercial_Acoes_mutation_response"]],
delete_comercial_Acoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Acoes"]],
delete_comercial_Atributos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Atributos_bool_exp"]},ValueTypes["comercial_Atributos_mutation_response"]],
delete_comercial_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Atributos"]],
delete_comercial_Coberturas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Coberturas_bool_exp"]},ValueTypes["comercial_Coberturas_mutation_response"]],
delete_comercial_Coberturas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Coberturas"]],
delete_comercial_Combos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_bool_exp"]},ValueTypes["comercial_Combos_mutation_response"]],
delete_comercial_Combos_Combos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_Combos_bool_exp"]},ValueTypes["comercial_Combos_Combos_mutation_response"]],
delete_comercial_Combos_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Combos"]],
delete_comercial_Combos_Planos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_Planos_bool_exp"]},ValueTypes["comercial_Combos_Planos_mutation_response"]],
delete_comercial_Combos_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Planos"]],
delete_comercial_Combos_Precos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_Precos_bool_exp"]},ValueTypes["comercial_Combos_Precos_mutation_response"]],
delete_comercial_Combos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Precos"]],
delete_comercial_Combos_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_Produtos_bool_exp"]},ValueTypes["comercial_Combos_Produtos_mutation_response"]],
delete_comercial_Combos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Produtos"]],
delete_comercial_Combos_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Combos_Servicos_bool_exp"]},ValueTypes["comercial_Combos_Servicos_mutation_response"]],
delete_comercial_Combos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Servicos"]],
delete_comercial_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos"]],
delete_comercial_Condicionais?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Condicionais_bool_exp"]},ValueTypes["comercial_Condicionais_mutation_response"]],
delete_comercial_CondicionaisSituacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"]},ValueTypes["comercial_CondicionaisSituacoes_mutation_response"]],
delete_comercial_CondicionaisSituacoes_by_pk?: [{	Valor:string},ValueTypes["comercial_CondicionaisSituacoes"]],
delete_comercial_Condicionais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Condicionais"]],
delete_comercial_ContratosBase?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_ContratosBase_bool_exp"]},ValueTypes["comercial_ContratosBase_mutation_response"]],
delete_comercial_ContratosBase_Versoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"]},ValueTypes["comercial_ContratosBase_Versoes_mutation_response"]],
delete_comercial_ContratosBase_Versoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_ContratosBase_Versoes"]],
delete_comercial_ContratosBase_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_ContratosBase"]],
delete_comercial_Fornecedores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_bool_exp"]},ValueTypes["comercial_Fornecedores_mutation_response"]],
delete_comercial_Fornecedores_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"]},ValueTypes["comercial_Fornecedores_Produtos_mutation_response"]],
delete_comercial_Fornecedores_Produtos_Precos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"]},ValueTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"]],
delete_comercial_Fornecedores_Produtos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
delete_comercial_Fornecedores_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Produtos"]],
delete_comercial_Fornecedores_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_mutation_response"]],
delete_comercial_Fornecedores_Servicos_Precos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"]],
delete_comercial_Fornecedores_Servicos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
delete_comercial_Fornecedores_Servicos_Tarifas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]],
delete_comercial_Fornecedores_Servicos_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
delete_comercial_Fornecedores_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos"]],
delete_comercial_Fornecedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores"]],
delete_comercial_Planos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Planos_bool_exp"]},ValueTypes["comercial_Planos_mutation_response"]],
delete_comercial_Planos_Condicionais?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Planos_Condicionais_bool_exp"]},ValueTypes["comercial_Planos_Condicionais_mutation_response"]],
delete_comercial_Planos_Condicionais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos_Condicionais"]],
delete_comercial_Planos_Precos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Planos_Precos_bool_exp"]},ValueTypes["comercial_Planos_Precos_mutation_response"]],
delete_comercial_Planos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos_Precos"]],
delete_comercial_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos"]],
delete_comercial_PrestadorDeServicos_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"]},ValueTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"]],
delete_comercial_PrestadorDeServicos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
delete_comercial_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_bool_exp"]},ValueTypes["comercial_Produtos_mutation_response"]],
delete_comercial_Produtos_Atributos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_Atributos_bool_exp"]},ValueTypes["comercial_Produtos_Atributos_mutation_response"]],
delete_comercial_Produtos_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Atributos"]],
delete_comercial_Produtos_Oportunidades?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"]},ValueTypes["comercial_Produtos_Oportunidades_mutation_response"]],
delete_comercial_Produtos_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Oportunidades"]],
delete_comercial_Produtos_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_Produtos_bool_exp"]},ValueTypes["comercial_Produtos_Produtos_mutation_response"]],
delete_comercial_Produtos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Produtos"]],
delete_comercial_Produtos_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_Servicos_bool_exp"]},ValueTypes["comercial_Produtos_Servicos_mutation_response"]],
delete_comercial_Produtos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Servicos"]],
delete_comercial_Produtos_Tipos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Produtos_Tipos_bool_exp"]},ValueTypes["comercial_Produtos_Tipos_mutation_response"]],
delete_comercial_Produtos_Tipos_by_pk?: [{	Valor:string},ValueTypes["comercial_Produtos_Tipos"]],
delete_comercial_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos"]],
delete_comercial_Propostas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_bool_exp"]},ValueTypes["comercial_Propostas_mutation_response"]],
delete_comercial_Propostas_Combos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Combos_bool_exp"]},ValueTypes["comercial_Propostas_Combos_mutation_response"]],
delete_comercial_Propostas_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Combos"]],
delete_comercial_Propostas_Instalacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"]},ValueTypes["comercial_Propostas_Instalacoes_mutation_response"]],
delete_comercial_Propostas_Instalacoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Instalacoes"]],
delete_comercial_Propostas_Oportunidades?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"]},ValueTypes["comercial_Propostas_Oportunidades_mutation_response"]],
delete_comercial_Propostas_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Oportunidades"]],
delete_comercial_Propostas_Planos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Planos_bool_exp"]},ValueTypes["comercial_Propostas_Planos_mutation_response"]],
delete_comercial_Propostas_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Planos"]],
delete_comercial_Propostas_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Produtos_bool_exp"]},ValueTypes["comercial_Propostas_Produtos_mutation_response"]],
delete_comercial_Propostas_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Produtos"]],
delete_comercial_Propostas_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Servicos_bool_exp"]},ValueTypes["comercial_Propostas_Servicos_mutation_response"]],
delete_comercial_Propostas_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Servicos"]],
delete_comercial_Propostas_Situacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Propostas_Situacoes_bool_exp"]},ValueTypes["comercial_Propostas_Situacoes_mutation_response"]],
delete_comercial_Propostas_Situacoes_by_pk?: [{	Valor:string},ValueTypes["comercial_Propostas_Situacoes"]],
delete_comercial_Propostas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas"]],
delete_comercial_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_bool_exp"]},ValueTypes["comercial_Servicos_mutation_response"]],
delete_comercial_Servicos_Atributos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Atributos_bool_exp"]},ValueTypes["comercial_Servicos_Atributos_mutation_response"]],
delete_comercial_Servicos_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Atributos"]],
delete_comercial_Servicos_Oportunidades?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"]},ValueTypes["comercial_Servicos_Oportunidades_mutation_response"]],
delete_comercial_Servicos_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Oportunidades"]],
delete_comercial_Servicos_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Produtos_bool_exp"]},ValueTypes["comercial_Servicos_Produtos_mutation_response"]],
delete_comercial_Servicos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Produtos"]],
delete_comercial_Servicos_Servicos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Servicos_bool_exp"]},ValueTypes["comercial_Servicos_Servicos_mutation_response"]],
delete_comercial_Servicos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Servicos"]],
delete_comercial_Servicos_Tarifas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Tarifas_bool_exp"]},ValueTypes["comercial_Servicos_Tarifas_mutation_response"]],
delete_comercial_Servicos_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Tarifas"]],
delete_comercial_Servicos_Tipos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Servicos_Tipos_bool_exp"]},ValueTypes["comercial_Servicos_Tipos_mutation_response"]],
delete_comercial_Servicos_Tipos_by_pk?: [{	Valor:string},ValueTypes["comercial_Servicos_Tipos"]],
delete_comercial_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos"]],
delete_comercial_Tarifas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["comercial_Tarifas_bool_exp"]},ValueTypes["comercial_Tarifas_mutation_response"]],
delete_comercial_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Tarifas"]],
delete_contatos_Emails?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["contatos_Emails_bool_exp"]},ValueTypes["contatos_Emails_mutation_response"]],
delete_contatos_Emails_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Emails"]],
delete_contatos_Enderecos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["contatos_Enderecos_bool_exp"]},ValueTypes["contatos_Enderecos_mutation_response"]],
delete_contatos_Enderecos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Enderecos"]],
delete_contatos_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["contatos_Logs_bool_exp"]},ValueTypes["contatos_Logs_mutation_response"]],
delete_contatos_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Logs"]],
delete_contatos_Telefones?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["contatos_Telefones_bool_exp"]},ValueTypes["contatos_Telefones_mutation_response"]],
delete_contatos_Telefones_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Telefones"]],
delete_estoque_Enderecamentos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Enderecamentos_bool_exp"]},ValueTypes["estoque_Enderecamentos_mutation_response"]],
delete_estoque_Enderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Enderecamentos"]],
delete_estoque_Fabricantes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Fabricantes_bool_exp"]},ValueTypes["estoque_Fabricantes_mutation_response"]],
delete_estoque_Fabricantes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Fabricantes"]],
delete_estoque_Familias?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Familias_bool_exp"]},ValueTypes["estoque_Familias_mutation_response"]],
delete_estoque_Familias_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Familias"]],
delete_estoque_Grupos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Grupos_bool_exp"]},ValueTypes["estoque_Grupos_mutation_response"]],
delete_estoque_Grupos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Grupos"]],
delete_estoque_Itens?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Itens_bool_exp"]},ValueTypes["estoque_Itens_mutation_response"]],
delete_estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Itens"]],
delete_estoque_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Logs_bool_exp"]},ValueTypes["estoque_Logs_mutation_response"]],
delete_estoque_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Logs"]],
delete_estoque_Modelos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_Modelos_bool_exp"]},ValueTypes["estoque_Modelos_mutation_response"]],
delete_estoque_Modelos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Modelos"]],
delete_estoque_TiposDeEnderecamentos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"]},ValueTypes["estoque_TiposDeEnderecamentos_mutation_response"]],
delete_estoque_TiposDeEnderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_TiposDeEnderecamentos"]],
delete_identidades_Clientes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Clientes_bool_exp"]},ValueTypes["identidades_Clientes_mutation_response"]],
delete_identidades_Clientes_Documentos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Clientes_Documentos_bool_exp"]},ValueTypes["identidades_Clientes_Documentos_mutation_response"]],
delete_identidades_Clientes_Documentos_Situacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"]},ValueTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"]],
delete_identidades_Clientes_Documentos_Situacoes_by_pk?: [{	Valor:string},ValueTypes["identidades_Clientes_Documentos_Situacoes"]],
delete_identidades_Clientes_Documentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Clientes_Documentos"]],
delete_identidades_Clientes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Clientes"]],
delete_identidades_Colaboradores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Colaboradores_bool_exp"]},ValueTypes["identidades_Colaboradores_mutation_response"]],
delete_identidades_Colaboradores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Colaboradores"]],
delete_identidades_Fornecedores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Fornecedores_bool_exp"]},ValueTypes["identidades_Fornecedores_mutation_response"]],
delete_identidades_Fornecedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Fornecedores"]],
delete_identidades_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Logs_bool_exp"]},ValueTypes["identidades_Logs_mutation_response"]],
delete_identidades_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Logs"]],
delete_identidades_Pessoas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Pessoas_bool_exp"]},ValueTypes["identidades_Pessoas_mutation_response"]],
delete_identidades_Pessoas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Pessoas"]],
delete_identidades_Representantes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Representantes_bool_exp"]},ValueTypes["identidades_Representantes_mutation_response"]],
delete_identidades_Representantes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Representantes"]],
delete_identidades_Vendedores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["identidades_Vendedores_bool_exp"]},ValueTypes["identidades_Vendedores_mutation_response"]],
delete_identidades_Vendedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Vendedores"]],
delete_movimentacoes_Motivos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["movimentacoes_Motivos_bool_exp"]},ValueTypes["movimentacoes_Motivos_mutation_response"]],
delete_movimentacoes_Motivos_by_pk?: [{	Valor:string},ValueTypes["movimentacoes_Motivos"]],
delete_movimentacoes_Movimentacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["movimentacoes_Movimentacoes_bool_exp"]},ValueTypes["movimentacoes_Movimentacoes_mutation_response"]],
delete_movimentacoes_Movimentacoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["movimentacoes_Movimentacoes"]],
delete_operacional_OrdemDeServico?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["operacional_OrdemDeServico_bool_exp"]},ValueTypes["operacional_OrdemDeServico_mutation_response"]],
delete_operacional_OrdemDeServico_Atividades?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Atividades_mutation_response"]],
delete_operacional_OrdemDeServico_Atividades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico_Atividades"]],
delete_operacional_OrdemDeServico_Situacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Situacoes_mutation_response"]],
delete_operacional_OrdemDeServico_Situacoes_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
delete_operacional_OrdemDeServico_Tipo?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Tipo_mutation_response"]],
delete_operacional_OrdemDeServico_Tipo_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Tipo"]],
delete_operacional_OrdemDeServico_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico"]],
delete_pedidosDeCompra_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Logs_bool_exp"]},ValueTypes["pedidosDeCompra_Logs_mutation_response"]],
delete_pedidosDeCompra_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Logs"]],
delete_pedidosDeCompra_Orcamentos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"]},ValueTypes["pedidosDeCompra_Orcamentos_mutation_response"]],
delete_pedidosDeCompra_Orcamentos_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]],
delete_pedidosDeCompra_Orcamentos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
delete_pedidosDeCompra_Orcamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos"]],
delete_pedidosDeCompra_Pedidos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"]},ValueTypes["pedidosDeCompra_Pedidos_mutation_response"]],
delete_pedidosDeCompra_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Pedidos"]],
delete_pedidosDeCompra_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Produtos_bool_exp"]},ValueTypes["pedidosDeCompra_Produtos_mutation_response"]],
delete_pedidosDeCompra_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Produtos"]],
delete_pedidosDeCompra_Situacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"]},ValueTypes["pedidosDeCompra_Situacoes_mutation_response"]],
delete_pedidosDeCompra_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeCompra_Situacoes"]],
delete_pedidosDeSaida_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeSaida_Logs_bool_exp"]},ValueTypes["pedidosDeSaida_Logs_mutation_response"]],
delete_pedidosDeSaida_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Logs"]],
delete_pedidosDeSaida_Pedidos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"]},ValueTypes["pedidosDeSaida_Pedidos_mutation_response"]],
delete_pedidosDeSaida_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Pedidos"]],
delete_pedidosDeSaida_Produtos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeSaida_Produtos_bool_exp"]},ValueTypes["pedidosDeSaida_Produtos_mutation_response"]],
delete_pedidosDeSaida_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Produtos"]],
delete_pedidosDeSaida_Situacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"]},ValueTypes["pedidosDeSaida_Situacoes_mutation_response"]],
delete_pedidosDeSaida_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeSaida_Situacoes"]],
delete_producao_Chips?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_Chips_bool_exp"]},ValueTypes["producao_Chips_mutation_response"]],
delete_producao_ChipsSituacoes?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_ChipsSituacoes_bool_exp"]},ValueTypes["producao_ChipsSituacoes_mutation_response"]],
delete_producao_ChipsSituacoes_by_pk?: [{	Valor:string},ValueTypes["producao_ChipsSituacoes"]],
delete_producao_Chips_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Chips"]],
delete_producao_Equipamentos?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_Equipamentos_bool_exp"]},ValueTypes["producao_Equipamentos_mutation_response"]],
delete_producao_Equipamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Equipamentos"]],
delete_producao_Identificadores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_Identificadores_bool_exp"]},ValueTypes["producao_Identificadores_mutation_response"]],
delete_producao_Identificadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Identificadores"]],
delete_producao_KitDeInsumo_Itens?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"]},ValueTypes["producao_KitDeInsumo_Itens_mutation_response"]],
delete_producao_KitDeInsumo_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitDeInsumo_Itens"]],
delete_producao_KitsDeInstalacao?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_KitsDeInstalacao_bool_exp"]},ValueTypes["producao_KitsDeInstalacao_mutation_response"]],
delete_producao_KitsDeInstalacao_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInstalacao"]],
delete_producao_KitsDeInsumo?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_KitsDeInsumo_bool_exp"]},ValueTypes["producao_KitsDeInsumo_mutation_response"]],
delete_producao_KitsDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInsumo"]],
delete_producao_Logs?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_Logs_bool_exp"]},ValueTypes["producao_Logs_mutation_response"]],
delete_producao_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Logs"]],
delete_producao_Rastreadores?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_Rastreadores_bool_exp"]},ValueTypes["producao_Rastreadores_mutation_response"]],
delete_producao_Rastreadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Rastreadores"]],
delete_producao_TiposDeKitDeInsumo?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"]},ValueTypes["producao_TiposDeKitDeInsumo_mutation_response"]],
delete_producao_TiposDeKitDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo"]],
delete_producao_TiposDeKitDeInsumo_estoque_Itens?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]],
delete_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
delete_vendas_GruposDePerguntas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["vendas_GruposDePerguntas_bool_exp"]},ValueTypes["vendas_GruposDePerguntas_mutation_response"]],
delete_vendas_GruposDePerguntas_Perguntas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"]},ValueTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"]],
delete_vendas_GruposDePerguntas_Perguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
delete_vendas_GruposDePerguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_GruposDePerguntas"]],
delete_vendas_Perguntas?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["vendas_Perguntas_bool_exp"]},ValueTypes["vendas_Perguntas_mutation_response"]],
delete_vendas_Perguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_Perguntas"]],
delete_vendas_TiposDePagamento?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["vendas_TiposDePagamento_bool_exp"]},ValueTypes["vendas_TiposDePagamento_mutation_response"]],
delete_vendas_TiposDePagamento_by_pk?: [{	Valor:string},ValueTypes["vendas_TiposDePagamento"]],
delete_vendas_TiposDeRecorrencia?: [{	/** filter the rows which have to be deleted */
	where:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"]},ValueTypes["vendas_TiposDeRecorrencia_mutation_response"]],
delete_vendas_TiposDeRecorrencia_by_pk?: [{	Valor:string},ValueTypes["vendas_TiposDeRecorrencia"]],
insert_CategoriasDeVeiculos?: [{	/** the rows to be inserted */
	objects:ValueTypes["CategoriasDeVeiculos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["CategoriasDeVeiculos_on_conflict"] | null},ValueTypes["CategoriasDeVeiculos_mutation_response"]],
insert_CategoriasDeVeiculos_one?: [{	/** the row to be inserted */
	object:ValueTypes["CategoriasDeVeiculos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["CategoriasDeVeiculos_on_conflict"] | null},ValueTypes["CategoriasDeVeiculos"]],
insert_Configuracoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["Configuracoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["Configuracoes_on_conflict"] | null},ValueTypes["Configuracoes_mutation_response"]],
insert_Configuracoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["Configuracoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["Configuracoes_on_conflict"] | null},ValueTypes["Configuracoes"]],
insert_EstadosEMunicipios?: [{	/** the rows to be inserted */
	objects:ValueTypes["EstadosEMunicipios_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["EstadosEMunicipios_on_conflict"] | null},ValueTypes["EstadosEMunicipios_mutation_response"]],
insert_EstadosEMunicipios_one?: [{	/** the row to be inserted */
	object:ValueTypes["EstadosEMunicipios_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["EstadosEMunicipios_on_conflict"] | null},ValueTypes["EstadosEMunicipios"]],
insert_Operadoras?: [{	/** the rows to be inserted */
	objects:ValueTypes["Operadoras_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["Operadoras_on_conflict"] | null},ValueTypes["Operadoras_mutation_response"]],
insert_Operadoras_one?: [{	/** the row to be inserted */
	object:ValueTypes["Operadoras_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["Operadoras_on_conflict"] | null},ValueTypes["Operadoras"]],
insert_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["Produtos_on_conflict"] | null},ValueTypes["Produtos_mutation_response"]],
insert_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["Produtos_on_conflict"] | null},ValueTypes["Produtos"]],
insert_UnidadesDeMedidas?: [{	/** the rows to be inserted */
	objects:ValueTypes["UnidadesDeMedidas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["UnidadesDeMedidas_on_conflict"] | null},ValueTypes["UnidadesDeMedidas_mutation_response"]],
insert_UnidadesDeMedidas_one?: [{	/** the row to be inserted */
	object:ValueTypes["UnidadesDeMedidas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["UnidadesDeMedidas_on_conflict"] | null},ValueTypes["UnidadesDeMedidas"]],
insert_atendimentos_EtapasDosFluxos?: [{	/** the rows to be inserted */
	objects:ValueTypes["atendimentos_EtapasDosFluxos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_EtapasDosFluxos_on_conflict"] | null},ValueTypes["atendimentos_EtapasDosFluxos_mutation_response"]],
insert_atendimentos_EtapasDosFluxos_one?: [{	/** the row to be inserted */
	object:ValueTypes["atendimentos_EtapasDosFluxos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_EtapasDosFluxos_on_conflict"] | null},ValueTypes["atendimentos_EtapasDosFluxos"]],
insert_atendimentos_Fluxos?: [{	/** the rows to be inserted */
	objects:ValueTypes["atendimentos_Fluxos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Fluxos_on_conflict"] | null},ValueTypes["atendimentos_Fluxos_mutation_response"]],
insert_atendimentos_Fluxos_one?: [{	/** the row to be inserted */
	object:ValueTypes["atendimentos_Fluxos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Fluxos_on_conflict"] | null},ValueTypes["atendimentos_Fluxos"]],
insert_atendimentos_Tickets?: [{	/** the rows to be inserted */
	objects:ValueTypes["atendimentos_Tickets_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Tickets_on_conflict"] | null},ValueTypes["atendimentos_Tickets_mutation_response"]],
insert_atendimentos_Tickets_one?: [{	/** the row to be inserted */
	object:ValueTypes["atendimentos_Tickets_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_Tickets_on_conflict"] | null},ValueTypes["atendimentos_Tickets"]],
insert_atendimentos_TiposDeTickets?: [{	/** the rows to be inserted */
	objects:ValueTypes["atendimentos_TiposDeTickets_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_TiposDeTickets_on_conflict"] | null},ValueTypes["atendimentos_TiposDeTickets_mutation_response"]],
insert_atendimentos_TiposDeTickets_one?: [{	/** the row to be inserted */
	object:ValueTypes["atendimentos_TiposDeTickets_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["atendimentos_TiposDeTickets_on_conflict"] | null},ValueTypes["atendimentos_TiposDeTickets"]],
insert_autenticacao_Atendentes?: [{	/** the rows to be inserted */
	objects:ValueTypes["autenticacao_Atendentes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Atendentes_on_conflict"] | null},ValueTypes["autenticacao_Atendentes_mutation_response"]],
insert_autenticacao_Atendentes_one?: [{	/** the row to be inserted */
	object:ValueTypes["autenticacao_Atendentes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Atendentes_on_conflict"] | null},ValueTypes["autenticacao_Atendentes"]],
insert_autenticacao_Usuarios?: [{	/** the rows to be inserted */
	objects:ValueTypes["autenticacao_Usuarios_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Usuarios_on_conflict"] | null},ValueTypes["autenticacao_Usuarios_mutation_response"]],
insert_autenticacao_Usuarios_one?: [{	/** the row to be inserted */
	object:ValueTypes["autenticacao_Usuarios_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["autenticacao_Usuarios_on_conflict"] | null},ValueTypes["autenticacao_Usuarios"]],
insert_clientes_Leads?: [{	/** the rows to be inserted */
	objects:ValueTypes["clientes_Leads_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Leads_on_conflict"] | null},ValueTypes["clientes_Leads_mutation_response"]],
insert_clientes_Leads_one?: [{	/** the row to be inserted */
	object:ValueTypes["clientes_Leads_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Leads_on_conflict"] | null},ValueTypes["clientes_Leads"]],
insert_clientes_PerfisComerciais?: [{	/** the rows to be inserted */
	objects:ValueTypes["clientes_PerfisComerciais_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_PerfisComerciais_on_conflict"] | null},ValueTypes["clientes_PerfisComerciais_mutation_response"]],
insert_clientes_PerfisComerciais_one?: [{	/** the row to be inserted */
	object:ValueTypes["clientes_PerfisComerciais_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_PerfisComerciais_on_conflict"] | null},ValueTypes["clientes_PerfisComerciais"]],
insert_clientes_Veiculos?: [{	/** the rows to be inserted */
	objects:ValueTypes["clientes_Veiculos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Veiculos_on_conflict"] | null},ValueTypes["clientes_Veiculos_mutation_response"]],
insert_clientes_Veiculos_one?: [{	/** the row to be inserted */
	object:ValueTypes["clientes_Veiculos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["clientes_Veiculos_on_conflict"] | null},ValueTypes["clientes_Veiculos"]],
insert_comercial_Acoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Acoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Acoes_on_conflict"] | null},ValueTypes["comercial_Acoes_mutation_response"]],
insert_comercial_Acoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Acoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Acoes_on_conflict"] | null},ValueTypes["comercial_Acoes"]],
insert_comercial_Atributos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Atributos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Atributos_on_conflict"] | null},ValueTypes["comercial_Atributos_mutation_response"]],
insert_comercial_Atributos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Atributos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Atributos_on_conflict"] | null},ValueTypes["comercial_Atributos"]],
insert_comercial_Coberturas?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Coberturas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Coberturas_on_conflict"] | null},ValueTypes["comercial_Coberturas_mutation_response"]],
insert_comercial_Coberturas_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Coberturas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Coberturas_on_conflict"] | null},ValueTypes["comercial_Coberturas"]],
insert_comercial_Combos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_on_conflict"] | null},ValueTypes["comercial_Combos_mutation_response"]],
insert_comercial_Combos_Combos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_Combos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Combos_on_conflict"] | null},ValueTypes["comercial_Combos_Combos_mutation_response"]],
insert_comercial_Combos_Combos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_Combos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Combos_on_conflict"] | null},ValueTypes["comercial_Combos_Combos"]],
insert_comercial_Combos_Planos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_Planos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Planos_on_conflict"] | null},ValueTypes["comercial_Combos_Planos_mutation_response"]],
insert_comercial_Combos_Planos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_Planos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Planos_on_conflict"] | null},ValueTypes["comercial_Combos_Planos"]],
insert_comercial_Combos_Precos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_Precos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Precos_on_conflict"] | null},ValueTypes["comercial_Combos_Precos_mutation_response"]],
insert_comercial_Combos_Precos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_Precos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Precos_on_conflict"] | null},ValueTypes["comercial_Combos_Precos"]],
insert_comercial_Combos_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Produtos_on_conflict"] | null},ValueTypes["comercial_Combos_Produtos_mutation_response"]],
insert_comercial_Combos_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Produtos_on_conflict"] | null},ValueTypes["comercial_Combos_Produtos"]],
insert_comercial_Combos_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Combos_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Servicos_on_conflict"] | null},ValueTypes["comercial_Combos_Servicos_mutation_response"]],
insert_comercial_Combos_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_Servicos_on_conflict"] | null},ValueTypes["comercial_Combos_Servicos"]],
insert_comercial_Combos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Combos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Combos_on_conflict"] | null},ValueTypes["comercial_Combos"]],
insert_comercial_Condicionais?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Condicionais_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Condicionais_on_conflict"] | null},ValueTypes["comercial_Condicionais_mutation_response"]],
insert_comercial_CondicionaisSituacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_CondicionaisSituacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_CondicionaisSituacoes_on_conflict"] | null},ValueTypes["comercial_CondicionaisSituacoes_mutation_response"]],
insert_comercial_CondicionaisSituacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_CondicionaisSituacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_CondicionaisSituacoes_on_conflict"] | null},ValueTypes["comercial_CondicionaisSituacoes"]],
insert_comercial_Condicionais_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Condicionais_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Condicionais_on_conflict"] | null},ValueTypes["comercial_Condicionais"]],
insert_comercial_ContratosBase?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_ContratosBase_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_on_conflict"] | null},ValueTypes["comercial_ContratosBase_mutation_response"]],
insert_comercial_ContratosBase_Versoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_ContratosBase_Versoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_Versoes_on_conflict"] | null},ValueTypes["comercial_ContratosBase_Versoes_mutation_response"]],
insert_comercial_ContratosBase_Versoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_ContratosBase_Versoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_Versoes_on_conflict"] | null},ValueTypes["comercial_ContratosBase_Versoes"]],
insert_comercial_ContratosBase_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_ContratosBase_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_ContratosBase_on_conflict"] | null},ValueTypes["comercial_ContratosBase"]],
insert_comercial_Fornecedores?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_on_conflict"] | null},ValueTypes["comercial_Fornecedores_mutation_response"]],
insert_comercial_Fornecedores_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Produtos_mutation_response"]],
insert_comercial_Fornecedores_Produtos_Precos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_Produtos_Precos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"]],
insert_comercial_Fornecedores_Produtos_Precos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_Produtos_Precos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
insert_comercial_Fornecedores_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Produtos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Produtos"]],
insert_comercial_Fornecedores_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos_mutation_response"]],
insert_comercial_Fornecedores_Servicos_Precos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_Servicos_Precos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"]],
insert_comercial_Fornecedores_Servicos_Precos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_Servicos_Precos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
insert_comercial_Fornecedores_Servicos_Tarifas?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]],
insert_comercial_Fornecedores_Servicos_Tarifas_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
insert_comercial_Fornecedores_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_Servicos_on_conflict"] | null},ValueTypes["comercial_Fornecedores_Servicos"]],
insert_comercial_Fornecedores_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Fornecedores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Fornecedores_on_conflict"] | null},ValueTypes["comercial_Fornecedores"]],
insert_comercial_Planos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Planos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_on_conflict"] | null},ValueTypes["comercial_Planos_mutation_response"]],
insert_comercial_Planos_Condicionais?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Planos_Condicionais_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Condicionais_on_conflict"] | null},ValueTypes["comercial_Planos_Condicionais_mutation_response"]],
insert_comercial_Planos_Condicionais_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Planos_Condicionais_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Condicionais_on_conflict"] | null},ValueTypes["comercial_Planos_Condicionais"]],
insert_comercial_Planos_Precos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Planos_Precos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Precos_on_conflict"] | null},ValueTypes["comercial_Planos_Precos_mutation_response"]],
insert_comercial_Planos_Precos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Planos_Precos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_Precos_on_conflict"] | null},ValueTypes["comercial_Planos_Precos"]],
insert_comercial_Planos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Planos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Planos_on_conflict"] | null},ValueTypes["comercial_Planos"]],
insert_comercial_PrestadorDeServicos_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_PrestadorDeServicos_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_PrestadorDeServicos_Servicos_on_conflict"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"]],
insert_comercial_PrestadorDeServicos_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_PrestadorDeServicos_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_PrestadorDeServicos_Servicos_on_conflict"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
insert_comercial_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_on_conflict"] | null},ValueTypes["comercial_Produtos_mutation_response"]],
insert_comercial_Produtos_Atributos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_Atributos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Atributos_on_conflict"] | null},ValueTypes["comercial_Produtos_Atributos_mutation_response"]],
insert_comercial_Produtos_Atributos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_Atributos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Atributos_on_conflict"] | null},ValueTypes["comercial_Produtos_Atributos"]],
insert_comercial_Produtos_Oportunidades?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_Oportunidades_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Produtos_Oportunidades_mutation_response"]],
insert_comercial_Produtos_Oportunidades_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_Oportunidades_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Produtos_Oportunidades"]],
insert_comercial_Produtos_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Produtos_on_conflict"] | null},ValueTypes["comercial_Produtos_Produtos_mutation_response"]],
insert_comercial_Produtos_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Produtos_on_conflict"] | null},ValueTypes["comercial_Produtos_Produtos"]],
insert_comercial_Produtos_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Servicos_on_conflict"] | null},ValueTypes["comercial_Produtos_Servicos_mutation_response"]],
insert_comercial_Produtos_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Servicos_on_conflict"] | null},ValueTypes["comercial_Produtos_Servicos"]],
insert_comercial_Produtos_Tipos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Produtos_Tipos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Tipos_on_conflict"] | null},ValueTypes["comercial_Produtos_Tipos_mutation_response"]],
insert_comercial_Produtos_Tipos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_Tipos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_Tipos_on_conflict"] | null},ValueTypes["comercial_Produtos_Tipos"]],
insert_comercial_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Produtos_on_conflict"] | null},ValueTypes["comercial_Produtos"]],
insert_comercial_Propostas?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_on_conflict"] | null},ValueTypes["comercial_Propostas_mutation_response"]],
insert_comercial_Propostas_Combos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Combos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Combos_on_conflict"] | null},ValueTypes["comercial_Propostas_Combos_mutation_response"]],
insert_comercial_Propostas_Combos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Combos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Combos_on_conflict"] | null},ValueTypes["comercial_Propostas_Combos"]],
insert_comercial_Propostas_Instalacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Instalacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Instalacoes_on_conflict"] | null},ValueTypes["comercial_Propostas_Instalacoes_mutation_response"]],
insert_comercial_Propostas_Instalacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Instalacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Instalacoes_on_conflict"] | null},ValueTypes["comercial_Propostas_Instalacoes"]],
insert_comercial_Propostas_Oportunidades?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Oportunidades_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Propostas_Oportunidades_mutation_response"]],
insert_comercial_Propostas_Oportunidades_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Oportunidades_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Propostas_Oportunidades"]],
insert_comercial_Propostas_Planos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Planos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Planos_on_conflict"] | null},ValueTypes["comercial_Propostas_Planos_mutation_response"]],
insert_comercial_Propostas_Planos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Planos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Planos_on_conflict"] | null},ValueTypes["comercial_Propostas_Planos"]],
insert_comercial_Propostas_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Produtos_on_conflict"] | null},ValueTypes["comercial_Propostas_Produtos_mutation_response"]],
insert_comercial_Propostas_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Produtos_on_conflict"] | null},ValueTypes["comercial_Propostas_Produtos"]],
insert_comercial_Propostas_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Servicos_on_conflict"] | null},ValueTypes["comercial_Propostas_Servicos_mutation_response"]],
insert_comercial_Propostas_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Servicos_on_conflict"] | null},ValueTypes["comercial_Propostas_Servicos"]],
insert_comercial_Propostas_Situacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Propostas_Situacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Situacoes_on_conflict"] | null},ValueTypes["comercial_Propostas_Situacoes_mutation_response"]],
insert_comercial_Propostas_Situacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_Situacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_Situacoes_on_conflict"] | null},ValueTypes["comercial_Propostas_Situacoes"]],
insert_comercial_Propostas_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Propostas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Propostas_on_conflict"] | null},ValueTypes["comercial_Propostas"]],
insert_comercial_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_on_conflict"] | null},ValueTypes["comercial_Servicos_mutation_response"]],
insert_comercial_Servicos_Atributos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Atributos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Atributos_on_conflict"] | null},ValueTypes["comercial_Servicos_Atributos_mutation_response"]],
insert_comercial_Servicos_Atributos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Atributos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Atributos_on_conflict"] | null},ValueTypes["comercial_Servicos_Atributos"]],
insert_comercial_Servicos_Oportunidades?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Oportunidades_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Servicos_Oportunidades_mutation_response"]],
insert_comercial_Servicos_Oportunidades_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Oportunidades_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Oportunidades_on_conflict"] | null},ValueTypes["comercial_Servicos_Oportunidades"]],
insert_comercial_Servicos_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Produtos_on_conflict"] | null},ValueTypes["comercial_Servicos_Produtos_mutation_response"]],
insert_comercial_Servicos_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Produtos_on_conflict"] | null},ValueTypes["comercial_Servicos_Produtos"]],
insert_comercial_Servicos_Servicos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Servicos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Servicos_on_conflict"] | null},ValueTypes["comercial_Servicos_Servicos_mutation_response"]],
insert_comercial_Servicos_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Servicos_on_conflict"] | null},ValueTypes["comercial_Servicos_Servicos"]],
insert_comercial_Servicos_Tarifas?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Tarifas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tarifas_on_conflict"] | null},ValueTypes["comercial_Servicos_Tarifas_mutation_response"]],
insert_comercial_Servicos_Tarifas_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Tarifas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tarifas_on_conflict"] | null},ValueTypes["comercial_Servicos_Tarifas"]],
insert_comercial_Servicos_Tipos?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Servicos_Tipos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tipos_on_conflict"] | null},ValueTypes["comercial_Servicos_Tipos_mutation_response"]],
insert_comercial_Servicos_Tipos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_Tipos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_Tipos_on_conflict"] | null},ValueTypes["comercial_Servicos_Tipos"]],
insert_comercial_Servicos_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Servicos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Servicos_on_conflict"] | null},ValueTypes["comercial_Servicos"]],
insert_comercial_Tarifas?: [{	/** the rows to be inserted */
	objects:ValueTypes["comercial_Tarifas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Tarifas_on_conflict"] | null},ValueTypes["comercial_Tarifas_mutation_response"]],
insert_comercial_Tarifas_one?: [{	/** the row to be inserted */
	object:ValueTypes["comercial_Tarifas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["comercial_Tarifas_on_conflict"] | null},ValueTypes["comercial_Tarifas"]],
insert_contatos_Emails?: [{	/** the rows to be inserted */
	objects:ValueTypes["contatos_Emails_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Emails_on_conflict"] | null},ValueTypes["contatos_Emails_mutation_response"]],
insert_contatos_Emails_one?: [{	/** the row to be inserted */
	object:ValueTypes["contatos_Emails_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Emails_on_conflict"] | null},ValueTypes["contatos_Emails"]],
insert_contatos_Enderecos?: [{	/** the rows to be inserted */
	objects:ValueTypes["contatos_Enderecos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Enderecos_on_conflict"] | null},ValueTypes["contatos_Enderecos_mutation_response"]],
insert_contatos_Enderecos_one?: [{	/** the row to be inserted */
	object:ValueTypes["contatos_Enderecos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Enderecos_on_conflict"] | null},ValueTypes["contatos_Enderecos"]],
insert_contatos_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["contatos_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Logs_on_conflict"] | null},ValueTypes["contatos_Logs_mutation_response"]],
insert_contatos_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["contatos_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Logs_on_conflict"] | null},ValueTypes["contatos_Logs"]],
insert_contatos_Telefones?: [{	/** the rows to be inserted */
	objects:ValueTypes["contatos_Telefones_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Telefones_on_conflict"] | null},ValueTypes["contatos_Telefones_mutation_response"]],
insert_contatos_Telefones_one?: [{	/** the row to be inserted */
	object:ValueTypes["contatos_Telefones_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["contatos_Telefones_on_conflict"] | null},ValueTypes["contatos_Telefones"]],
insert_estoque_Enderecamentos?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Enderecamentos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Enderecamentos_on_conflict"] | null},ValueTypes["estoque_Enderecamentos_mutation_response"]],
insert_estoque_Enderecamentos_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Enderecamentos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Enderecamentos_on_conflict"] | null},ValueTypes["estoque_Enderecamentos"]],
insert_estoque_Fabricantes?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Fabricantes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Fabricantes_on_conflict"] | null},ValueTypes["estoque_Fabricantes_mutation_response"]],
insert_estoque_Fabricantes_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Fabricantes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Fabricantes_on_conflict"] | null},ValueTypes["estoque_Fabricantes"]],
insert_estoque_Familias?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Familias_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Familias_on_conflict"] | null},ValueTypes["estoque_Familias_mutation_response"]],
insert_estoque_Familias_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Familias_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Familias_on_conflict"] | null},ValueTypes["estoque_Familias"]],
insert_estoque_Grupos?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Grupos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Grupos_on_conflict"] | null},ValueTypes["estoque_Grupos_mutation_response"]],
insert_estoque_Grupos_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Grupos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Grupos_on_conflict"] | null},ValueTypes["estoque_Grupos"]],
insert_estoque_Itens?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Itens_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Itens_on_conflict"] | null},ValueTypes["estoque_Itens_mutation_response"]],
insert_estoque_Itens_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Itens_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Itens_on_conflict"] | null},ValueTypes["estoque_Itens"]],
insert_estoque_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Logs_on_conflict"] | null},ValueTypes["estoque_Logs_mutation_response"]],
insert_estoque_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Logs_on_conflict"] | null},ValueTypes["estoque_Logs"]],
insert_estoque_Modelos?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_Modelos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Modelos_on_conflict"] | null},ValueTypes["estoque_Modelos_mutation_response"]],
insert_estoque_Modelos_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_Modelos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_Modelos_on_conflict"] | null},ValueTypes["estoque_Modelos"]],
insert_estoque_TiposDeEnderecamentos?: [{	/** the rows to be inserted */
	objects:ValueTypes["estoque_TiposDeEnderecamentos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_TiposDeEnderecamentos_on_conflict"] | null},ValueTypes["estoque_TiposDeEnderecamentos_mutation_response"]],
insert_estoque_TiposDeEnderecamentos_one?: [{	/** the row to be inserted */
	object:ValueTypes["estoque_TiposDeEnderecamentos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["estoque_TiposDeEnderecamentos_on_conflict"] | null},ValueTypes["estoque_TiposDeEnderecamentos"]],
insert_identidades_Clientes?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Clientes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_on_conflict"] | null},ValueTypes["identidades_Clientes_mutation_response"]],
insert_identidades_Clientes_Documentos?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Clientes_Documentos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_on_conflict"] | null},ValueTypes["identidades_Clientes_Documentos_mutation_response"]],
insert_identidades_Clientes_Documentos_Situacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Clientes_Documentos_Situacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_Situacoes_on_conflict"] | null},ValueTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"]],
insert_identidades_Clientes_Documentos_Situacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Clientes_Documentos_Situacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_Situacoes_on_conflict"] | null},ValueTypes["identidades_Clientes_Documentos_Situacoes"]],
insert_identidades_Clientes_Documentos_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Clientes_Documentos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_Documentos_on_conflict"] | null},ValueTypes["identidades_Clientes_Documentos"]],
insert_identidades_Clientes_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Clientes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Clientes_on_conflict"] | null},ValueTypes["identidades_Clientes"]],
insert_identidades_Colaboradores?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Colaboradores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Colaboradores_on_conflict"] | null},ValueTypes["identidades_Colaboradores_mutation_response"]],
insert_identidades_Colaboradores_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Colaboradores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Colaboradores_on_conflict"] | null},ValueTypes["identidades_Colaboradores"]],
insert_identidades_Fornecedores?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Fornecedores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Fornecedores_on_conflict"] | null},ValueTypes["identidades_Fornecedores_mutation_response"]],
insert_identidades_Fornecedores_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Fornecedores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Fornecedores_on_conflict"] | null},ValueTypes["identidades_Fornecedores"]],
insert_identidades_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Logs_on_conflict"] | null},ValueTypes["identidades_Logs_mutation_response"]],
insert_identidades_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Logs_on_conflict"] | null},ValueTypes["identidades_Logs"]],
insert_identidades_Pessoas?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Pessoas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Pessoas_on_conflict"] | null},ValueTypes["identidades_Pessoas_mutation_response"]],
insert_identidades_Pessoas_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Pessoas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Pessoas_on_conflict"] | null},ValueTypes["identidades_Pessoas"]],
insert_identidades_Representantes?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Representantes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Representantes_on_conflict"] | null},ValueTypes["identidades_Representantes_mutation_response"]],
insert_identidades_Representantes_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Representantes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Representantes_on_conflict"] | null},ValueTypes["identidades_Representantes"]],
insert_identidades_Vendedores?: [{	/** the rows to be inserted */
	objects:ValueTypes["identidades_Vendedores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Vendedores_on_conflict"] | null},ValueTypes["identidades_Vendedores_mutation_response"]],
insert_identidades_Vendedores_one?: [{	/** the row to be inserted */
	object:ValueTypes["identidades_Vendedores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["identidades_Vendedores_on_conflict"] | null},ValueTypes["identidades_Vendedores"]],
insert_movimentacoes_Motivos?: [{	/** the rows to be inserted */
	objects:ValueTypes["movimentacoes_Motivos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Motivos_on_conflict"] | null},ValueTypes["movimentacoes_Motivos_mutation_response"]],
insert_movimentacoes_Motivos_one?: [{	/** the row to be inserted */
	object:ValueTypes["movimentacoes_Motivos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Motivos_on_conflict"] | null},ValueTypes["movimentacoes_Motivos"]],
insert_movimentacoes_Movimentacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["movimentacoes_Movimentacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Movimentacoes_on_conflict"] | null},ValueTypes["movimentacoes_Movimentacoes_mutation_response"]],
insert_movimentacoes_Movimentacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["movimentacoes_Movimentacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["movimentacoes_Movimentacoes_on_conflict"] | null},ValueTypes["movimentacoes_Movimentacoes"]],
insert_operacional_OrdemDeServico?: [{	/** the rows to be inserted */
	objects:ValueTypes["operacional_OrdemDeServico_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_mutation_response"]],
insert_operacional_OrdemDeServico_Atividades?: [{	/** the rows to be inserted */
	objects:ValueTypes["operacional_OrdemDeServico_Atividades_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Atividades_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Atividades_mutation_response"]],
insert_operacional_OrdemDeServico_Atividades_one?: [{	/** the row to be inserted */
	object:ValueTypes["operacional_OrdemDeServico_Atividades_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Atividades_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Atividades"]],
insert_operacional_OrdemDeServico_Situacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["operacional_OrdemDeServico_Situacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Situacoes_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes_mutation_response"]],
insert_operacional_OrdemDeServico_Situacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["operacional_OrdemDeServico_Situacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Situacoes_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
insert_operacional_OrdemDeServico_Tipo?: [{	/** the rows to be inserted */
	objects:ValueTypes["operacional_OrdemDeServico_Tipo_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Tipo_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Tipo_mutation_response"]],
insert_operacional_OrdemDeServico_Tipo_one?: [{	/** the row to be inserted */
	object:ValueTypes["operacional_OrdemDeServico_Tipo_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Tipo_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico_Tipo"]],
insert_operacional_OrdemDeServico_one?: [{	/** the row to be inserted */
	object:ValueTypes["operacional_OrdemDeServico_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_on_conflict"] | null},ValueTypes["operacional_OrdemDeServico"]],
insert_pedidosDeCompra_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Logs_on_conflict"] | null},ValueTypes["pedidosDeCompra_Logs_mutation_response"]],
insert_pedidosDeCompra_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Logs_on_conflict"] | null},ValueTypes["pedidosDeCompra_Logs"]],
insert_pedidosDeCompra_Orcamentos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Orcamentos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Orcamentos_mutation_response"]],
insert_pedidosDeCompra_Orcamentos_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]],
insert_pedidosDeCompra_Orcamentos_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
insert_pedidosDeCompra_Orcamentos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Orcamentos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Orcamentos"]],
insert_pedidosDeCompra_Pedidos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Pedidos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Pedidos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Pedidos_mutation_response"]],
insert_pedidosDeCompra_Pedidos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Pedidos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Pedidos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Pedidos"]],
insert_pedidosDeCompra_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Produtos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Produtos_mutation_response"]],
insert_pedidosDeCompra_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Produtos_on_conflict"] | null},ValueTypes["pedidosDeCompra_Produtos"]],
insert_pedidosDeCompra_Situacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeCompra_Situacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Situacoes_on_conflict"] | null},ValueTypes["pedidosDeCompra_Situacoes_mutation_response"]],
insert_pedidosDeCompra_Situacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeCompra_Situacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Situacoes_on_conflict"] | null},ValueTypes["pedidosDeCompra_Situacoes"]],
insert_pedidosDeSaida_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeSaida_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Logs_on_conflict"] | null},ValueTypes["pedidosDeSaida_Logs_mutation_response"]],
insert_pedidosDeSaida_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeSaida_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Logs_on_conflict"] | null},ValueTypes["pedidosDeSaida_Logs"]],
insert_pedidosDeSaida_Pedidos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeSaida_Pedidos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Pedidos_on_conflict"] | null},ValueTypes["pedidosDeSaida_Pedidos_mutation_response"]],
insert_pedidosDeSaida_Pedidos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeSaida_Pedidos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Pedidos_on_conflict"] | null},ValueTypes["pedidosDeSaida_Pedidos"]],
insert_pedidosDeSaida_Produtos?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeSaida_Produtos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Produtos_on_conflict"] | null},ValueTypes["pedidosDeSaida_Produtos_mutation_response"]],
insert_pedidosDeSaida_Produtos_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeSaida_Produtos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Produtos_on_conflict"] | null},ValueTypes["pedidosDeSaida_Produtos"]],
insert_pedidosDeSaida_Situacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["pedidosDeSaida_Situacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Situacoes_on_conflict"] | null},ValueTypes["pedidosDeSaida_Situacoes_mutation_response"]],
insert_pedidosDeSaida_Situacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["pedidosDeSaida_Situacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Situacoes_on_conflict"] | null},ValueTypes["pedidosDeSaida_Situacoes"]],
insert_producao_Chips?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_Chips_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Chips_on_conflict"] | null},ValueTypes["producao_Chips_mutation_response"]],
insert_producao_ChipsSituacoes?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_ChipsSituacoes_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_ChipsSituacoes_on_conflict"] | null},ValueTypes["producao_ChipsSituacoes_mutation_response"]],
insert_producao_ChipsSituacoes_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_ChipsSituacoes_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_ChipsSituacoes_on_conflict"] | null},ValueTypes["producao_ChipsSituacoes"]],
insert_producao_Chips_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_Chips_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Chips_on_conflict"] | null},ValueTypes["producao_Chips"]],
insert_producao_Equipamentos?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_Equipamentos_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Equipamentos_on_conflict"] | null},ValueTypes["producao_Equipamentos_mutation_response"]],
insert_producao_Equipamentos_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_Equipamentos_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Equipamentos_on_conflict"] | null},ValueTypes["producao_Equipamentos"]],
insert_producao_Identificadores?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_Identificadores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Identificadores_on_conflict"] | null},ValueTypes["producao_Identificadores_mutation_response"]],
insert_producao_Identificadores_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_Identificadores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Identificadores_on_conflict"] | null},ValueTypes["producao_Identificadores"]],
insert_producao_KitDeInsumo_Itens?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_KitDeInsumo_Itens_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitDeInsumo_Itens_on_conflict"] | null},ValueTypes["producao_KitDeInsumo_Itens_mutation_response"]],
insert_producao_KitDeInsumo_Itens_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_KitDeInsumo_Itens_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitDeInsumo_Itens_on_conflict"] | null},ValueTypes["producao_KitDeInsumo_Itens"]],
insert_producao_KitsDeInstalacao?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_KitsDeInstalacao_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInstalacao_on_conflict"] | null},ValueTypes["producao_KitsDeInstalacao_mutation_response"]],
insert_producao_KitsDeInstalacao_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_KitsDeInstalacao_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInstalacao_on_conflict"] | null},ValueTypes["producao_KitsDeInstalacao"]],
insert_producao_KitsDeInsumo?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_KitsDeInsumo_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInsumo_on_conflict"] | null},ValueTypes["producao_KitsDeInsumo_mutation_response"]],
insert_producao_KitsDeInsumo_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_KitsDeInsumo_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInsumo_on_conflict"] | null},ValueTypes["producao_KitsDeInsumo"]],
insert_producao_Logs?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_Logs_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Logs_on_conflict"] | null},ValueTypes["producao_Logs_mutation_response"]],
insert_producao_Logs_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_Logs_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Logs_on_conflict"] | null},ValueTypes["producao_Logs"]],
insert_producao_Rastreadores?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_Rastreadores_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Rastreadores_on_conflict"] | null},ValueTypes["producao_Rastreadores_mutation_response"]],
insert_producao_Rastreadores_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_Rastreadores_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Rastreadores_on_conflict"] | null},ValueTypes["producao_Rastreadores"]],
insert_producao_TiposDeKitDeInsumo?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_TiposDeKitDeInsumo_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_on_conflict"] | null},ValueTypes["producao_TiposDeKitDeInsumo_mutation_response"]],
insert_producao_TiposDeKitDeInsumo_estoque_Itens?: [{	/** the rows to be inserted */
	objects:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]],
insert_producao_TiposDeKitDeInsumo_estoque_Itens_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
insert_producao_TiposDeKitDeInsumo_one?: [{	/** the row to be inserted */
	object:ValueTypes["producao_TiposDeKitDeInsumo_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_on_conflict"] | null},ValueTypes["producao_TiposDeKitDeInsumo"]],
insert_vendas_GruposDePerguntas?: [{	/** the rows to be inserted */
	objects:ValueTypes["vendas_GruposDePerguntas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_on_conflict"] | null},ValueTypes["vendas_GruposDePerguntas_mutation_response"]],
insert_vendas_GruposDePerguntas_Perguntas?: [{	/** the rows to be inserted */
	objects:ValueTypes["vendas_GruposDePerguntas_Perguntas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_Perguntas_on_conflict"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"]],
insert_vendas_GruposDePerguntas_Perguntas_one?: [{	/** the row to be inserted */
	object:ValueTypes["vendas_GruposDePerguntas_Perguntas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_Perguntas_on_conflict"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
insert_vendas_GruposDePerguntas_one?: [{	/** the row to be inserted */
	object:ValueTypes["vendas_GruposDePerguntas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_on_conflict"] | null},ValueTypes["vendas_GruposDePerguntas"]],
insert_vendas_Perguntas?: [{	/** the rows to be inserted */
	objects:ValueTypes["vendas_Perguntas_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_Perguntas_on_conflict"] | null},ValueTypes["vendas_Perguntas_mutation_response"]],
insert_vendas_Perguntas_one?: [{	/** the row to be inserted */
	object:ValueTypes["vendas_Perguntas_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_Perguntas_on_conflict"] | null},ValueTypes["vendas_Perguntas"]],
insert_vendas_TiposDePagamento?: [{	/** the rows to be inserted */
	objects:ValueTypes["vendas_TiposDePagamento_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDePagamento_on_conflict"] | null},ValueTypes["vendas_TiposDePagamento_mutation_response"]],
insert_vendas_TiposDePagamento_one?: [{	/** the row to be inserted */
	object:ValueTypes["vendas_TiposDePagamento_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDePagamento_on_conflict"] | null},ValueTypes["vendas_TiposDePagamento"]],
insert_vendas_TiposDeRecorrencia?: [{	/** the rows to be inserted */
	objects:ValueTypes["vendas_TiposDeRecorrencia_insert_input"][],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDeRecorrencia_on_conflict"] | null},ValueTypes["vendas_TiposDeRecorrencia_mutation_response"]],
insert_vendas_TiposDeRecorrencia_one?: [{	/** the row to be inserted */
	object:ValueTypes["vendas_TiposDeRecorrencia_insert_input"],	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDeRecorrencia_on_conflict"] | null},ValueTypes["vendas_TiposDeRecorrencia"]],
update_CategoriasDeVeiculos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["CategoriasDeVeiculos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["CategoriasDeVeiculos_bool_exp"]},ValueTypes["CategoriasDeVeiculos_mutation_response"]],
update_CategoriasDeVeiculos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["CategoriasDeVeiculos_set_input"] | null,	pk_columns:ValueTypes["CategoriasDeVeiculos_pk_columns_input"]},ValueTypes["CategoriasDeVeiculos"]],
update_Configuracoes?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["Configuracoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["Configuracoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["Configuracoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["Configuracoes_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["Configuracoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Configuracoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["Configuracoes_bool_exp"]},ValueTypes["Configuracoes_mutation_response"]],
update_Configuracoes_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["Configuracoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["Configuracoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["Configuracoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["Configuracoes_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["Configuracoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Configuracoes_set_input"] | null,	pk_columns:ValueTypes["Configuracoes_pk_columns_input"]},ValueTypes["Configuracoes"]],
update_EstadosEMunicipios?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["EstadosEMunicipios_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["EstadosEMunicipios_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["EstadosEMunicipios_bool_exp"]},ValueTypes["EstadosEMunicipios_mutation_response"]],
update_EstadosEMunicipios_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["EstadosEMunicipios_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["EstadosEMunicipios_set_input"] | null,	pk_columns:ValueTypes["EstadosEMunicipios_pk_columns_input"]},ValueTypes["EstadosEMunicipios"]],
update_Operadoras?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Operadoras_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["Operadoras_bool_exp"]},ValueTypes["Operadoras_mutation_response"]],
update_Operadoras_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Operadoras_set_input"] | null,	pk_columns:ValueTypes["Operadoras_pk_columns_input"]},ValueTypes["Operadoras"]],
update_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["Produtos_bool_exp"]},ValueTypes["Produtos_mutation_response"]],
update_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["Produtos_set_input"] | null,	pk_columns:ValueTypes["Produtos_pk_columns_input"]},ValueTypes["Produtos"]],
update_UnidadesDeMedidas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["UnidadesDeMedidas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["UnidadesDeMedidas_bool_exp"]},ValueTypes["UnidadesDeMedidas_mutation_response"]],
update_UnidadesDeMedidas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["UnidadesDeMedidas_set_input"] | null,	pk_columns:ValueTypes["UnidadesDeMedidas_pk_columns_input"]},ValueTypes["UnidadesDeMedidas"]],
update_atendimentos_EtapasDosFluxos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["atendimentos_EtapasDosFluxos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_EtapasDosFluxos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"]},ValueTypes["atendimentos_EtapasDosFluxos_mutation_response"]],
update_atendimentos_EtapasDosFluxos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["atendimentos_EtapasDosFluxos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_EtapasDosFluxos_set_input"] | null,	pk_columns:ValueTypes["atendimentos_EtapasDosFluxos_pk_columns_input"]},ValueTypes["atendimentos_EtapasDosFluxos"]],
update_atendimentos_Fluxos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_Fluxos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["atendimentos_Fluxos_bool_exp"]},ValueTypes["atendimentos_Fluxos_mutation_response"]],
update_atendimentos_Fluxos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_Fluxos_set_input"] | null,	pk_columns:ValueTypes["atendimentos_Fluxos_pk_columns_input"]},ValueTypes["atendimentos_Fluxos"]],
update_atendimentos_Tickets?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["atendimentos_Tickets_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_Tickets_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["atendimentos_Tickets_bool_exp"]},ValueTypes["atendimentos_Tickets_mutation_response"]],
update_atendimentos_Tickets_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["atendimentos_Tickets_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_Tickets_set_input"] | null,	pk_columns:ValueTypes["atendimentos_Tickets_pk_columns_input"]},ValueTypes["atendimentos_Tickets"]],
update_atendimentos_TiposDeTickets?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_TiposDeTickets_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["atendimentos_TiposDeTickets_bool_exp"]},ValueTypes["atendimentos_TiposDeTickets_mutation_response"]],
update_atendimentos_TiposDeTickets_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["atendimentos_TiposDeTickets_set_input"] | null,	pk_columns:ValueTypes["atendimentos_TiposDeTickets_pk_columns_input"]},ValueTypes["atendimentos_TiposDeTickets"]],
update_autenticacao_Atendentes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["autenticacao_Atendentes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["autenticacao_Atendentes_bool_exp"]},ValueTypes["autenticacao_Atendentes_mutation_response"]],
update_autenticacao_Atendentes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["autenticacao_Atendentes_set_input"] | null,	pk_columns:ValueTypes["autenticacao_Atendentes_pk_columns_input"]},ValueTypes["autenticacao_Atendentes"]],
update_autenticacao_Usuarios?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["autenticacao_Usuarios_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["autenticacao_Usuarios_bool_exp"]},ValueTypes["autenticacao_Usuarios_mutation_response"]],
update_autenticacao_Usuarios_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["autenticacao_Usuarios_set_input"] | null,	pk_columns:ValueTypes["autenticacao_Usuarios_pk_columns_input"]},ValueTypes["autenticacao_Usuarios"]],
update_clientes_Leads?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_Leads_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["clientes_Leads_bool_exp"]},ValueTypes["clientes_Leads_mutation_response"]],
update_clientes_Leads_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_Leads_set_input"] | null,	pk_columns:ValueTypes["clientes_Leads_pk_columns_input"]},ValueTypes["clientes_Leads"]],
update_clientes_PerfisComerciais?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_PerfisComerciais_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["clientes_PerfisComerciais_bool_exp"]},ValueTypes["clientes_PerfisComerciais_mutation_response"]],
update_clientes_PerfisComerciais_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_PerfisComerciais_set_input"] | null,	pk_columns:ValueTypes["clientes_PerfisComerciais_pk_columns_input"]},ValueTypes["clientes_PerfisComerciais"]],
update_clientes_Veiculos?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["clientes_Veiculos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["clientes_Veiculos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["clientes_Veiculos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["clientes_Veiculos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["clientes_Veiculos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_Veiculos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["clientes_Veiculos_bool_exp"]},ValueTypes["clientes_Veiculos_mutation_response"]],
update_clientes_Veiculos_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["clientes_Veiculos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["clientes_Veiculos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["clientes_Veiculos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["clientes_Veiculos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["clientes_Veiculos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["clientes_Veiculos_set_input"] | null,	pk_columns:ValueTypes["clientes_Veiculos_pk_columns_input"]},ValueTypes["clientes_Veiculos"]],
update_comercial_Acoes?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Acoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Acoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Acoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Acoes_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Acoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Acoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Acoes_bool_exp"]},ValueTypes["comercial_Acoes_mutation_response"]],
update_comercial_Acoes_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Acoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Acoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Acoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Acoes_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Acoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Acoes_set_input"] | null,	pk_columns:ValueTypes["comercial_Acoes_pk_columns_input"]},ValueTypes["comercial_Acoes"]],
update_comercial_Atributos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Atributos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Atributos_bool_exp"]},ValueTypes["comercial_Atributos_mutation_response"]],
update_comercial_Atributos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Atributos_set_input"] | null,	pk_columns:ValueTypes["comercial_Atributos_pk_columns_input"]},ValueTypes["comercial_Atributos"]],
update_comercial_Coberturas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Coberturas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Coberturas_bool_exp"]},ValueTypes["comercial_Coberturas_mutation_response"]],
update_comercial_Coberturas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Coberturas_set_input"] | null,	pk_columns:ValueTypes["comercial_Coberturas_pk_columns_input"]},ValueTypes["comercial_Coberturas"]],
update_comercial_Combos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_bool_exp"]},ValueTypes["comercial_Combos_mutation_response"]],
update_comercial_Combos_Combos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Combos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Combos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_Combos_bool_exp"]},ValueTypes["comercial_Combos_Combos_mutation_response"]],
update_comercial_Combos_Combos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Combos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Combos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_Combos_pk_columns_input"]},ValueTypes["comercial_Combos_Combos"]],
update_comercial_Combos_Planos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Planos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Planos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_Planos_bool_exp"]},ValueTypes["comercial_Combos_Planos_mutation_response"]],
update_comercial_Combos_Planos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Planos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Planos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_Planos_pk_columns_input"]},ValueTypes["comercial_Combos_Planos"]],
update_comercial_Combos_Precos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Precos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_Precos_bool_exp"]},ValueTypes["comercial_Combos_Precos_mutation_response"]],
update_comercial_Combos_Precos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Precos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_Precos_pk_columns_input"]},ValueTypes["comercial_Combos_Precos"]],
update_comercial_Combos_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_Produtos_bool_exp"]},ValueTypes["comercial_Combos_Produtos_mutation_response"]],
update_comercial_Combos_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_Produtos_pk_columns_input"]},ValueTypes["comercial_Combos_Produtos"]],
update_comercial_Combos_Servicos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Combos_Servicos_bool_exp"]},ValueTypes["comercial_Combos_Servicos_mutation_response"]],
update_comercial_Combos_Servicos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Combos_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_Servicos_pk_columns_input"]},ValueTypes["comercial_Combos_Servicos"]],
update_comercial_Combos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Combos_set_input"] | null,	pk_columns:ValueTypes["comercial_Combos_pk_columns_input"]},ValueTypes["comercial_Combos"]],
update_comercial_Condicionais?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Condicionais_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Condicionais_bool_exp"]},ValueTypes["comercial_Condicionais_mutation_response"]],
update_comercial_CondicionaisSituacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_CondicionaisSituacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"]},ValueTypes["comercial_CondicionaisSituacoes_mutation_response"]],
update_comercial_CondicionaisSituacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_CondicionaisSituacoes_set_input"] | null,	pk_columns:ValueTypes["comercial_CondicionaisSituacoes_pk_columns_input"]},ValueTypes["comercial_CondicionaisSituacoes"]],
update_comercial_Condicionais_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Condicionais_set_input"] | null,	pk_columns:ValueTypes["comercial_Condicionais_pk_columns_input"]},ValueTypes["comercial_Condicionais"]],
update_comercial_ContratosBase?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_ContratosBase_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_ContratosBase_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_ContratosBase_bool_exp"]},ValueTypes["comercial_ContratosBase_mutation_response"]],
update_comercial_ContratosBase_Versoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_ContratosBase_Versoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"]},ValueTypes["comercial_ContratosBase_Versoes_mutation_response"]],
update_comercial_ContratosBase_Versoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_ContratosBase_Versoes_set_input"] | null,	pk_columns:ValueTypes["comercial_ContratosBase_Versoes_pk_columns_input"]},ValueTypes["comercial_ContratosBase_Versoes"]],
update_comercial_ContratosBase_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_ContratosBase_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_ContratosBase_set_input"] | null,	pk_columns:ValueTypes["comercial_ContratosBase_pk_columns_input"]},ValueTypes["comercial_ContratosBase"]],
update_comercial_Fornecedores?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_bool_exp"]},ValueTypes["comercial_Fornecedores_mutation_response"]],
update_comercial_Fornecedores_Produtos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"]},ValueTypes["comercial_Fornecedores_Produtos_mutation_response"]],
update_comercial_Fornecedores_Produtos_Precos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Produtos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Produtos_Precos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"]},ValueTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"]],
update_comercial_Fornecedores_Produtos_Precos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Produtos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Produtos_Precos_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_Produtos_Precos_pk_columns_input"]},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
update_comercial_Fornecedores_Produtos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_Produtos_pk_columns_input"]},ValueTypes["comercial_Fornecedores_Produtos"]],
update_comercial_Fornecedores_Servicos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_mutation_response"]],
update_comercial_Fornecedores_Servicos_Precos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Servicos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_Precos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"]],
update_comercial_Fornecedores_Servicos_Precos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Servicos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_Precos_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_Servicos_Precos_pk_columns_input"]},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
update_comercial_Fornecedores_Servicos_Tarifas?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]],
update_comercial_Fornecedores_Servicos_Tarifas_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_pk_columns_input"]},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
update_comercial_Fornecedores_Servicos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_Servicos_pk_columns_input"]},ValueTypes["comercial_Fornecedores_Servicos"]],
update_comercial_Fornecedores_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Fornecedores_set_input"] | null,	pk_columns:ValueTypes["comercial_Fornecedores_pk_columns_input"]},ValueTypes["comercial_Fornecedores"]],
update_comercial_Planos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Planos_bool_exp"]},ValueTypes["comercial_Planos_mutation_response"]],
update_comercial_Planos_Condicionais?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Planos_Condicionais_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_Condicionais_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Planos_Condicionais_bool_exp"]},ValueTypes["comercial_Planos_Condicionais_mutation_response"]],
update_comercial_Planos_Condicionais_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Planos_Condicionais_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_Condicionais_set_input"] | null,	pk_columns:ValueTypes["comercial_Planos_Condicionais_pk_columns_input"]},ValueTypes["comercial_Planos_Condicionais"]],
update_comercial_Planos_Precos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Planos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_Precos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Planos_Precos_bool_exp"]},ValueTypes["comercial_Planos_Precos_mutation_response"]],
update_comercial_Planos_Precos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Planos_Precos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_Precos_set_input"] | null,	pk_columns:ValueTypes["comercial_Planos_Precos_pk_columns_input"]},ValueTypes["comercial_Planos_Precos"]],
update_comercial_Planos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Planos_set_input"] | null,	pk_columns:ValueTypes["comercial_Planos_pk_columns_input"]},ValueTypes["comercial_Planos"]],
update_comercial_PrestadorDeServicos_Servicos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_PrestadorDeServicos_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_PrestadorDeServicos_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"]},ValueTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"]],
update_comercial_PrestadorDeServicos_Servicos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_PrestadorDeServicos_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_PrestadorDeServicos_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_PrestadorDeServicos_Servicos_pk_columns_input"]},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
update_comercial_Produtos?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Produtos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Produtos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Produtos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Produtos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Produtos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_bool_exp"]},ValueTypes["comercial_Produtos_mutation_response"]],
update_comercial_Produtos_Atributos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Atributos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_Atributos_bool_exp"]},ValueTypes["comercial_Produtos_Atributos_mutation_response"]],
update_comercial_Produtos_Atributos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Atributos_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_Atributos_pk_columns_input"]},ValueTypes["comercial_Produtos_Atributos"]],
update_comercial_Produtos_Oportunidades?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Produtos_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Oportunidades_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"]},ValueTypes["comercial_Produtos_Oportunidades_mutation_response"]],
update_comercial_Produtos_Oportunidades_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Produtos_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Oportunidades_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_Oportunidades_pk_columns_input"]},ValueTypes["comercial_Produtos_Oportunidades"]],
update_comercial_Produtos_Produtos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_Produtos_bool_exp"]},ValueTypes["comercial_Produtos_Produtos_mutation_response"]],
update_comercial_Produtos_Produtos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_Produtos_pk_columns_input"]},ValueTypes["comercial_Produtos_Produtos"]],
update_comercial_Produtos_Servicos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_Servicos_bool_exp"]},ValueTypes["comercial_Produtos_Servicos_mutation_response"]],
update_comercial_Produtos_Servicos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_Servicos_pk_columns_input"]},ValueTypes["comercial_Produtos_Servicos"]],
update_comercial_Produtos_Tipos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Tipos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Produtos_Tipos_bool_exp"]},ValueTypes["comercial_Produtos_Tipos_mutation_response"]],
update_comercial_Produtos_Tipos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_Tipos_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_Tipos_pk_columns_input"]},ValueTypes["comercial_Produtos_Tipos"]],
update_comercial_Produtos_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Produtos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Produtos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Produtos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Produtos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Produtos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Produtos_pk_columns_input"]},ValueTypes["comercial_Produtos"]],
update_comercial_Propostas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_bool_exp"]},ValueTypes["comercial_Propostas_mutation_response"]],
update_comercial_Propostas_Combos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Combos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Combos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Combos_bool_exp"]},ValueTypes["comercial_Propostas_Combos_mutation_response"]],
update_comercial_Propostas_Combos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Combos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Combos_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Combos_pk_columns_input"]},ValueTypes["comercial_Propostas_Combos"]],
update_comercial_Propostas_Instalacoes?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Propostas_Instalacoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Propostas_Instalacoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Propostas_Instalacoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Propostas_Instalacoes_delete_key_input"] | null,	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Instalacoes_inc_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Propostas_Instalacoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Instalacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"]},ValueTypes["comercial_Propostas_Instalacoes_mutation_response"]],
update_comercial_Propostas_Instalacoes_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Propostas_Instalacoes_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Propostas_Instalacoes_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Propostas_Instalacoes_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Propostas_Instalacoes_delete_key_input"] | null,	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Instalacoes_inc_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Propostas_Instalacoes_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Instalacoes_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Instalacoes_pk_columns_input"]},ValueTypes["comercial_Propostas_Instalacoes"]],
update_comercial_Propostas_Oportunidades?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Oportunidades_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"]},ValueTypes["comercial_Propostas_Oportunidades_mutation_response"]],
update_comercial_Propostas_Oportunidades_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Oportunidades_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Oportunidades_pk_columns_input"]},ValueTypes["comercial_Propostas_Oportunidades"]],
update_comercial_Propostas_Planos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Planos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Planos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Planos_bool_exp"]},ValueTypes["comercial_Propostas_Planos_mutation_response"]],
update_comercial_Propostas_Planos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Planos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Planos_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Planos_pk_columns_input"]},ValueTypes["comercial_Propostas_Planos"]],
update_comercial_Propostas_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Produtos_bool_exp"]},ValueTypes["comercial_Propostas_Produtos_mutation_response"]],
update_comercial_Propostas_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Produtos_pk_columns_input"]},ValueTypes["comercial_Propostas_Produtos"]],
update_comercial_Propostas_Servicos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Servicos_bool_exp"]},ValueTypes["comercial_Propostas_Servicos_mutation_response"]],
update_comercial_Propostas_Servicos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Propostas_Servicos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Servicos_pk_columns_input"]},ValueTypes["comercial_Propostas_Servicos"]],
update_comercial_Propostas_Situacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Situacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Propostas_Situacoes_bool_exp"]},ValueTypes["comercial_Propostas_Situacoes_mutation_response"]],
update_comercial_Propostas_Situacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_Situacoes_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_Situacoes_pk_columns_input"]},ValueTypes["comercial_Propostas_Situacoes"]],
update_comercial_Propostas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Propostas_set_input"] | null,	pk_columns:ValueTypes["comercial_Propostas_pk_columns_input"]},ValueTypes["comercial_Propostas"]],
update_comercial_Servicos?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Servicos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Servicos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Servicos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Servicos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Servicos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_bool_exp"]},ValueTypes["comercial_Servicos_mutation_response"]],
update_comercial_Servicos_Atributos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Atributos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Atributos_bool_exp"]},ValueTypes["comercial_Servicos_Atributos_mutation_response"]],
update_comercial_Servicos_Atributos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Atributos_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Atributos_pk_columns_input"]},ValueTypes["comercial_Servicos_Atributos"]],
update_comercial_Servicos_Oportunidades?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Servicos_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Oportunidades_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"]},ValueTypes["comercial_Servicos_Oportunidades_mutation_response"]],
update_comercial_Servicos_Oportunidades_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["comercial_Servicos_Oportunidades_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Oportunidades_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Oportunidades_pk_columns_input"]},ValueTypes["comercial_Servicos_Oportunidades"]],
update_comercial_Servicos_Produtos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Produtos_bool_exp"]},ValueTypes["comercial_Servicos_Produtos_mutation_response"]],
update_comercial_Servicos_Produtos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Produtos_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Produtos_pk_columns_input"]},ValueTypes["comercial_Servicos_Produtos"]],
update_comercial_Servicos_Servicos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Servicos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Servicos_bool_exp"]},ValueTypes["comercial_Servicos_Servicos_mutation_response"]],
update_comercial_Servicos_Servicos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Servicos_pk_columns_input"]},ValueTypes["comercial_Servicos_Servicos"]],
update_comercial_Servicos_Tarifas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Tarifas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Tarifas_bool_exp"]},ValueTypes["comercial_Servicos_Tarifas_mutation_response"]],
update_comercial_Servicos_Tarifas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Tarifas_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Tarifas_pk_columns_input"]},ValueTypes["comercial_Servicos_Tarifas"]],
update_comercial_Servicos_Tipos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Tipos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Servicos_Tipos_bool_exp"]},ValueTypes["comercial_Servicos_Tipos_mutation_response"]],
update_comercial_Servicos_Tipos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_Tipos_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_Tipos_pk_columns_input"]},ValueTypes["comercial_Servicos_Tipos"]],
update_comercial_Servicos_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["comercial_Servicos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["comercial_Servicos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["comercial_Servicos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["comercial_Servicos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["comercial_Servicos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Servicos_set_input"] | null,	pk_columns:ValueTypes["comercial_Servicos_pk_columns_input"]},ValueTypes["comercial_Servicos"]],
update_comercial_Tarifas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Tarifas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["comercial_Tarifas_bool_exp"]},ValueTypes["comercial_Tarifas_mutation_response"]],
update_comercial_Tarifas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["comercial_Tarifas_set_input"] | null,	pk_columns:ValueTypes["comercial_Tarifas_pk_columns_input"]},ValueTypes["comercial_Tarifas"]],
update_contatos_Emails?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Emails_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Emails_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Emails_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Emails_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Emails_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Emails_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["contatos_Emails_bool_exp"]},ValueTypes["contatos_Emails_mutation_response"]],
update_contatos_Emails_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Emails_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Emails_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Emails_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Emails_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Emails_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Emails_set_input"] | null,	pk_columns:ValueTypes["contatos_Emails_pk_columns_input"]},ValueTypes["contatos_Emails"]],
update_contatos_Enderecos?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Enderecos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Enderecos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Enderecos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Enderecos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Enderecos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Enderecos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["contatos_Enderecos_bool_exp"]},ValueTypes["contatos_Enderecos_mutation_response"]],
update_contatos_Enderecos_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Enderecos_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Enderecos_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Enderecos_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Enderecos_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Enderecos_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Enderecos_set_input"] | null,	pk_columns:ValueTypes["contatos_Enderecos_pk_columns_input"]},ValueTypes["contatos_Enderecos"]],
update_contatos_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["contatos_Logs_bool_exp"]},ValueTypes["contatos_Logs_mutation_response"]],
update_contatos_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Logs_set_input"] | null,	pk_columns:ValueTypes["contatos_Logs_pk_columns_input"]},ValueTypes["contatos_Logs"]],
update_contatos_Telefones?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Telefones_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Telefones_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Telefones_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Telefones_delete_key_input"] | null,	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["contatos_Telefones_inc_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Telefones_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Telefones_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["contatos_Telefones_bool_exp"]},ValueTypes["contatos_Telefones_mutation_response"]],
update_contatos_Telefones_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["contatos_Telefones_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["contatos_Telefones_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["contatos_Telefones_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["contatos_Telefones_delete_key_input"] | null,	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["contatos_Telefones_inc_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["contatos_Telefones_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["contatos_Telefones_set_input"] | null,	pk_columns:ValueTypes["contatos_Telefones_pk_columns_input"]},ValueTypes["contatos_Telefones"]],
update_estoque_Enderecamentos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Enderecamentos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Enderecamentos_bool_exp"]},ValueTypes["estoque_Enderecamentos_mutation_response"]],
update_estoque_Enderecamentos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Enderecamentos_set_input"] | null,	pk_columns:ValueTypes["estoque_Enderecamentos_pk_columns_input"]},ValueTypes["estoque_Enderecamentos"]],
update_estoque_Fabricantes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Fabricantes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Fabricantes_bool_exp"]},ValueTypes["estoque_Fabricantes_mutation_response"]],
update_estoque_Fabricantes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Fabricantes_set_input"] | null,	pk_columns:ValueTypes["estoque_Fabricantes_pk_columns_input"]},ValueTypes["estoque_Fabricantes"]],
update_estoque_Familias?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Familias_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Familias_bool_exp"]},ValueTypes["estoque_Familias_mutation_response"]],
update_estoque_Familias_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Familias_set_input"] | null,	pk_columns:ValueTypes["estoque_Familias_pk_columns_input"]},ValueTypes["estoque_Familias"]],
update_estoque_Grupos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Grupos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Grupos_bool_exp"]},ValueTypes["estoque_Grupos_mutation_response"]],
update_estoque_Grupos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Grupos_set_input"] | null,	pk_columns:ValueTypes["estoque_Grupos_pk_columns_input"]},ValueTypes["estoque_Grupos"]],
update_estoque_Itens?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["estoque_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Itens_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Itens_bool_exp"]},ValueTypes["estoque_Itens_mutation_response"]],
update_estoque_Itens_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["estoque_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Itens_set_input"] | null,	pk_columns:ValueTypes["estoque_Itens_pk_columns_input"]},ValueTypes["estoque_Itens"]],
update_estoque_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["estoque_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["estoque_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["estoque_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["estoque_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["estoque_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Logs_bool_exp"]},ValueTypes["estoque_Logs_mutation_response"]],
update_estoque_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["estoque_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["estoque_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["estoque_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["estoque_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["estoque_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Logs_set_input"] | null,	pk_columns:ValueTypes["estoque_Logs_pk_columns_input"]},ValueTypes["estoque_Logs"]],
update_estoque_Modelos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Modelos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_Modelos_bool_exp"]},ValueTypes["estoque_Modelos_mutation_response"]],
update_estoque_Modelos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_Modelos_set_input"] | null,	pk_columns:ValueTypes["estoque_Modelos_pk_columns_input"]},ValueTypes["estoque_Modelos"]],
update_estoque_TiposDeEnderecamentos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["estoque_TiposDeEnderecamentos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_TiposDeEnderecamentos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"]},ValueTypes["estoque_TiposDeEnderecamentos_mutation_response"]],
update_estoque_TiposDeEnderecamentos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["estoque_TiposDeEnderecamentos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["estoque_TiposDeEnderecamentos_set_input"] | null,	pk_columns:ValueTypes["estoque_TiposDeEnderecamentos_pk_columns_input"]},ValueTypes["estoque_TiposDeEnderecamentos"]],
update_identidades_Clientes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Clientes_bool_exp"]},ValueTypes["identidades_Clientes_mutation_response"]],
update_identidades_Clientes_Documentos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_Documentos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Clientes_Documentos_bool_exp"]},ValueTypes["identidades_Clientes_Documentos_mutation_response"]],
update_identidades_Clientes_Documentos_Situacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_Documentos_Situacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"]},ValueTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"]],
update_identidades_Clientes_Documentos_Situacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_Documentos_Situacoes_set_input"] | null,	pk_columns:ValueTypes["identidades_Clientes_Documentos_Situacoes_pk_columns_input"]},ValueTypes["identidades_Clientes_Documentos_Situacoes"]],
update_identidades_Clientes_Documentos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_Documentos_set_input"] | null,	pk_columns:ValueTypes["identidades_Clientes_Documentos_pk_columns_input"]},ValueTypes["identidades_Clientes_Documentos"]],
update_identidades_Clientes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Clientes_set_input"] | null,	pk_columns:ValueTypes["identidades_Clientes_pk_columns_input"]},ValueTypes["identidades_Clientes"]],
update_identidades_Colaboradores?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Colaboradores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Colaboradores_bool_exp"]},ValueTypes["identidades_Colaboradores_mutation_response"]],
update_identidades_Colaboradores_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Colaboradores_set_input"] | null,	pk_columns:ValueTypes["identidades_Colaboradores_pk_columns_input"]},ValueTypes["identidades_Colaboradores"]],
update_identidades_Fornecedores?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["identidades_Fornecedores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Fornecedores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Fornecedores_bool_exp"]},ValueTypes["identidades_Fornecedores_mutation_response"]],
update_identidades_Fornecedores_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["identidades_Fornecedores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Fornecedores_set_input"] | null,	pk_columns:ValueTypes["identidades_Fornecedores_pk_columns_input"]},ValueTypes["identidades_Fornecedores"]],
update_identidades_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Logs_bool_exp"]},ValueTypes["identidades_Logs_mutation_response"]],
update_identidades_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Logs_set_input"] | null,	pk_columns:ValueTypes["identidades_Logs_pk_columns_input"]},ValueTypes["identidades_Logs"]],
update_identidades_Pessoas?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Pessoas_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Pessoas_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Pessoas_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Pessoas_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Pessoas_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Pessoas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Pessoas_bool_exp"]},ValueTypes["identidades_Pessoas_mutation_response"]],
update_identidades_Pessoas_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Pessoas_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Pessoas_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Pessoas_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Pessoas_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Pessoas_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Pessoas_set_input"] | null,	pk_columns:ValueTypes["identidades_Pessoas_pk_columns_input"]},ValueTypes["identidades_Pessoas"]],
update_identidades_Representantes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Representantes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Representantes_bool_exp"]},ValueTypes["identidades_Representantes_mutation_response"]],
update_identidades_Representantes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Representantes_set_input"] | null,	pk_columns:ValueTypes["identidades_Representantes_pk_columns_input"]},ValueTypes["identidades_Representantes"]],
update_identidades_Vendedores?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Vendedores_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Vendedores_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Vendedores_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Vendedores_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Vendedores_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Vendedores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["identidades_Vendedores_bool_exp"]},ValueTypes["identidades_Vendedores_mutation_response"]],
update_identidades_Vendedores_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["identidades_Vendedores_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["identidades_Vendedores_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["identidades_Vendedores_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["identidades_Vendedores_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["identidades_Vendedores_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["identidades_Vendedores_set_input"] | null,	pk_columns:ValueTypes["identidades_Vendedores_pk_columns_input"]},ValueTypes["identidades_Vendedores"]],
update_movimentacoes_Motivos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["movimentacoes_Motivos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["movimentacoes_Motivos_bool_exp"]},ValueTypes["movimentacoes_Motivos_mutation_response"]],
update_movimentacoes_Motivos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["movimentacoes_Motivos_set_input"] | null,	pk_columns:ValueTypes["movimentacoes_Motivos_pk_columns_input"]},ValueTypes["movimentacoes_Motivos"]],
update_movimentacoes_Movimentacoes?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["movimentacoes_Movimentacoes_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["movimentacoes_Movimentacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["movimentacoes_Movimentacoes_bool_exp"]},ValueTypes["movimentacoes_Movimentacoes_mutation_response"]],
update_movimentacoes_Movimentacoes_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["movimentacoes_Movimentacoes_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["movimentacoes_Movimentacoes_set_input"] | null,	pk_columns:ValueTypes["movimentacoes_Movimentacoes_pk_columns_input"]},ValueTypes["movimentacoes_Movimentacoes"]],
update_operacional_OrdemDeServico?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["operacional_OrdemDeServico_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["operacional_OrdemDeServico_bool_exp"]},ValueTypes["operacional_OrdemDeServico_mutation_response"]],
update_operacional_OrdemDeServico_Atividades?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Atividades_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Atividades_mutation_response"]],
update_operacional_OrdemDeServico_Atividades_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Atividades_set_input"] | null,	pk_columns:ValueTypes["operacional_OrdemDeServico_Atividades_pk_columns_input"]},ValueTypes["operacional_OrdemDeServico_Atividades"]],
update_operacional_OrdemDeServico_Situacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Situacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Situacoes_mutation_response"]],
update_operacional_OrdemDeServico_Situacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Situacoes_set_input"] | null,	pk_columns:ValueTypes["operacional_OrdemDeServico_Situacoes_pk_columns_input"]},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
update_operacional_OrdemDeServico_Tipo?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Tipo_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"]},ValueTypes["operacional_OrdemDeServico_Tipo_mutation_response"]],
update_operacional_OrdemDeServico_Tipo_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_Tipo_set_input"] | null,	pk_columns:ValueTypes["operacional_OrdemDeServico_Tipo_pk_columns_input"]},ValueTypes["operacional_OrdemDeServico_Tipo"]],
update_operacional_OrdemDeServico_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["operacional_OrdemDeServico_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["operacional_OrdemDeServico_set_input"] | null,	pk_columns:ValueTypes["operacional_OrdemDeServico_pk_columns_input"]},ValueTypes["operacional_OrdemDeServico"]],
update_pedidosDeCompra_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["pedidosDeCompra_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["pedidosDeCompra_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["pedidosDeCompra_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["pedidosDeCompra_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["pedidosDeCompra_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Logs_bool_exp"]},ValueTypes["pedidosDeCompra_Logs_mutation_response"]],
update_pedidosDeCompra_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["pedidosDeCompra_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["pedidosDeCompra_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["pedidosDeCompra_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["pedidosDeCompra_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["pedidosDeCompra_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Logs_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Logs_pk_columns_input"]},ValueTypes["pedidosDeCompra_Logs"]],
update_pedidosDeCompra_Orcamentos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Orcamentos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"]},ValueTypes["pedidosDeCompra_Orcamentos_mutation_response"]],
update_pedidosDeCompra_Orcamentos_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]],
update_pedidosDeCompra_Orcamentos_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_pk_columns_input"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
update_pedidosDeCompra_Orcamentos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Orcamentos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Orcamentos_pk_columns_input"]},ValueTypes["pedidosDeCompra_Orcamentos"]],
update_pedidosDeCompra_Pedidos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Pedidos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"]},ValueTypes["pedidosDeCompra_Pedidos_mutation_response"]],
update_pedidosDeCompra_Pedidos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Pedidos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Pedidos_pk_columns_input"]},ValueTypes["pedidosDeCompra_Pedidos"]],
update_pedidosDeCompra_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeCompra_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Produtos_bool_exp"]},ValueTypes["pedidosDeCompra_Produtos_mutation_response"]],
update_pedidosDeCompra_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeCompra_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Produtos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Produtos_pk_columns_input"]},ValueTypes["pedidosDeCompra_Produtos"]],
update_pedidosDeCompra_Situacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Situacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"]},ValueTypes["pedidosDeCompra_Situacoes_mutation_response"]],
update_pedidosDeCompra_Situacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeCompra_Situacoes_set_input"] | null,	pk_columns:ValueTypes["pedidosDeCompra_Situacoes_pk_columns_input"]},ValueTypes["pedidosDeCompra_Situacoes"]],
update_pedidosDeSaida_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["pedidosDeSaida_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["pedidosDeSaida_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["pedidosDeSaida_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["pedidosDeSaida_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["pedidosDeSaida_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeSaida_Logs_bool_exp"]},ValueTypes["pedidosDeSaida_Logs_mutation_response"]],
update_pedidosDeSaida_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["pedidosDeSaida_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["pedidosDeSaida_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["pedidosDeSaida_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["pedidosDeSaida_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["pedidosDeSaida_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Logs_set_input"] | null,	pk_columns:ValueTypes["pedidosDeSaida_Logs_pk_columns_input"]},ValueTypes["pedidosDeSaida_Logs"]],
update_pedidosDeSaida_Pedidos?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Pedidos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"]},ValueTypes["pedidosDeSaida_Pedidos_mutation_response"]],
update_pedidosDeSaida_Pedidos_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Pedidos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeSaida_Pedidos_pk_columns_input"]},ValueTypes["pedidosDeSaida_Pedidos"]],
update_pedidosDeSaida_Produtos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeSaida_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Produtos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeSaida_Produtos_bool_exp"]},ValueTypes["pedidosDeSaida_Produtos_mutation_response"]],
update_pedidosDeSaida_Produtos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["pedidosDeSaida_Produtos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Produtos_set_input"] | null,	pk_columns:ValueTypes["pedidosDeSaida_Produtos_pk_columns_input"]},ValueTypes["pedidosDeSaida_Produtos"]],
update_pedidosDeSaida_Situacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Situacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"]},ValueTypes["pedidosDeSaida_Situacoes_mutation_response"]],
update_pedidosDeSaida_Situacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["pedidosDeSaida_Situacoes_set_input"] | null,	pk_columns:ValueTypes["pedidosDeSaida_Situacoes_pk_columns_input"]},ValueTypes["pedidosDeSaida_Situacoes"]],
update_producao_Chips?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Chips_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Chips_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_Chips_bool_exp"]},ValueTypes["producao_Chips_mutation_response"]],
update_producao_ChipsSituacoes?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_ChipsSituacoes_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_ChipsSituacoes_bool_exp"]},ValueTypes["producao_ChipsSituacoes_mutation_response"]],
update_producao_ChipsSituacoes_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_ChipsSituacoes_set_input"] | null,	pk_columns:ValueTypes["producao_ChipsSituacoes_pk_columns_input"]},ValueTypes["producao_ChipsSituacoes"]],
update_producao_Chips_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Chips_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Chips_set_input"] | null,	pk_columns:ValueTypes["producao_Chips_pk_columns_input"]},ValueTypes["producao_Chips"]],
update_producao_Equipamentos?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Equipamentos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Equipamentos_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_Equipamentos_bool_exp"]},ValueTypes["producao_Equipamentos_mutation_response"]],
update_producao_Equipamentos_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Equipamentos_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Equipamentos_set_input"] | null,	pk_columns:ValueTypes["producao_Equipamentos_pk_columns_input"]},ValueTypes["producao_Equipamentos"]],
update_producao_Identificadores?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Identificadores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Identificadores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_Identificadores_bool_exp"]},ValueTypes["producao_Identificadores_mutation_response"]],
update_producao_Identificadores_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Identificadores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Identificadores_set_input"] | null,	pk_columns:ValueTypes["producao_Identificadores_pk_columns_input"]},ValueTypes["producao_Identificadores"]],
update_producao_KitDeInsumo_Itens?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitDeInsumo_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitDeInsumo_Itens_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"]},ValueTypes["producao_KitDeInsumo_Itens_mutation_response"]],
update_producao_KitDeInsumo_Itens_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitDeInsumo_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitDeInsumo_Itens_set_input"] | null,	pk_columns:ValueTypes["producao_KitDeInsumo_Itens_pk_columns_input"]},ValueTypes["producao_KitDeInsumo_Itens"]],
update_producao_KitsDeInstalacao?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitsDeInstalacao_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitsDeInstalacao_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_KitsDeInstalacao_bool_exp"]},ValueTypes["producao_KitsDeInstalacao_mutation_response"]],
update_producao_KitsDeInstalacao_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitsDeInstalacao_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitsDeInstalacao_set_input"] | null,	pk_columns:ValueTypes["producao_KitsDeInstalacao_pk_columns_input"]},ValueTypes["producao_KitsDeInstalacao"]],
update_producao_KitsDeInsumo?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitsDeInsumo_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitsDeInsumo_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_KitsDeInsumo_bool_exp"]},ValueTypes["producao_KitsDeInsumo_mutation_response"]],
update_producao_KitsDeInsumo_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_KitsDeInsumo_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_KitsDeInsumo_set_input"] | null,	pk_columns:ValueTypes["producao_KitsDeInsumo_pk_columns_input"]},ValueTypes["producao_KitsDeInsumo"]],
update_producao_Logs?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["producao_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["producao_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["producao_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["producao_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["producao_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Logs_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_Logs_bool_exp"]},ValueTypes["producao_Logs_mutation_response"]],
update_producao_Logs_by_pk?: [{	/** append existing jsonb value of filtered columns with new jsonb value */
	_append?:ValueTypes["producao_Logs_append_input"] | null,	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
	_delete_at_path?:ValueTypes["producao_Logs_delete_at_path_input"] | null,	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
	_delete_elem?:ValueTypes["producao_Logs_delete_elem_input"] | null,	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
	_delete_key?:ValueTypes["producao_Logs_delete_key_input"] | null,	/** prepend existing jsonb value of filtered columns with new jsonb value */
	_prepend?:ValueTypes["producao_Logs_prepend_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Logs_set_input"] | null,	pk_columns:ValueTypes["producao_Logs_pk_columns_input"]},ValueTypes["producao_Logs"]],
update_producao_Rastreadores?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Rastreadores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Rastreadores_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_Rastreadores_bool_exp"]},ValueTypes["producao_Rastreadores_mutation_response"]],
update_producao_Rastreadores_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_Rastreadores_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_Rastreadores_set_input"] | null,	pk_columns:ValueTypes["producao_Rastreadores_pk_columns_input"]},ValueTypes["producao_Rastreadores"]],
update_producao_TiposDeKitDeInsumo?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_TiposDeKitDeInsumo_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"]},ValueTypes["producao_TiposDeKitDeInsumo_mutation_response"]],
update_producao_TiposDeKitDeInsumo_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_TiposDeKitDeInsumo_set_input"] | null,	pk_columns:ValueTypes["producao_TiposDeKitDeInsumo_pk_columns_input"]},ValueTypes["producao_TiposDeKitDeInsumo"]],
update_producao_TiposDeKitDeInsumo_estoque_Itens?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]],
update_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: [{	/** increments the numeric columns with given value of the filtered values */
	_inc?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"] | null,	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"] | null,	pk_columns:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_pk_columns_input"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
update_vendas_GruposDePerguntas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_GruposDePerguntas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["vendas_GruposDePerguntas_bool_exp"]},ValueTypes["vendas_GruposDePerguntas_mutation_response"]],
update_vendas_GruposDePerguntas_Perguntas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_GruposDePerguntas_Perguntas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"]},ValueTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"]],
update_vendas_GruposDePerguntas_Perguntas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_GruposDePerguntas_Perguntas_set_input"] | null,	pk_columns:ValueTypes["vendas_GruposDePerguntas_Perguntas_pk_columns_input"]},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
update_vendas_GruposDePerguntas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_GruposDePerguntas_set_input"] | null,	pk_columns:ValueTypes["vendas_GruposDePerguntas_pk_columns_input"]},ValueTypes["vendas_GruposDePerguntas"]],
update_vendas_Perguntas?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_Perguntas_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["vendas_Perguntas_bool_exp"]},ValueTypes["vendas_Perguntas_mutation_response"]],
update_vendas_Perguntas_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_Perguntas_set_input"] | null,	pk_columns:ValueTypes["vendas_Perguntas_pk_columns_input"]},ValueTypes["vendas_Perguntas"]],
update_vendas_TiposDePagamento?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_TiposDePagamento_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["vendas_TiposDePagamento_bool_exp"]},ValueTypes["vendas_TiposDePagamento_mutation_response"]],
update_vendas_TiposDePagamento_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_TiposDePagamento_set_input"] | null,	pk_columns:ValueTypes["vendas_TiposDePagamento_pk_columns_input"]},ValueTypes["vendas_TiposDePagamento"]],
update_vendas_TiposDeRecorrencia?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_TiposDeRecorrencia_set_input"] | null,	/** filter the rows which have to be updated */
	where:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"]},ValueTypes["vendas_TiposDeRecorrencia_mutation_response"]],
update_vendas_TiposDeRecorrencia_by_pk?: [{	/** sets the columns of the filtered rows to the given values */
	_set?:ValueTypes["vendas_TiposDeRecorrencia_set_input"] | null,	pk_columns:ValueTypes["vendas_TiposDeRecorrencia_pk_columns_input"]},ValueTypes["vendas_TiposDeRecorrencia"]],
		__typename?: true
}>;
	/** columns and relationships of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico"]: AliasType<{
Atividades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades"]],
Atividades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades_aggregate"]],
	CodigoIdentificador?:true,
	DataAgendamento?:true,
	DataConcluida?:true,
	Id?:true,
	Proposta_Id?:true,
	/** An object relationship */
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id?:true,
	/** An object relationship */
	Tipo?:ValueTypes["operacional_OrdemDeServico_Tipo"],
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades"]: AliasType<{
	Id?:true,
	MotivoRecusado?:true,
	/** An object relationship */
	OrdemDeServico?:ValueTypes["operacional_OrdemDeServico"],
	OrdemDeServico_Id?:true,
	/** An object relationship */
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate"]: AliasType<{
	aggregate?:ValueTypes["operacional_OrdemDeServico_Atividades_aggregate_fields"],
	nodes?:ValueTypes["operacional_OrdemDeServico_Atividades"],
		__typename?: true
}>;
	/** aggregate fields of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["operacional_OrdemDeServico_Atividades_max_fields"],
	min?:ValueTypes["operacional_OrdemDeServico_Atividades_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["operacional_OrdemDeServico_Atividades_max_order_by"] | null,
	min?:ValueTypes["operacional_OrdemDeServico_Atividades_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"]: {
	data:ValueTypes["operacional_OrdemDeServico_Atividades_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Atividades_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Atividades". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Atividades_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	MotivoRecusado?:ValueTypes["String_comparison_exp"] | null,
	OrdemDeServico?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null,
	OrdemDeServico_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"] | null,
	Usuario_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"][],
	_not?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null,
	_or?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_constraint"]:operacional_OrdemDeServico_Atividades_constraint;
	/** input type for inserting data into table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	OrdemDeServico?:ValueTypes["operacional_OrdemDeServico_obj_rel_insert_input"] | null,
	OrdemDeServico_Id?:ValueTypes["uuid"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Atividades_max_fields"]: AliasType<{
	Id?:true,
	MotivoRecusado?:true,
	OrdemDeServico_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	OrdemDeServico_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Atividades_min_fields"]: AliasType<{
	Id?:true,
	MotivoRecusado?:true,
	OrdemDeServico_Id?:true,
	Usuario_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	OrdemDeServico_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["operacional_OrdemDeServico_Atividades"],
		__typename?: true
}>;
	/** on conflict condition type for table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_on_conflict"]: {
	constraint:ValueTypes["operacional_OrdemDeServico_Atividades_constraint"],
	update_columns:ValueTypes["operacional_OrdemDeServico_Atividades_update_column"][],
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Atividades". */
["operacional_OrdemDeServico_Atividades_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	OrdemDeServico?:ValueTypes["operacional_OrdemDeServico_order_by"] | null,
	OrdemDeServico_Id?:ValueTypes["order_by"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	Usuario_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: operacional_OrdemDeServico_Atividades */
["operacional_OrdemDeServico_Atividades_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_select_column"]:operacional_OrdemDeServico_Atividades_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	OrdemDeServico_Id?:ValueTypes["uuid"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	Usuario_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_update_column"]:operacional_OrdemDeServico_Atividades_update_column;
	/** columns and relationships of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes"]: AliasType<{
	Comentario?:true,
OrdemDeServico_Atividades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades"]],
OrdemDeServico_Atividades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades_aggregate"]],
OrdemDeServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico"]],
OrdemDeServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["operacional_OrdemDeServico_Situacoes_aggregate_fields"],
	nodes?:ValueTypes["operacional_OrdemDeServico_Situacoes"],
		__typename?: true
}>;
	/** aggregate fields of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["operacional_OrdemDeServico_Situacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["operacional_OrdemDeServico_Situacoes_max_fields"],
	min?:ValueTypes["operacional_OrdemDeServico_Situacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Situacoes". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	OrdemDeServico_Atividades?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null,
	OrdemDeServicos?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"][],
	_not?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null,
	_or?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_constraint"]:operacional_OrdemDeServico_Situacoes_constraint;
	["operacional_OrdemDeServico_Situacoes_enum"]:operacional_OrdemDeServico_Situacoes_enum;
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Situacoes_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	_in?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	_nin?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"][]
};
	/** input type for inserting data into table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_insert_input"]: {
	Comentario?:string | null,
	OrdemDeServico_Atividades?:ValueTypes["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"] | null,
	OrdemDeServicos?:ValueTypes["operacional_OrdemDeServico_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Situacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["operacional_OrdemDeServico_Situacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["operacional_OrdemDeServico_Situacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"]: {
	data:ValueTypes["operacional_OrdemDeServico_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Situacoes_on_conflict"] | null
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_on_conflict"]: {
	constraint:ValueTypes["operacional_OrdemDeServico_Situacoes_constraint"],
	update_columns:ValueTypes["operacional_OrdemDeServico_Situacoes_update_column"][],
	where?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Situacoes". */
["operacional_OrdemDeServico_Situacoes_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	OrdemDeServico_Atividades_aggregate?:ValueTypes["operacional_OrdemDeServico_Atividades_aggregate_order_by"] | null,
	OrdemDeServicos_aggregate?:ValueTypes["operacional_OrdemDeServico_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: operacional_OrdemDeServico_Situacoes */
["operacional_OrdemDeServico_Situacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_select_column"]:operacional_OrdemDeServico_Situacoes_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_update_column"]:operacional_OrdemDeServico_Situacoes_update_column;
	/** columns and relationships of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo"]: AliasType<{
	Comentario?:true,
OrdemDeServicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico"]],
OrdemDeServicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate"]: AliasType<{
	aggregate?:ValueTypes["operacional_OrdemDeServico_Tipo_aggregate_fields"],
	nodes?:ValueTypes["operacional_OrdemDeServico_Tipo"],
		__typename?: true
}>;
	/** aggregate fields of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["operacional_OrdemDeServico_Tipo_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["operacional_OrdemDeServico_Tipo_max_fields"],
	min?:ValueTypes["operacional_OrdemDeServico_Tipo_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Tipo". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Tipo_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	OrdemDeServicos?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"][],
	_not?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null,
	_or?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"][]
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_constraint"]:operacional_OrdemDeServico_Tipo_constraint;
	["operacional_OrdemDeServico_Tipo_enum"]:operacional_OrdemDeServico_Tipo_enum;
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Tipo_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Tipo_enum_comparison_exp"]: {
	_eq?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"] | null,
	_in?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"] | null,
	_nin?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"][]
};
	/** input type for inserting data into table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_insert_input"]: {
	Comentario?:string | null,
	OrdemDeServicos?:ValueTypes["operacional_OrdemDeServico_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Tipo_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["operacional_OrdemDeServico_Tipo_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["operacional_OrdemDeServico_Tipo"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"]: {
	data:ValueTypes["operacional_OrdemDeServico_Tipo_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_Tipo_on_conflict"] | null
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_on_conflict"]: {
	constraint:ValueTypes["operacional_OrdemDeServico_Tipo_constraint"],
	update_columns:ValueTypes["operacional_OrdemDeServico_Tipo_update_column"][],
	where?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Tipo". */
["operacional_OrdemDeServico_Tipo_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	OrdemDeServicos_aggregate?:ValueTypes["operacional_OrdemDeServico_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: operacional_OrdemDeServico_Tipo */
["operacional_OrdemDeServico_Tipo_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_select_column"]:operacional_OrdemDeServico_Tipo_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_update_column"]:operacional_OrdemDeServico_Tipo_update_column;
	/** aggregated selection of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate"]: AliasType<{
	aggregate?:ValueTypes["operacional_OrdemDeServico_aggregate_fields"],
	nodes?:ValueTypes["operacional_OrdemDeServico"],
		__typename?: true
}>;
	/** aggregate fields of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["operacional_OrdemDeServico_avg_fields"],
count?: [{	columns?:ValueTypes["operacional_OrdemDeServico_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["operacional_OrdemDeServico_max_fields"],
	min?:ValueTypes["operacional_OrdemDeServico_min_fields"],
	stddev?:ValueTypes["operacional_OrdemDeServico_stddev_fields"],
	stddev_pop?:ValueTypes["operacional_OrdemDeServico_stddev_pop_fields"],
	stddev_samp?:ValueTypes["operacional_OrdemDeServico_stddev_samp_fields"],
	sum?:ValueTypes["operacional_OrdemDeServico_sum_fields"],
	var_pop?:ValueTypes["operacional_OrdemDeServico_var_pop_fields"],
	var_samp?:ValueTypes["operacional_OrdemDeServico_var_samp_fields"],
	variance?:ValueTypes["operacional_OrdemDeServico_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_order_by"]: {
	avg?:ValueTypes["operacional_OrdemDeServico_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["operacional_OrdemDeServico_max_order_by"] | null,
	min?:ValueTypes["operacional_OrdemDeServico_min_order_by"] | null,
	stddev?:ValueTypes["operacional_OrdemDeServico_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["operacional_OrdemDeServico_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["operacional_OrdemDeServico_stddev_samp_order_by"] | null,
	sum?:ValueTypes["operacional_OrdemDeServico_sum_order_by"] | null,
	var_pop?:ValueTypes["operacional_OrdemDeServico_var_pop_order_by"] | null,
	var_samp?:ValueTypes["operacional_OrdemDeServico_var_samp_order_by"] | null,
	variance?:ValueTypes["operacional_OrdemDeServico_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_arr_rel_insert_input"]: {
	data:ValueTypes["operacional_OrdemDeServico_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_on_conflict"] | null
};
	/** aggregate avg on columns */
["operacional_OrdemDeServico_avg_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_avg_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_bool_exp"]: {
	Atividades?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null,
	CodigoIdentificador?:ValueTypes["Int_comparison_exp"] | null,
	DataAgendamento?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataConcluida?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Proposta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"] | null,
	Tipo?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null,
	Tipo_Id?:ValueTypes["operacional_OrdemDeServico_Tipo_enum_comparison_exp"] | null,
	_and?:ValueTypes["operacional_OrdemDeServico_bool_exp"][],
	_not?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null,
	_or?:ValueTypes["operacional_OrdemDeServico_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_constraint"]:operacional_OrdemDeServico_constraint;
	/** input type for incrementing numeric columns in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_inc_input"]: {
	CodigoIdentificador?:number | null
};
	/** input type for inserting data into table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_insert_input"]: {
	Atividades?:ValueTypes["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"] | null,
	CodigoIdentificador?:number | null,
	DataAgendamento?:ValueTypes["timestamptz"] | null,
	DataConcluida?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	Tipo?:ValueTypes["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_max_fields"]: AliasType<{
	CodigoIdentificador?:true,
	DataAgendamento?:true,
	DataConcluida?:true,
	Id?:true,
	Proposta_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_max_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null,
	DataAgendamento?:ValueTypes["order_by"] | null,
	DataConcluida?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_min_fields"]: AliasType<{
	CodigoIdentificador?:true,
	DataAgendamento?:true,
	DataConcluida?:true,
	Id?:true,
	Proposta_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_min_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null,
	DataAgendamento?:ValueTypes["order_by"] | null,
	DataConcluida?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["operacional_OrdemDeServico"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_obj_rel_insert_input"]: {
	data:ValueTypes["operacional_OrdemDeServico_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["operacional_OrdemDeServico_on_conflict"] | null
};
	/** on conflict condition type for table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_on_conflict"]: {
	constraint:ValueTypes["operacional_OrdemDeServico_constraint"],
	update_columns:ValueTypes["operacional_OrdemDeServico_update_column"][],
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico". */
["operacional_OrdemDeServico_order_by"]: {
	Atividades_aggregate?:ValueTypes["operacional_OrdemDeServico_Atividades_aggregate_order_by"] | null,
	CodigoIdentificador?:ValueTypes["order_by"] | null,
	DataAgendamento?:ValueTypes["order_by"] | null,
	DataConcluida?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Proposta_Id?:ValueTypes["order_by"] | null,
	Situacao?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["operacional_OrdemDeServico_Tipo_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: operacional_OrdemDeServico */
["operacional_OrdemDeServico_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_select_column"]:operacional_OrdemDeServico_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_set_input"]: {
	CodigoIdentificador?:number | null,
	DataAgendamento?:ValueTypes["timestamptz"] | null,
	DataConcluida?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	Proposta_Id?:ValueTypes["uuid"] | null,
	Situacao_Id?:ValueTypes["operacional_OrdemDeServico_Situacoes_enum"] | null,
	Tipo_Id?:ValueTypes["operacional_OrdemDeServico_Tipo_enum"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["operacional_OrdemDeServico_stddev_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["operacional_OrdemDeServico_stddev_pop_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_pop_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["operacional_OrdemDeServico_stddev_samp_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_samp_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["operacional_OrdemDeServico_sum_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_sum_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** update columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_update_column"]:operacional_OrdemDeServico_update_column;
	/** aggregate var_pop on columns */
["operacional_OrdemDeServico_var_pop_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_pop_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["operacional_OrdemDeServico_var_samp_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_samp_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["operacional_OrdemDeServico_variance_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_variance_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null
};
	/** column ordering options */
["order_by"]:order_by;
	/** columns and relationships of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Logs_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeCompra_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Logs_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Logs_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_constraint"]:pedidosDeCompra_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeCompra_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeCompra_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeCompra_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["pedidosDeCompra_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Logs_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Logs_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Logs". */
["pedidosDeCompra_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Logs */
["pedidosDeCompra_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_select_column"]:pedidosDeCompra_Logs_select_column;
	/** input type for updating data in table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_update_column"]:pedidosDeCompra_Logs_update_column;
	/** columns and relationships of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos"]: AliasType<{
	Aprovado?:true,
	Fornecedor_Id?:true,
	Id?:true,
Orcamentos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
Orcamentos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"]],
	/** An object relationship */
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos"],
	Pedido_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos"]: AliasType<{
	Descricao?:true,
	/** An object relationship */
	Fabricante?:ValueTypes["estoque_Fabricantes"],
	Fabricante_Id?:true,
	Id?:true,
	/** An object relationship */
	Orcamento?:ValueTypes["pedidosDeCompra_Orcamentos"],
	Orcamento_Id?:true,
	/** An object relationship */
	PedidosDeCompra_Produto?:ValueTypes["pedidosDeCompra_Produtos"],
	PedidosDeCompra_Produto_Id?:true,
	Quantidade?:true,
	ValorUnitario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_min_fields"],
	stddev?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"],
	sum?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_sum_fields"],
	var_pop?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"],
	var_samp?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"],
	variance?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"]: {
	avg?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_min_order_by"] | null,
	stddev?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"] | null,
	var_pop?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"] | null,
	variance?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_on_conflict"] | null
};
	/** aggregate avg on columns */
["pedidosDeCompra_Orcamentos_Produtos_avg_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos_Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	Fabricante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Orcamento?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null,
	Orcamento_Id?:ValueTypes["uuid_comparison_exp"] | null,
	PedidosDeCompra_Produto?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Quantidade?:ValueTypes["Int_comparison_exp"] | null,
	ValorUnitario?:ValueTypes["float8_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_constraint"]:pedidosDeCompra_Orcamentos_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_inc_input"]: {
	Quantidade?:number | null,
	ValorUnitario?:ValueTypes["float8"] | null
};
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_insert_input"]: {
	Descricao?:string | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_obj_rel_insert_input"] | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Orcamento?:ValueTypes["pedidosDeCompra_Orcamentos_obj_rel_insert_input"] | null,
	Orcamento_Id?:ValueTypes["uuid"] | null,
	PedidosDeCompra_Produto?:ValueTypes["pedidosDeCompra_Produtos_obj_rel_insert_input"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["uuid"] | null,
	Quantidade?:number | null,
	ValorUnitario?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_Produtos_max_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Orcamento_Id?:true,
	PedidosDeCompra_Produto_Id?:true,
	Quantidade?:true,
	ValorUnitario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Orcamento_Id?:ValueTypes["order_by"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_Produtos_min_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Orcamento_Id?:true,
	PedidosDeCompra_Produto_Id?:true,
	Quantidade?:true,
	ValorUnitario?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Orcamento_Id?:ValueTypes["order_by"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos_Produtos". */
["pedidosDeCompra_Orcamentos_Produtos_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Orcamento?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"] | null,
	Orcamento_Id?:ValueTypes["order_by"] | null,
	PedidosDeCompra_Produto?:ValueTypes["pedidosDeCompra_Produtos_order_by"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Orcamentos_Produtos */
["pedidosDeCompra_Orcamentos_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_select_column"]:pedidosDeCompra_Orcamentos_Produtos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_set_input"]: {
	Descricao?:string | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Orcamento_Id?:ValueTypes["uuid"] | null,
	PedidosDeCompra_Produto_Id?:ValueTypes["uuid"] | null,
	Quantidade?:number | null,
	ValorUnitario?:ValueTypes["float8"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["pedidosDeCompra_Orcamentos_Produtos_sum_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** update columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_update_column"]:pedidosDeCompra_Orcamentos_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["pedidosDeCompra_Orcamentos_Produtos_variance_fields"]: AliasType<{
	Quantidade?:true,
	ValorUnitario?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null,
	ValorUnitario?:ValueTypes["order_by"] | null
};
	/** aggregated selection of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Orcamentos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Orcamentos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Orcamentos_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Orcamentos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeCompra_Orcamentos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeCompra_Orcamentos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Orcamentos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_bool_exp"]: {
	Aprovado?:ValueTypes["Boolean_comparison_exp"] | null,
	Fornecedor_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Orcamentos_Produtos?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null,
	Pedido_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_constraint"]:pedidosDeCompra_Orcamentos_constraint;
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_insert_input"]: {
	Aprovado?:boolean | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Orcamentos_Produtos?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_obj_rel_insert_input"] | null,
	Pedido_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_max_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Pedido_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_max_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_min_fields"]: AliasType<{
	Fornecedor_Id?:true,
	Id?:true,
	Pedido_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_min_order_by"]: {
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Orcamentos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Orcamentos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Orcamentos_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Orcamentos_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Orcamentos_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos". */
["pedidosDeCompra_Orcamentos_order_by"]: {
	Aprovado?:ValueTypes["order_by"] | null,
	Fornecedor_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Orcamentos_Produtos_aggregate?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Orcamentos */
["pedidosDeCompra_Orcamentos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_select_column"]:pedidosDeCompra_Orcamentos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_set_input"]: {
	Aprovado?:boolean | null,
	Fornecedor_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Pedido_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_update_column"]:pedidosDeCompra_Orcamentos_update_column;
	/** columns and relationships of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataCompra?:true,
	DataEntrada?:true,
	DataEntregue?:true,
	DataOrcamento?:true,
	Id?:true,
	MotivoRecusado?:true,
Orcamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos"]],
Orcamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_aggregate"]],
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos_aggregate"]],
	/** An object relationship */
	Situacao?:ValueTypes["pedidosDeCompra_Situacoes"],
	Situacao_Id?:true,
	Solicitante_Id?:true,
	TipoPagamento?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Pedidos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Pedidos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Pedidos_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Pedidos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeCompra_Pedidos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeCompra_Pedidos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Pedidos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Pedidos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Pedidos_bool_exp"]: {
	DataAbertura?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataAutorizacao?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataCompra?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataEntrada?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataEntregue?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataOrcamento?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	MotivoRecusado?:ValueTypes["String_comparison_exp"] | null,
	Orcamentos?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null,
	Produtos?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null,
	Situacao?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["pedidosDeCompra_Situacoes_enum_comparison_exp"] | null,
	Solicitante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	TipoPagamento?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_constraint"]:pedidosDeCompra_Pedidos_constraint;
	/** input type for inserting data into table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_insert_input"]: {
	DataAbertura?:ValueTypes["timestamptz"] | null,
	DataAutorizacao?:ValueTypes["timestamptz"] | null,
	DataCompra?:ValueTypes["timestamptz"] | null,
	DataEntrada?:ValueTypes["timestamptz"] | null,
	DataEntregue?:ValueTypes["timestamptz"] | null,
	DataOrcamento?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	Orcamentos?:ValueTypes["pedidosDeCompra_Orcamentos_arr_rel_insert_input"] | null,
	Produtos?:ValueTypes["pedidosDeCompra_Produtos_arr_rel_insert_input"] | null,
	Situacao?:ValueTypes["pedidosDeCompra_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["pedidosDeCompra_Situacoes_enum"] | null,
	Solicitante_Id?:ValueTypes["uuid"] | null,
	TipoPagamento?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Pedidos_max_fields"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataCompra?:true,
	DataEntrada?:true,
	DataEntregue?:true,
	DataOrcamento?:true,
	Id?:true,
	MotivoRecusado?:true,
	Solicitante_Id?:true,
	TipoPagamento?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_max_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataCompra?:ValueTypes["order_by"] | null,
	DataEntrada?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataOrcamento?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	TipoPagamento?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeCompra_Pedidos_min_fields"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataCompra?:true,
	DataEntrada?:true,
	DataEntregue?:true,
	DataOrcamento?:true,
	Id?:true,
	MotivoRecusado?:true,
	Solicitante_Id?:true,
	TipoPagamento?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_min_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataCompra?:ValueTypes["order_by"] | null,
	DataEntrada?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataOrcamento?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	TipoPagamento?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Pedidos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Pedidos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Pedidos_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Pedidos_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Pedidos_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Pedidos". */
["pedidosDeCompra_Pedidos_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataCompra?:ValueTypes["order_by"] | null,
	DataEntrada?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataOrcamento?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Orcamentos_aggregate?:ValueTypes["pedidosDeCompra_Orcamentos_aggregate_order_by"] | null,
	Produtos_aggregate?:ValueTypes["pedidosDeCompra_Produtos_aggregate_order_by"] | null,
	Situacao?:ValueTypes["pedidosDeCompra_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	TipoPagamento?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Pedidos */
["pedidosDeCompra_Pedidos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_select_column"]:pedidosDeCompra_Pedidos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_set_input"]: {
	DataAbertura?:ValueTypes["timestamptz"] | null,
	DataAutorizacao?:ValueTypes["timestamptz"] | null,
	DataCompra?:ValueTypes["timestamptz"] | null,
	DataEntrada?:ValueTypes["timestamptz"] | null,
	DataEntregue?:ValueTypes["timestamptz"] | null,
	DataOrcamento?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	Situacao_Id?:ValueTypes["pedidosDeCompra_Situacoes_enum"] | null,
	Solicitante_Id?:ValueTypes["uuid"] | null,
	TipoPagamento?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_update_column"]:pedidosDeCompra_Pedidos_update_column;
	/** columns and relationships of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos"]: AliasType<{
	Autorizado?:true,
	Descricao?:true,
	/** An object relationship */
	Fabricante?:ValueTypes["estoque_Fabricantes"],
	Fabricante_Id?:true,
	Id?:true,
Orcamentos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
Orcamentos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"]],
	/** An object relationship */
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos"],
	PedidoDeCompra_Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["Produtos"],
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Produtos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["pedidosDeCompra_Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Produtos_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Produtos_min_fields"],
	stddev?:ValueTypes["pedidosDeCompra_Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["pedidosDeCompra_Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["pedidosDeCompra_Produtos_stddev_samp_fields"],
	sum?:ValueTypes["pedidosDeCompra_Produtos_sum_fields"],
	var_pop?:ValueTypes["pedidosDeCompra_Produtos_var_pop_fields"],
	var_samp?:ValueTypes["pedidosDeCompra_Produtos_var_samp_fields"],
	variance?:ValueTypes["pedidosDeCompra_Produtos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_order_by"]: {
	avg?:ValueTypes["pedidosDeCompra_Produtos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeCompra_Produtos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeCompra_Produtos_min_order_by"] | null,
	stddev?:ValueTypes["pedidosDeCompra_Produtos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["pedidosDeCompra_Produtos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["pedidosDeCompra_Produtos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["pedidosDeCompra_Produtos_sum_order_by"] | null,
	var_pop?:ValueTypes["pedidosDeCompra_Produtos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["pedidosDeCompra_Produtos_var_samp_order_by"] | null,
	variance?:ValueTypes["pedidosDeCompra_Produtos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Produtos_on_conflict"] | null
};
	/** aggregate avg on columns */
["pedidosDeCompra_Produtos_avg_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_avg_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Produtos_bool_exp"]: {
	Autorizado?:ValueTypes["Boolean_comparison_exp"] | null,
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	Fabricante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Orcamentos_Produtos?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null,
	PedidoDeCompra_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	QuantidadeAutorizada?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadeComprada?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadeEntregue?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadePedida?:ValueTypes["Int_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_constraint"]:pedidosDeCompra_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_inc_input"]: {
	QuantidadeAutorizada?:number | null,
	QuantidadeComprada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null
};
	/** input type for inserting data into table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_insert_input"]: {
	Autorizado?:boolean | null,
	Descricao?:string | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_obj_rel_insert_input"] | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Orcamentos_Produtos?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_obj_rel_insert_input"] | null,
	PedidoDeCompra_Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	QuantidadeAutorizada?:number | null,
	QuantidadeComprada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Produtos_max_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	PedidoDeCompra_Id?:true,
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PedidoDeCompra_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeCompra_Produtos_min_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	PedidoDeCompra_Id?:true,
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	PedidoDeCompra_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Produtos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Produtos_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Produtos_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Produtos_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Produtos". */
["pedidosDeCompra_Produtos_order_by"]: {
	Autorizado?:ValueTypes["order_by"] | null,
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Orcamentos_Produtos_aggregate?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"] | null,
	Pedido?:ValueTypes["pedidosDeCompra_Pedidos_order_by"] | null,
	PedidoDeCompra_Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Produtos */
["pedidosDeCompra_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_select_column"]:pedidosDeCompra_Produtos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_set_input"]: {
	Autorizado?:boolean | null,
	Descricao?:string | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	PedidoDeCompra_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	QuantidadeAutorizada?:number | null,
	QuantidadeComprada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["pedidosDeCompra_Produtos_stddev_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Produtos_stddev_pop_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_pop_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Produtos_stddev_samp_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_samp_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["pedidosDeCompra_Produtos_sum_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_sum_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** update columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_update_column"]:pedidosDeCompra_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeCompra_Produtos_var_pop_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_pop_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["pedidosDeCompra_Produtos_var_samp_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_samp_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["pedidosDeCompra_Produtos_variance_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeComprada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_variance_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeComprada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes"]: AliasType<{
	Comentario?:true,
Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos"]],
Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeCompra_Situacoes_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeCompra_Situacoes"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeCompra_Situacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeCompra_Situacoes_max_fields"],
	min?:ValueTypes["pedidosDeCompra_Situacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Situacoes_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Pedidos?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"][],
	_not?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_constraint"]:pedidosDeCompra_Situacoes_constraint;
	["pedidosDeCompra_Situacoes_enum"]:pedidosDeCompra_Situacoes_enum;
	/** Boolean expression to compare columns of type "pedidosDeCompra_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeCompra_Situacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["pedidosDeCompra_Situacoes_enum"] | null,
	_in?:ValueTypes["pedidosDeCompra_Situacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["pedidosDeCompra_Situacoes_enum"] | null,
	_nin?:ValueTypes["pedidosDeCompra_Situacoes_enum"][]
};
	/** input type for inserting data into table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_insert_input"]: {
	Comentario?:string | null,
	Pedidos?:ValueTypes["pedidosDeCompra_Pedidos_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["pedidosDeCompra_Situacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["pedidosDeCompra_Situacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeCompra_Situacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeCompra_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeCompra_Situacoes_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_on_conflict"]: {
	constraint:ValueTypes["pedidosDeCompra_Situacoes_constraint"],
	update_columns:ValueTypes["pedidosDeCompra_Situacoes_update_column"][],
	where?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeCompra.Situacoes". */
["pedidosDeCompra_Situacoes_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Pedidos_aggregate?:ValueTypes["pedidosDeCompra_Pedidos_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeCompra_Situacoes */
["pedidosDeCompra_Situacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_select_column"]:pedidosDeCompra_Situacoes_select_column;
	/** input type for updating data in table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_update_column"]:pedidosDeCompra_Situacoes_update_column;
	/** columns and relationships of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeSaida_Logs_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeSaida_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeSaida_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeSaida_Logs_max_fields"],
	min?:ValueTypes["pedidosDeSaida_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeSaida_Logs_bool_exp"][],
	_not?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeSaida_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_constraint"]:pedidosDeSaida_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeSaida_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeSaida_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeSaida_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeSaida_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["pedidosDeSaida_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeSaida_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_on_conflict"]: {
	constraint:ValueTypes["pedidosDeSaida_Logs_constraint"],
	update_columns:ValueTypes["pedidosDeSaida_Logs_update_column"][],
	where?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeSaida.Logs". */
["pedidosDeSaida_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeSaida_Logs */
["pedidosDeSaida_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_select_column"]:pedidosDeSaida_Logs_select_column;
	/** input type for updating data in table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_update_column"]:pedidosDeSaida_Logs_update_column;
	/** columns and relationships of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataEntregue?:true,
	DataRecebido?:true,
	Id?:true,
	MotivoRecusado?:true,
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos_aggregate"]],
	/** An object relationship */
	Situacao?:ValueTypes["pedidosDeSaida_Situacoes"],
	Situacao_Id?:true,
	Solicitante_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeSaida_Pedidos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeSaida_Pedidos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeSaida_Pedidos_max_fields"],
	min?:ValueTypes["pedidosDeSaida_Pedidos_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeSaida_Pedidos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeSaida_Pedidos_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeSaida_Pedidos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Pedidos_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Pedidos_bool_exp"]: {
	DataAbertura?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataAutorizacao?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataEntregue?:ValueTypes["timestamptz_comparison_exp"] | null,
	DataRecebido?:ValueTypes["timestamptz_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	MotivoRecusado?:ValueTypes["String_comparison_exp"] | null,
	Produtos?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null,
	Situacao?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["pedidosDeSaida_Situacoes_enum_comparison_exp"] | null,
	Solicitante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"][],
	_not?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_constraint"]:pedidosDeSaida_Pedidos_constraint;
	/** input type for inserting data into table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_insert_input"]: {
	DataAbertura?:ValueTypes["timestamptz"] | null,
	DataAutorizacao?:ValueTypes["timestamptz"] | null,
	DataEntregue?:ValueTypes["timestamptz"] | null,
	DataRecebido?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	Produtos?:ValueTypes["pedidosDeSaida_Produtos_arr_rel_insert_input"] | null,
	Situacao?:ValueTypes["pedidosDeSaida_Situacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["pedidosDeSaida_Situacoes_enum"] | null,
	Solicitante_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeSaida_Pedidos_max_fields"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataEntregue?:true,
	DataRecebido?:true,
	Id?:true,
	MotivoRecusado?:true,
	Solicitante_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_max_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataRecebido?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeSaida_Pedidos_min_fields"]: AliasType<{
	DataAbertura?:true,
	DataAutorizacao?:true,
	DataEntregue?:true,
	DataRecebido?:true,
	Id?:true,
	MotivoRecusado?:true,
	Solicitante_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_min_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataRecebido?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeSaida_Pedidos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeSaida_Pedidos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Pedidos_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeSaida_Pedidos_constraint"],
	update_columns:ValueTypes["pedidosDeSaida_Pedidos_update_column"][],
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeSaida.Pedidos". */
["pedidosDeSaida_Pedidos_order_by"]: {
	DataAbertura?:ValueTypes["order_by"] | null,
	DataAutorizacao?:ValueTypes["order_by"] | null,
	DataEntregue?:ValueTypes["order_by"] | null,
	DataRecebido?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	MotivoRecusado?:ValueTypes["order_by"] | null,
	Produtos_aggregate?:ValueTypes["pedidosDeSaida_Produtos_aggregate_order_by"] | null,
	Situacao?:ValueTypes["pedidosDeSaida_Situacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	Solicitante_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeSaida_Pedidos */
["pedidosDeSaida_Pedidos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_select_column"]:pedidosDeSaida_Pedidos_select_column;
	/** input type for updating data in table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_set_input"]: {
	DataAbertura?:ValueTypes["timestamptz"] | null,
	DataAutorizacao?:ValueTypes["timestamptz"] | null,
	DataEntregue?:ValueTypes["timestamptz"] | null,
	DataRecebido?:ValueTypes["timestamptz"] | null,
	Id?:ValueTypes["uuid"] | null,
	MotivoRecusado?:string | null,
	Situacao_Id?:ValueTypes["pedidosDeSaida_Situacoes_enum"] | null,
	Solicitante_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_update_column"]:pedidosDeSaida_Pedidos_update_column;
	/** columns and relationships of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos"]: AliasType<{
	Autorizado?:true,
	Descricao?:true,
	/** An object relationship */
	Fabricante?:ValueTypes["estoque_Fabricantes"],
	Fabricante_Id?:true,
	Id?:true,
	/** An object relationship */
	Pedido?:ValueTypes["pedidosDeSaida_Pedidos"],
	Pedido_Id?:true,
	/** An object relationship */
	Produto?:ValueTypes["Produtos"],
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeSaida_Produtos_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeSaida_Produtos"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["pedidosDeSaida_Produtos_avg_fields"],
count?: [{	columns?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeSaida_Produtos_max_fields"],
	min?:ValueTypes["pedidosDeSaida_Produtos_min_fields"],
	stddev?:ValueTypes["pedidosDeSaida_Produtos_stddev_fields"],
	stddev_pop?:ValueTypes["pedidosDeSaida_Produtos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["pedidosDeSaida_Produtos_stddev_samp_fields"],
	sum?:ValueTypes["pedidosDeSaida_Produtos_sum_fields"],
	var_pop?:ValueTypes["pedidosDeSaida_Produtos_var_pop_fields"],
	var_samp?:ValueTypes["pedidosDeSaida_Produtos_var_samp_fields"],
	variance?:ValueTypes["pedidosDeSaida_Produtos_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_order_by"]: {
	avg?:ValueTypes["pedidosDeSaida_Produtos_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["pedidosDeSaida_Produtos_max_order_by"] | null,
	min?:ValueTypes["pedidosDeSaida_Produtos_min_order_by"] | null,
	stddev?:ValueTypes["pedidosDeSaida_Produtos_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["pedidosDeSaida_Produtos_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["pedidosDeSaida_Produtos_stddev_samp_order_by"] | null,
	sum?:ValueTypes["pedidosDeSaida_Produtos_sum_order_by"] | null,
	var_pop?:ValueTypes["pedidosDeSaida_Produtos_var_pop_order_by"] | null,
	var_samp?:ValueTypes["pedidosDeSaida_Produtos_var_samp_order_by"] | null,
	variance?:ValueTypes["pedidosDeSaida_Produtos_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_arr_rel_insert_input"]: {
	data:ValueTypes["pedidosDeSaida_Produtos_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Produtos_on_conflict"] | null
};
	/** aggregate avg on columns */
["pedidosDeSaida_Produtos_avg_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_avg_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Produtos_bool_exp"]: {
	Autorizado?:ValueTypes["Boolean_comparison_exp"] | null,
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_bool_exp"] | null,
	Fabricante_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pedido?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null,
	Pedido_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Produto?:ValueTypes["Produtos_bool_exp"] | null,
	Produto_Id?:ValueTypes["uuid_comparison_exp"] | null,
	QuantidadeAutorizada?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadeEntregue?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadePedida?:ValueTypes["Int_comparison_exp"] | null,
	QuantidadeRecebida?:ValueTypes["Int_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"][],
	_not?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_constraint"]:pedidosDeSaida_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_inc_input"]: {
	QuantidadeAutorizada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null,
	QuantidadeRecebida?:number | null
};
	/** input type for inserting data into table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_insert_input"]: {
	Autorizado?:boolean | null,
	Descricao?:string | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_obj_rel_insert_input"] | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Pedido?:ValueTypes["pedidosDeSaida_Pedidos_obj_rel_insert_input"] | null,
	Pedido_Id?:ValueTypes["uuid"] | null,
	Produto?:ValueTypes["Produtos_obj_rel_insert_input"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	QuantidadeAutorizada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null,
	QuantidadeRecebida?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["pedidosDeSaida_Produtos_max_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Pedido_Id?:true,
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_max_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["pedidosDeSaida_Produtos_min_fields"]: AliasType<{
	Descricao?:true,
	Fabricante_Id?:true,
	Id?:true,
	Pedido_Id?:true,
	Produto_Id?:true,
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_min_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeSaida_Produtos"],
		__typename?: true
}>;
	/** on conflict condition type for table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_on_conflict"]: {
	constraint:ValueTypes["pedidosDeSaida_Produtos_constraint"],
	update_columns:ValueTypes["pedidosDeSaida_Produtos_update_column"][],
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeSaida.Produtos". */
["pedidosDeSaida_Produtos_order_by"]: {
	Autorizado?:ValueTypes["order_by"] | null,
	Descricao?:ValueTypes["order_by"] | null,
	Fabricante?:ValueTypes["estoque_Fabricantes_order_by"] | null,
	Fabricante_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pedido?:ValueTypes["pedidosDeSaida_Pedidos_order_by"] | null,
	Pedido_Id?:ValueTypes["order_by"] | null,
	Produto?:ValueTypes["Produtos_order_by"] | null,
	Produto_Id?:ValueTypes["order_by"] | null,
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeSaida_Produtos */
["pedidosDeSaida_Produtos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_select_column"]:pedidosDeSaida_Produtos_select_column;
	/** input type for updating data in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_set_input"]: {
	Autorizado?:boolean | null,
	Descricao?:string | null,
	Fabricante_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Pedido_Id?:ValueTypes["uuid"] | null,
	Produto_Id?:ValueTypes["uuid"] | null,
	QuantidadeAutorizada?:number | null,
	QuantidadeEntregue?:number | null,
	QuantidadePedida?:number | null,
	QuantidadeRecebida?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["pedidosDeSaida_Produtos_stddev_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["pedidosDeSaida_Produtos_stddev_pop_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_pop_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["pedidosDeSaida_Produtos_stddev_samp_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_samp_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["pedidosDeSaida_Produtos_sum_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_sum_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** update columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_update_column"]:pedidosDeSaida_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeSaida_Produtos_var_pop_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_pop_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["pedidosDeSaida_Produtos_var_samp_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_samp_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["pedidosDeSaida_Produtos_variance_fields"]: AliasType<{
	QuantidadeAutorizada?:true,
	QuantidadeEntregue?:true,
	QuantidadePedida?:true,
	QuantidadeRecebida?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_variance_order_by"]: {
	QuantidadeAutorizada?:ValueTypes["order_by"] | null,
	QuantidadeEntregue?:ValueTypes["order_by"] | null,
	QuantidadePedida?:ValueTypes["order_by"] | null,
	QuantidadeRecebida?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes"]: AliasType<{
	Comentario?:true,
Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos"]],
Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos_aggregate"]],
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["pedidosDeSaida_Situacoes_aggregate_fields"],
	nodes?:ValueTypes["pedidosDeSaida_Situacoes"],
		__typename?: true
}>;
	/** aggregate fields of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["pedidosDeSaida_Situacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["pedidosDeSaida_Situacoes_max_fields"],
	min?:ValueTypes["pedidosDeSaida_Situacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Situacoes_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Pedidos?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"][],
	_not?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null,
	_or?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_constraint"]:pedidosDeSaida_Situacoes_constraint;
	["pedidosDeSaida_Situacoes_enum"]:pedidosDeSaida_Situacoes_enum;
	/** Boolean expression to compare columns of type "pedidosDeSaida_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeSaida_Situacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["pedidosDeSaida_Situacoes_enum"] | null,
	_in?:ValueTypes["pedidosDeSaida_Situacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["pedidosDeSaida_Situacoes_enum"] | null,
	_nin?:ValueTypes["pedidosDeSaida_Situacoes_enum"][]
};
	/** input type for inserting data into table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_insert_input"]: {
	Comentario?:string | null,
	Pedidos?:ValueTypes["pedidosDeSaida_Pedidos_arr_rel_insert_input"] | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["pedidosDeSaida_Situacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["pedidosDeSaida_Situacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["pedidosDeSaida_Situacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_obj_rel_insert_input"]: {
	data:ValueTypes["pedidosDeSaida_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["pedidosDeSaida_Situacoes_on_conflict"] | null
};
	/** on conflict condition type for table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_on_conflict"]: {
	constraint:ValueTypes["pedidosDeSaida_Situacoes_constraint"],
	update_columns:ValueTypes["pedidosDeSaida_Situacoes_update_column"][],
	where?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "pedidosDeSaida.Situacoes". */
["pedidosDeSaida_Situacoes_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Pedidos_aggregate?:ValueTypes["pedidosDeSaida_Pedidos_aggregate_order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: pedidosDeSaida_Situacoes */
["pedidosDeSaida_Situacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_select_column"]:pedidosDeSaida_Situacoes_select_column;
	/** input type for updating data in table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_update_column"]:pedidosDeSaida_Situacoes_update_column;
	/** columns and relationships of "producao.Chips" */
["producao_Chips"]: AliasType<{
	DataSuspensao?:true,
	Iccid?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	NumeroDaLinha?:true,
	/** An object relationship */
	Operadora?:ValueTypes["Operadoras"],
	Operadora_Id?:true,
	/** An object relationship */
	Rastreador?:ValueTypes["producao_Rastreadores"],
Rastreadores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores"]],
Rastreadores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores_aggregate"]],
	/** An object relationship */
	Situacao?:ValueTypes["producao_ChipsSituacoes"],
	Situacao_Id?:true,
	TempoDaSuspensao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes"]: AliasType<{
Chips?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips"]],
Chips_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips_aggregate"]],
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_ChipsSituacoes_aggregate_fields"],
	nodes?:ValueTypes["producao_ChipsSituacoes"],
		__typename?: true
}>;
	/** aggregate fields of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["producao_ChipsSituacoes_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_ChipsSituacoes_max_fields"],
	min?:ValueTypes["producao_ChipsSituacoes_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "producao.ChipsSituacoes". All fields are combined with a logical 'AND'. */
["producao_ChipsSituacoes_bool_exp"]: {
	Chips?:ValueTypes["producao_Chips_bool_exp"] | null,
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["producao_ChipsSituacoes_bool_exp"][],
	_not?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null,
	_or?:ValueTypes["producao_ChipsSituacoes_bool_exp"][]
};
	/** unique or primary key constraints on table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_constraint"]:producao_ChipsSituacoes_constraint;
	["producao_ChipsSituacoes_enum"]:producao_ChipsSituacoes_enum;
	/** Boolean expression to compare columns of type "producao_ChipsSituacoes_enum". All fields are combined with logical 'AND'. */
["producao_ChipsSituacoes_enum_comparison_exp"]: {
	_eq?:ValueTypes["producao_ChipsSituacoes_enum"] | null,
	_in?:ValueTypes["producao_ChipsSituacoes_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["producao_ChipsSituacoes_enum"] | null,
	_nin?:ValueTypes["producao_ChipsSituacoes_enum"][]
};
	/** input type for inserting data into table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_insert_input"]: {
	Chips?:ValueTypes["producao_Chips_arr_rel_insert_input"] | null,
	Comentario?:string | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["producao_ChipsSituacoes_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["producao_ChipsSituacoes_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_ChipsSituacoes"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_obj_rel_insert_input"]: {
	data:ValueTypes["producao_ChipsSituacoes_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_ChipsSituacoes_on_conflict"] | null
};
	/** on conflict condition type for table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_on_conflict"]: {
	constraint:ValueTypes["producao_ChipsSituacoes_constraint"],
	update_columns:ValueTypes["producao_ChipsSituacoes_update_column"][],
	where?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.ChipsSituacoes". */
["producao_ChipsSituacoes_order_by"]: {
	Chips_aggregate?:ValueTypes["producao_Chips_aggregate_order_by"] | null,
	Comentario?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_ChipsSituacoes */
["producao_ChipsSituacoes_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_select_column"]:producao_ChipsSituacoes_select_column;
	/** input type for updating data in table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_update_column"]:producao_ChipsSituacoes_update_column;
	/** aggregated selection of "producao.Chips" */
["producao_Chips_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_Chips_aggregate_fields"],
	nodes?:ValueTypes["producao_Chips"],
		__typename?: true
}>;
	/** aggregate fields of "producao.Chips" */
["producao_Chips_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_Chips_avg_fields"],
count?: [{	columns?:ValueTypes["producao_Chips_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_Chips_max_fields"],
	min?:ValueTypes["producao_Chips_min_fields"],
	stddev?:ValueTypes["producao_Chips_stddev_fields"],
	stddev_pop?:ValueTypes["producao_Chips_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_Chips_stddev_samp_fields"],
	sum?:ValueTypes["producao_Chips_sum_fields"],
	var_pop?:ValueTypes["producao_Chips_var_pop_fields"],
	var_samp?:ValueTypes["producao_Chips_var_samp_fields"],
	variance?:ValueTypes["producao_Chips_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.Chips" */
["producao_Chips_aggregate_order_by"]: {
	avg?:ValueTypes["producao_Chips_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_Chips_max_order_by"] | null,
	min?:ValueTypes["producao_Chips_min_order_by"] | null,
	stddev?:ValueTypes["producao_Chips_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_Chips_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_Chips_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_Chips_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_Chips_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_Chips_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_Chips_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.Chips" */
["producao_Chips_arr_rel_insert_input"]: {
	data:ValueTypes["producao_Chips_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Chips_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_Chips_avg_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.Chips" */
["producao_Chips_avg_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.Chips". All fields are combined with a logical 'AND'. */
["producao_Chips_bool_exp"]: {
	DataSuspensao?:ValueTypes["timestamptz_comparison_exp"] | null,
	Iccid?:ValueTypes["String_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	NumeroDaLinha?:ValueTypes["bigint_comparison_exp"] | null,
	Operadora?:ValueTypes["Operadoras_bool_exp"] | null,
	Operadora_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_bool_exp"] | null,
	Rastreadores?:ValueTypes["producao_Rastreadores_bool_exp"] | null,
	Situacao?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null,
	Situacao_Id?:ValueTypes["producao_ChipsSituacoes_enum_comparison_exp"] | null,
	TempoDaSuspensao?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["producao_Chips_bool_exp"][],
	_not?:ValueTypes["producao_Chips_bool_exp"] | null,
	_or?:ValueTypes["producao_Chips_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.Chips" */
["producao_Chips_constraint"]:producao_Chips_constraint;
	/** input type for incrementing numeric columns in table "producao.Chips" */
["producao_Chips_inc_input"]: {
	NumeroDaLinha?:ValueTypes["bigint"] | null
};
	/** input type for inserting data into table "producao.Chips" */
["producao_Chips_insert_input"]: {
	DataSuspensao?:ValueTypes["timestamptz"] | null,
	Iccid?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	NumeroDaLinha?:ValueTypes["bigint"] | null,
	Operadora?:ValueTypes["Operadoras_obj_rel_insert_input"] | null,
	Operadora_Id?:ValueTypes["uuid"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_obj_rel_insert_input"] | null,
	Rastreadores?:ValueTypes["producao_Rastreadores_arr_rel_insert_input"] | null,
	Situacao?:ValueTypes["producao_ChipsSituacoes_obj_rel_insert_input"] | null,
	Situacao_Id?:ValueTypes["producao_ChipsSituacoes_enum"] | null,
	TempoDaSuspensao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_Chips_max_fields"]: AliasType<{
	DataSuspensao?:true,
	Iccid?:true,
	Id?:true,
	Item_Id?:true,
	NumeroDaLinha?:true,
	Operadora_Id?:true,
	TempoDaSuspensao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.Chips" */
["producao_Chips_max_order_by"]: {
	DataSuspensao?:ValueTypes["order_by"] | null,
	Iccid?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	NumeroDaLinha?:ValueTypes["order_by"] | null,
	Operadora_Id?:ValueTypes["order_by"] | null,
	TempoDaSuspensao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_Chips_min_fields"]: AliasType<{
	DataSuspensao?:true,
	Iccid?:true,
	Id?:true,
	Item_Id?:true,
	NumeroDaLinha?:true,
	Operadora_Id?:true,
	TempoDaSuspensao?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.Chips" */
["producao_Chips_min_order_by"]: {
	DataSuspensao?:ValueTypes["order_by"] | null,
	Iccid?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	NumeroDaLinha?:ValueTypes["order_by"] | null,
	Operadora_Id?:ValueTypes["order_by"] | null,
	TempoDaSuspensao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.Chips" */
["producao_Chips_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_Chips"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.Chips" */
["producao_Chips_obj_rel_insert_input"]: {
	data:ValueTypes["producao_Chips_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Chips_on_conflict"] | null
};
	/** on conflict condition type for table "producao.Chips" */
["producao_Chips_on_conflict"]: {
	constraint:ValueTypes["producao_Chips_constraint"],
	update_columns:ValueTypes["producao_Chips_update_column"][],
	where?:ValueTypes["producao_Chips_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.Chips". */
["producao_Chips_order_by"]: {
	DataSuspensao?:ValueTypes["order_by"] | null,
	Iccid?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	NumeroDaLinha?:ValueTypes["order_by"] | null,
	Operadora?:ValueTypes["Operadoras_order_by"] | null,
	Operadora_Id?:ValueTypes["order_by"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_order_by"] | null,
	Rastreadores_aggregate?:ValueTypes["producao_Rastreadores_aggregate_order_by"] | null,
	Situacao?:ValueTypes["producao_ChipsSituacoes_order_by"] | null,
	Situacao_Id?:ValueTypes["order_by"] | null,
	TempoDaSuspensao?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_Chips */
["producao_Chips_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.Chips" */
["producao_Chips_select_column"]:producao_Chips_select_column;
	/** input type for updating data in table "producao.Chips" */
["producao_Chips_set_input"]: {
	DataSuspensao?:ValueTypes["timestamptz"] | null,
	Iccid?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	NumeroDaLinha?:ValueTypes["bigint"] | null,
	Operadora_Id?:ValueTypes["uuid"] | null,
	Situacao_Id?:ValueTypes["producao_ChipsSituacoes_enum"] | null,
	TempoDaSuspensao?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_Chips_stddev_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.Chips" */
["producao_Chips_stddev_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_Chips_stddev_pop_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.Chips" */
["producao_Chips_stddev_pop_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_Chips_stddev_samp_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.Chips" */
["producao_Chips_stddev_samp_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_Chips_sum_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.Chips" */
["producao_Chips_sum_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.Chips" */
["producao_Chips_update_column"]:producao_Chips_update_column;
	/** aggregate var_pop on columns */
["producao_Chips_var_pop_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.Chips" */
["producao_Chips_var_pop_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_Chips_var_samp_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.Chips" */
["producao_Chips_var_samp_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_Chips_variance_fields"]: AliasType<{
	NumeroDaLinha?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.Chips" */
["producao_Chips_variance_order_by"]: {
	NumeroDaLinha?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "producao.Equipamentos" */
["producao_Equipamentos"]: AliasType<{
	Id?:true,
	Identificador?:true,
	Imei?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	/** An object relationship */
	Rastreador?:ValueTypes["producao_Rastreadores"],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.Equipamentos" */
["producao_Equipamentos_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_Equipamentos_aggregate_fields"],
	nodes?:ValueTypes["producao_Equipamentos"],
		__typename?: true
}>;
	/** aggregate fields of "producao.Equipamentos" */
["producao_Equipamentos_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_Equipamentos_avg_fields"],
count?: [{	columns?:ValueTypes["producao_Equipamentos_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_Equipamentos_max_fields"],
	min?:ValueTypes["producao_Equipamentos_min_fields"],
	stddev?:ValueTypes["producao_Equipamentos_stddev_fields"],
	stddev_pop?:ValueTypes["producao_Equipamentos_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_Equipamentos_stddev_samp_fields"],
	sum?:ValueTypes["producao_Equipamentos_sum_fields"],
	var_pop?:ValueTypes["producao_Equipamentos_var_pop_fields"],
	var_samp?:ValueTypes["producao_Equipamentos_var_samp_fields"],
	variance?:ValueTypes["producao_Equipamentos_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["producao_Equipamentos_avg_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "producao.Equipamentos". All fields are combined with a logical 'AND'. */
["producao_Equipamentos_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Identificador?:ValueTypes["bigint_comparison_exp"] | null,
	Imei?:ValueTypes["bigint_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_bool_exp"] | null,
	_and?:ValueTypes["producao_Equipamentos_bool_exp"][],
	_not?:ValueTypes["producao_Equipamentos_bool_exp"] | null,
	_or?:ValueTypes["producao_Equipamentos_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.Equipamentos" */
["producao_Equipamentos_constraint"]:producao_Equipamentos_constraint;
	/** input type for incrementing numeric columns in table "producao.Equipamentos" */
["producao_Equipamentos_inc_input"]: {
	Identificador?:ValueTypes["bigint"] | null,
	Imei?:ValueTypes["bigint"] | null
};
	/** input type for inserting data into table "producao.Equipamentos" */
["producao_Equipamentos_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Identificador?:ValueTypes["bigint"] | null,
	Imei?:ValueTypes["bigint"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_obj_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_Equipamentos_max_fields"]: AliasType<{
	Id?:true,
	Identificador?:true,
	Imei?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["producao_Equipamentos_min_fields"]: AliasType<{
	Id?:true,
	Identificador?:true,
	Imei?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "producao.Equipamentos" */
["producao_Equipamentos_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_Equipamentos"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.Equipamentos" */
["producao_Equipamentos_obj_rel_insert_input"]: {
	data:ValueTypes["producao_Equipamentos_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Equipamentos_on_conflict"] | null
};
	/** on conflict condition type for table "producao.Equipamentos" */
["producao_Equipamentos_on_conflict"]: {
	constraint:ValueTypes["producao_Equipamentos_constraint"],
	update_columns:ValueTypes["producao_Equipamentos_update_column"][],
	where?:ValueTypes["producao_Equipamentos_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.Equipamentos". */
["producao_Equipamentos_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Identificador?:ValueTypes["order_by"] | null,
	Imei?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_Equipamentos */
["producao_Equipamentos_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.Equipamentos" */
["producao_Equipamentos_select_column"]:producao_Equipamentos_select_column;
	/** input type for updating data in table "producao.Equipamentos" */
["producao_Equipamentos_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Identificador?:ValueTypes["bigint"] | null,
	Imei?:ValueTypes["bigint"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_Equipamentos_stddev_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["producao_Equipamentos_stddev_pop_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["producao_Equipamentos_stddev_samp_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["producao_Equipamentos_sum_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** update columns of table "producao.Equipamentos" */
["producao_Equipamentos_update_column"]:producao_Equipamentos_update_column;
	/** aggregate var_pop on columns */
["producao_Equipamentos_var_pop_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["producao_Equipamentos_var_samp_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["producao_Equipamentos_variance_fields"]: AliasType<{
	Identificador?:true,
	Imei?:true,
		__typename?: true
}>;
	/** columns and relationships of "producao.Identificadores" */
["producao_Identificadores"]: AliasType<{
	CodigoIdentificador?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.Identificadores" */
["producao_Identificadores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_Identificadores_aggregate_fields"],
	nodes?:ValueTypes["producao_Identificadores"],
		__typename?: true
}>;
	/** aggregate fields of "producao.Identificadores" */
["producao_Identificadores_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_Identificadores_avg_fields"],
count?: [{	columns?:ValueTypes["producao_Identificadores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_Identificadores_max_fields"],
	min?:ValueTypes["producao_Identificadores_min_fields"],
	stddev?:ValueTypes["producao_Identificadores_stddev_fields"],
	stddev_pop?:ValueTypes["producao_Identificadores_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_Identificadores_stddev_samp_fields"],
	sum?:ValueTypes["producao_Identificadores_sum_fields"],
	var_pop?:ValueTypes["producao_Identificadores_var_pop_fields"],
	var_samp?:ValueTypes["producao_Identificadores_var_samp_fields"],
	variance?:ValueTypes["producao_Identificadores_variance_fields"],
		__typename?: true
}>;
	/** aggregate avg on columns */
["producao_Identificadores_avg_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "producao.Identificadores". All fields are combined with a logical 'AND'. */
["producao_Identificadores_bool_exp"]: {
	CodigoIdentificador?:ValueTypes["Int_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["producao_Identificadores_bool_exp"][],
	_not?:ValueTypes["producao_Identificadores_bool_exp"] | null,
	_or?:ValueTypes["producao_Identificadores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.Identificadores" */
["producao_Identificadores_constraint"]:producao_Identificadores_constraint;
	/** input type for incrementing numeric columns in table "producao.Identificadores" */
["producao_Identificadores_inc_input"]: {
	CodigoIdentificador?:number | null
};
	/** input type for inserting data into table "producao.Identificadores" */
["producao_Identificadores_insert_input"]: {
	CodigoIdentificador?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_Identificadores_max_fields"]: AliasType<{
	CodigoIdentificador?:true,
	Id?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["producao_Identificadores_min_fields"]: AliasType<{
	CodigoIdentificador?:true,
	Id?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "producao.Identificadores" */
["producao_Identificadores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_Identificadores"],
		__typename?: true
}>;
	/** on conflict condition type for table "producao.Identificadores" */
["producao_Identificadores_on_conflict"]: {
	constraint:ValueTypes["producao_Identificadores_constraint"],
	update_columns:ValueTypes["producao_Identificadores_update_column"][],
	where?:ValueTypes["producao_Identificadores_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.Identificadores". */
["producao_Identificadores_order_by"]: {
	CodigoIdentificador?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_Identificadores */
["producao_Identificadores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.Identificadores" */
["producao_Identificadores_select_column"]:producao_Identificadores_select_column;
	/** input type for updating data in table "producao.Identificadores" */
["producao_Identificadores_set_input"]: {
	CodigoIdentificador?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_Identificadores_stddev_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** aggregate stddev_pop on columns */
["producao_Identificadores_stddev_pop_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** aggregate stddev_samp on columns */
["producao_Identificadores_stddev_samp_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** aggregate sum on columns */
["producao_Identificadores_sum_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** update columns of table "producao.Identificadores" */
["producao_Identificadores_update_column"]:producao_Identificadores_update_column;
	/** aggregate var_pop on columns */
["producao_Identificadores_var_pop_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** aggregate var_samp on columns */
["producao_Identificadores_var_samp_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** aggregate variance on columns */
["producao_Identificadores_variance_fields"]: AliasType<{
	CodigoIdentificador?:true,
		__typename?: true
}>;
	/** columns and relationships of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	/** An object relationship */
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id?:true,
	Lote?:true,
	Quantidade?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_KitDeInsumo_Itens_aggregate_fields"],
	nodes?:ValueTypes["producao_KitDeInsumo_Itens"],
		__typename?: true
}>;
	/** aggregate fields of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_KitDeInsumo_Itens_avg_fields"],
count?: [{	columns?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_KitDeInsumo_Itens_max_fields"],
	min?:ValueTypes["producao_KitDeInsumo_Itens_min_fields"],
	stddev?:ValueTypes["producao_KitDeInsumo_Itens_stddev_fields"],
	stddev_pop?:ValueTypes["producao_KitDeInsumo_Itens_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_KitDeInsumo_Itens_stddev_samp_fields"],
	sum?:ValueTypes["producao_KitDeInsumo_Itens_sum_fields"],
	var_pop?:ValueTypes["producao_KitDeInsumo_Itens_var_pop_fields"],
	var_samp?:ValueTypes["producao_KitDeInsumo_Itens_var_samp_fields"],
	variance?:ValueTypes["producao_KitDeInsumo_Itens_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_order_by"]: {
	avg?:ValueTypes["producao_KitDeInsumo_Itens_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_KitDeInsumo_Itens_max_order_by"] | null,
	min?:ValueTypes["producao_KitDeInsumo_Itens_min_order_by"] | null,
	stddev?:ValueTypes["producao_KitDeInsumo_Itens_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_KitDeInsumo_Itens_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_KitDeInsumo_Itens_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_KitDeInsumo_Itens_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_KitDeInsumo_Itens_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_KitDeInsumo_Itens_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_KitDeInsumo_Itens_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_arr_rel_insert_input"]: {
	data:ValueTypes["producao_KitDeInsumo_Itens_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitDeInsumo_Itens_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_KitDeInsumo_Itens_avg_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_avg_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.KitDeInsumo_Itens". All fields are combined with a logical 'AND'. */
["producao_KitDeInsumo_Itens_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Lote?:ValueTypes["String_comparison_exp"] | null,
	Quantidade?:ValueTypes["Int_comparison_exp"] | null,
	_and?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"][],
	_not?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null,
	_or?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_constraint"]:producao_KitDeInsumo_Itens_constraint;
	/** input type for incrementing numeric columns in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_inc_input"]: {
	Quantidade?:number | null
};
	/** input type for inserting data into table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_obj_rel_insert_input"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid"] | null,
	Lote?:string | null,
	Quantidade?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_KitDeInsumo_Itens_max_fields"]: AliasType<{
	Id?:true,
	Item_Id?:true,
	KitDeInsumo_Id?:true,
	Lote?:true,
	Quantidade?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Lote?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_KitDeInsumo_Itens_min_fields"]: AliasType<{
	Id?:true,
	Item_Id?:true,
	KitDeInsumo_Id?:true,
	Lote?:true,
	Quantidade?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Lote?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_KitDeInsumo_Itens"],
		__typename?: true
}>;
	/** on conflict condition type for table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_on_conflict"]: {
	constraint:ValueTypes["producao_KitDeInsumo_Itens_constraint"],
	update_columns:ValueTypes["producao_KitDeInsumo_Itens_update_column"][],
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.KitDeInsumo_Itens". */
["producao_KitDeInsumo_Itens_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Lote?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_KitDeInsumo_Itens */
["producao_KitDeInsumo_Itens_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_select_column"]:producao_KitDeInsumo_Itens_select_column;
	/** input type for updating data in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid"] | null,
	Lote?:string | null,
	Quantidade?:number | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_KitDeInsumo_Itens_stddev_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_KitDeInsumo_Itens_stddev_pop_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_KitDeInsumo_Itens_stddev_samp_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_KitDeInsumo_Itens_sum_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_sum_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_update_column"]:producao_KitDeInsumo_Itens_update_column;
	/** aggregate var_pop on columns */
["producao_KitDeInsumo_Itens_var_pop_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_KitDeInsumo_Itens_var_samp_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_KitDeInsumo_Itens_variance_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_variance_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	/** An object relationship */
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id?:true,
	/** An object relationship */
	Rastreador?:ValueTypes["producao_Rastreadores"],
	Rastreador_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_KitsDeInstalacao_aggregate_fields"],
	nodes?:ValueTypes["producao_KitsDeInstalacao"],
		__typename?: true
}>;
	/** aggregate fields of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_KitsDeInstalacao_avg_fields"],
count?: [{	columns?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_KitsDeInstalacao_max_fields"],
	min?:ValueTypes["producao_KitsDeInstalacao_min_fields"],
	stddev?:ValueTypes["producao_KitsDeInstalacao_stddev_fields"],
	stddev_pop?:ValueTypes["producao_KitsDeInstalacao_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_KitsDeInstalacao_stddev_samp_fields"],
	sum?:ValueTypes["producao_KitsDeInstalacao_sum_fields"],
	var_pop?:ValueTypes["producao_KitsDeInstalacao_var_pop_fields"],
	var_samp?:ValueTypes["producao_KitsDeInstalacao_var_samp_fields"],
	variance?:ValueTypes["producao_KitsDeInstalacao_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_order_by"]: {
	avg?:ValueTypes["producao_KitsDeInstalacao_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_KitsDeInstalacao_max_order_by"] | null,
	min?:ValueTypes["producao_KitsDeInstalacao_min_order_by"] | null,
	stddev?:ValueTypes["producao_KitsDeInstalacao_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_KitsDeInstalacao_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_KitsDeInstalacao_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_KitsDeInstalacao_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_KitsDeInstalacao_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_KitsDeInstalacao_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_KitsDeInstalacao_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_arr_rel_insert_input"]: {
	data:ValueTypes["producao_KitsDeInstalacao_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInstalacao_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_KitsDeInstalacao_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_avg_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.KitsDeInstalacao". All fields are combined with a logical 'AND'. */
["producao_KitsDeInstalacao_bool_exp"]: {
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_bool_exp"] | null,
	Rastreador_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["producao_KitsDeInstalacao_bool_exp"][],
	_not?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null,
	_or?:ValueTypes["producao_KitsDeInstalacao_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_constraint"]:producao_KitsDeInstalacao_constraint;
	/** input type for incrementing numeric columns in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_insert_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_obj_rel_insert_input"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_obj_rel_insert_input"] | null,
	Rastreador_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_KitsDeInstalacao_max_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Item_Id?:true,
	KitDeInsumo_Id?:true,
	Rastreador_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_max_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Rastreador_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_KitsDeInstalacao_min_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Item_Id?:true,
	KitDeInsumo_Id?:true,
	Rastreador_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_min_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Rastreador_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_KitsDeInstalacao"],
		__typename?: true
}>;
	/** on conflict condition type for table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_on_conflict"]: {
	constraint:ValueTypes["producao_KitsDeInstalacao_constraint"],
	update_columns:ValueTypes["producao_KitsDeInstalacao_update_column"][],
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.KitsDeInstalacao". */
["producao_KitsDeInstalacao_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitDeInsumo?:ValueTypes["producao_KitsDeInsumo_order_by"] | null,
	KitDeInsumo_Id?:ValueTypes["order_by"] | null,
	Rastreador?:ValueTypes["producao_Rastreadores_order_by"] | null,
	Rastreador_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_KitsDeInstalacao */
["producao_KitsDeInstalacao_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_select_column"]:producao_KitsDeInstalacao_select_column;
	/** input type for updating data in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_set_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	KitDeInsumo_Id?:ValueTypes["uuid"] | null,
	Rastreador_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_KitsDeInstalacao_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_KitsDeInstalacao_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_KitsDeInstalacao_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_KitsDeInstalacao_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_sum_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_update_column"]:producao_KitsDeInstalacao_update_column;
	/** aggregate var_pop on columns */
["producao_KitsDeInstalacao_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_KitsDeInstalacao_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_KitsDeInstalacao_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_variance_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens_aggregate"]],
KitsDeInstalacao?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao"]],
KitsDeInstalacao_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao_aggregate"]],
	Tipo_Id?:true,
	/** An object relationship */
	TiposDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo"],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_KitsDeInsumo_aggregate_fields"],
	nodes?:ValueTypes["producao_KitsDeInsumo"],
		__typename?: true
}>;
	/** aggregate fields of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_KitsDeInsumo_avg_fields"],
count?: [{	columns?:ValueTypes["producao_KitsDeInsumo_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_KitsDeInsumo_max_fields"],
	min?:ValueTypes["producao_KitsDeInsumo_min_fields"],
	stddev?:ValueTypes["producao_KitsDeInsumo_stddev_fields"],
	stddev_pop?:ValueTypes["producao_KitsDeInsumo_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_KitsDeInsumo_stddev_samp_fields"],
	sum?:ValueTypes["producao_KitsDeInsumo_sum_fields"],
	var_pop?:ValueTypes["producao_KitsDeInsumo_var_pop_fields"],
	var_samp?:ValueTypes["producao_KitsDeInsumo_var_samp_fields"],
	variance?:ValueTypes["producao_KitsDeInsumo_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_order_by"]: {
	avg?:ValueTypes["producao_KitsDeInsumo_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_KitsDeInsumo_max_order_by"] | null,
	min?:ValueTypes["producao_KitsDeInsumo_min_order_by"] | null,
	stddev?:ValueTypes["producao_KitsDeInsumo_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_KitsDeInsumo_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_KitsDeInsumo_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_KitsDeInsumo_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_KitsDeInsumo_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_KitsDeInsumo_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_KitsDeInsumo_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_arr_rel_insert_input"]: {
	data:ValueTypes["producao_KitsDeInsumo_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInsumo_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_KitsDeInsumo_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_avg_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.KitsDeInsumo". All fields are combined with a logical 'AND'. */
["producao_KitsDeInsumo_bool_exp"]: {
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null,
	KitsDeInstalacao?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	TiposDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null,
	_and?:ValueTypes["producao_KitsDeInsumo_bool_exp"][],
	_not?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null,
	_or?:ValueTypes["producao_KitsDeInsumo_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_constraint"]:producao_KitsDeInsumo_constraint;
	/** input type for incrementing numeric columns in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_insert_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["producao_KitDeInsumo_Itens_arr_rel_insert_input"] | null,
	KitsDeInstalacao?:ValueTypes["producao_KitsDeInstalacao_arr_rel_insert_input"] | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	TiposDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_obj_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_KitsDeInsumo_max_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Item_Id?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_max_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_KitsDeInsumo_min_fields"]: AliasType<{
	CodigoReferencia?:true,
	Id?:true,
	Item_Id?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_min_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_KitsDeInsumo"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_obj_rel_insert_input"]: {
	data:ValueTypes["producao_KitsDeInsumo_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_KitsDeInsumo_on_conflict"] | null
};
	/** on conflict condition type for table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_on_conflict"]: {
	constraint:ValueTypes["producao_KitsDeInsumo_constraint"],
	update_columns:ValueTypes["producao_KitsDeInsumo_update_column"][],
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.KitsDeInsumo". */
["producao_KitsDeInsumo_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["producao_KitDeInsumo_Itens_aggregate_order_by"] | null,
	KitsDeInstalacao_aggregate?:ValueTypes["producao_KitsDeInstalacao_aggregate_order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	TiposDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_KitsDeInsumo */
["producao_KitsDeInsumo_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_select_column"]:producao_KitsDeInsumo_select_column;
	/** input type for updating data in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_set_input"]: {
	CodigoReferencia?:number | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_KitsDeInsumo_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_KitsDeInsumo_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_KitsDeInsumo_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_KitsDeInsumo_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_sum_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_update_column"]:producao_KitsDeInsumo_update_column;
	/** aggregate var_pop on columns */
["producao_KitsDeInsumo_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_KitsDeInsumo_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_KitsDeInsumo_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_variance_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "producao.Logs" */
["producao_Logs"]: AliasType<{
DadosAntigos?: [{	/** JSON select path */
	path?:string | null},true],
DadosNovos?: [{	/** JSON select path */
	path?:string | null},true],
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.Logs" */
["producao_Logs_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_Logs_aggregate_fields"],
	nodes?:ValueTypes["producao_Logs"],
		__typename?: true
}>;
	/** aggregate fields of "producao.Logs" */
["producao_Logs_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["producao_Logs_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_Logs_max_fields"],
	min?:ValueTypes["producao_Logs_min_fields"],
		__typename?: true
}>;
	/** append existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_append_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** Boolean expression to filter rows from the table "producao.Logs". All fields are combined with a logical 'AND'. */
["producao_Logs_bool_exp"]: {
	DadosAntigos?:ValueTypes["jsonb_comparison_exp"] | null,
	DadosNovos?:ValueTypes["jsonb_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Operacao?:ValueTypes["String_comparison_exp"] | null,
	Tipo?:ValueTypes["String_comparison_exp"] | null,
	Tipo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["producao_Logs_bool_exp"][],
	_not?:ValueTypes["producao_Logs_bool_exp"] | null,
	_or?:ValueTypes["producao_Logs_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.Logs" */
["producao_Logs_constraint"]:producao_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["producao_Logs_delete_at_path_input"]: {
	DadosAntigos?:string[],
	DadosNovos?:string[]
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["producao_Logs_delete_elem_input"]: {
	DadosAntigos?:number | null,
	DadosNovos?:number | null
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["producao_Logs_delete_key_input"]: {
	DadosAntigos?:string | null,
	DadosNovos?:string | null
};
	/** input type for inserting data into table "producao.Logs" */
["producao_Logs_insert_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_Logs_max_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["producao_Logs_min_fields"]: AliasType<{
	Id?:true,
	Operacao?:true,
	Tipo?:true,
	Tipo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "producao.Logs" */
["producao_Logs_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_Logs"],
		__typename?: true
}>;
	/** on conflict condition type for table "producao.Logs" */
["producao_Logs_on_conflict"]: {
	constraint:ValueTypes["producao_Logs_constraint"],
	update_columns:ValueTypes["producao_Logs_update_column"][],
	where?:ValueTypes["producao_Logs_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.Logs". */
["producao_Logs_order_by"]: {
	DadosAntigos?:ValueTypes["order_by"] | null,
	DadosNovos?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Operacao?:ValueTypes["order_by"] | null,
	Tipo?:ValueTypes["order_by"] | null,
	Tipo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_Logs */
["producao_Logs_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_prepend_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null
};
	/** select columns of table "producao.Logs" */
["producao_Logs_select_column"]:producao_Logs_select_column;
	/** input type for updating data in table "producao.Logs" */
["producao_Logs_set_input"]: {
	DadosAntigos?:ValueTypes["jsonb"] | null,
	DadosNovos?:ValueTypes["jsonb"] | null,
	Id?:ValueTypes["uuid"] | null,
	Operacao?:string | null,
	Tipo?:string | null,
	Tipo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "producao.Logs" */
["producao_Logs_update_column"]:producao_Logs_update_column;
	/** columns and relationships of "producao.Rastreadores" */
["producao_Rastreadores"]: AliasType<{
	/** An object relationship */
	Chip?:ValueTypes["producao_Chips"],
	Chip_Id?:true,
	CodigoReferencia?:true,
	/** An object relationship */
	Equipamento?:ValueTypes["producao_Equipamentos"],
	Equipamento_Id?:true,
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
KitsDeInstalacao?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao"]],
KitsDeInstalacao_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.Rastreadores" */
["producao_Rastreadores_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_Rastreadores_aggregate_fields"],
	nodes?:ValueTypes["producao_Rastreadores"],
		__typename?: true
}>;
	/** aggregate fields of "producao.Rastreadores" */
["producao_Rastreadores_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_Rastreadores_avg_fields"],
count?: [{	columns?:ValueTypes["producao_Rastreadores_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_Rastreadores_max_fields"],
	min?:ValueTypes["producao_Rastreadores_min_fields"],
	stddev?:ValueTypes["producao_Rastreadores_stddev_fields"],
	stddev_pop?:ValueTypes["producao_Rastreadores_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_Rastreadores_stddev_samp_fields"],
	sum?:ValueTypes["producao_Rastreadores_sum_fields"],
	var_pop?:ValueTypes["producao_Rastreadores_var_pop_fields"],
	var_samp?:ValueTypes["producao_Rastreadores_var_samp_fields"],
	variance?:ValueTypes["producao_Rastreadores_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.Rastreadores" */
["producao_Rastreadores_aggregate_order_by"]: {
	avg?:ValueTypes["producao_Rastreadores_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_Rastreadores_max_order_by"] | null,
	min?:ValueTypes["producao_Rastreadores_min_order_by"] | null,
	stddev?:ValueTypes["producao_Rastreadores_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_Rastreadores_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_Rastreadores_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_Rastreadores_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_Rastreadores_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_Rastreadores_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_Rastreadores_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_arr_rel_insert_input"]: {
	data:ValueTypes["producao_Rastreadores_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Rastreadores_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_Rastreadores_avg_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_avg_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.Rastreadores". All fields are combined with a logical 'AND'. */
["producao_Rastreadores_bool_exp"]: {
	Chip?:ValueTypes["producao_Chips_bool_exp"] | null,
	Chip_Id?:ValueTypes["uuid_comparison_exp"] | null,
	CodigoReferencia?:ValueTypes["Int_comparison_exp"] | null,
	Equipamento?:ValueTypes["producao_Equipamentos_bool_exp"] | null,
	Equipamento_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	KitsDeInstalacao?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null,
	_and?:ValueTypes["producao_Rastreadores_bool_exp"][],
	_not?:ValueTypes["producao_Rastreadores_bool_exp"] | null,
	_or?:ValueTypes["producao_Rastreadores_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.Rastreadores" */
["producao_Rastreadores_constraint"]:producao_Rastreadores_constraint;
	/** input type for incrementing numeric columns in table "producao.Rastreadores" */
["producao_Rastreadores_inc_input"]: {
	CodigoReferencia?:number | null
};
	/** input type for inserting data into table "producao.Rastreadores" */
["producao_Rastreadores_insert_input"]: {
	Chip?:ValueTypes["producao_Chips_obj_rel_insert_input"] | null,
	Chip_Id?:ValueTypes["uuid"] | null,
	CodigoReferencia?:number | null,
	Equipamento?:ValueTypes["producao_Equipamentos_obj_rel_insert_input"] | null,
	Equipamento_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	KitsDeInstalacao?:ValueTypes["producao_KitsDeInstalacao_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_Rastreadores_max_fields"]: AliasType<{
	Chip_Id?:true,
	CodigoReferencia?:true,
	Equipamento_Id?:true,
	Id?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_max_order_by"]: {
	Chip_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Equipamento_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_Rastreadores_min_fields"]: AliasType<{
	Chip_Id?:true,
	CodigoReferencia?:true,
	Equipamento_Id?:true,
	Id?:true,
	Item_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_min_order_by"]: {
	Chip_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Equipamento_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.Rastreadores" */
["producao_Rastreadores_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_Rastreadores"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_obj_rel_insert_input"]: {
	data:ValueTypes["producao_Rastreadores_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_Rastreadores_on_conflict"] | null
};
	/** on conflict condition type for table "producao.Rastreadores" */
["producao_Rastreadores_on_conflict"]: {
	constraint:ValueTypes["producao_Rastreadores_constraint"],
	update_columns:ValueTypes["producao_Rastreadores_update_column"][],
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.Rastreadores". */
["producao_Rastreadores_order_by"]: {
	Chip?:ValueTypes["producao_Chips_order_by"] | null,
	Chip_Id?:ValueTypes["order_by"] | null,
	CodigoReferencia?:ValueTypes["order_by"] | null,
	Equipamento?:ValueTypes["producao_Equipamentos_order_by"] | null,
	Equipamento_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	KitsDeInstalacao_aggregate?:ValueTypes["producao_KitsDeInstalacao_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_Rastreadores */
["producao_Rastreadores_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.Rastreadores" */
["producao_Rastreadores_select_column"]:producao_Rastreadores_select_column;
	/** input type for updating data in table "producao.Rastreadores" */
["producao_Rastreadores_set_input"]: {
	Chip_Id?:ValueTypes["uuid"] | null,
	CodigoReferencia?:number | null,
	Equipamento_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_Rastreadores_stddev_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_Rastreadores_stddev_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_Rastreadores_stddev_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_Rastreadores_sum_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_sum_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.Rastreadores" */
["producao_Rastreadores_update_column"]:producao_Rastreadores_update_column;
	/** aggregate var_pop on columns */
["producao_Rastreadores_var_pop_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_pop_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_Rastreadores_var_samp_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_samp_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_Rastreadores_variance_fields"]: AliasType<{
	CodigoReferencia?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_variance_order_by"]: {
	CodigoReferencia?:ValueTypes["order_by"] | null
};
	/** columns and relationships of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo"]: AliasType<{
	Id?:true,
Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]],
KitsDeInsumo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo"]],
KitsDeInsumo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo_aggregate"]],
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_TiposDeKitDeInsumo_aggregate_fields"],
	nodes?:ValueTypes["producao_TiposDeKitDeInsumo"],
		__typename?: true
}>;
	/** aggregate fields of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["producao_TiposDeKitDeInsumo_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_TiposDeKitDeInsumo_max_fields"],
	min?:ValueTypes["producao_TiposDeKitDeInsumo_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Itens?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null,
	KitsDeInsumo?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"][],
	_not?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null,
	_or?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_constraint"]:producao_TiposDeKitDeInsumo_constraint;
	/** columns and relationships of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens"]: AliasType<{
	Id?:true,
	/** An object relationship */
	Item?:ValueTypes["estoque_Itens"],
	Item_Id?:true,
	Quantidade?:true,
	/** An object relationship */
	TipoDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo"],
	TiposDeKitDeInsumo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]: AliasType<{
	aggregate?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"],
	nodes?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
		__typename?: true
}>;
	/** aggregate fields of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"]: AliasType<{
	avg?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"],
count?: [{	columns?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"],
	min?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"],
	stddev?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"],
	stddev_pop?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"],
	stddev_samp?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"],
	sum?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"],
	var_pop?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"],
	var_samp?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"],
	variance?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"]: {
	avg?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"] | null,
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"] | null,
	min?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"] | null,
	stddev?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"] | null,
	stddev_pop?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"] | null,
	stddev_samp?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"] | null,
	sum?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"] | null,
	var_pop?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"] | null,
	var_samp?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"] | null,
	variance?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"] | null
};
	/** input type for inserting array relation for remote table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"]: {
	data:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"] | null
};
	/** aggregate avg on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by avg() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo_estoque_Itens". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Item?:ValueTypes["estoque_Itens_bool_exp"] | null,
	Item_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Quantidade?:ValueTypes["Int_comparison_exp"] | null,
	TipoDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"][],
	_not?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null,
	_or?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"]:producao_TiposDeKitDeInsumo_estoque_Itens_constraint;
	/** input type for incrementing numeric columns in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"]: {
	Quantidade?:number | null
};
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Item?:ValueTypes["estoque_Itens_obj_rel_insert_input"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Quantidade?:number | null,
	TipoDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_obj_rel_insert_input"] | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"]: AliasType<{
	Id?:true,
	Item_Id?:true,
	Quantidade?:true,
	TiposDeKitDeInsumo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"]: AliasType<{
	Id?:true,
	Item_Id?:true,
	Quantidade?:true,
	TiposDeKitDeInsumo_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
		__typename?: true
}>;
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"]: {
	constraint:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"],
	update_columns:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"][],
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo_estoque_Itens". */
["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Item?:ValueTypes["estoque_Itens_order_by"] | null,
	Item_Id?:ValueTypes["order_by"] | null,
	Quantidade?:ValueTypes["order_by"] | null,
	TipoDeKitDeInsumo?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"] | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_TiposDeKitDeInsumo_estoque_Itens */
["producao_TiposDeKitDeInsumo_estoque_Itens_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"]:producao_TiposDeKitDeInsumo_estoque_Itens_select_column;
	/** input type for updating data in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Item_Id?:ValueTypes["uuid"] | null,
	Quantidade?:number | null,
	TiposDeKitDeInsumo_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate stddev on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate stddev_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by stddev_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate sum on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by sum() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** update columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"]:producao_TiposDeKitDeInsumo_estoque_Itens_update_column;
	/** aggregate var_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by var_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate var_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by var_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** aggregate variance on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"]: AliasType<{
	Quantidade?:true,
		__typename?: true
}>;
	/** order by variance() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"]: {
	Quantidade?:ValueTypes["order_by"] | null
};
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Itens?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"] | null,
	KitsDeInsumo?:ValueTypes["producao_KitsDeInsumo_arr_rel_insert_input"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["producao_TiposDeKitDeInsumo"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_obj_rel_insert_input"]: {
	data:ValueTypes["producao_TiposDeKitDeInsumo_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["producao_TiposDeKitDeInsumo_on_conflict"] | null
};
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_on_conflict"]: {
	constraint:ValueTypes["producao_TiposDeKitDeInsumo_constraint"],
	update_columns:ValueTypes["producao_TiposDeKitDeInsumo_update_column"][],
	where?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null
};
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo". */
["producao_TiposDeKitDeInsumo_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Itens_aggregate?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"] | null,
	KitsDeInsumo_aggregate?:ValueTypes["producao_KitsDeInsumo_aggregate_order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: producao_TiposDeKitDeInsumo */
["producao_TiposDeKitDeInsumo_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_select_column"]:producao_TiposDeKitDeInsumo_select_column;
	/** input type for updating data in table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_update_column"]:producao_TiposDeKitDeInsumo_update_column;
	["query_root"]: AliasType<{
CategoriasDeVeiculos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["CategoriasDeVeiculos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["CategoriasDeVeiculos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["CategoriasDeVeiculos_bool_exp"] | null},ValueTypes["CategoriasDeVeiculos"]],
CategoriasDeVeiculos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["CategoriasDeVeiculos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["CategoriasDeVeiculos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["CategoriasDeVeiculos_bool_exp"] | null},ValueTypes["CategoriasDeVeiculos_aggregate"]],
CategoriasDeVeiculos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["CategoriasDeVeiculos"]],
Configuracoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Configuracoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Configuracoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Configuracoes_bool_exp"] | null},ValueTypes["Configuracoes"]],
Configuracoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Configuracoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Configuracoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Configuracoes_bool_exp"] | null},ValueTypes["Configuracoes_aggregate"]],
Configuracoes_by_pk?: [{	Slug:string},ValueTypes["Configuracoes"]],
EstadosEMunicipios?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["EstadosEMunicipios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["EstadosEMunicipios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["EstadosEMunicipios_bool_exp"] | null},ValueTypes["EstadosEMunicipios"]],
EstadosEMunicipios_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["EstadosEMunicipios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["EstadosEMunicipios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["EstadosEMunicipios_bool_exp"] | null},ValueTypes["EstadosEMunicipios_aggregate"]],
EstadosEMunicipios_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["EstadosEMunicipios"]],
Operadoras?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Operadoras_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Operadoras_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Operadoras_bool_exp"] | null},ValueTypes["Operadoras"]],
Operadoras_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Operadoras_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Operadoras_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Operadoras_bool_exp"] | null},ValueTypes["Operadoras_aggregate"]],
Operadoras_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Operadoras"]],
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Produtos_bool_exp"] | null},ValueTypes["Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Produtos_bool_exp"] | null},ValueTypes["Produtos_aggregate"]],
Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Produtos"]],
UnidadesDeMedidas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["UnidadesDeMedidas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["UnidadesDeMedidas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null},ValueTypes["UnidadesDeMedidas"]],
UnidadesDeMedidas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["UnidadesDeMedidas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["UnidadesDeMedidas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null},ValueTypes["UnidadesDeMedidas_aggregate"]],
UnidadesDeMedidas_by_pk?: [{	Valor:string},ValueTypes["UnidadesDeMedidas"]],
atendimentos_EtapasDosFluxos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_EtapasDosFluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_EtapasDosFluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null},ValueTypes["atendimentos_EtapasDosFluxos"]],
atendimentos_EtapasDosFluxos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_EtapasDosFluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_EtapasDosFluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_EtapasDosFluxos_bool_exp"] | null},ValueTypes["atendimentos_EtapasDosFluxos_aggregate"]],
atendimentos_EtapasDosFluxos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_EtapasDosFluxos"]],
atendimentos_Fluxos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Fluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Fluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null},ValueTypes["atendimentos_Fluxos"]],
atendimentos_Fluxos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Fluxos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Fluxos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Fluxos_bool_exp"] | null},ValueTypes["atendimentos_Fluxos_aggregate"]],
atendimentos_Fluxos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_Fluxos"]],
atendimentos_Tickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets"]],
atendimentos_Tickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_Tickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_Tickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_Tickets_bool_exp"] | null},ValueTypes["atendimentos_Tickets_aggregate"]],
atendimentos_Tickets_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["atendimentos_Tickets"]],
atendimentos_TiposDeTickets?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_TiposDeTickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_TiposDeTickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"] | null},ValueTypes["atendimentos_TiposDeTickets"]],
atendimentos_TiposDeTickets_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["atendimentos_TiposDeTickets_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["atendimentos_TiposDeTickets_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["atendimentos_TiposDeTickets_bool_exp"] | null},ValueTypes["atendimentos_TiposDeTickets_aggregate"]],
atendimentos_TiposDeTickets_by_pk?: [{	Valor:string},ValueTypes["atendimentos_TiposDeTickets"]],
autenticacao_Atendentes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Atendentes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Atendentes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Atendentes_bool_exp"] | null},ValueTypes["autenticacao_Atendentes"]],
autenticacao_Atendentes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Atendentes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Atendentes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Atendentes_bool_exp"] | null},ValueTypes["autenticacao_Atendentes_aggregate"]],
autenticacao_Atendentes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["autenticacao_Atendentes"]],
autenticacao_Usuarios?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Usuarios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Usuarios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null},ValueTypes["autenticacao_Usuarios"]],
autenticacao_Usuarios_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["autenticacao_Usuarios_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["autenticacao_Usuarios_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["autenticacao_Usuarios_bool_exp"] | null},ValueTypes["autenticacao_Usuarios_aggregate"]],
autenticacao_Usuarios_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["autenticacao_Usuarios"]],
clientes_Leads?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Leads_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Leads_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Leads_bool_exp"] | null},ValueTypes["clientes_Leads"]],
clientes_Leads_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Leads_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Leads_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Leads_bool_exp"] | null},ValueTypes["clientes_Leads_aggregate"]],
clientes_Leads_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_Leads"]],
clientes_PerfisComerciais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_PerfisComerciais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_PerfisComerciais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null},ValueTypes["clientes_PerfisComerciais"]],
clientes_PerfisComerciais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_PerfisComerciais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_PerfisComerciais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_PerfisComerciais_bool_exp"] | null},ValueTypes["clientes_PerfisComerciais_aggregate"]],
clientes_PerfisComerciais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_PerfisComerciais"]],
clientes_Veiculos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Veiculos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Veiculos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Veiculos_bool_exp"] | null},ValueTypes["clientes_Veiculos"]],
clientes_Veiculos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["clientes_Veiculos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["clientes_Veiculos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["clientes_Veiculos_bool_exp"] | null},ValueTypes["clientes_Veiculos_aggregate"]],
clientes_Veiculos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["clientes_Veiculos"]],
comercial_Acoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Acoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Acoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Acoes_bool_exp"] | null},ValueTypes["comercial_Acoes"]],
comercial_Acoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Acoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Acoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Acoes_bool_exp"] | null},ValueTypes["comercial_Acoes_aggregate"]],
comercial_Acoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Acoes"]],
comercial_Atributos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Atributos_bool_exp"] | null},ValueTypes["comercial_Atributos"]],
comercial_Atributos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Atributos_bool_exp"] | null},ValueTypes["comercial_Atributos_aggregate"]],
comercial_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Atributos"]],
comercial_Coberturas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Coberturas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Coberturas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Coberturas_bool_exp"] | null},ValueTypes["comercial_Coberturas"]],
comercial_Coberturas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Coberturas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Coberturas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Coberturas_bool_exp"] | null},ValueTypes["comercial_Coberturas_aggregate"]],
comercial_Coberturas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Coberturas"]],
comercial_Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_bool_exp"] | null},ValueTypes["comercial_Combos"]],
comercial_Combos_Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos"]],
comercial_Combos_Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_Combos_aggregate"]],
comercial_Combos_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Combos"]],
comercial_Combos_Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos"]],
comercial_Combos_Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Planos_bool_exp"] | null},ValueTypes["comercial_Combos_Planos_aggregate"]],
comercial_Combos_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Planos"]],
comercial_Combos_Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null},ValueTypes["comercial_Combos_Precos"]],
comercial_Combos_Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Precos_bool_exp"] | null},ValueTypes["comercial_Combos_Precos_aggregate"]],
comercial_Combos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Precos"]],
comercial_Combos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos"]],
comercial_Combos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Produtos_bool_exp"] | null},ValueTypes["comercial_Combos_Produtos_aggregate"]],
comercial_Combos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Produtos"]],
comercial_Combos_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos"]],
comercial_Combos_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_Servicos_bool_exp"] | null},ValueTypes["comercial_Combos_Servicos_aggregate"]],
comercial_Combos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos_Servicos"]],
comercial_Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Combos_bool_exp"] | null},ValueTypes["comercial_Combos_aggregate"]],
comercial_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Combos"]],
comercial_Condicionais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Condicionais_bool_exp"] | null},ValueTypes["comercial_Condicionais"]],
comercial_CondicionaisSituacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_CondicionaisSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_CondicionaisSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"] | null},ValueTypes["comercial_CondicionaisSituacoes"]],
comercial_CondicionaisSituacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_CondicionaisSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_CondicionaisSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_CondicionaisSituacoes_bool_exp"] | null},ValueTypes["comercial_CondicionaisSituacoes_aggregate"]],
comercial_CondicionaisSituacoes_by_pk?: [{	Valor:string},ValueTypes["comercial_CondicionaisSituacoes"]],
comercial_Condicionais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Condicionais_bool_exp"] | null},ValueTypes["comercial_Condicionais_aggregate"]],
comercial_Condicionais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Condicionais"]],
comercial_ContratosBase?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_bool_exp"] | null},ValueTypes["comercial_ContratosBase"]],
comercial_ContratosBase_Versoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_Versoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_Versoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null},ValueTypes["comercial_ContratosBase_Versoes"]],
comercial_ContratosBase_Versoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_Versoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_Versoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_Versoes_bool_exp"] | null},ValueTypes["comercial_ContratosBase_Versoes_aggregate"]],
comercial_ContratosBase_Versoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_ContratosBase_Versoes"]],
comercial_ContratosBase_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_ContratosBase_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_ContratosBase_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_ContratosBase_bool_exp"] | null},ValueTypes["comercial_ContratosBase_aggregate"]],
comercial_ContratosBase_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_ContratosBase"]],
comercial_Fornecedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_bool_exp"] | null},ValueTypes["comercial_Fornecedores"]],
comercial_Fornecedores_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos"]],
comercial_Fornecedores_Produtos_Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
comercial_Fornecedores_Produtos_Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_Precos_aggregate"]],
comercial_Fornecedores_Produtos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Produtos_Precos"]],
comercial_Fornecedores_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Produtos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Produtos_aggregate"]],
comercial_Fornecedores_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Produtos"]],
comercial_Fornecedores_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos"]],
comercial_Fornecedores_Servicos_Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
comercial_Fornecedores_Servicos_Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Precos_aggregate"]],
comercial_Fornecedores_Servicos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos_Precos"]],
comercial_Fornecedores_Servicos_Tarifas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
comercial_Fornecedores_Servicos_Tarifas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"]],
comercial_Fornecedores_Servicos_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos_Tarifas"]],
comercial_Fornecedores_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_Servicos_bool_exp"] | null},ValueTypes["comercial_Fornecedores_Servicos_aggregate"]],
comercial_Fornecedores_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores_Servicos"]],
comercial_Fornecedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Fornecedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Fornecedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Fornecedores_bool_exp"] | null},ValueTypes["comercial_Fornecedores_aggregate"]],
comercial_Fornecedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Fornecedores"]],
comercial_Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_bool_exp"] | null},ValueTypes["comercial_Planos"]],
comercial_Planos_Condicionais?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais"]],
comercial_Planos_Condicionais_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Condicionais_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Condicionais_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Condicionais_bool_exp"] | null},ValueTypes["comercial_Planos_Condicionais_aggregate"]],
comercial_Planos_Condicionais_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos_Condicionais"]],
comercial_Planos_Precos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null},ValueTypes["comercial_Planos_Precos"]],
comercial_Planos_Precos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_Precos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_Precos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_Precos_bool_exp"] | null},ValueTypes["comercial_Planos_Precos_aggregate"]],
comercial_Planos_Precos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos_Precos"]],
comercial_Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Planos_bool_exp"] | null},ValueTypes["comercial_Planos_aggregate"]],
comercial_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Planos"]],
comercial_PrestadorDeServicos_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
comercial_PrestadorDeServicos_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_PrestadorDeServicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_PrestadorDeServicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"] | null},ValueTypes["comercial_PrestadorDeServicos_Servicos_aggregate"]],
comercial_PrestadorDeServicos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_PrestadorDeServicos_Servicos"]],
comercial_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos"]],
comercial_Produtos_Atributos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos"]],
comercial_Produtos_Atributos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Atributos_bool_exp"] | null},ValueTypes["comercial_Produtos_Atributos_aggregate"]],
comercial_Produtos_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Atributos"]],
comercial_Produtos_Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades"]],
comercial_Produtos_Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Produtos_Oportunidades_aggregate"]],
comercial_Produtos_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Oportunidades"]],
comercial_Produtos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos"]],
comercial_Produtos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_Produtos_aggregate"]],
comercial_Produtos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Produtos"]],
comercial_Produtos_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos"]],
comercial_Produtos_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Servicos_bool_exp"] | null},ValueTypes["comercial_Produtos_Servicos_aggregate"]],
comercial_Produtos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos_Servicos"]],
comercial_Produtos_Tipos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Tipos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Tipos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Tipos_bool_exp"] | null},ValueTypes["comercial_Produtos_Tipos"]],
comercial_Produtos_Tipos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_Tipos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_Tipos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_Tipos_bool_exp"] | null},ValueTypes["comercial_Produtos_Tipos_aggregate"]],
comercial_Produtos_Tipos_by_pk?: [{	Valor:string},ValueTypes["comercial_Produtos_Tipos"]],
comercial_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Produtos_bool_exp"] | null},ValueTypes["comercial_Produtos_aggregate"]],
comercial_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Produtos"]],
comercial_Propostas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas"]],
comercial_Propostas_Combos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos"]],
comercial_Propostas_Combos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Combos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Combos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Combos_bool_exp"] | null},ValueTypes["comercial_Propostas_Combos_aggregate"]],
comercial_Propostas_Combos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Combos"]],
comercial_Propostas_Instalacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes"]],
comercial_Propostas_Instalacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Instalacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Instalacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Instalacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Instalacoes_aggregate"]],
comercial_Propostas_Instalacoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Instalacoes"]],
comercial_Propostas_Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades"]],
comercial_Propostas_Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Propostas_Oportunidades_aggregate"]],
comercial_Propostas_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Oportunidades"]],
comercial_Propostas_Planos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos"]],
comercial_Propostas_Planos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Planos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Planos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Planos_bool_exp"] | null},ValueTypes["comercial_Propostas_Planos_aggregate"]],
comercial_Propostas_Planos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Planos"]],
comercial_Propostas_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos"]],
comercial_Propostas_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Produtos_bool_exp"] | null},ValueTypes["comercial_Propostas_Produtos_aggregate"]],
comercial_Propostas_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Produtos"]],
comercial_Propostas_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos"]],
comercial_Propostas_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Servicos_bool_exp"] | null},ValueTypes["comercial_Propostas_Servicos_aggregate"]],
comercial_Propostas_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas_Servicos"]],
comercial_Propostas_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Situacoes"]],
comercial_Propostas_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_Situacoes_bool_exp"] | null},ValueTypes["comercial_Propostas_Situacoes_aggregate"]],
comercial_Propostas_Situacoes_by_pk?: [{	Valor:string},ValueTypes["comercial_Propostas_Situacoes"]],
comercial_Propostas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Propostas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Propostas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Propostas_bool_exp"] | null},ValueTypes["comercial_Propostas_aggregate"]],
comercial_Propostas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Propostas"]],
comercial_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos"]],
comercial_Servicos_Atributos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos"]],
comercial_Servicos_Atributos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Atributos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Atributos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Atributos_bool_exp"] | null},ValueTypes["comercial_Servicos_Atributos_aggregate"]],
comercial_Servicos_Atributos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Atributos"]],
comercial_Servicos_Oportunidades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades"]],
comercial_Servicos_Oportunidades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Oportunidades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Oportunidades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Oportunidades_bool_exp"] | null},ValueTypes["comercial_Servicos_Oportunidades_aggregate"]],
comercial_Servicos_Oportunidades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Oportunidades"]],
comercial_Servicos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos"]],
comercial_Servicos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Produtos_bool_exp"] | null},ValueTypes["comercial_Servicos_Produtos_aggregate"]],
comercial_Servicos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Produtos"]],
comercial_Servicos_Servicos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos"]],
comercial_Servicos_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_Servicos_aggregate"]],
comercial_Servicos_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Servicos"]],
comercial_Servicos_Tarifas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas"]],
comercial_Servicos_Tarifas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tarifas_bool_exp"] | null},ValueTypes["comercial_Servicos_Tarifas_aggregate"]],
comercial_Servicos_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos_Tarifas"]],
comercial_Servicos_Tipos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tipos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tipos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tipos_bool_exp"] | null},ValueTypes["comercial_Servicos_Tipos"]],
comercial_Servicos_Tipos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_Tipos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_Tipos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_Tipos_bool_exp"] | null},ValueTypes["comercial_Servicos_Tipos_aggregate"]],
comercial_Servicos_Tipos_by_pk?: [{	Valor:string},ValueTypes["comercial_Servicos_Tipos"]],
comercial_Servicos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Servicos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Servicos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Servicos_bool_exp"] | null},ValueTypes["comercial_Servicos_aggregate"]],
comercial_Servicos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Servicos"]],
comercial_Tarifas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Tarifas_bool_exp"] | null},ValueTypes["comercial_Tarifas"]],
comercial_Tarifas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["comercial_Tarifas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["comercial_Tarifas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["comercial_Tarifas_bool_exp"] | null},ValueTypes["comercial_Tarifas_aggregate"]],
comercial_Tarifas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["comercial_Tarifas"]],
contatos_Emails?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Emails_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Emails_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Emails_bool_exp"] | null},ValueTypes["contatos_Emails"]],
contatos_Emails_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Emails_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Emails_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Emails_bool_exp"] | null},ValueTypes["contatos_Emails_aggregate"]],
contatos_Emails_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Emails"]],
contatos_Enderecos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Enderecos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Enderecos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Enderecos_bool_exp"] | null},ValueTypes["contatos_Enderecos"]],
contatos_Enderecos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Enderecos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Enderecos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Enderecos_bool_exp"] | null},ValueTypes["contatos_Enderecos_aggregate"]],
contatos_Enderecos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Enderecos"]],
contatos_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Logs_bool_exp"] | null},ValueTypes["contatos_Logs"]],
contatos_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Logs_bool_exp"] | null},ValueTypes["contatos_Logs_aggregate"]],
contatos_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Logs"]],
contatos_Telefones?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Telefones_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Telefones_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Telefones_bool_exp"] | null},ValueTypes["contatos_Telefones"]],
contatos_Telefones_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["contatos_Telefones_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["contatos_Telefones_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["contatos_Telefones_bool_exp"] | null},ValueTypes["contatos_Telefones_aggregate"]],
contatos_Telefones_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["contatos_Telefones"]],
estoque_Enderecamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos"]],
estoque_Enderecamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos_aggregate"]],
estoque_Enderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Enderecamentos"]],
estoque_Fabricantes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Fabricantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Fabricantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Fabricantes_bool_exp"] | null},ValueTypes["estoque_Fabricantes"]],
estoque_Fabricantes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Fabricantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Fabricantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Fabricantes_bool_exp"] | null},ValueTypes["estoque_Fabricantes_aggregate"]],
estoque_Fabricantes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Fabricantes"]],
estoque_Familias?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias"]],
estoque_Familias_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias_aggregate"]],
estoque_Familias_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Familias"]],
estoque_Grupos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Grupos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Grupos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Grupos_bool_exp"] | null},ValueTypes["estoque_Grupos"]],
estoque_Grupos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Grupos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Grupos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Grupos_bool_exp"] | null},ValueTypes["estoque_Grupos_aggregate"]],
estoque_Grupos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Grupos"]],
estoque_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
estoque_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Itens"]],
estoque_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Logs_bool_exp"] | null},ValueTypes["estoque_Logs"]],
estoque_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Logs_bool_exp"] | null},ValueTypes["estoque_Logs_aggregate"]],
estoque_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Logs"]],
estoque_Modelos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos"]],
estoque_Modelos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos_aggregate"]],
estoque_Modelos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Modelos"]],
estoque_TiposDeEnderecamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_TiposDeEnderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_TiposDeEnderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null},ValueTypes["estoque_TiposDeEnderecamentos"]],
estoque_TiposDeEnderecamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_TiposDeEnderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_TiposDeEnderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null},ValueTypes["estoque_TiposDeEnderecamentos_aggregate"]],
estoque_TiposDeEnderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_TiposDeEnderecamentos"]],
identidades_Clientes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_bool_exp"] | null},ValueTypes["identidades_Clientes"]],
identidades_Clientes_Documentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos"]],
identidades_Clientes_Documentos_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos_Situacoes"]],
identidades_Clientes_Documentos_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos_Situacoes_aggregate"]],
identidades_Clientes_Documentos_Situacoes_by_pk?: [{	Valor:string},ValueTypes["identidades_Clientes_Documentos_Situacoes"]],
identidades_Clientes_Documentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_Documentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_Documentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_Documentos_bool_exp"] | null},ValueTypes["identidades_Clientes_Documentos_aggregate"]],
identidades_Clientes_Documentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Clientes_Documentos"]],
identidades_Clientes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Clientes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Clientes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Clientes_bool_exp"] | null},ValueTypes["identidades_Clientes_aggregate"]],
identidades_Clientes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Clientes"]],
identidades_Colaboradores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Colaboradores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Colaboradores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Colaboradores_bool_exp"] | null},ValueTypes["identidades_Colaboradores"]],
identidades_Colaboradores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Colaboradores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Colaboradores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Colaboradores_bool_exp"] | null},ValueTypes["identidades_Colaboradores_aggregate"]],
identidades_Colaboradores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Colaboradores"]],
identidades_Fornecedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Fornecedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Fornecedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Fornecedores_bool_exp"] | null},ValueTypes["identidades_Fornecedores"]],
identidades_Fornecedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Fornecedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Fornecedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Fornecedores_bool_exp"] | null},ValueTypes["identidades_Fornecedores_aggregate"]],
identidades_Fornecedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Fornecedores"]],
identidades_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Logs_bool_exp"] | null},ValueTypes["identidades_Logs"]],
identidades_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Logs_bool_exp"] | null},ValueTypes["identidades_Logs_aggregate"]],
identidades_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Logs"]],
identidades_Pessoas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Pessoas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Pessoas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Pessoas_bool_exp"] | null},ValueTypes["identidades_Pessoas"]],
identidades_Pessoas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Pessoas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Pessoas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Pessoas_bool_exp"] | null},ValueTypes["identidades_Pessoas_aggregate"]],
identidades_Pessoas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Pessoas"]],
identidades_Representantes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Representantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Representantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Representantes_bool_exp"] | null},ValueTypes["identidades_Representantes"]],
identidades_Representantes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Representantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Representantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Representantes_bool_exp"] | null},ValueTypes["identidades_Representantes_aggregate"]],
identidades_Representantes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Representantes"]],
identidades_Vendedores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Vendedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Vendedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Vendedores_bool_exp"] | null},ValueTypes["identidades_Vendedores"]],
identidades_Vendedores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["identidades_Vendedores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["identidades_Vendedores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["identidades_Vendedores_bool_exp"] | null},ValueTypes["identidades_Vendedores_aggregate"]],
identidades_Vendedores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["identidades_Vendedores"]],
movimentacoes_Motivos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Motivos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Motivos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null},ValueTypes["movimentacoes_Motivos"]],
movimentacoes_Motivos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Motivos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Motivos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null},ValueTypes["movimentacoes_Motivos_aggregate"]],
movimentacoes_Motivos_by_pk?: [{	Valor:string},ValueTypes["movimentacoes_Motivos"]],
movimentacoes_Movimentacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes"]],
movimentacoes_Movimentacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes_aggregate"]],
movimentacoes_Movimentacoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["movimentacoes_Movimentacoes"]],
operacional_OrdemDeServico?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico"]],
operacional_OrdemDeServico_Atividades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades"]],
operacional_OrdemDeServico_Atividades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades_aggregate"]],
operacional_OrdemDeServico_Atividades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico_Atividades"]],
operacional_OrdemDeServico_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
operacional_OrdemDeServico_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes_aggregate"]],
operacional_OrdemDeServico_Situacoes_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
operacional_OrdemDeServico_Tipo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Tipo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Tipo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Tipo"]],
operacional_OrdemDeServico_Tipo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Tipo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Tipo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Tipo_aggregate"]],
operacional_OrdemDeServico_Tipo_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Tipo"]],
operacional_OrdemDeServico_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_aggregate"]],
operacional_OrdemDeServico_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico"]],
pedidosDeCompra_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null},ValueTypes["pedidosDeCompra_Logs"]],
pedidosDeCompra_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null},ValueTypes["pedidosDeCompra_Logs_aggregate"]],
pedidosDeCompra_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Logs"]],
pedidosDeCompra_Orcamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos"]],
pedidosDeCompra_Orcamentos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
pedidosDeCompra_Orcamentos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"]],
pedidosDeCompra_Orcamentos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
pedidosDeCompra_Orcamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_aggregate"]],
pedidosDeCompra_Orcamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos"]],
pedidosDeCompra_Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos"]],
pedidosDeCompra_Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos_aggregate"]],
pedidosDeCompra_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Pedidos"]],
pedidosDeCompra_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos"]],
pedidosDeCompra_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos_aggregate"]],
pedidosDeCompra_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Produtos"]],
pedidosDeCompra_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeCompra_Situacoes"]],
pedidosDeCompra_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeCompra_Situacoes_aggregate"]],
pedidosDeCompra_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeCompra_Situacoes"]],
pedidosDeSaida_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null},ValueTypes["pedidosDeSaida_Logs"]],
pedidosDeSaida_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null},ValueTypes["pedidosDeSaida_Logs_aggregate"]],
pedidosDeSaida_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Logs"]],
pedidosDeSaida_Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos"]],
pedidosDeSaida_Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos_aggregate"]],
pedidosDeSaida_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Pedidos"]],
pedidosDeSaida_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos"]],
pedidosDeSaida_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos_aggregate"]],
pedidosDeSaida_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Produtos"]],
pedidosDeSaida_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeSaida_Situacoes"]],
pedidosDeSaida_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeSaida_Situacoes_aggregate"]],
pedidosDeSaida_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeSaida_Situacoes"]],
producao_Chips?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips"]],
producao_ChipsSituacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_ChipsSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_ChipsSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null},ValueTypes["producao_ChipsSituacoes"]],
producao_ChipsSituacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_ChipsSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_ChipsSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null},ValueTypes["producao_ChipsSituacoes_aggregate"]],
producao_ChipsSituacoes_by_pk?: [{	Valor:string},ValueTypes["producao_ChipsSituacoes"]],
producao_Chips_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips_aggregate"]],
producao_Chips_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Chips"]],
producao_Equipamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Equipamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Equipamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Equipamentos_bool_exp"] | null},ValueTypes["producao_Equipamentos"]],
producao_Equipamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Equipamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Equipamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Equipamentos_bool_exp"] | null},ValueTypes["producao_Equipamentos_aggregate"]],
producao_Equipamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Equipamentos"]],
producao_Identificadores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Identificadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Identificadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Identificadores_bool_exp"] | null},ValueTypes["producao_Identificadores"]],
producao_Identificadores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Identificadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Identificadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Identificadores_bool_exp"] | null},ValueTypes["producao_Identificadores_aggregate"]],
producao_Identificadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Identificadores"]],
producao_KitDeInsumo_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens"]],
producao_KitDeInsumo_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens_aggregate"]],
producao_KitDeInsumo_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitDeInsumo_Itens"]],
producao_KitsDeInstalacao?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao"]],
producao_KitsDeInstalacao_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao_aggregate"]],
producao_KitsDeInstalacao_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInstalacao"]],
producao_KitsDeInsumo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo"]],
producao_KitsDeInsumo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo_aggregate"]],
producao_KitsDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInsumo"]],
producao_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Logs_bool_exp"] | null},ValueTypes["producao_Logs"]],
producao_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Logs_bool_exp"] | null},ValueTypes["producao_Logs_aggregate"]],
producao_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Logs"]],
producao_Rastreadores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores"]],
producao_Rastreadores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores_aggregate"]],
producao_Rastreadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Rastreadores"]],
producao_TiposDeKitDeInsumo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo"]],
producao_TiposDeKitDeInsumo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_aggregate"]],
producao_TiposDeKitDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo"]],
producao_TiposDeKitDeInsumo_estoque_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
producao_TiposDeKitDeInsumo_estoque_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]],
producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
vendas_GruposDePerguntas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas"]],
vendas_GruposDePerguntas_Perguntas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
vendas_GruposDePerguntas_Perguntas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate"]],
vendas_GruposDePerguntas_Perguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
vendas_GruposDePerguntas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_aggregate"]],
vendas_GruposDePerguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_GruposDePerguntas"]],
vendas_Perguntas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_Perguntas_bool_exp"] | null},ValueTypes["vendas_Perguntas"]],
vendas_Perguntas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_Perguntas_bool_exp"] | null},ValueTypes["vendas_Perguntas_aggregate"]],
vendas_Perguntas_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["vendas_Perguntas"]],
vendas_TiposDePagamento?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_TiposDePagamento_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_TiposDePagamento_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_TiposDePagamento_bool_exp"] | null},ValueTypes["vendas_TiposDePagamento"]],
vendas_TiposDePagamento_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_TiposDePagamento_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_TiposDePagamento_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_TiposDePagamento_bool_exp"] | null},ValueTypes["vendas_TiposDePagamento_aggregate"]],
vendas_TiposDePagamento_by_pk?: [{	Valor:string},ValueTypes["vendas_TiposDePagamento"]],
vendas_TiposDeRecorrencia?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_TiposDeRecorrencia_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_TiposDeRecorrencia_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null},ValueTypes["vendas_TiposDeRecorrencia"]],
vendas_TiposDeRecorrencia_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_TiposDeRecorrencia_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_TiposDeRecorrencia_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null},ValueTypes["vendas_TiposDeRecorrencia_aggregate"]],
vendas_TiposDeRecorrencia_by_pk?: [{	Valor:string},ValueTypes["vendas_TiposDeRecorrencia"]],
		__typename?: true
}>;
	["subscription_root"]: AliasType<{
Configuracoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Configuracoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Configuracoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Configuracoes_bool_exp"] | null},ValueTypes["Configuracoes"]],
Configuracoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Configuracoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Configuracoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Configuracoes_bool_exp"] | null},ValueTypes["Configuracoes_aggregate"]],
Configuracoes_by_pk?: [{	Slug:string},ValueTypes["Configuracoes"]],
Operadoras?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Operadoras_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Operadoras_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Operadoras_bool_exp"] | null},ValueTypes["Operadoras"]],
Operadoras_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Operadoras_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Operadoras_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Operadoras_bool_exp"] | null},ValueTypes["Operadoras_aggregate"]],
Operadoras_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Operadoras"]],
Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Produtos_bool_exp"] | null},ValueTypes["Produtos"]],
Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["Produtos_bool_exp"] | null},ValueTypes["Produtos_aggregate"]],
Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["Produtos"]],
UnidadesDeMedidas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["UnidadesDeMedidas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["UnidadesDeMedidas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null},ValueTypes["UnidadesDeMedidas"]],
UnidadesDeMedidas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["UnidadesDeMedidas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["UnidadesDeMedidas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["UnidadesDeMedidas_bool_exp"] | null},ValueTypes["UnidadesDeMedidas_aggregate"]],
UnidadesDeMedidas_by_pk?: [{	Valor:string},ValueTypes["UnidadesDeMedidas"]],
estoque_Enderecamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos"]],
estoque_Enderecamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Enderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Enderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Enderecamentos_bool_exp"] | null},ValueTypes["estoque_Enderecamentos_aggregate"]],
estoque_Enderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Enderecamentos"]],
estoque_Fabricantes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Fabricantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Fabricantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Fabricantes_bool_exp"] | null},ValueTypes["estoque_Fabricantes"]],
estoque_Fabricantes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Fabricantes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Fabricantes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Fabricantes_bool_exp"] | null},ValueTypes["estoque_Fabricantes_aggregate"]],
estoque_Fabricantes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Fabricantes"]],
estoque_Familias?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias"]],
estoque_Familias_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Familias_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Familias_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Familias_bool_exp"] | null},ValueTypes["estoque_Familias_aggregate"]],
estoque_Familias_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Familias"]],
estoque_Grupos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Grupos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Grupos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Grupos_bool_exp"] | null},ValueTypes["estoque_Grupos"]],
estoque_Grupos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Grupos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Grupos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Grupos_bool_exp"] | null},ValueTypes["estoque_Grupos_aggregate"]],
estoque_Grupos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Grupos"]],
estoque_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens"]],
estoque_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Itens_bool_exp"] | null},ValueTypes["estoque_Itens_aggregate"]],
estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Itens"]],
estoque_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Logs_bool_exp"] | null},ValueTypes["estoque_Logs"]],
estoque_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Logs_bool_exp"] | null},ValueTypes["estoque_Logs_aggregate"]],
estoque_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Logs"]],
estoque_Modelos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos"]],
estoque_Modelos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_Modelos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_Modelos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_Modelos_bool_exp"] | null},ValueTypes["estoque_Modelos_aggregate"]],
estoque_Modelos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_Modelos"]],
estoque_TiposDeEnderecamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_TiposDeEnderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_TiposDeEnderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null},ValueTypes["estoque_TiposDeEnderecamentos"]],
estoque_TiposDeEnderecamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["estoque_TiposDeEnderecamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["estoque_TiposDeEnderecamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["estoque_TiposDeEnderecamentos_bool_exp"] | null},ValueTypes["estoque_TiposDeEnderecamentos_aggregate"]],
estoque_TiposDeEnderecamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["estoque_TiposDeEnderecamentos"]],
movimentacoes_Motivos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Motivos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Motivos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null},ValueTypes["movimentacoes_Motivos"]],
movimentacoes_Motivos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Motivos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Motivos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Motivos_bool_exp"] | null},ValueTypes["movimentacoes_Motivos_aggregate"]],
movimentacoes_Motivos_by_pk?: [{	Valor:string},ValueTypes["movimentacoes_Motivos"]],
movimentacoes_Movimentacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes"]],
movimentacoes_Movimentacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["movimentacoes_Movimentacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["movimentacoes_Movimentacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["movimentacoes_Movimentacoes_bool_exp"] | null},ValueTypes["movimentacoes_Movimentacoes_aggregate"]],
movimentacoes_Movimentacoes_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["movimentacoes_Movimentacoes"]],
operacional_OrdemDeServico?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico"]],
operacional_OrdemDeServico_Atividades?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades"]],
operacional_OrdemDeServico_Atividades_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Atividades_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Atividades_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Atividades_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Atividades_aggregate"]],
operacional_OrdemDeServico_Atividades_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico_Atividades"]],
operacional_OrdemDeServico_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
operacional_OrdemDeServico_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Situacoes_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Situacoes_aggregate"]],
operacional_OrdemDeServico_Situacoes_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Situacoes"]],
operacional_OrdemDeServico_Tipo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Tipo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Tipo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Tipo"]],
operacional_OrdemDeServico_Tipo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_Tipo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_Tipo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_Tipo_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_Tipo_aggregate"]],
operacional_OrdemDeServico_Tipo_by_pk?: [{	Valor:string},ValueTypes["operacional_OrdemDeServico_Tipo"]],
operacional_OrdemDeServico_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["operacional_OrdemDeServico_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["operacional_OrdemDeServico_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["operacional_OrdemDeServico_bool_exp"] | null},ValueTypes["operacional_OrdemDeServico_aggregate"]],
operacional_OrdemDeServico_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["operacional_OrdemDeServico"]],
pedidosDeCompra_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null},ValueTypes["pedidosDeCompra_Logs"]],
pedidosDeCompra_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Logs_bool_exp"] | null},ValueTypes["pedidosDeCompra_Logs_aggregate"]],
pedidosDeCompra_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Logs"]],
pedidosDeCompra_Orcamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos"]],
pedidosDeCompra_Orcamentos_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
pedidosDeCompra_Orcamentos_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"]],
pedidosDeCompra_Orcamentos_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos_Produtos"]],
pedidosDeCompra_Orcamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Orcamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Orcamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Orcamentos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Orcamentos_aggregate"]],
pedidosDeCompra_Orcamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Orcamentos"]],
pedidosDeCompra_Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos"]],
pedidosDeCompra_Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Pedidos_aggregate"]],
pedidosDeCompra_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Pedidos"]],
pedidosDeCompra_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos"]],
pedidosDeCompra_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Produtos_bool_exp"] | null},ValueTypes["pedidosDeCompra_Produtos_aggregate"]],
pedidosDeCompra_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeCompra_Produtos"]],
pedidosDeCompra_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeCompra_Situacoes"]],
pedidosDeCompra_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeCompra_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeCompra_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeCompra_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeCompra_Situacoes_aggregate"]],
pedidosDeCompra_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeCompra_Situacoes"]],
pedidosDeSaida_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null},ValueTypes["pedidosDeSaida_Logs"]],
pedidosDeSaida_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Logs_bool_exp"] | null},ValueTypes["pedidosDeSaida_Logs_aggregate"]],
pedidosDeSaida_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Logs"]],
pedidosDeSaida_Pedidos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos"]],
pedidosDeSaida_Pedidos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Pedidos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Pedidos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Pedidos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Pedidos_aggregate"]],
pedidosDeSaida_Pedidos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Pedidos"]],
pedidosDeSaida_Produtos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos"]],
pedidosDeSaida_Produtos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Produtos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Produtos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Produtos_bool_exp"] | null},ValueTypes["pedidosDeSaida_Produtos_aggregate"]],
pedidosDeSaida_Produtos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["pedidosDeSaida_Produtos"]],
pedidosDeSaida_Situacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeSaida_Situacoes"]],
pedidosDeSaida_Situacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["pedidosDeSaida_Situacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["pedidosDeSaida_Situacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["pedidosDeSaida_Situacoes_bool_exp"] | null},ValueTypes["pedidosDeSaida_Situacoes_aggregate"]],
pedidosDeSaida_Situacoes_by_pk?: [{	Valor:string},ValueTypes["pedidosDeSaida_Situacoes"]],
producao_Chips?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips"]],
producao_ChipsSituacoes?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_ChipsSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_ChipsSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null},ValueTypes["producao_ChipsSituacoes"]],
producao_ChipsSituacoes_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_ChipsSituacoes_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_ChipsSituacoes_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_ChipsSituacoes_bool_exp"] | null},ValueTypes["producao_ChipsSituacoes_aggregate"]],
producao_ChipsSituacoes_by_pk?: [{	Valor:string},ValueTypes["producao_ChipsSituacoes"]],
producao_Chips_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Chips_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Chips_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Chips_bool_exp"] | null},ValueTypes["producao_Chips_aggregate"]],
producao_Chips_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Chips"]],
producao_Equipamentos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Equipamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Equipamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Equipamentos_bool_exp"] | null},ValueTypes["producao_Equipamentos"]],
producao_Equipamentos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Equipamentos_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Equipamentos_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Equipamentos_bool_exp"] | null},ValueTypes["producao_Equipamentos_aggregate"]],
producao_Equipamentos_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Equipamentos"]],
producao_Identificadores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Identificadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Identificadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Identificadores_bool_exp"] | null},ValueTypes["producao_Identificadores"]],
producao_Identificadores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Identificadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Identificadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Identificadores_bool_exp"] | null},ValueTypes["producao_Identificadores_aggregate"]],
producao_Identificadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Identificadores"]],
producao_KitDeInsumo_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens"]],
producao_KitDeInsumo_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitDeInsumo_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitDeInsumo_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitDeInsumo_Itens_bool_exp"] | null},ValueTypes["producao_KitDeInsumo_Itens_aggregate"]],
producao_KitDeInsumo_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitDeInsumo_Itens"]],
producao_KitsDeInstalacao?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao"]],
producao_KitsDeInstalacao_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInstalacao_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInstalacao_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInstalacao_bool_exp"] | null},ValueTypes["producao_KitsDeInstalacao_aggregate"]],
producao_KitsDeInstalacao_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInstalacao"]],
producao_KitsDeInsumo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo"]],
producao_KitsDeInsumo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_KitsDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_KitsDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_KitsDeInsumo_bool_exp"] | null},ValueTypes["producao_KitsDeInsumo_aggregate"]],
producao_KitsDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_KitsDeInsumo"]],
producao_Logs?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Logs_bool_exp"] | null},ValueTypes["producao_Logs"]],
producao_Logs_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Logs_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Logs_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Logs_bool_exp"] | null},ValueTypes["producao_Logs_aggregate"]],
producao_Logs_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Logs"]],
producao_Rastreadores?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores"]],
producao_Rastreadores_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_Rastreadores_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_Rastreadores_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_Rastreadores_bool_exp"] | null},ValueTypes["producao_Rastreadores_aggregate"]],
producao_Rastreadores_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_Rastreadores"]],
producao_TiposDeKitDeInsumo?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo"]],
producao_TiposDeKitDeInsumo_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_aggregate"]],
producao_TiposDeKitDeInsumo_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo"]],
producao_TiposDeKitDeInsumo_estoque_Itens?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
producao_TiposDeKitDeInsumo_estoque_Itens_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"] | null},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]],
producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: [{	Id:ValueTypes["uuid"]},ValueTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]],
		__typename?: true
}>;
	["timestamptz"]:unknown;
	/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
["timestamptz_comparison_exp"]: {
	_eq?:ValueTypes["timestamptz"] | null,
	_gt?:ValueTypes["timestamptz"] | null,
	_gte?:ValueTypes["timestamptz"] | null,
	_in?:ValueTypes["timestamptz"][],
	_is_null?:boolean | null,
	_lt?:ValueTypes["timestamptz"] | null,
	_lte?:ValueTypes["timestamptz"] | null,
	_neq?:ValueTypes["timestamptz"] | null,
	_nin?:ValueTypes["timestamptz"][]
};
	["uuid"]:unknown;
	/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
["uuid_comparison_exp"]: {
	_eq?:ValueTypes["uuid"] | null,
	_gt?:ValueTypes["uuid"] | null,
	_gte?:ValueTypes["uuid"] | null,
	_in?:ValueTypes["uuid"][],
	_is_null?:boolean | null,
	_lt?:ValueTypes["uuid"] | null,
	_lte?:ValueTypes["uuid"] | null,
	_neq?:ValueTypes["uuid"] | null,
	_nin?:ValueTypes["uuid"][]
};
	/** columns and relationships of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas"]: AliasType<{
	Id?:true,
	Nome?:true,
Perguntas?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
Perguntas_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate"]],
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** columns and relationships of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas"]: AliasType<{
	/** An object relationship */
	Grupo?:ValueTypes["vendas_GruposDePerguntas"],
	Grupo_Id?:true,
	Id?:true,
	/** An object relationship */
	Pergunta?:ValueTypes["vendas_Perguntas"],
	Pergunta_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate_fields"],
	nodes?:ValueTypes["vendas_GruposDePerguntas_Perguntas"],
		__typename?: true
}>;
	/** aggregate fields of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["vendas_GruposDePerguntas_Perguntas_max_fields"],
	min?:ValueTypes["vendas_GruposDePerguntas_Perguntas_min_fields"],
		__typename?: true
}>;
	/** order by aggregate values of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"]: {
	count?:ValueTypes["order_by"] | null,
	max?:ValueTypes["vendas_GruposDePerguntas_Perguntas_max_order_by"] | null,
	min?:ValueTypes["vendas_GruposDePerguntas_Perguntas_min_order_by"] | null
};
	/** input type for inserting array relation for remote table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"]: {
	data:ValueTypes["vendas_GruposDePerguntas_Perguntas_insert_input"][],
	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_Perguntas_on_conflict"] | null
};
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas_Perguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_Perguntas_bool_exp"]: {
	Grupo?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null,
	Grupo_Id?:ValueTypes["uuid_comparison_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_bool_exp"] | null,
	Pergunta_Id?:ValueTypes["uuid_comparison_exp"] | null,
	_and?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"][],
	_not?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null,
	_or?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_constraint"]:vendas_GruposDePerguntas_Perguntas_constraint;
	/** input type for inserting data into table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_insert_input"]: {
	Grupo?:ValueTypes["vendas_GruposDePerguntas_obj_rel_insert_input"] | null,
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_obj_rel_insert_input"] | null,
	Pergunta_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["vendas_GruposDePerguntas_Perguntas_max_fields"]: AliasType<{
	Grupo_Id?:true,
	Id?:true,
	Pergunta_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by max() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_max_order_by"]: {
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** aggregate min on columns */
["vendas_GruposDePerguntas_Perguntas_min_fields"]: AliasType<{
	Grupo_Id?:true,
	Id?:true,
	Pergunta_Id?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** order by min() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_min_order_by"]: {
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** response of any mutation on the table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["vendas_GruposDePerguntas_Perguntas"],
		__typename?: true
}>;
	/** on conflict condition type for table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_on_conflict"]: {
	constraint:ValueTypes["vendas_GruposDePerguntas_Perguntas_constraint"],
	update_columns:ValueTypes["vendas_GruposDePerguntas_Perguntas_update_column"][],
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null
};
	/** Ordering options when selecting data from "vendas.GruposDePerguntas_Perguntas". */
["vendas_GruposDePerguntas_Perguntas_order_by"]: {
	Grupo?:ValueTypes["vendas_GruposDePerguntas_order_by"] | null,
	Grupo_Id?:ValueTypes["order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Pergunta?:ValueTypes["vendas_Perguntas_order_by"] | null,
	Pergunta_Id?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: vendas_GruposDePerguntas_Perguntas */
["vendas_GruposDePerguntas_Perguntas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_select_column"]:vendas_GruposDePerguntas_Perguntas_select_column;
	/** input type for updating data in table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_set_input"]: {
	Grupo_Id?:ValueTypes["uuid"] | null,
	Id?:ValueTypes["uuid"] | null,
	Pergunta_Id?:ValueTypes["uuid"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_update_column"]:vendas_GruposDePerguntas_Perguntas_update_column;
	/** aggregated selection of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["vendas_GruposDePerguntas_aggregate_fields"],
	nodes?:ValueTypes["vendas_GruposDePerguntas"],
		__typename?: true
}>;
	/** aggregate fields of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["vendas_GruposDePerguntas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["vendas_GruposDePerguntas_max_fields"],
	min?:ValueTypes["vendas_GruposDePerguntas_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_bool_exp"]: {
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Nome?:ValueTypes["String_comparison_exp"] | null,
	Perguntas?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null,
	_and?:ValueTypes["vendas_GruposDePerguntas_bool_exp"][],
	_not?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null,
	_or?:ValueTypes["vendas_GruposDePerguntas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_constraint"]:vendas_GruposDePerguntas_constraint;
	/** input type for inserting data into table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_insert_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	Perguntas?:ValueTypes["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"] | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["vendas_GruposDePerguntas_max_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["vendas_GruposDePerguntas_min_fields"]: AliasType<{
	Id?:true,
	Nome?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["vendas_GruposDePerguntas"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_obj_rel_insert_input"]: {
	data:ValueTypes["vendas_GruposDePerguntas_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_GruposDePerguntas_on_conflict"] | null
};
	/** on conflict condition type for table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_on_conflict"]: {
	constraint:ValueTypes["vendas_GruposDePerguntas_constraint"],
	update_columns:ValueTypes["vendas_GruposDePerguntas_update_column"][],
	where?:ValueTypes["vendas_GruposDePerguntas_bool_exp"] | null
};
	/** Ordering options when selecting data from "vendas.GruposDePerguntas". */
["vendas_GruposDePerguntas_order_by"]: {
	Id?:ValueTypes["order_by"] | null,
	Nome?:ValueTypes["order_by"] | null,
	Perguntas_aggregate?:ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: vendas_GruposDePerguntas */
["vendas_GruposDePerguntas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_select_column"]:vendas_GruposDePerguntas_select_column;
	/** input type for updating data in table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_set_input"]: {
	Id?:ValueTypes["uuid"] | null,
	Nome?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_update_column"]:vendas_GruposDePerguntas_update_column;
	/** columns and relationships of "vendas.Perguntas" */
["vendas_Perguntas"]: AliasType<{
	Descricao?:true,
Grupos?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas"]],
Grupos_aggregate?: [{	/** distinct select on columns */
	distinct_on?:ValueTypes["vendas_GruposDePerguntas_Perguntas_select_column"][],	/** limit the number of rows returned */
	limit?:number | null,	/** skip the first n rows. Use only with order_by */
	offset?:number | null,	/** sort the rows by one or more columns */
	order_by?:ValueTypes["vendas_GruposDePerguntas_Perguntas_order_by"][],	/** filter the rows returned */
	where?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null},ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate"]],
	Id?:true,
	Titulo?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregated selection of "vendas.Perguntas" */
["vendas_Perguntas_aggregate"]: AliasType<{
	aggregate?:ValueTypes["vendas_Perguntas_aggregate_fields"],
	nodes?:ValueTypes["vendas_Perguntas"],
		__typename?: true
}>;
	/** aggregate fields of "vendas.Perguntas" */
["vendas_Perguntas_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["vendas_Perguntas_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["vendas_Perguntas_max_fields"],
	min?:ValueTypes["vendas_Perguntas_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "vendas.Perguntas". All fields are combined with a logical 'AND'. */
["vendas_Perguntas_bool_exp"]: {
	Descricao?:ValueTypes["String_comparison_exp"] | null,
	Grupos?:ValueTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"] | null,
	Id?:ValueTypes["uuid_comparison_exp"] | null,
	Titulo?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["vendas_Perguntas_bool_exp"][],
	_not?:ValueTypes["vendas_Perguntas_bool_exp"] | null,
	_or?:ValueTypes["vendas_Perguntas_bool_exp"][],
	created_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	deleted_at?:ValueTypes["timestamptz_comparison_exp"] | null,
	updated_at?:ValueTypes["timestamptz_comparison_exp"] | null
};
	/** unique or primary key constraints on table "vendas.Perguntas" */
["vendas_Perguntas_constraint"]:vendas_Perguntas_constraint;
	/** input type for inserting data into table "vendas.Perguntas" */
["vendas_Perguntas_insert_input"]: {
	Descricao?:string | null,
	Grupos?:ValueTypes["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"] | null,
	Id?:ValueTypes["uuid"] | null,
	Titulo?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** aggregate max on columns */
["vendas_Perguntas_max_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Titulo?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["vendas_Perguntas_min_fields"]: AliasType<{
	Descricao?:true,
	Id?:true,
	Titulo?:true,
	created_at?:true,
	deleted_at?:true,
	updated_at?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "vendas.Perguntas" */
["vendas_Perguntas_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["vendas_Perguntas"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "vendas.Perguntas" */
["vendas_Perguntas_obj_rel_insert_input"]: {
	data:ValueTypes["vendas_Perguntas_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_Perguntas_on_conflict"] | null
};
	/** on conflict condition type for table "vendas.Perguntas" */
["vendas_Perguntas_on_conflict"]: {
	constraint:ValueTypes["vendas_Perguntas_constraint"],
	update_columns:ValueTypes["vendas_Perguntas_update_column"][],
	where?:ValueTypes["vendas_Perguntas_bool_exp"] | null
};
	/** Ordering options when selecting data from "vendas.Perguntas". */
["vendas_Perguntas_order_by"]: {
	Descricao?:ValueTypes["order_by"] | null,
	Grupos_aggregate?:ValueTypes["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"] | null,
	Id?:ValueTypes["order_by"] | null,
	Titulo?:ValueTypes["order_by"] | null,
	created_at?:ValueTypes["order_by"] | null,
	deleted_at?:ValueTypes["order_by"] | null,
	updated_at?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: vendas_Perguntas */
["vendas_Perguntas_pk_columns_input"]: {
	Id:ValueTypes["uuid"]
};
	/** select columns of table "vendas.Perguntas" */
["vendas_Perguntas_select_column"]:vendas_Perguntas_select_column;
	/** input type for updating data in table "vendas.Perguntas" */
["vendas_Perguntas_set_input"]: {
	Descricao?:string | null,
	Id?:ValueTypes["uuid"] | null,
	Titulo?:string | null,
	created_at?:ValueTypes["timestamptz"] | null,
	deleted_at?:ValueTypes["timestamptz"] | null,
	updated_at?:ValueTypes["timestamptz"] | null
};
	/** update columns of table "vendas.Perguntas" */
["vendas_Perguntas_update_column"]:vendas_Perguntas_update_column;
	/** columns and relationships of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate"]: AliasType<{
	aggregate?:ValueTypes["vendas_TiposDePagamento_aggregate_fields"],
	nodes?:ValueTypes["vendas_TiposDePagamento"],
		__typename?: true
}>;
	/** aggregate fields of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["vendas_TiposDePagamento_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["vendas_TiposDePagamento_max_fields"],
	min?:ValueTypes["vendas_TiposDePagamento_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "vendas.TiposDePagamento". All fields are combined with a logical 'AND'. */
["vendas_TiposDePagamento_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["vendas_TiposDePagamento_bool_exp"][],
	_not?:ValueTypes["vendas_TiposDePagamento_bool_exp"] | null,
	_or?:ValueTypes["vendas_TiposDePagamento_bool_exp"][]
};
	/** unique or primary key constraints on table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_constraint"]:vendas_TiposDePagamento_constraint;
	["vendas_TiposDePagamento_enum"]:vendas_TiposDePagamento_enum;
	/** Boolean expression to compare columns of type "vendas_TiposDePagamento_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDePagamento_enum_comparison_exp"]: {
	_eq?:ValueTypes["vendas_TiposDePagamento_enum"] | null,
	_in?:ValueTypes["vendas_TiposDePagamento_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["vendas_TiposDePagamento_enum"] | null,
	_nin?:ValueTypes["vendas_TiposDePagamento_enum"][]
};
	/** input type for inserting data into table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_insert_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["vendas_TiposDePagamento_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["vendas_TiposDePagamento_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["vendas_TiposDePagamento"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_obj_rel_insert_input"]: {
	data:ValueTypes["vendas_TiposDePagamento_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDePagamento_on_conflict"] | null
};
	/** on conflict condition type for table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_on_conflict"]: {
	constraint:ValueTypes["vendas_TiposDePagamento_constraint"],
	update_columns:ValueTypes["vendas_TiposDePagamento_update_column"][],
	where?:ValueTypes["vendas_TiposDePagamento_bool_exp"] | null
};
	/** Ordering options when selecting data from "vendas.TiposDePagamento". */
["vendas_TiposDePagamento_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: vendas_TiposDePagamento */
["vendas_TiposDePagamento_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_select_column"]:vendas_TiposDePagamento_select_column;
	/** input type for updating data in table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_update_column"]:vendas_TiposDePagamento_update_column;
	/** columns and relationships of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregated selection of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate"]: AliasType<{
	aggregate?:ValueTypes["vendas_TiposDeRecorrencia_aggregate_fields"],
	nodes?:ValueTypes["vendas_TiposDeRecorrencia"],
		__typename?: true
}>;
	/** aggregate fields of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate_fields"]: AliasType<{
count?: [{	columns?:ValueTypes["vendas_TiposDeRecorrencia_select_column"][],	distinct?:boolean | null},true],
	max?:ValueTypes["vendas_TiposDeRecorrencia_max_fields"],
	min?:ValueTypes["vendas_TiposDeRecorrencia_min_fields"],
		__typename?: true
}>;
	/** Boolean expression to filter rows from the table "vendas.TiposDeRecorrencia". All fields are combined with a logical 'AND'. */
["vendas_TiposDeRecorrencia_bool_exp"]: {
	Comentario?:ValueTypes["String_comparison_exp"] | null,
	Valor?:ValueTypes["String_comparison_exp"] | null,
	_and?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"][],
	_not?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null,
	_or?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"][]
};
	/** unique or primary key constraints on table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_constraint"]:vendas_TiposDeRecorrencia_constraint;
	["vendas_TiposDeRecorrencia_enum"]:vendas_TiposDeRecorrencia_enum;
	/** Boolean expression to compare columns of type "vendas_TiposDeRecorrencia_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDeRecorrencia_enum_comparison_exp"]: {
	_eq?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	_in?:ValueTypes["vendas_TiposDeRecorrencia_enum"][],
	_is_null?:boolean | null,
	_neq?:ValueTypes["vendas_TiposDeRecorrencia_enum"] | null,
	_nin?:ValueTypes["vendas_TiposDeRecorrencia_enum"][]
};
	/** input type for inserting data into table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_insert_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** aggregate max on columns */
["vendas_TiposDeRecorrencia_max_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** aggregate min on columns */
["vendas_TiposDeRecorrencia_min_fields"]: AliasType<{
	Comentario?:true,
	Valor?:true,
		__typename?: true
}>;
	/** response of any mutation on the table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_mutation_response"]: AliasType<{
	/** number of rows affected by the mutation */
	affected_rows?:true,
	/** data from the rows affected by the mutation */
	returning?:ValueTypes["vendas_TiposDeRecorrencia"],
		__typename?: true
}>;
	/** input type for inserting object relation for remote table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_obj_rel_insert_input"]: {
	data:ValueTypes["vendas_TiposDeRecorrencia_insert_input"],
	/** on conflict condition */
	on_conflict?:ValueTypes["vendas_TiposDeRecorrencia_on_conflict"] | null
};
	/** on conflict condition type for table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_on_conflict"]: {
	constraint:ValueTypes["vendas_TiposDeRecorrencia_constraint"],
	update_columns:ValueTypes["vendas_TiposDeRecorrencia_update_column"][],
	where?:ValueTypes["vendas_TiposDeRecorrencia_bool_exp"] | null
};
	/** Ordering options when selecting data from "vendas.TiposDeRecorrencia". */
["vendas_TiposDeRecorrencia_order_by"]: {
	Comentario?:ValueTypes["order_by"] | null,
	Valor?:ValueTypes["order_by"] | null
};
	/** primary key columns input for table: vendas_TiposDeRecorrencia */
["vendas_TiposDeRecorrencia_pk_columns_input"]: {
	Valor:string
};
	/** select columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_select_column"]:vendas_TiposDeRecorrencia_select_column;
	/** input type for updating data in table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_set_input"]: {
	Comentario?:string | null,
	Valor?:string | null
};
	/** update columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_update_column"]:vendas_TiposDeRecorrencia_update_column
  }

export type ModelTypes = {
    /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
["Boolean_comparison_exp"]: GraphQLTypes["Boolean_comparison_exp"];
	["CadastrarClienteOutput"]: {
		Id:ModelTypes["uuid"]
};
	["CadastrarColaboradorOutput"]: {
		Id:ModelTypes["uuid"]
};
	["CadastrarFornecedorOutput"]: {
		Id:ModelTypes["uuid"]
};
	["CadastrarRepresentanteOutput"]: {
		Id:ModelTypes["uuid"]
};
	/** columns and relationships of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos"]: {
		Id:ModelTypes["uuid"],
	Nome:string
};
	/** aggregated selection of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate"]: {
		aggregate?:ModelTypes["CategoriasDeVeiculos_aggregate_fields"],
	nodes:ModelTypes["CategoriasDeVeiculos"][]
};
	/** aggregate fields of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["CategoriasDeVeiculos_max_fields"],
	min?:ModelTypes["CategoriasDeVeiculos_min_fields"]
};
	/** Boolean expression to filter rows from the table "CategoriasDeVeiculos". All fields are combined with a logical 'AND'. */
["CategoriasDeVeiculos_bool_exp"]: GraphQLTypes["CategoriasDeVeiculos_bool_exp"];
	/** unique or primary key constraints on table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_constraint"]: GraphQLTypes["CategoriasDeVeiculos_constraint"];
	/** input type for inserting data into table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_insert_input"]: GraphQLTypes["CategoriasDeVeiculos_insert_input"];
	/** aggregate max on columns */
["CategoriasDeVeiculos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string
};
	/** aggregate min on columns */
["CategoriasDeVeiculos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string
};
	/** response of any mutation on the table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["CategoriasDeVeiculos"][]
};
	/** input type for inserting object relation for remote table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_obj_rel_insert_input"]: GraphQLTypes["CategoriasDeVeiculos_obj_rel_insert_input"];
	/** on conflict condition type for table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_on_conflict"]: GraphQLTypes["CategoriasDeVeiculos_on_conflict"];
	/** Ordering options when selecting data from "CategoriasDeVeiculos". */
["CategoriasDeVeiculos_order_by"]: GraphQLTypes["CategoriasDeVeiculos_order_by"];
	/** primary key columns input for table: CategoriasDeVeiculos */
["CategoriasDeVeiculos_pk_columns_input"]: GraphQLTypes["CategoriasDeVeiculos_pk_columns_input"];
	/** select columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_select_column"]: GraphQLTypes["CategoriasDeVeiculos_select_column"];
	/** input type for updating data in table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_set_input"]: GraphQLTypes["CategoriasDeVeiculos_set_input"];
	/** update columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_update_column"]: GraphQLTypes["CategoriasDeVeiculos_update_column"];
	/** columns and relationships of "Configuracoes" */
["Configuracoes"]: {
		Id:ModelTypes["uuid"],
	Nome:string,
	Slug:string,
	Valor:ModelTypes["jsonb"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "Configuracoes" */
["Configuracoes_aggregate"]: {
		aggregate?:ModelTypes["Configuracoes_aggregate_fields"],
	nodes:ModelTypes["Configuracoes"][]
};
	/** aggregate fields of "Configuracoes" */
["Configuracoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["Configuracoes_max_fields"],
	min?:ModelTypes["Configuracoes_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_append_input"]: GraphQLTypes["Configuracoes_append_input"];
	/** Boolean expression to filter rows from the table "Configuracoes". All fields are combined with a logical 'AND'. */
["Configuracoes_bool_exp"]: GraphQLTypes["Configuracoes_bool_exp"];
	/** unique or primary key constraints on table "Configuracoes" */
["Configuracoes_constraint"]: GraphQLTypes["Configuracoes_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["Configuracoes_delete_at_path_input"]: GraphQLTypes["Configuracoes_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["Configuracoes_delete_elem_input"]: GraphQLTypes["Configuracoes_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["Configuracoes_delete_key_input"]: GraphQLTypes["Configuracoes_delete_key_input"];
	/** input type for inserting data into table "Configuracoes" */
["Configuracoes_insert_input"]: GraphQLTypes["Configuracoes_insert_input"];
	/** aggregate max on columns */
["Configuracoes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	Slug?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["Configuracoes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	Slug?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "Configuracoes" */
["Configuracoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["Configuracoes"][]
};
	/** on conflict condition type for table "Configuracoes" */
["Configuracoes_on_conflict"]: GraphQLTypes["Configuracoes_on_conflict"];
	/** Ordering options when selecting data from "Configuracoes". */
["Configuracoes_order_by"]: GraphQLTypes["Configuracoes_order_by"];
	/** primary key columns input for table: Configuracoes */
["Configuracoes_pk_columns_input"]: GraphQLTypes["Configuracoes_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_prepend_input"]: GraphQLTypes["Configuracoes_prepend_input"];
	/** select columns of table "Configuracoes" */
["Configuracoes_select_column"]: GraphQLTypes["Configuracoes_select_column"];
	/** input type for updating data in table "Configuracoes" */
["Configuracoes_set_input"]: GraphQLTypes["Configuracoes_set_input"];
	/** update columns of table "Configuracoes" */
["Configuracoes_update_column"]: GraphQLTypes["Configuracoes_update_column"];
	/** columns and relationships of "EstadosEMunicipios" */
["EstadosEMunicipios"]: {
		/** An array relationship */
	Cidades:ModelTypes["EstadosEMunicipios"][],
	/** An aggregate relationship */
	Cidades_aggregate:ModelTypes["EstadosEMunicipios_aggregate"],
	CodigoIbge?:ModelTypes["bigint"],
	/** An object relationship */
	Estado?:ModelTypes["EstadosEMunicipios"],
	Id:ModelTypes["uuid"],
	Nome:string,
	Pai_Id?:ModelTypes["uuid"],
	Sigla?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate"]: {
		aggregate?:ModelTypes["EstadosEMunicipios_aggregate_fields"],
	nodes:ModelTypes["EstadosEMunicipios"][]
};
	/** aggregate fields of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_fields"]: {
		avg?:ModelTypes["EstadosEMunicipios_avg_fields"],
	count:number,
	max?:ModelTypes["EstadosEMunicipios_max_fields"],
	min?:ModelTypes["EstadosEMunicipios_min_fields"],
	stddev?:ModelTypes["EstadosEMunicipios_stddev_fields"],
	stddev_pop?:ModelTypes["EstadosEMunicipios_stddev_pop_fields"],
	stddev_samp?:ModelTypes["EstadosEMunicipios_stddev_samp_fields"],
	sum?:ModelTypes["EstadosEMunicipios_sum_fields"],
	var_pop?:ModelTypes["EstadosEMunicipios_var_pop_fields"],
	var_samp?:ModelTypes["EstadosEMunicipios_var_samp_fields"],
	variance?:ModelTypes["EstadosEMunicipios_variance_fields"]
};
	/** order by aggregate values of table "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_order_by"]: GraphQLTypes["EstadosEMunicipios_aggregate_order_by"];
	/** input type for inserting array relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_arr_rel_insert_input"]: GraphQLTypes["EstadosEMunicipios_arr_rel_insert_input"];
	/** aggregate avg on columns */
["EstadosEMunicipios_avg_fields"]: {
		CodigoIbge?:number
};
	/** order by avg() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_avg_order_by"]: GraphQLTypes["EstadosEMunicipios_avg_order_by"];
	/** Boolean expression to filter rows from the table "EstadosEMunicipios". All fields are combined with a logical 'AND'. */
["EstadosEMunicipios_bool_exp"]: GraphQLTypes["EstadosEMunicipios_bool_exp"];
	/** unique or primary key constraints on table "EstadosEMunicipios" */
["EstadosEMunicipios_constraint"]: GraphQLTypes["EstadosEMunicipios_constraint"];
	/** input type for incrementing numeric columns in table "EstadosEMunicipios" */
["EstadosEMunicipios_inc_input"]: GraphQLTypes["EstadosEMunicipios_inc_input"];
	/** input type for inserting data into table "EstadosEMunicipios" */
["EstadosEMunicipios_insert_input"]: GraphQLTypes["EstadosEMunicipios_insert_input"];
	/** aggregate max on columns */
["EstadosEMunicipios_max_fields"]: {
		CodigoIbge?:ModelTypes["bigint"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	Sigla?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_max_order_by"]: GraphQLTypes["EstadosEMunicipios_max_order_by"];
	/** aggregate min on columns */
["EstadosEMunicipios_min_fields"]: {
		CodigoIbge?:ModelTypes["bigint"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	Sigla?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_min_order_by"]: GraphQLTypes["EstadosEMunicipios_min_order_by"];
	/** response of any mutation on the table "EstadosEMunicipios" */
["EstadosEMunicipios_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["EstadosEMunicipios"][]
};
	/** input type for inserting object relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_obj_rel_insert_input"]: GraphQLTypes["EstadosEMunicipios_obj_rel_insert_input"];
	/** on conflict condition type for table "EstadosEMunicipios" */
["EstadosEMunicipios_on_conflict"]: GraphQLTypes["EstadosEMunicipios_on_conflict"];
	/** Ordering options when selecting data from "EstadosEMunicipios". */
["EstadosEMunicipios_order_by"]: GraphQLTypes["EstadosEMunicipios_order_by"];
	/** primary key columns input for table: EstadosEMunicipios */
["EstadosEMunicipios_pk_columns_input"]: GraphQLTypes["EstadosEMunicipios_pk_columns_input"];
	/** select columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_select_column"]: GraphQLTypes["EstadosEMunicipios_select_column"];
	/** input type for updating data in table "EstadosEMunicipios" */
["EstadosEMunicipios_set_input"]: GraphQLTypes["EstadosEMunicipios_set_input"];
	/** aggregate stddev on columns */
["EstadosEMunicipios_stddev_fields"]: {
		CodigoIbge?:number
};
	/** order by stddev() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_order_by"]: GraphQLTypes["EstadosEMunicipios_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["EstadosEMunicipios_stddev_pop_fields"]: {
		CodigoIbge?:number
};
	/** order by stddev_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_pop_order_by"]: GraphQLTypes["EstadosEMunicipios_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["EstadosEMunicipios_stddev_samp_fields"]: {
		CodigoIbge?:number
};
	/** order by stddev_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_samp_order_by"]: GraphQLTypes["EstadosEMunicipios_stddev_samp_order_by"];
	/** aggregate sum on columns */
["EstadosEMunicipios_sum_fields"]: {
		CodigoIbge?:ModelTypes["bigint"]
};
	/** order by sum() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_sum_order_by"]: GraphQLTypes["EstadosEMunicipios_sum_order_by"];
	/** update columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_update_column"]: GraphQLTypes["EstadosEMunicipios_update_column"];
	/** aggregate var_pop on columns */
["EstadosEMunicipios_var_pop_fields"]: {
		CodigoIbge?:number
};
	/** order by var_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_pop_order_by"]: GraphQLTypes["EstadosEMunicipios_var_pop_order_by"];
	/** aggregate var_samp on columns */
["EstadosEMunicipios_var_samp_fields"]: {
		CodigoIbge?:number
};
	/** order by var_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_samp_order_by"]: GraphQLTypes["EstadosEMunicipios_var_samp_order_by"];
	/** aggregate variance on columns */
["EstadosEMunicipios_variance_fields"]: {
		CodigoIbge?:number
};
	/** order by variance() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_variance_order_by"]: GraphQLTypes["EstadosEMunicipios_variance_order_by"];
	/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
["Int_comparison_exp"]: GraphQLTypes["Int_comparison_exp"];
	/** columns and relationships of "Operadoras" */
["Operadoras"]: {
		Apn:string,
	Id:ModelTypes["uuid"],
	Nome:string,
	Senha:string,
	Usuario:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "Operadoras" */
["Operadoras_aggregate"]: {
		aggregate?:ModelTypes["Operadoras_aggregate_fields"],
	nodes:ModelTypes["Operadoras"][]
};
	/** aggregate fields of "Operadoras" */
["Operadoras_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["Operadoras_max_fields"],
	min?:ModelTypes["Operadoras_min_fields"]
};
	/** Boolean expression to filter rows from the table "Operadoras". All fields are combined with a logical 'AND'. */
["Operadoras_bool_exp"]: GraphQLTypes["Operadoras_bool_exp"];
	/** unique or primary key constraints on table "Operadoras" */
["Operadoras_constraint"]: GraphQLTypes["Operadoras_constraint"];
	/** input type for inserting data into table "Operadoras" */
["Operadoras_insert_input"]: GraphQLTypes["Operadoras_insert_input"];
	/** aggregate max on columns */
["Operadoras_max_fields"]: {
		Apn?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Senha?:string,
	Usuario?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["Operadoras_min_fields"]: {
		Apn?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Senha?:string,
	Usuario?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "Operadoras" */
["Operadoras_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["Operadoras"][]
};
	/** input type for inserting object relation for remote table "Operadoras" */
["Operadoras_obj_rel_insert_input"]: GraphQLTypes["Operadoras_obj_rel_insert_input"];
	/** on conflict condition type for table "Operadoras" */
["Operadoras_on_conflict"]: GraphQLTypes["Operadoras_on_conflict"];
	/** Ordering options when selecting data from "Operadoras". */
["Operadoras_order_by"]: GraphQLTypes["Operadoras_order_by"];
	/** primary key columns input for table: Operadoras */
["Operadoras_pk_columns_input"]: GraphQLTypes["Operadoras_pk_columns_input"];
	/** select columns of table "Operadoras" */
["Operadoras_select_column"]: GraphQLTypes["Operadoras_select_column"];
	/** input type for updating data in table "Operadoras" */
["Operadoras_set_input"]: GraphQLTypes["Operadoras_set_input"];
	/** update columns of table "Operadoras" */
["Operadoras_update_column"]: GraphQLTypes["Operadoras_update_column"];
	/** columns and relationships of "Produtos" */
["Produtos"]: {
		Descricao?:string,
	Id:ModelTypes["uuid"],
	NCM:number,
	Nome:string,
	UnidadeDeMedida_Id:string,
	Utilizacao:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "Produtos" */
["Produtos_aggregate"]: {
		aggregate?:ModelTypes["Produtos_aggregate_fields"],
	nodes:ModelTypes["Produtos"][]
};
	/** aggregate fields of "Produtos" */
["Produtos_aggregate_fields"]: {
		avg?:ModelTypes["Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["Produtos_max_fields"],
	min?:ModelTypes["Produtos_min_fields"],
	stddev?:ModelTypes["Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["Produtos_stddev_samp_fields"],
	sum?:ModelTypes["Produtos_sum_fields"],
	var_pop?:ModelTypes["Produtos_var_pop_fields"],
	var_samp?:ModelTypes["Produtos_var_samp_fields"],
	variance?:ModelTypes["Produtos_variance_fields"]
};
	/** aggregate avg on columns */
["Produtos_avg_fields"]: {
		NCM?:number
};
	/** Boolean expression to filter rows from the table "Produtos". All fields are combined with a logical 'AND'. */
["Produtos_bool_exp"]: GraphQLTypes["Produtos_bool_exp"];
	/** unique or primary key constraints on table "Produtos" */
["Produtos_constraint"]: GraphQLTypes["Produtos_constraint"];
	/** input type for incrementing numeric columns in table "Produtos" */
["Produtos_inc_input"]: GraphQLTypes["Produtos_inc_input"];
	/** input type for inserting data into table "Produtos" */
["Produtos_insert_input"]: GraphQLTypes["Produtos_insert_input"];
	/** aggregate max on columns */
["Produtos_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	NCM?:number,
	Nome?:string,
	UnidadeDeMedida_Id?:string,
	Utilizacao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["Produtos_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	NCM?:number,
	Nome?:string,
	UnidadeDeMedida_Id?:string,
	Utilizacao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "Produtos" */
["Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["Produtos"][]
};
	/** input type for inserting object relation for remote table "Produtos" */
["Produtos_obj_rel_insert_input"]: GraphQLTypes["Produtos_obj_rel_insert_input"];
	/** on conflict condition type for table "Produtos" */
["Produtos_on_conflict"]: GraphQLTypes["Produtos_on_conflict"];
	/** Ordering options when selecting data from "Produtos". */
["Produtos_order_by"]: GraphQLTypes["Produtos_order_by"];
	/** primary key columns input for table: Produtos */
["Produtos_pk_columns_input"]: GraphQLTypes["Produtos_pk_columns_input"];
	/** select columns of table "Produtos" */
["Produtos_select_column"]: GraphQLTypes["Produtos_select_column"];
	/** input type for updating data in table "Produtos" */
["Produtos_set_input"]: GraphQLTypes["Produtos_set_input"];
	/** aggregate stddev on columns */
["Produtos_stddev_fields"]: {
		NCM?:number
};
	/** aggregate stddev_pop on columns */
["Produtos_stddev_pop_fields"]: {
		NCM?:number
};
	/** aggregate stddev_samp on columns */
["Produtos_stddev_samp_fields"]: {
		NCM?:number
};
	/** aggregate sum on columns */
["Produtos_sum_fields"]: {
		NCM?:number
};
	/** update columns of table "Produtos" */
["Produtos_update_column"]: GraphQLTypes["Produtos_update_column"];
	/** aggregate var_pop on columns */
["Produtos_var_pop_fields"]: {
		NCM?:number
};
	/** aggregate var_samp on columns */
["Produtos_var_samp_fields"]: {
		NCM?:number
};
	/** aggregate variance on columns */
["Produtos_variance_fields"]: {
		NCM?:number
};
	/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
["String_comparison_exp"]: GraphQLTypes["String_comparison_exp"];
	/** columns and relationships of "UnidadesDeMedidas" */
["UnidadesDeMedidas"]: {
		Comentario:string,
	Valor:string
};
	/** aggregated selection of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate"]: {
		aggregate?:ModelTypes["UnidadesDeMedidas_aggregate_fields"],
	nodes:ModelTypes["UnidadesDeMedidas"][]
};
	/** aggregate fields of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["UnidadesDeMedidas_max_fields"],
	min?:ModelTypes["UnidadesDeMedidas_min_fields"]
};
	/** Boolean expression to filter rows from the table "UnidadesDeMedidas". All fields are combined with a logical 'AND'. */
["UnidadesDeMedidas_bool_exp"]: GraphQLTypes["UnidadesDeMedidas_bool_exp"];
	/** unique or primary key constraints on table "UnidadesDeMedidas" */
["UnidadesDeMedidas_constraint"]: GraphQLTypes["UnidadesDeMedidas_constraint"];
	/** input type for inserting data into table "UnidadesDeMedidas" */
["UnidadesDeMedidas_insert_input"]: GraphQLTypes["UnidadesDeMedidas_insert_input"];
	/** aggregate max on columns */
["UnidadesDeMedidas_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["UnidadesDeMedidas_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "UnidadesDeMedidas" */
["UnidadesDeMedidas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["UnidadesDeMedidas"][]
};
	/** on conflict condition type for table "UnidadesDeMedidas" */
["UnidadesDeMedidas_on_conflict"]: GraphQLTypes["UnidadesDeMedidas_on_conflict"];
	/** Ordering options when selecting data from "UnidadesDeMedidas". */
["UnidadesDeMedidas_order_by"]: GraphQLTypes["UnidadesDeMedidas_order_by"];
	/** primary key columns input for table: UnidadesDeMedidas */
["UnidadesDeMedidas_pk_columns_input"]: GraphQLTypes["UnidadesDeMedidas_pk_columns_input"];
	/** select columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_select_column"]: GraphQLTypes["UnidadesDeMedidas_select_column"];
	/** input type for updating data in table "UnidadesDeMedidas" */
["UnidadesDeMedidas_set_input"]: GraphQLTypes["UnidadesDeMedidas_set_input"];
	/** update columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_update_column"]: GraphQLTypes["UnidadesDeMedidas_update_column"];
	/** columns and relationships of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos"]: {
		/** An object relationship */
	Fluxo:ModelTypes["atendimentos_Fluxos"],
	Fluxo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Nome:string,
	Posicao:number,
	/** An array relationship */
	Tickets:ModelTypes["atendimentos_Tickets"][],
	/** An aggregate relationship */
	Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate"]: {
		aggregate?:ModelTypes["atendimentos_EtapasDosFluxos_aggregate_fields"],
	nodes:ModelTypes["atendimentos_EtapasDosFluxos"][]
};
	/** aggregate fields of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_fields"]: {
		avg?:ModelTypes["atendimentos_EtapasDosFluxos_avg_fields"],
	count:number,
	max?:ModelTypes["atendimentos_EtapasDosFluxos_max_fields"],
	min?:ModelTypes["atendimentos_EtapasDosFluxos_min_fields"],
	stddev?:ModelTypes["atendimentos_EtapasDosFluxos_stddev_fields"],
	stddev_pop?:ModelTypes["atendimentos_EtapasDosFluxos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["atendimentos_EtapasDosFluxos_stddev_samp_fields"],
	sum?:ModelTypes["atendimentos_EtapasDosFluxos_sum_fields"],
	var_pop?:ModelTypes["atendimentos_EtapasDosFluxos_var_pop_fields"],
	var_samp?:ModelTypes["atendimentos_EtapasDosFluxos_var_samp_fields"],
	variance?:ModelTypes["atendimentos_EtapasDosFluxos_variance_fields"]
};
	/** order by aggregate values of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_arr_rel_insert_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["atendimentos_EtapasDosFluxos_avg_fields"]: {
		Posicao?:number
};
	/** order by avg() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_avg_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_avg_order_by"];
	/** Boolean expression to filter rows from the table "atendimentos.EtapasDosFluxos". All fields are combined with a logical 'AND'. */
["atendimentos_EtapasDosFluxos_bool_exp"]: GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"];
	/** unique or primary key constraints on table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_constraint"]: GraphQLTypes["atendimentos_EtapasDosFluxos_constraint"];
	/** input type for incrementing numeric columns in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_inc_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_inc_input"];
	/** input type for inserting data into table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_insert_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_insert_input"];
	/** aggregate max on columns */
["atendimentos_EtapasDosFluxos_max_fields"]: {
		Fluxo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Posicao?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_max_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_max_order_by"];
	/** aggregate min on columns */
["atendimentos_EtapasDosFluxos_min_fields"]: {
		Fluxo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Posicao?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_min_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_min_order_by"];
	/** response of any mutation on the table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["atendimentos_EtapasDosFluxos"][]
};
	/** input type for inserting object relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_obj_rel_insert_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_obj_rel_insert_input"];
	/** on conflict condition type for table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_on_conflict"]: GraphQLTypes["atendimentos_EtapasDosFluxos_on_conflict"];
	/** Ordering options when selecting data from "atendimentos.EtapasDosFluxos". */
["atendimentos_EtapasDosFluxos_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_order_by"];
	/** primary key columns input for table: atendimentos_EtapasDosFluxos */
["atendimentos_EtapasDosFluxos_pk_columns_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_pk_columns_input"];
	/** select columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_select_column"]: GraphQLTypes["atendimentos_EtapasDosFluxos_select_column"];
	/** input type for updating data in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_set_input"]: GraphQLTypes["atendimentos_EtapasDosFluxos_set_input"];
	/** aggregate stddev on columns */
["atendimentos_EtapasDosFluxos_stddev_fields"]: {
		Posicao?:number
};
	/** order by stddev() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["atendimentos_EtapasDosFluxos_stddev_pop_fields"]: {
		Posicao?:number
};
	/** order by stddev_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_pop_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["atendimentos_EtapasDosFluxos_stddev_samp_fields"]: {
		Posicao?:number
};
	/** order by stddev_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_samp_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["atendimentos_EtapasDosFluxos_sum_fields"]: {
		Posicao?:number
};
	/** order by sum() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_sum_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_sum_order_by"];
	/** update columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_update_column"]: GraphQLTypes["atendimentos_EtapasDosFluxos_update_column"];
	/** aggregate var_pop on columns */
["atendimentos_EtapasDosFluxos_var_pop_fields"]: {
		Posicao?:number
};
	/** order by var_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_pop_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["atendimentos_EtapasDosFluxos_var_samp_fields"]: {
		Posicao?:number
};
	/** order by var_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_samp_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_var_samp_order_by"];
	/** aggregate variance on columns */
["atendimentos_EtapasDosFluxos_variance_fields"]: {
		Posicao?:number
};
	/** order by variance() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_variance_order_by"]: GraphQLTypes["atendimentos_EtapasDosFluxos_variance_order_by"];
	/** columns and relationships of "atendimentos.Fluxos" */
["atendimentos_Fluxos"]: {
		/** An array relationship */
	Etapas:ModelTypes["atendimentos_EtapasDosFluxos"][],
	/** An aggregate relationship */
	Etapas_aggregate:ModelTypes["atendimentos_EtapasDosFluxos_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Tickets:ModelTypes["atendimentos_Tickets"][],
	/** An aggregate relationship */
	Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate"]: {
		aggregate?:ModelTypes["atendimentos_Fluxos_aggregate_fields"],
	nodes:ModelTypes["atendimentos_Fluxos"][]
};
	/** aggregate fields of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["atendimentos_Fluxos_max_fields"],
	min?:ModelTypes["atendimentos_Fluxos_min_fields"]
};
	/** Boolean expression to filter rows from the table "atendimentos.Fluxos". All fields are combined with a logical 'AND'. */
["atendimentos_Fluxos_bool_exp"]: GraphQLTypes["atendimentos_Fluxos_bool_exp"];
	/** unique or primary key constraints on table "atendimentos.Fluxos" */
["atendimentos_Fluxos_constraint"]: GraphQLTypes["atendimentos_Fluxos_constraint"];
	/** input type for inserting data into table "atendimentos.Fluxos" */
["atendimentos_Fluxos_insert_input"]: GraphQLTypes["atendimentos_Fluxos_insert_input"];
	/** aggregate max on columns */
["atendimentos_Fluxos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["atendimentos_Fluxos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "atendimentos.Fluxos" */
["atendimentos_Fluxos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["atendimentos_Fluxos"][]
};
	/** input type for inserting object relation for remote table "atendimentos.Fluxos" */
["atendimentos_Fluxos_obj_rel_insert_input"]: GraphQLTypes["atendimentos_Fluxos_obj_rel_insert_input"];
	/** on conflict condition type for table "atendimentos.Fluxos" */
["atendimentos_Fluxos_on_conflict"]: GraphQLTypes["atendimentos_Fluxos_on_conflict"];
	/** Ordering options when selecting data from "atendimentos.Fluxos". */
["atendimentos_Fluxos_order_by"]: GraphQLTypes["atendimentos_Fluxos_order_by"];
	/** primary key columns input for table: atendimentos_Fluxos */
["atendimentos_Fluxos_pk_columns_input"]: GraphQLTypes["atendimentos_Fluxos_pk_columns_input"];
	/** select columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_select_column"]: GraphQLTypes["atendimentos_Fluxos_select_column"];
	/** input type for updating data in table "atendimentos.Fluxos" */
["atendimentos_Fluxos_set_input"]: GraphQLTypes["atendimentos_Fluxos_set_input"];
	/** update columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_update_column"]: GraphQLTypes["atendimentos_Fluxos_update_column"];
	/** columns and relationships of "atendimentos.Tickets" */
["atendimentos_Tickets"]: {
		/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	Cliente_Id?:ModelTypes["uuid"],
	CodigoReferencia:number,
	/** An object relationship */
	Etapa:ModelTypes["atendimentos_EtapasDosFluxos"],
	Etapa_Id:ModelTypes["uuid"],
	/** An object relationship */
	Fluxo:ModelTypes["atendimentos_Fluxos"],
	Fluxo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Lead?:ModelTypes["clientes_Leads"],
	Lead_Id?:ModelTypes["uuid"],
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_aggregate"],
	/** An object relationship */
	Tipo:ModelTypes["atendimentos_TiposDeTickets"],
	Tipo_Id:ModelTypes["atendimentos_TiposDeTickets_enum"],
	/** An object relationship */
	Usuario:ModelTypes["autenticacao_Usuarios"],
	Usuario_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate"]: {
		aggregate?:ModelTypes["atendimentos_Tickets_aggregate_fields"],
	nodes:ModelTypes["atendimentos_Tickets"][]
};
	/** aggregate fields of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_fields"]: {
		avg?:ModelTypes["atendimentos_Tickets_avg_fields"],
	count:number,
	max?:ModelTypes["atendimentos_Tickets_max_fields"],
	min?:ModelTypes["atendimentos_Tickets_min_fields"],
	stddev?:ModelTypes["atendimentos_Tickets_stddev_fields"],
	stddev_pop?:ModelTypes["atendimentos_Tickets_stddev_pop_fields"],
	stddev_samp?:ModelTypes["atendimentos_Tickets_stddev_samp_fields"],
	sum?:ModelTypes["atendimentos_Tickets_sum_fields"],
	var_pop?:ModelTypes["atendimentos_Tickets_var_pop_fields"],
	var_samp?:ModelTypes["atendimentos_Tickets_var_samp_fields"],
	variance?:ModelTypes["atendimentos_Tickets_variance_fields"]
};
	/** order by aggregate values of table "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_order_by"]: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"];
	/** input type for inserting array relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_arr_rel_insert_input"]: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"];
	/** aggregate avg on columns */
["atendimentos_Tickets_avg_fields"]: {
		CodigoReferencia?:number
};
	/** order by avg() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_avg_order_by"]: GraphQLTypes["atendimentos_Tickets_avg_order_by"];
	/** Boolean expression to filter rows from the table "atendimentos.Tickets". All fields are combined with a logical 'AND'. */
["atendimentos_Tickets_bool_exp"]: GraphQLTypes["atendimentos_Tickets_bool_exp"];
	/** unique or primary key constraints on table "atendimentos.Tickets" */
["atendimentos_Tickets_constraint"]: GraphQLTypes["atendimentos_Tickets_constraint"];
	/** input type for incrementing numeric columns in table "atendimentos.Tickets" */
["atendimentos_Tickets_inc_input"]: GraphQLTypes["atendimentos_Tickets_inc_input"];
	/** input type for inserting data into table "atendimentos.Tickets" */
["atendimentos_Tickets_insert_input"]: GraphQLTypes["atendimentos_Tickets_insert_input"];
	/** aggregate max on columns */
["atendimentos_Tickets_max_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	CodigoReferencia?:number,
	Etapa_Id?:ModelTypes["uuid"],
	Fluxo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_max_order_by"]: GraphQLTypes["atendimentos_Tickets_max_order_by"];
	/** aggregate min on columns */
["atendimentos_Tickets_min_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	CodigoReferencia?:number,
	Etapa_Id?:ModelTypes["uuid"],
	Fluxo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_min_order_by"]: GraphQLTypes["atendimentos_Tickets_min_order_by"];
	/** response of any mutation on the table "atendimentos.Tickets" */
["atendimentos_Tickets_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["atendimentos_Tickets"][]
};
	/** input type for inserting object relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_obj_rel_insert_input"]: GraphQLTypes["atendimentos_Tickets_obj_rel_insert_input"];
	/** on conflict condition type for table "atendimentos.Tickets" */
["atendimentos_Tickets_on_conflict"]: GraphQLTypes["atendimentos_Tickets_on_conflict"];
	/** Ordering options when selecting data from "atendimentos.Tickets". */
["atendimentos_Tickets_order_by"]: GraphQLTypes["atendimentos_Tickets_order_by"];
	/** primary key columns input for table: atendimentos_Tickets */
["atendimentos_Tickets_pk_columns_input"]: GraphQLTypes["atendimentos_Tickets_pk_columns_input"];
	/** select columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_select_column"]: GraphQLTypes["atendimentos_Tickets_select_column"];
	/** input type for updating data in table "atendimentos.Tickets" */
["atendimentos_Tickets_set_input"]: GraphQLTypes["atendimentos_Tickets_set_input"];
	/** aggregate stddev on columns */
["atendimentos_Tickets_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_order_by"]: GraphQLTypes["atendimentos_Tickets_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["atendimentos_Tickets_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_pop_order_by"]: GraphQLTypes["atendimentos_Tickets_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["atendimentos_Tickets_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_samp_order_by"]: GraphQLTypes["atendimentos_Tickets_stddev_samp_order_by"];
	/** aggregate sum on columns */
["atendimentos_Tickets_sum_fields"]: {
		CodigoReferencia?:number
};
	/** order by sum() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_sum_order_by"]: GraphQLTypes["atendimentos_Tickets_sum_order_by"];
	/** update columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_update_column"]: GraphQLTypes["atendimentos_Tickets_update_column"];
	/** aggregate var_pop on columns */
["atendimentos_Tickets_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_pop_order_by"]: GraphQLTypes["atendimentos_Tickets_var_pop_order_by"];
	/** aggregate var_samp on columns */
["atendimentos_Tickets_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_samp_order_by"]: GraphQLTypes["atendimentos_Tickets_var_samp_order_by"];
	/** aggregate variance on columns */
["atendimentos_Tickets_variance_fields"]: {
		CodigoReferencia?:number
};
	/** order by variance() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_variance_order_by"]: GraphQLTypes["atendimentos_Tickets_variance_order_by"];
	/** columns and relationships of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets"]: {
		Comentario:string,
	/** An array relationship */
	Tickets:ModelTypes["atendimentos_Tickets"][],
	/** An aggregate relationship */
	Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	Valor:string
};
	/** aggregated selection of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate"]: {
		aggregate?:ModelTypes["atendimentos_TiposDeTickets_aggregate_fields"],
	nodes:ModelTypes["atendimentos_TiposDeTickets"][]
};
	/** aggregate fields of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["atendimentos_TiposDeTickets_max_fields"],
	min?:ModelTypes["atendimentos_TiposDeTickets_min_fields"]
};
	/** Boolean expression to filter rows from the table "atendimentos.TiposDeTickets". All fields are combined with a logical 'AND'. */
["atendimentos_TiposDeTickets_bool_exp"]: GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"];
	/** unique or primary key constraints on table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_constraint"]: GraphQLTypes["atendimentos_TiposDeTickets_constraint"];
	["atendimentos_TiposDeTickets_enum"]: GraphQLTypes["atendimentos_TiposDeTickets_enum"];
	/** Boolean expression to compare columns of type "atendimentos_TiposDeTickets_enum". All fields are combined with logical 'AND'. */
["atendimentos_TiposDeTickets_enum_comparison_exp"]: GraphQLTypes["atendimentos_TiposDeTickets_enum_comparison_exp"];
	/** input type for inserting data into table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_insert_input"]: GraphQLTypes["atendimentos_TiposDeTickets_insert_input"];
	/** aggregate max on columns */
["atendimentos_TiposDeTickets_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["atendimentos_TiposDeTickets_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["atendimentos_TiposDeTickets"][]
};
	/** input type for inserting object relation for remote table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_obj_rel_insert_input"]: GraphQLTypes["atendimentos_TiposDeTickets_obj_rel_insert_input"];
	/** on conflict condition type for table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_on_conflict"]: GraphQLTypes["atendimentos_TiposDeTickets_on_conflict"];
	/** Ordering options when selecting data from "atendimentos.TiposDeTickets". */
["atendimentos_TiposDeTickets_order_by"]: GraphQLTypes["atendimentos_TiposDeTickets_order_by"];
	/** primary key columns input for table: atendimentos_TiposDeTickets */
["atendimentos_TiposDeTickets_pk_columns_input"]: GraphQLTypes["atendimentos_TiposDeTickets_pk_columns_input"];
	/** select columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_select_column"]: GraphQLTypes["atendimentos_TiposDeTickets_select_column"];
	/** input type for updating data in table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_set_input"]: GraphQLTypes["atendimentos_TiposDeTickets_set_input"];
	/** update columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_update_column"]: GraphQLTypes["atendimentos_TiposDeTickets_update_column"];
	/** columns and relationships of "autenticacao.Atendentes" */
["autenticacao_Atendentes"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Usuario:ModelTypes["autenticacao_Usuarios"],
	Usuario_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate"]: {
		aggregate?:ModelTypes["autenticacao_Atendentes_aggregate_fields"],
	nodes:ModelTypes["autenticacao_Atendentes"][]
};
	/** aggregate fields of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["autenticacao_Atendentes_max_fields"],
	min?:ModelTypes["autenticacao_Atendentes_min_fields"]
};
	/** Boolean expression to filter rows from the table "autenticacao.Atendentes". All fields are combined with a logical 'AND'. */
["autenticacao_Atendentes_bool_exp"]: GraphQLTypes["autenticacao_Atendentes_bool_exp"];
	/** unique or primary key constraints on table "autenticacao.Atendentes" */
["autenticacao_Atendentes_constraint"]: GraphQLTypes["autenticacao_Atendentes_constraint"];
	/** input type for inserting data into table "autenticacao.Atendentes" */
["autenticacao_Atendentes_insert_input"]: GraphQLTypes["autenticacao_Atendentes_insert_input"];
	/** aggregate max on columns */
["autenticacao_Atendentes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["autenticacao_Atendentes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "autenticacao.Atendentes" */
["autenticacao_Atendentes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["autenticacao_Atendentes"][]
};
	/** input type for inserting object relation for remote table "autenticacao.Atendentes" */
["autenticacao_Atendentes_obj_rel_insert_input"]: GraphQLTypes["autenticacao_Atendentes_obj_rel_insert_input"];
	/** on conflict condition type for table "autenticacao.Atendentes" */
["autenticacao_Atendentes_on_conflict"]: GraphQLTypes["autenticacao_Atendentes_on_conflict"];
	/** Ordering options when selecting data from "autenticacao.Atendentes". */
["autenticacao_Atendentes_order_by"]: GraphQLTypes["autenticacao_Atendentes_order_by"];
	/** primary key columns input for table: autenticacao_Atendentes */
["autenticacao_Atendentes_pk_columns_input"]: GraphQLTypes["autenticacao_Atendentes_pk_columns_input"];
	/** select columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_select_column"]: GraphQLTypes["autenticacao_Atendentes_select_column"];
	/** input type for updating data in table "autenticacao.Atendentes" */
["autenticacao_Atendentes_set_input"]: GraphQLTypes["autenticacao_Atendentes_set_input"];
	/** update columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_update_column"]: GraphQLTypes["autenticacao_Atendentes_update_column"];
	/** columns and relationships of "autenticacao.Usuarios" */
["autenticacao_Usuarios"]: {
		/** An object relationship */
	Atendente?:ModelTypes["autenticacao_Atendentes"],
	/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	Cliente_Id?:ModelTypes["uuid"],
	/** An object relationship */
	Colaborador?:ModelTypes["identidades_Colaboradores"],
	Colaborador_Id?:ModelTypes["uuid"],
	Email:string,
	Id:ModelTypes["uuid"],
	Senha:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate"]: {
		aggregate?:ModelTypes["autenticacao_Usuarios_aggregate_fields"],
	nodes:ModelTypes["autenticacao_Usuarios"][]
};
	/** aggregate fields of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["autenticacao_Usuarios_max_fields"],
	min?:ModelTypes["autenticacao_Usuarios_min_fields"]
};
	/** order by aggregate values of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_order_by"]: GraphQLTypes["autenticacao_Usuarios_aggregate_order_by"];
	/** input type for inserting array relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_arr_rel_insert_input"]: GraphQLTypes["autenticacao_Usuarios_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "autenticacao.Usuarios". All fields are combined with a logical 'AND'. */
["autenticacao_Usuarios_bool_exp"]: GraphQLTypes["autenticacao_Usuarios_bool_exp"];
	/** unique or primary key constraints on table "autenticacao.Usuarios" */
["autenticacao_Usuarios_constraint"]: GraphQLTypes["autenticacao_Usuarios_constraint"];
	/** input type for inserting data into table "autenticacao.Usuarios" */
["autenticacao_Usuarios_insert_input"]: GraphQLTypes["autenticacao_Usuarios_insert_input"];
	/** aggregate max on columns */
["autenticacao_Usuarios_max_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	Colaborador_Id?:ModelTypes["uuid"],
	Email?:string,
	Id?:ModelTypes["uuid"],
	Senha?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_max_order_by"]: GraphQLTypes["autenticacao_Usuarios_max_order_by"];
	/** aggregate min on columns */
["autenticacao_Usuarios_min_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	Colaborador_Id?:ModelTypes["uuid"],
	Email?:string,
	Id?:ModelTypes["uuid"],
	Senha?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_min_order_by"]: GraphQLTypes["autenticacao_Usuarios_min_order_by"];
	/** response of any mutation on the table "autenticacao.Usuarios" */
["autenticacao_Usuarios_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["autenticacao_Usuarios"][]
};
	/** input type for inserting object relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_obj_rel_insert_input"]: GraphQLTypes["autenticacao_Usuarios_obj_rel_insert_input"];
	/** on conflict condition type for table "autenticacao.Usuarios" */
["autenticacao_Usuarios_on_conflict"]: GraphQLTypes["autenticacao_Usuarios_on_conflict"];
	/** Ordering options when selecting data from "autenticacao.Usuarios". */
["autenticacao_Usuarios_order_by"]: GraphQLTypes["autenticacao_Usuarios_order_by"];
	/** primary key columns input for table: autenticacao_Usuarios */
["autenticacao_Usuarios_pk_columns_input"]: GraphQLTypes["autenticacao_Usuarios_pk_columns_input"];
	/** select columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_select_column"]: GraphQLTypes["autenticacao_Usuarios_select_column"];
	/** input type for updating data in table "autenticacao.Usuarios" */
["autenticacao_Usuarios_set_input"]: GraphQLTypes["autenticacao_Usuarios_set_input"];
	/** update columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_update_column"]: GraphQLTypes["autenticacao_Usuarios_update_column"];
	["bigint"]:any;
	/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
["bigint_comparison_exp"]: GraphQLTypes["bigint_comparison_exp"];
	/** columns and relationships of "clientes.Leads" */
["clientes_Leads"]: {
		/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	Cliente_Id?:ModelTypes["uuid"],
	Email:string,
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	PerfisComerciais:ModelTypes["clientes_PerfisComerciais"][],
	/** An aggregate relationship */
	PerfisComerciais_aggregate:ModelTypes["clientes_PerfisComerciais_aggregate"],
	Telefone:string,
	/** An array relationship */
	Tickets:ModelTypes["atendimentos_Tickets"][],
	/** An aggregate relationship */
	Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "clientes.Leads" */
["clientes_Leads_aggregate"]: {
		aggregate?:ModelTypes["clientes_Leads_aggregate_fields"],
	nodes:ModelTypes["clientes_Leads"][]
};
	/** aggregate fields of "clientes.Leads" */
["clientes_Leads_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["clientes_Leads_max_fields"],
	min?:ModelTypes["clientes_Leads_min_fields"]
};
	/** order by aggregate values of table "clientes.Leads" */
["clientes_Leads_aggregate_order_by"]: GraphQLTypes["clientes_Leads_aggregate_order_by"];
	/** input type for inserting array relation for remote table "clientes.Leads" */
["clientes_Leads_arr_rel_insert_input"]: GraphQLTypes["clientes_Leads_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "clientes.Leads". All fields are combined with a logical 'AND'. */
["clientes_Leads_bool_exp"]: GraphQLTypes["clientes_Leads_bool_exp"];
	/** unique or primary key constraints on table "clientes.Leads" */
["clientes_Leads_constraint"]: GraphQLTypes["clientes_Leads_constraint"];
	/** input type for inserting data into table "clientes.Leads" */
["clientes_Leads_insert_input"]: GraphQLTypes["clientes_Leads_insert_input"];
	/** aggregate max on columns */
["clientes_Leads_max_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	Email?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Telefone?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "clientes.Leads" */
["clientes_Leads_max_order_by"]: GraphQLTypes["clientes_Leads_max_order_by"];
	/** aggregate min on columns */
["clientes_Leads_min_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	Email?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Telefone?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "clientes.Leads" */
["clientes_Leads_min_order_by"]: GraphQLTypes["clientes_Leads_min_order_by"];
	/** response of any mutation on the table "clientes.Leads" */
["clientes_Leads_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["clientes_Leads"][]
};
	/** input type for inserting object relation for remote table "clientes.Leads" */
["clientes_Leads_obj_rel_insert_input"]: GraphQLTypes["clientes_Leads_obj_rel_insert_input"];
	/** on conflict condition type for table "clientes.Leads" */
["clientes_Leads_on_conflict"]: GraphQLTypes["clientes_Leads_on_conflict"];
	/** Ordering options when selecting data from "clientes.Leads". */
["clientes_Leads_order_by"]: GraphQLTypes["clientes_Leads_order_by"];
	/** primary key columns input for table: clientes_Leads */
["clientes_Leads_pk_columns_input"]: GraphQLTypes["clientes_Leads_pk_columns_input"];
	/** select columns of table "clientes.Leads" */
["clientes_Leads_select_column"]: GraphQLTypes["clientes_Leads_select_column"];
	/** input type for updating data in table "clientes.Leads" */
["clientes_Leads_set_input"]: GraphQLTypes["clientes_Leads_set_input"];
	/** update columns of table "clientes.Leads" */
["clientes_Leads_update_column"]: GraphQLTypes["clientes_Leads_update_column"];
	/** columns and relationships of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais"]: {
		/** An object relationship */
	GrupoDePergunta:ModelTypes["vendas_GruposDePerguntas"],
	Grupo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Lead:ModelTypes["clientes_Leads"],
	Lead_Id:ModelTypes["uuid"],
	/** An object relationship */
	Pergunta:ModelTypes["vendas_Perguntas"],
	Pergunta_Id:ModelTypes["uuid"],
	Resposta:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate"]: {
		aggregate?:ModelTypes["clientes_PerfisComerciais_aggregate_fields"],
	nodes:ModelTypes["clientes_PerfisComerciais"][]
};
	/** aggregate fields of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["clientes_PerfisComerciais_max_fields"],
	min?:ModelTypes["clientes_PerfisComerciais_min_fields"]
};
	/** order by aggregate values of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_order_by"]: GraphQLTypes["clientes_PerfisComerciais_aggregate_order_by"];
	/** input type for inserting array relation for remote table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_arr_rel_insert_input"]: GraphQLTypes["clientes_PerfisComerciais_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "clientes.PerfisComerciais". All fields are combined with a logical 'AND'. */
["clientes_PerfisComerciais_bool_exp"]: GraphQLTypes["clientes_PerfisComerciais_bool_exp"];
	/** unique or primary key constraints on table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_constraint"]: GraphQLTypes["clientes_PerfisComerciais_constraint"];
	/** input type for inserting data into table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_insert_input"]: GraphQLTypes["clientes_PerfisComerciais_insert_input"];
	/** aggregate max on columns */
["clientes_PerfisComerciais_max_fields"]: {
		Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Pergunta_Id?:ModelTypes["uuid"],
	Resposta?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_max_order_by"]: GraphQLTypes["clientes_PerfisComerciais_max_order_by"];
	/** aggregate min on columns */
["clientes_PerfisComerciais_min_fields"]: {
		Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Pergunta_Id?:ModelTypes["uuid"],
	Resposta?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_min_order_by"]: GraphQLTypes["clientes_PerfisComerciais_min_order_by"];
	/** response of any mutation on the table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["clientes_PerfisComerciais"][]
};
	/** on conflict condition type for table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_on_conflict"]: GraphQLTypes["clientes_PerfisComerciais_on_conflict"];
	/** Ordering options when selecting data from "clientes.PerfisComerciais". */
["clientes_PerfisComerciais_order_by"]: GraphQLTypes["clientes_PerfisComerciais_order_by"];
	/** primary key columns input for table: clientes_PerfisComerciais */
["clientes_PerfisComerciais_pk_columns_input"]: GraphQLTypes["clientes_PerfisComerciais_pk_columns_input"];
	/** select columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_select_column"]: GraphQLTypes["clientes_PerfisComerciais_select_column"];
	/** input type for updating data in table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_set_input"]: GraphQLTypes["clientes_PerfisComerciais_set_input"];
	/** update columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_update_column"]: GraphQLTypes["clientes_PerfisComerciais_update_column"];
	/** columns and relationships of "clientes.Veiculos" */
["clientes_Veiculos"]: {
		Apelido?:string,
	/** An object relationship */
	Categoria:ModelTypes["CategoriasDeVeiculos"],
	Categoria_Id:ModelTypes["uuid"],
	/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	Cliente_Id?:ModelTypes["uuid"],
	DadosDaApi?:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	NumeroDoChassi?:string,
	Placa?:string,
	/** An array relationship */
	PropostasInstalacoes:ModelTypes["comercial_Propostas_Instalacoes"][],
	/** An aggregate relationship */
	PropostasInstalacoes_aggregate:ModelTypes["comercial_Propostas_Instalacoes_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "clientes.Veiculos" */
["clientes_Veiculos_aggregate"]: {
		aggregate?:ModelTypes["clientes_Veiculos_aggregate_fields"],
	nodes:ModelTypes["clientes_Veiculos"][]
};
	/** aggregate fields of "clientes.Veiculos" */
["clientes_Veiculos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["clientes_Veiculos_max_fields"],
	min?:ModelTypes["clientes_Veiculos_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_append_input"]: GraphQLTypes["clientes_Veiculos_append_input"];
	/** Boolean expression to filter rows from the table "clientes.Veiculos". All fields are combined with a logical 'AND'. */
["clientes_Veiculos_bool_exp"]: GraphQLTypes["clientes_Veiculos_bool_exp"];
	/** unique or primary key constraints on table "clientes.Veiculos" */
["clientes_Veiculos_constraint"]: GraphQLTypes["clientes_Veiculos_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["clientes_Veiculos_delete_at_path_input"]: GraphQLTypes["clientes_Veiculos_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["clientes_Veiculos_delete_elem_input"]: GraphQLTypes["clientes_Veiculos_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["clientes_Veiculos_delete_key_input"]: GraphQLTypes["clientes_Veiculos_delete_key_input"];
	/** input type for inserting data into table "clientes.Veiculos" */
["clientes_Veiculos_insert_input"]: GraphQLTypes["clientes_Veiculos_insert_input"];
	/** aggregate max on columns */
["clientes_Veiculos_max_fields"]: {
		Apelido?:string,
	Categoria_Id?:ModelTypes["uuid"],
	Cliente_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	NumeroDoChassi?:string,
	Placa?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["clientes_Veiculos_min_fields"]: {
		Apelido?:string,
	Categoria_Id?:ModelTypes["uuid"],
	Cliente_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	NumeroDoChassi?:string,
	Placa?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "clientes.Veiculos" */
["clientes_Veiculos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["clientes_Veiculos"][]
};
	/** input type for inserting object relation for remote table "clientes.Veiculos" */
["clientes_Veiculos_obj_rel_insert_input"]: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"];
	/** on conflict condition type for table "clientes.Veiculos" */
["clientes_Veiculos_on_conflict"]: GraphQLTypes["clientes_Veiculos_on_conflict"];
	/** Ordering options when selecting data from "clientes.Veiculos". */
["clientes_Veiculos_order_by"]: GraphQLTypes["clientes_Veiculos_order_by"];
	/** primary key columns input for table: clientes_Veiculos */
["clientes_Veiculos_pk_columns_input"]: GraphQLTypes["clientes_Veiculos_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_prepend_input"]: GraphQLTypes["clientes_Veiculos_prepend_input"];
	/** select columns of table "clientes.Veiculos" */
["clientes_Veiculos_select_column"]: GraphQLTypes["clientes_Veiculos_select_column"];
	/** input type for updating data in table "clientes.Veiculos" */
["clientes_Veiculos_set_input"]: GraphQLTypes["clientes_Veiculos_set_input"];
	/** update columns of table "clientes.Veiculos" */
["clientes_Veiculos_update_column"]: GraphQLTypes["clientes_Veiculos_update_column"];
	/** columns and relationships of "comercial.Acoes" */
["comercial_Acoes"]: {
		Etapas_Id:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Titulo:string,
	Url:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Acoes" */
["comercial_Acoes_aggregate"]: {
		aggregate?:ModelTypes["comercial_Acoes_aggregate_fields"],
	nodes:ModelTypes["comercial_Acoes"][]
};
	/** aggregate fields of "comercial.Acoes" */
["comercial_Acoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Acoes_max_fields"],
	min?:ModelTypes["comercial_Acoes_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_append_input"]: GraphQLTypes["comercial_Acoes_append_input"];
	/** Boolean expression to filter rows from the table "comercial.Acoes". All fields are combined with a logical 'AND'. */
["comercial_Acoes_bool_exp"]: GraphQLTypes["comercial_Acoes_bool_exp"];
	/** unique or primary key constraints on table "comercial.Acoes" */
["comercial_Acoes_constraint"]: GraphQLTypes["comercial_Acoes_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Acoes_delete_at_path_input"]: GraphQLTypes["comercial_Acoes_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Acoes_delete_elem_input"]: GraphQLTypes["comercial_Acoes_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Acoes_delete_key_input"]: GraphQLTypes["comercial_Acoes_delete_key_input"];
	/** input type for inserting data into table "comercial.Acoes" */
["comercial_Acoes_insert_input"]: GraphQLTypes["comercial_Acoes_insert_input"];
	/** aggregate max on columns */
["comercial_Acoes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Titulo?:string,
	Url?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Acoes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Titulo?:string,
	Url?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Acoes" */
["comercial_Acoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Acoes"][]
};
	/** on conflict condition type for table "comercial.Acoes" */
["comercial_Acoes_on_conflict"]: GraphQLTypes["comercial_Acoes_on_conflict"];
	/** Ordering options when selecting data from "comercial.Acoes". */
["comercial_Acoes_order_by"]: GraphQLTypes["comercial_Acoes_order_by"];
	/** primary key columns input for table: comercial_Acoes */
["comercial_Acoes_pk_columns_input"]: GraphQLTypes["comercial_Acoes_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_prepend_input"]: GraphQLTypes["comercial_Acoes_prepend_input"];
	/** select columns of table "comercial.Acoes" */
["comercial_Acoes_select_column"]: GraphQLTypes["comercial_Acoes_select_column"];
	/** input type for updating data in table "comercial.Acoes" */
["comercial_Acoes_set_input"]: GraphQLTypes["comercial_Acoes_set_input"];
	/** update columns of table "comercial.Acoes" */
["comercial_Acoes_update_column"]: GraphQLTypes["comercial_Acoes_update_column"];
	/** columns and relationships of "comercial.Atributos" */
["comercial_Atributos"]: {
		Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Produtos:ModelTypes["comercial_Produtos_Atributos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["comercial_Produtos_Atributos_aggregate"],
	/** An array relationship */
	Servicos:ModelTypes["comercial_Servicos_Atributos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Servicos_Atributos_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Atributos" */
["comercial_Atributos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Atributos_aggregate_fields"],
	nodes:ModelTypes["comercial_Atributos"][]
};
	/** aggregate fields of "comercial.Atributos" */
["comercial_Atributos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Atributos_max_fields"],
	min?:ModelTypes["comercial_Atributos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Atributos". All fields are combined with a logical 'AND'. */
["comercial_Atributos_bool_exp"]: GraphQLTypes["comercial_Atributos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Atributos" */
["comercial_Atributos_constraint"]: GraphQLTypes["comercial_Atributos_constraint"];
	/** input type for inserting data into table "comercial.Atributos" */
["comercial_Atributos_insert_input"]: GraphQLTypes["comercial_Atributos_insert_input"];
	/** aggregate max on columns */
["comercial_Atributos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Atributos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Atributos" */
["comercial_Atributos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Atributos"][]
};
	/** input type for inserting object relation for remote table "comercial.Atributos" */
["comercial_Atributos_obj_rel_insert_input"]: GraphQLTypes["comercial_Atributos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Atributos" */
["comercial_Atributos_on_conflict"]: GraphQLTypes["comercial_Atributos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Atributos". */
["comercial_Atributos_order_by"]: GraphQLTypes["comercial_Atributos_order_by"];
	/** primary key columns input for table: comercial_Atributos */
["comercial_Atributos_pk_columns_input"]: GraphQLTypes["comercial_Atributos_pk_columns_input"];
	/** select columns of table "comercial.Atributos" */
["comercial_Atributos_select_column"]: GraphQLTypes["comercial_Atributos_select_column"];
	/** input type for updating data in table "comercial.Atributos" */
["comercial_Atributos_set_input"]: GraphQLTypes["comercial_Atributos_set_input"];
	/** update columns of table "comercial.Atributos" */
["comercial_Atributos_update_column"]: GraphQLTypes["comercial_Atributos_update_column"];
	/** columns and relationships of "comercial.Coberturas" */
["comercial_Coberturas"]: {
		Id:ModelTypes["uuid"],
	Nome:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Coberturas" */
["comercial_Coberturas_aggregate"]: {
		aggregate?:ModelTypes["comercial_Coberturas_aggregate_fields"],
	nodes:ModelTypes["comercial_Coberturas"][]
};
	/** aggregate fields of "comercial.Coberturas" */
["comercial_Coberturas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Coberturas_max_fields"],
	min?:ModelTypes["comercial_Coberturas_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Coberturas". All fields are combined with a logical 'AND'. */
["comercial_Coberturas_bool_exp"]: GraphQLTypes["comercial_Coberturas_bool_exp"];
	/** unique or primary key constraints on table "comercial.Coberturas" */
["comercial_Coberturas_constraint"]: GraphQLTypes["comercial_Coberturas_constraint"];
	/** input type for inserting data into table "comercial.Coberturas" */
["comercial_Coberturas_insert_input"]: GraphQLTypes["comercial_Coberturas_insert_input"];
	/** aggregate max on columns */
["comercial_Coberturas_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Coberturas_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Coberturas" */
["comercial_Coberturas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Coberturas"][]
};
	/** on conflict condition type for table "comercial.Coberturas" */
["comercial_Coberturas_on_conflict"]: GraphQLTypes["comercial_Coberturas_on_conflict"];
	/** Ordering options when selecting data from "comercial.Coberturas". */
["comercial_Coberturas_order_by"]: GraphQLTypes["comercial_Coberturas_order_by"];
	/** primary key columns input for table: comercial_Coberturas */
["comercial_Coberturas_pk_columns_input"]: GraphQLTypes["comercial_Coberturas_pk_columns_input"];
	/** select columns of table "comercial.Coberturas" */
["comercial_Coberturas_select_column"]: GraphQLTypes["comercial_Coberturas_select_column"];
	/** input type for updating data in table "comercial.Coberturas" */
["comercial_Coberturas_set_input"]: GraphQLTypes["comercial_Coberturas_set_input"];
	/** update columns of table "comercial.Coberturas" */
["comercial_Coberturas_update_column"]: GraphQLTypes["comercial_Coberturas_update_column"];
	/** columns and relationships of "comercial.Combos" */
["comercial_Combos"]: {
		/** An array relationship */
	ComboPai:ModelTypes["comercial_Combos_Combos"][],
	/** An aggregate relationship */
	ComboPai_aggregate:ModelTypes["comercial_Combos_Combos_aggregate"],
	/** An array relationship */
	Combos:ModelTypes["comercial_Combos_Combos"][],
	/** An aggregate relationship */
	Combos_aggregate:ModelTypes["comercial_Combos_Combos_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	OportunidadesDeProdutos:ModelTypes["comercial_Produtos_Oportunidades"][],
	/** An aggregate relationship */
	OportunidadesDeProdutos_aggregate:ModelTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** An array relationship */
	OportunidadesDeServicos:ModelTypes["comercial_Servicos_Oportunidades"][],
	/** An aggregate relationship */
	OportunidadesDeServicos_aggregate:ModelTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** An array relationship */
	Planos:ModelTypes["comercial_Combos_Planos"][],
	/** An aggregate relationship */
	Planos_aggregate:ModelTypes["comercial_Combos_Planos_aggregate"],
	/** An array relationship */
	Precos:ModelTypes["comercial_Combos_Precos"][],
	/** An aggregate relationship */
	Precos_aggregate:ModelTypes["comercial_Combos_Precos_aggregate"],
	/** An array relationship */
	Produtos:ModelTypes["comercial_Combos_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["comercial_Combos_Produtos_aggregate"],
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas_Combos"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_Combos_aggregate"],
	/** An array relationship */
	Servicos:ModelTypes["comercial_Combos_Servicos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Combos_Servicos_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Combos_Combos" */
["comercial_Combos_Combos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	/** An object relationship */
	ComboPertencente:ModelTypes["comercial_Combos"],
	ComboPertencente_Id:ModelTypes["uuid"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_Combos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos_Combos"][]
};
	/** aggregate fields of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Combos_Combos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Combos_Combos_max_fields"],
	min?:ModelTypes["comercial_Combos_Combos_min_fields"],
	stddev?:ModelTypes["comercial_Combos_Combos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Combos_Combos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Combos_Combos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Combos_Combos_sum_fields"],
	var_pop?:ModelTypes["comercial_Combos_Combos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Combos_Combos_var_samp_fields"],
	variance?:ModelTypes["comercial_Combos_Combos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_order_by"]: GraphQLTypes["comercial_Combos_Combos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Combos_Combos" */
["comercial_Combos_Combos_arr_rel_insert_input"]: GraphQLTypes["comercial_Combos_Combos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Combos_Combos_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_avg_order_by"]: GraphQLTypes["comercial_Combos_Combos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Combos_Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Combos_bool_exp"]: GraphQLTypes["comercial_Combos_Combos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos_Combos" */
["comercial_Combos_Combos_constraint"]: GraphQLTypes["comercial_Combos_Combos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_inc_input"]: GraphQLTypes["comercial_Combos_Combos_inc_input"];
	/** input type for inserting data into table "comercial.Combos_Combos" */
["comercial_Combos_Combos_insert_input"]: GraphQLTypes["comercial_Combos_Combos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_Combos_max_fields"]: {
		ComboPertencente_Id?:ModelTypes["uuid"],
	Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_max_order_by"]: GraphQLTypes["comercial_Combos_Combos_max_order_by"];
	/** aggregate min on columns */
["comercial_Combos_Combos_min_fields"]: {
		ComboPertencente_Id?:ModelTypes["uuid"],
	Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_min_order_by"]: GraphQLTypes["comercial_Combos_Combos_min_order_by"];
	/** response of any mutation on the table "comercial.Combos_Combos" */
["comercial_Combos_Combos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos_Combos"][]
};
	/** on conflict condition type for table "comercial.Combos_Combos" */
["comercial_Combos_Combos_on_conflict"]: GraphQLTypes["comercial_Combos_Combos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos_Combos". */
["comercial_Combos_Combos_order_by"]: GraphQLTypes["comercial_Combos_Combos_order_by"];
	/** primary key columns input for table: comercial_Combos_Combos */
["comercial_Combos_Combos_pk_columns_input"]: GraphQLTypes["comercial_Combos_Combos_pk_columns_input"];
	/** select columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_select_column"]: GraphQLTypes["comercial_Combos_Combos_select_column"];
	/** input type for updating data in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_set_input"]: GraphQLTypes["comercial_Combos_Combos_set_input"];
	/** aggregate stddev on columns */
["comercial_Combos_Combos_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_order_by"]: GraphQLTypes["comercial_Combos_Combos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Combos_Combos_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_pop_order_by"]: GraphQLTypes["comercial_Combos_Combos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Combos_Combos_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_samp_order_by"]: GraphQLTypes["comercial_Combos_Combos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Combos_Combos_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_sum_order_by"]: GraphQLTypes["comercial_Combos_Combos_sum_order_by"];
	/** update columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_update_column"]: GraphQLTypes["comercial_Combos_Combos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Combos_Combos_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_pop_order_by"]: GraphQLTypes["comercial_Combos_Combos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Combos_Combos_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_samp_order_by"]: GraphQLTypes["comercial_Combos_Combos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Combos_Combos_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_variance_order_by"]: GraphQLTypes["comercial_Combos_Combos_variance_order_by"];
	/** columns and relationships of "comercial.Combos_Planos" */
["comercial_Combos_Planos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Plano:ModelTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco:ModelTypes["comercial_Planos_Precos"],
	PlanoPreco_Id:ModelTypes["uuid"],
	Plano_Id:ModelTypes["uuid"],
	ValorPraticado:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_Planos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos_Planos"][]
};
	/** aggregate fields of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Combos_Planos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Combos_Planos_max_fields"],
	min?:ModelTypes["comercial_Combos_Planos_min_fields"],
	stddev?:ModelTypes["comercial_Combos_Planos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Combos_Planos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Combos_Planos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Combos_Planos_sum_fields"],
	var_pop?:ModelTypes["comercial_Combos_Planos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Combos_Planos_var_samp_fields"],
	variance?:ModelTypes["comercial_Combos_Planos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_order_by"]: GraphQLTypes["comercial_Combos_Planos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Combos_Planos" */
["comercial_Combos_Planos_arr_rel_insert_input"]: GraphQLTypes["comercial_Combos_Planos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Combos_Planos_avg_fields"]: {
		ValorPraticado?:number
};
	/** order by avg() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_avg_order_by"]: GraphQLTypes["comercial_Combos_Planos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Combos_Planos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Planos_bool_exp"]: GraphQLTypes["comercial_Combos_Planos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos_Planos" */
["comercial_Combos_Planos_constraint"]: GraphQLTypes["comercial_Combos_Planos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_inc_input"]: GraphQLTypes["comercial_Combos_Planos_inc_input"];
	/** input type for inserting data into table "comercial.Combos_Planos" */
["comercial_Combos_Planos_insert_input"]: GraphQLTypes["comercial_Combos_Planos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_Planos_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	PlanoPreco_Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_max_order_by"]: GraphQLTypes["comercial_Combos_Planos_max_order_by"];
	/** aggregate min on columns */
["comercial_Combos_Planos_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	PlanoPreco_Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_min_order_by"]: GraphQLTypes["comercial_Combos_Planos_min_order_by"];
	/** response of any mutation on the table "comercial.Combos_Planos" */
["comercial_Combos_Planos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos_Planos"][]
};
	/** on conflict condition type for table "comercial.Combos_Planos" */
["comercial_Combos_Planos_on_conflict"]: GraphQLTypes["comercial_Combos_Planos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos_Planos". */
["comercial_Combos_Planos_order_by"]: GraphQLTypes["comercial_Combos_Planos_order_by"];
	/** primary key columns input for table: comercial_Combos_Planos */
["comercial_Combos_Planos_pk_columns_input"]: GraphQLTypes["comercial_Combos_Planos_pk_columns_input"];
	/** select columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_select_column"]: GraphQLTypes["comercial_Combos_Planos_select_column"];
	/** input type for updating data in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_set_input"]: GraphQLTypes["comercial_Combos_Planos_set_input"];
	/** aggregate stddev on columns */
["comercial_Combos_Planos_stddev_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_order_by"]: GraphQLTypes["comercial_Combos_Planos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Combos_Planos_stddev_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_pop_order_by"]: GraphQLTypes["comercial_Combos_Planos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Combos_Planos_stddev_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_samp_order_by"]: GraphQLTypes["comercial_Combos_Planos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Combos_Planos_sum_fields"]: {
		ValorPraticado?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_sum_order_by"]: GraphQLTypes["comercial_Combos_Planos_sum_order_by"];
	/** update columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_update_column"]: GraphQLTypes["comercial_Combos_Planos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Combos_Planos_var_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by var_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_pop_order_by"]: GraphQLTypes["comercial_Combos_Planos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Combos_Planos_var_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by var_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_samp_order_by"]: GraphQLTypes["comercial_Combos_Planos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Combos_Planos_variance_fields"]: {
		ValorPraticado?:number
};
	/** order by variance() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_variance_order_by"]: GraphQLTypes["comercial_Combos_Planos_variance_order_by"];
	/** columns and relationships of "comercial.Combos_Precos" */
["comercial_Combos_Precos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	PropostasCombos:ModelTypes["comercial_Propostas_Combos"][],
	/** An aggregate relationship */
	PropostasCombos_aggregate:ModelTypes["comercial_Propostas_Combos_aggregate"],
	ValorBase:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_Precos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos_Precos"][]
};
	/** aggregate fields of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Combos_Precos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Combos_Precos_max_fields"],
	min?:ModelTypes["comercial_Combos_Precos_min_fields"],
	stddev?:ModelTypes["comercial_Combos_Precos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Combos_Precos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Combos_Precos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Combos_Precos_sum_fields"],
	var_pop?:ModelTypes["comercial_Combos_Precos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Combos_Precos_var_samp_fields"],
	variance?:ModelTypes["comercial_Combos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_order_by"]: GraphQLTypes["comercial_Combos_Precos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_arr_rel_insert_input"]: GraphQLTypes["comercial_Combos_Precos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Combos_Precos_avg_fields"]: {
		ValorBase?:number
};
	/** order by avg() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_avg_order_by"]: GraphQLTypes["comercial_Combos_Precos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Combos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Precos_bool_exp"]: GraphQLTypes["comercial_Combos_Precos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos_Precos" */
["comercial_Combos_Precos_constraint"]: GraphQLTypes["comercial_Combos_Precos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_inc_input"]: GraphQLTypes["comercial_Combos_Precos_inc_input"];
	/** input type for inserting data into table "comercial.Combos_Precos" */
["comercial_Combos_Precos_insert_input"]: GraphQLTypes["comercial_Combos_Precos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_Precos_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ValorBase?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_max_order_by"]: GraphQLTypes["comercial_Combos_Precos_max_order_by"];
	/** aggregate min on columns */
["comercial_Combos_Precos_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ValorBase?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_min_order_by"]: GraphQLTypes["comercial_Combos_Precos_min_order_by"];
	/** response of any mutation on the table "comercial.Combos_Precos" */
["comercial_Combos_Precos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos_Precos"][]
};
	/** input type for inserting object relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_obj_rel_insert_input"]: GraphQLTypes["comercial_Combos_Precos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Combos_Precos" */
["comercial_Combos_Precos_on_conflict"]: GraphQLTypes["comercial_Combos_Precos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos_Precos". */
["comercial_Combos_Precos_order_by"]: GraphQLTypes["comercial_Combos_Precos_order_by"];
	/** primary key columns input for table: comercial_Combos_Precos */
["comercial_Combos_Precos_pk_columns_input"]: GraphQLTypes["comercial_Combos_Precos_pk_columns_input"];
	/** select columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_select_column"]: GraphQLTypes["comercial_Combos_Precos_select_column"];
	/** input type for updating data in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_set_input"]: GraphQLTypes["comercial_Combos_Precos_set_input"];
	/** aggregate stddev on columns */
["comercial_Combos_Precos_stddev_fields"]: {
		ValorBase?:number
};
	/** order by stddev() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_order_by"]: GraphQLTypes["comercial_Combos_Precos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Combos_Precos_stddev_pop_fields"]: {
		ValorBase?:number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_pop_order_by"]: GraphQLTypes["comercial_Combos_Precos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Combos_Precos_stddev_samp_fields"]: {
		ValorBase?:number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_samp_order_by"]: GraphQLTypes["comercial_Combos_Precos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Combos_Precos_sum_fields"]: {
		ValorBase?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_sum_order_by"]: GraphQLTypes["comercial_Combos_Precos_sum_order_by"];
	/** update columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_update_column"]: GraphQLTypes["comercial_Combos_Precos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Combos_Precos_var_pop_fields"]: {
		ValorBase?:number
};
	/** order by var_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_pop_order_by"]: GraphQLTypes["comercial_Combos_Precos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Combos_Precos_var_samp_fields"]: {
		ValorBase?:number
};
	/** order by var_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_samp_order_by"]: GraphQLTypes["comercial_Combos_Precos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Combos_Precos_variance_fields"]: {
		ValorBase?:number
};
	/** order by variance() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_variance_order_by"]: GraphQLTypes["comercial_Combos_Precos_variance_order_by"];
	/** columns and relationships of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id:ModelTypes["uuid"],
	Produto_Id:ModelTypes["uuid"],
	ValorPraticado:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos_Produtos"][]
};
	/** aggregate fields of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Combos_Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Combos_Produtos_max_fields"],
	min?:ModelTypes["comercial_Combos_Produtos_min_fields"],
	stddev?:ModelTypes["comercial_Combos_Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Combos_Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Combos_Produtos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Combos_Produtos_sum_fields"],
	var_pop?:ModelTypes["comercial_Combos_Produtos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Combos_Produtos_var_samp_fields"],
	variance?:ModelTypes["comercial_Combos_Produtos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Combos_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Combos_Produtos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Combos_Produtos_avg_fields"]: {
		ValorPraticado?:number
};
	/** order by avg() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_avg_order_by"]: GraphQLTypes["comercial_Combos_Produtos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Combos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Produtos_bool_exp"]: GraphQLTypes["comercial_Combos_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_constraint"]: GraphQLTypes["comercial_Combos_Produtos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_inc_input"]: GraphQLTypes["comercial_Combos_Produtos_inc_input"];
	/** input type for inserting data into table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_insert_input"]: GraphQLTypes["comercial_Combos_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_Produtos_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ProdutoPreco_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_max_order_by"]: GraphQLTypes["comercial_Combos_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Combos_Produtos_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ProdutoPreco_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_min_order_by"]: GraphQLTypes["comercial_Combos_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos_Produtos"][]
};
	/** on conflict condition type for table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_on_conflict"]: GraphQLTypes["comercial_Combos_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos_Produtos". */
["comercial_Combos_Produtos_order_by"]: GraphQLTypes["comercial_Combos_Produtos_order_by"];
	/** primary key columns input for table: comercial_Combos_Produtos */
["comercial_Combos_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Combos_Produtos_pk_columns_input"];
	/** select columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_select_column"]: GraphQLTypes["comercial_Combos_Produtos_select_column"];
	/** input type for updating data in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_set_input"]: GraphQLTypes["comercial_Combos_Produtos_set_input"];
	/** aggregate stddev on columns */
["comercial_Combos_Produtos_stddev_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_order_by"]: GraphQLTypes["comercial_Combos_Produtos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Combos_Produtos_stddev_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_pop_order_by"]: GraphQLTypes["comercial_Combos_Produtos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Combos_Produtos_stddev_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_samp_order_by"]: GraphQLTypes["comercial_Combos_Produtos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Combos_Produtos_sum_fields"]: {
		ValorPraticado?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_sum_order_by"]: GraphQLTypes["comercial_Combos_Produtos_sum_order_by"];
	/** update columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_update_column"]: GraphQLTypes["comercial_Combos_Produtos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Combos_Produtos_var_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by var_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_pop_order_by"]: GraphQLTypes["comercial_Combos_Produtos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Combos_Produtos_var_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by var_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_samp_order_by"]: GraphQLTypes["comercial_Combos_Produtos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Combos_Produtos_variance_fields"]: {
		ValorPraticado?:number
};
	/** order by variance() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_variance_order_by"]: GraphQLTypes["comercial_Combos_Produtos_variance_order_by"];
	/** columns and relationships of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	ServicoPreco_Id:ModelTypes["uuid"],
	Servico_Id:ModelTypes["uuid"],
	/** An object relationship */
	ServicosPreco:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	ValorPraticado:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos_Servicos"][]
};
	/** aggregate fields of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Combos_Servicos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Combos_Servicos_max_fields"],
	min?:ModelTypes["comercial_Combos_Servicos_min_fields"],
	stddev?:ModelTypes["comercial_Combos_Servicos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Combos_Servicos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Combos_Servicos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Combos_Servicos_sum_fields"],
	var_pop?:ModelTypes["comercial_Combos_Servicos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Combos_Servicos_var_samp_fields"],
	variance?:ModelTypes["comercial_Combos_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Combos_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Combos_Servicos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Combos_Servicos_avg_fields"]: {
		ValorPraticado?:number
};
	/** order by avg() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_avg_order_by"]: GraphQLTypes["comercial_Combos_Servicos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Combos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Servicos_bool_exp"]: GraphQLTypes["comercial_Combos_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_constraint"]: GraphQLTypes["comercial_Combos_Servicos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_inc_input"]: GraphQLTypes["comercial_Combos_Servicos_inc_input"];
	/** input type for inserting data into table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_insert_input"]: GraphQLTypes["comercial_Combos_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_Servicos_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ServicoPreco_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_max_order_by"]: GraphQLTypes["comercial_Combos_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Combos_Servicos_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	ServicoPreco_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_min_order_by"]: GraphQLTypes["comercial_Combos_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos_Servicos"][]
};
	/** on conflict condition type for table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_on_conflict"]: GraphQLTypes["comercial_Combos_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos_Servicos". */
["comercial_Combos_Servicos_order_by"]: GraphQLTypes["comercial_Combos_Servicos_order_by"];
	/** primary key columns input for table: comercial_Combos_Servicos */
["comercial_Combos_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Combos_Servicos_pk_columns_input"];
	/** select columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_select_column"]: GraphQLTypes["comercial_Combos_Servicos_select_column"];
	/** input type for updating data in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_set_input"]: GraphQLTypes["comercial_Combos_Servicos_set_input"];
	/** aggregate stddev on columns */
["comercial_Combos_Servicos_stddev_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_order_by"]: GraphQLTypes["comercial_Combos_Servicos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Combos_Servicos_stddev_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_pop_order_by"]: GraphQLTypes["comercial_Combos_Servicos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Combos_Servicos_stddev_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_samp_order_by"]: GraphQLTypes["comercial_Combos_Servicos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Combos_Servicos_sum_fields"]: {
		ValorPraticado?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_sum_order_by"]: GraphQLTypes["comercial_Combos_Servicos_sum_order_by"];
	/** update columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_update_column"]: GraphQLTypes["comercial_Combos_Servicos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Combos_Servicos_var_pop_fields"]: {
		ValorPraticado?:number
};
	/** order by var_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_pop_order_by"]: GraphQLTypes["comercial_Combos_Servicos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Combos_Servicos_var_samp_fields"]: {
		ValorPraticado?:number
};
	/** order by var_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_samp_order_by"]: GraphQLTypes["comercial_Combos_Servicos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Combos_Servicos_variance_fields"]: {
		ValorPraticado?:number
};
	/** order by variance() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_variance_order_by"]: GraphQLTypes["comercial_Combos_Servicos_variance_order_by"];
	/** aggregated selection of "comercial.Combos" */
["comercial_Combos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Combos_aggregate_fields"],
	nodes:ModelTypes["comercial_Combos"][]
};
	/** aggregate fields of "comercial.Combos" */
["comercial_Combos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Combos_max_fields"],
	min?:ModelTypes["comercial_Combos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_bool_exp"]: GraphQLTypes["comercial_Combos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Combos" */
["comercial_Combos_constraint"]: GraphQLTypes["comercial_Combos_constraint"];
	/** input type for inserting data into table "comercial.Combos" */
["comercial_Combos_insert_input"]: GraphQLTypes["comercial_Combos_insert_input"];
	/** aggregate max on columns */
["comercial_Combos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Combos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Combos" */
["comercial_Combos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Combos"][]
};
	/** input type for inserting object relation for remote table "comercial.Combos" */
["comercial_Combos_obj_rel_insert_input"]: GraphQLTypes["comercial_Combos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Combos" */
["comercial_Combos_on_conflict"]: GraphQLTypes["comercial_Combos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Combos". */
["comercial_Combos_order_by"]: GraphQLTypes["comercial_Combos_order_by"];
	/** primary key columns input for table: comercial_Combos */
["comercial_Combos_pk_columns_input"]: GraphQLTypes["comercial_Combos_pk_columns_input"];
	/** select columns of table "comercial.Combos" */
["comercial_Combos_select_column"]: GraphQLTypes["comercial_Combos_select_column"];
	/** input type for updating data in table "comercial.Combos" */
["comercial_Combos_set_input"]: GraphQLTypes["comercial_Combos_set_input"];
	/** update columns of table "comercial.Combos" */
["comercial_Combos_update_column"]: GraphQLTypes["comercial_Combos_update_column"];
	/** columns and relationships of "comercial.Condicionais" */
["comercial_Condicionais"]: {
		Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Planos:ModelTypes["comercial_Planos_Condicionais"][],
	/** An aggregate relationship */
	Planos_aggregate:ModelTypes["comercial_Planos_Condicionais_aggregate"],
	/** An object relationship */
	Situacao:ModelTypes["comercial_CondicionaisSituacoes"],
	Situacao_Id:ModelTypes["comercial_CondicionaisSituacoes_enum"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes"]: {
		Comentario:string,
	/** An array relationship */
	Condicionais:ModelTypes["comercial_Condicionais"][],
	/** An aggregate relationship */
	Condicionais_aggregate:ModelTypes["comercial_Condicionais_aggregate"],
	Valor:string
};
	/** aggregated selection of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate"]: {
		aggregate?:ModelTypes["comercial_CondicionaisSituacoes_aggregate_fields"],
	nodes:ModelTypes["comercial_CondicionaisSituacoes"][]
};
	/** aggregate fields of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_CondicionaisSituacoes_max_fields"],
	min?:ModelTypes["comercial_CondicionaisSituacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.CondicionaisSituacoes". All fields are combined with a logical 'AND'. */
["comercial_CondicionaisSituacoes_bool_exp"]: GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"];
	/** unique or primary key constraints on table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_constraint"]: GraphQLTypes["comercial_CondicionaisSituacoes_constraint"];
	["comercial_CondicionaisSituacoes_enum"]: GraphQLTypes["comercial_CondicionaisSituacoes_enum"];
	/** Boolean expression to compare columns of type "comercial_CondicionaisSituacoes_enum". All fields are combined with logical 'AND'. */
["comercial_CondicionaisSituacoes_enum_comparison_exp"]: GraphQLTypes["comercial_CondicionaisSituacoes_enum_comparison_exp"];
	/** input type for inserting data into table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_insert_input"]: GraphQLTypes["comercial_CondicionaisSituacoes_insert_input"];
	/** aggregate max on columns */
["comercial_CondicionaisSituacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["comercial_CondicionaisSituacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_CondicionaisSituacoes"][]
};
	/** input type for inserting object relation for remote table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_obj_rel_insert_input"]: GraphQLTypes["comercial_CondicionaisSituacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_on_conflict"]: GraphQLTypes["comercial_CondicionaisSituacoes_on_conflict"];
	/** Ordering options when selecting data from "comercial.CondicionaisSituacoes". */
["comercial_CondicionaisSituacoes_order_by"]: GraphQLTypes["comercial_CondicionaisSituacoes_order_by"];
	/** primary key columns input for table: comercial_CondicionaisSituacoes */
["comercial_CondicionaisSituacoes_pk_columns_input"]: GraphQLTypes["comercial_CondicionaisSituacoes_pk_columns_input"];
	/** select columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_select_column"]: GraphQLTypes["comercial_CondicionaisSituacoes_select_column"];
	/** input type for updating data in table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_set_input"]: GraphQLTypes["comercial_CondicionaisSituacoes_set_input"];
	/** update columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_update_column"]: GraphQLTypes["comercial_CondicionaisSituacoes_update_column"];
	/** aggregated selection of "comercial.Condicionais" */
["comercial_Condicionais_aggregate"]: {
		aggregate?:ModelTypes["comercial_Condicionais_aggregate_fields"],
	nodes:ModelTypes["comercial_Condicionais"][]
};
	/** aggregate fields of "comercial.Condicionais" */
["comercial_Condicionais_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Condicionais_max_fields"],
	min?:ModelTypes["comercial_Condicionais_min_fields"]
};
	/** order by aggregate values of table "comercial.Condicionais" */
["comercial_Condicionais_aggregate_order_by"]: GraphQLTypes["comercial_Condicionais_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_arr_rel_insert_input"]: GraphQLTypes["comercial_Condicionais_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Condicionais_bool_exp"]: GraphQLTypes["comercial_Condicionais_bool_exp"];
	/** unique or primary key constraints on table "comercial.Condicionais" */
["comercial_Condicionais_constraint"]: GraphQLTypes["comercial_Condicionais_constraint"];
	/** input type for inserting data into table "comercial.Condicionais" */
["comercial_Condicionais_insert_input"]: GraphQLTypes["comercial_Condicionais_insert_input"];
	/** aggregate max on columns */
["comercial_Condicionais_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_max_order_by"]: GraphQLTypes["comercial_Condicionais_max_order_by"];
	/** aggregate min on columns */
["comercial_Condicionais_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_min_order_by"]: GraphQLTypes["comercial_Condicionais_min_order_by"];
	/** response of any mutation on the table "comercial.Condicionais" */
["comercial_Condicionais_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Condicionais"][]
};
	/** input type for inserting object relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_obj_rel_insert_input"]: GraphQLTypes["comercial_Condicionais_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Condicionais" */
["comercial_Condicionais_on_conflict"]: GraphQLTypes["comercial_Condicionais_on_conflict"];
	/** Ordering options when selecting data from "comercial.Condicionais". */
["comercial_Condicionais_order_by"]: GraphQLTypes["comercial_Condicionais_order_by"];
	/** primary key columns input for table: comercial_Condicionais */
["comercial_Condicionais_pk_columns_input"]: GraphQLTypes["comercial_Condicionais_pk_columns_input"];
	/** select columns of table "comercial.Condicionais" */
["comercial_Condicionais_select_column"]: GraphQLTypes["comercial_Condicionais_select_column"];
	/** input type for updating data in table "comercial.Condicionais" */
["comercial_Condicionais_set_input"]: GraphQLTypes["comercial_Condicionais_set_input"];
	/** update columns of table "comercial.Condicionais" */
["comercial_Condicionais_update_column"]: GraphQLTypes["comercial_Condicionais_update_column"];
	/** columns and relationships of "comercial.ContratosBase" */
["comercial_ContratosBase"]: {
		CodigoReferencia:number,
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An object relationship */
	Parceiro:ModelTypes["comercial_Fornecedores"],
	Parceiro_Id:ModelTypes["uuid"],
	/** An array relationship */
	Versoes:ModelTypes["comercial_ContratosBase_Versoes"][],
	/** An aggregate relationship */
	Versoes_aggregate:ModelTypes["comercial_ContratosBase_Versoes_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes"]: {
		/** An object relationship */
	ContratoBase:ModelTypes["comercial_ContratosBase"],
	ContratoBase_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Versao:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate"]: {
		aggregate?:ModelTypes["comercial_ContratosBase_Versoes_aggregate_fields"],
	nodes:ModelTypes["comercial_ContratosBase_Versoes"][]
};
	/** aggregate fields of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_ContratosBase_Versoes_max_fields"],
	min?:ModelTypes["comercial_ContratosBase_Versoes_min_fields"]
};
	/** order by aggregate values of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_order_by"]: GraphQLTypes["comercial_ContratosBase_Versoes_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_arr_rel_insert_input"]: GraphQLTypes["comercial_ContratosBase_Versoes_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.ContratosBase_Versoes". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_Versoes_bool_exp"]: GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"];
	/** unique or primary key constraints on table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_constraint"]: GraphQLTypes["comercial_ContratosBase_Versoes_constraint"];
	/** input type for inserting data into table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_insert_input"]: GraphQLTypes["comercial_ContratosBase_Versoes_insert_input"];
	/** aggregate max on columns */
["comercial_ContratosBase_Versoes_max_fields"]: {
		ContratoBase_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Versao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_max_order_by"]: GraphQLTypes["comercial_ContratosBase_Versoes_max_order_by"];
	/** aggregate min on columns */
["comercial_ContratosBase_Versoes_min_fields"]: {
		ContratoBase_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Versao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_min_order_by"]: GraphQLTypes["comercial_ContratosBase_Versoes_min_order_by"];
	/** response of any mutation on the table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_ContratosBase_Versoes"][]
};
	/** on conflict condition type for table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_on_conflict"]: GraphQLTypes["comercial_ContratosBase_Versoes_on_conflict"];
	/** Ordering options when selecting data from "comercial.ContratosBase_Versoes". */
["comercial_ContratosBase_Versoes_order_by"]: GraphQLTypes["comercial_ContratosBase_Versoes_order_by"];
	/** primary key columns input for table: comercial_ContratosBase_Versoes */
["comercial_ContratosBase_Versoes_pk_columns_input"]: GraphQLTypes["comercial_ContratosBase_Versoes_pk_columns_input"];
	/** select columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_select_column"]: GraphQLTypes["comercial_ContratosBase_Versoes_select_column"];
	/** input type for updating data in table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_set_input"]: GraphQLTypes["comercial_ContratosBase_Versoes_set_input"];
	/** update columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_update_column"]: GraphQLTypes["comercial_ContratosBase_Versoes_update_column"];
	/** aggregated selection of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate"]: {
		aggregate?:ModelTypes["comercial_ContratosBase_aggregate_fields"],
	nodes:ModelTypes["comercial_ContratosBase"][]
};
	/** aggregate fields of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_fields"]: {
		avg?:ModelTypes["comercial_ContratosBase_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_ContratosBase_max_fields"],
	min?:ModelTypes["comercial_ContratosBase_min_fields"],
	stddev?:ModelTypes["comercial_ContratosBase_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_ContratosBase_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_ContratosBase_stddev_samp_fields"],
	sum?:ModelTypes["comercial_ContratosBase_sum_fields"],
	var_pop?:ModelTypes["comercial_ContratosBase_var_pop_fields"],
	var_samp?:ModelTypes["comercial_ContratosBase_var_samp_fields"],
	variance?:ModelTypes["comercial_ContratosBase_variance_fields"]
};
	/** order by aggregate values of table "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_order_by"]: GraphQLTypes["comercial_ContratosBase_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_arr_rel_insert_input"]: GraphQLTypes["comercial_ContratosBase_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_ContratosBase_avg_fields"]: {
		CodigoReferencia?:number
};
	/** order by avg() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_avg_order_by"]: GraphQLTypes["comercial_ContratosBase_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.ContratosBase". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_bool_exp"]: GraphQLTypes["comercial_ContratosBase_bool_exp"];
	/** unique or primary key constraints on table "comercial.ContratosBase" */
["comercial_ContratosBase_constraint"]: GraphQLTypes["comercial_ContratosBase_constraint"];
	/** input type for incrementing numeric columns in table "comercial.ContratosBase" */
["comercial_ContratosBase_inc_input"]: GraphQLTypes["comercial_ContratosBase_inc_input"];
	/** input type for inserting data into table "comercial.ContratosBase" */
["comercial_ContratosBase_insert_input"]: GraphQLTypes["comercial_ContratosBase_insert_input"];
	/** aggregate max on columns */
["comercial_ContratosBase_max_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Parceiro_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_max_order_by"]: GraphQLTypes["comercial_ContratosBase_max_order_by"];
	/** aggregate min on columns */
["comercial_ContratosBase_min_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Parceiro_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_min_order_by"]: GraphQLTypes["comercial_ContratosBase_min_order_by"];
	/** response of any mutation on the table "comercial.ContratosBase" */
["comercial_ContratosBase_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_ContratosBase"][]
};
	/** input type for inserting object relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_obj_rel_insert_input"]: GraphQLTypes["comercial_ContratosBase_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.ContratosBase" */
["comercial_ContratosBase_on_conflict"]: GraphQLTypes["comercial_ContratosBase_on_conflict"];
	/** Ordering options when selecting data from "comercial.ContratosBase". */
["comercial_ContratosBase_order_by"]: GraphQLTypes["comercial_ContratosBase_order_by"];
	/** primary key columns input for table: comercial_ContratosBase */
["comercial_ContratosBase_pk_columns_input"]: GraphQLTypes["comercial_ContratosBase_pk_columns_input"];
	/** select columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_select_column"]: GraphQLTypes["comercial_ContratosBase_select_column"];
	/** input type for updating data in table "comercial.ContratosBase" */
["comercial_ContratosBase_set_input"]: GraphQLTypes["comercial_ContratosBase_set_input"];
	/** aggregate stddev on columns */
["comercial_ContratosBase_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_order_by"]: GraphQLTypes["comercial_ContratosBase_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_ContratosBase_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_pop_order_by"]: GraphQLTypes["comercial_ContratosBase_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_ContratosBase_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_samp_order_by"]: GraphQLTypes["comercial_ContratosBase_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_ContratosBase_sum_fields"]: {
		CodigoReferencia?:number
};
	/** order by sum() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_sum_order_by"]: GraphQLTypes["comercial_ContratosBase_sum_order_by"];
	/** update columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_update_column"]: GraphQLTypes["comercial_ContratosBase_update_column"];
	/** aggregate var_pop on columns */
["comercial_ContratosBase_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_pop_order_by"]: GraphQLTypes["comercial_ContratosBase_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_ContratosBase_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_samp_order_by"]: GraphQLTypes["comercial_ContratosBase_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_ContratosBase_variance_fields"]: {
		CodigoReferencia?:number
};
	/** order by variance() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_variance_order_by"]: GraphQLTypes["comercial_ContratosBase_variance_order_by"];
	/** columns and relationships of "comercial.Fornecedores" */
["comercial_Fornecedores"]: {
		/** An array relationship */
	ContratosBases:ModelTypes["comercial_ContratosBase"][],
	/** An aggregate relationship */
	ContratosBases_aggregate:ModelTypes["comercial_ContratosBase_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Produtos:ModelTypes["comercial_Fornecedores_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["comercial_Fornecedores_Produtos_aggregate"],
	/** An array relationship */
	Servicos:ModelTypes["comercial_Fornecedores_Servicos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Fornecedores_Servicos_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos"]: {
		/** An object relationship */
	Fornecedor:ModelTypes["comercial_Fornecedores"],
	Fornecedor_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Precos:ModelTypes["comercial_Fornecedores_Produtos_Precos"][],
	/** An aggregate relationship */
	Precos_aggregate:ModelTypes["comercial_Fornecedores_Produtos_Precos_aggregate"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	Produto_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos"]: {
		/** An array relationship */
	CombosProdutos:ModelTypes["comercial_Combos_Produtos"][],
	/** An aggregate relationship */
	CombosProdutos_aggregate:ModelTypes["comercial_Combos_Produtos_aggregate"],
	Fornecedor_Produto_Id:ModelTypes["uuid"],
	/** An object relationship */
	Fornecedores_Produto:ModelTypes["comercial_Fornecedores_Produtos"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	PropostasProdutos:ModelTypes["comercial_Propostas_Produtos"][],
	/** An aggregate relationship */
	PropostasProdutos_aggregate:ModelTypes["comercial_Propostas_Produtos_aggregate"],
	/** An object relationship */
	TipoDeRecorrencia?:ModelTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id?:ModelTypes["vendas_TiposDeRecorrencia_enum"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_Produtos_Precos_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores_Produtos_Precos"][]
};
	/** aggregate fields of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Fornecedores_Produtos_Precos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Fornecedores_Produtos_Precos_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_Produtos_Precos_min_fields"],
	stddev?:ModelTypes["comercial_Fornecedores_Produtos_Precos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Fornecedores_Produtos_Precos_sum_fields"],
	var_pop?:ModelTypes["comercial_Fornecedores_Produtos_Precos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Fornecedores_Produtos_Precos_var_samp_fields"],
	variance?:ModelTypes["comercial_Fornecedores_Produtos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Fornecedores_Produtos_Precos_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_avg_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_Precos_bool_exp"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_constraint"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_inc_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_inc_input"];
	/** input type for inserting data into table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_Precos_max_fields"]: {
		Fornecedor_Produto_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_max_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_max_order_by"];
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_Precos_min_fields"]: {
		Fornecedor_Produto_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_min_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_min_order_by"];
	/** response of any mutation on the table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores_Produtos_Precos"][]
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_on_conflict"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos_Precos". */
["comercial_Fornecedores_Produtos_Precos_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_order_by"];
	/** primary key columns input for table: comercial_Fornecedores_Produtos_Precos */
["comercial_Fornecedores_Produtos_Precos_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_select_column"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_select_column"];
	/** input type for updating data in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_set_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_set_input"];
	/** aggregate stddev on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Fornecedores_Produtos_Precos_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_sum_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_sum_order_by"];
	/** update columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_update_column"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Produtos_Precos_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Produtos_Precos_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Fornecedores_Produtos_Precos_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_variance_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_variance_order_by"];
	/** aggregated selection of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores_Produtos"][]
};
	/** aggregate fields of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Fornecedores_Produtos_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_bool_exp"]: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_constraint"]: GraphQLTypes["comercial_Fornecedores_Produtos_constraint"];
	/** input type for inserting data into table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_max_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_max_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_min_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_min_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores_Produtos"][]
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_obj_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_on_conflict"]: GraphQLTypes["comercial_Fornecedores_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos". */
["comercial_Fornecedores_Produtos_order_by"]: GraphQLTypes["comercial_Fornecedores_Produtos_order_by"];
	/** primary key columns input for table: comercial_Fornecedores_Produtos */
["comercial_Fornecedores_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_select_column"]: GraphQLTypes["comercial_Fornecedores_Produtos_select_column"];
	/** input type for updating data in table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_set_input"]: GraphQLTypes["comercial_Fornecedores_Produtos_set_input"];
	/** update columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_update_column"]: GraphQLTypes["comercial_Fornecedores_Produtos_update_column"];
	/** columns and relationships of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos"]: {
		/** An object relationship */
	Fornecedor:ModelTypes["comercial_Fornecedores"],
	Fornecedor_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Precos:ModelTypes["comercial_Fornecedores_Servicos_Precos"][],
	/** An aggregate relationship */
	Precos_aggregate:ModelTypes["comercial_Fornecedores_Servicos_Precos_aggregate"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	/** An array relationship */
	Tarifas:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"][],
	/** An aggregate relationship */
	Tarifas_aggregate:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos"]: {
		/** An array relationship */
	CombosServicos:ModelTypes["comercial_Combos_Servicos"][],
	/** An aggregate relationship */
	CombosServicos_aggregate:ModelTypes["comercial_Combos_Servicos_aggregate"],
	Fornecedor_Servico_Id:ModelTypes["uuid"],
	/** An object relationship */
	Fornecedores_Servico:ModelTypes["comercial_Fornecedores_Servicos"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	PropostasServicos:ModelTypes["comercial_Propostas_Servicos"][],
	/** An aggregate relationship */
	PropostasServicos_aggregate:ModelTypes["comercial_Propostas_Servicos_aggregate"],
	/** An object relationship */
	TipoDeRecorrencia:ModelTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id:ModelTypes["vendas_TiposDeRecorrencia_enum"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_Servicos_Precos_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores_Servicos_Precos"][]
};
	/** aggregate fields of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Fornecedores_Servicos_Precos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Fornecedores_Servicos_Precos_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_Servicos_Precos_min_fields"],
	stddev?:ModelTypes["comercial_Fornecedores_Servicos_Precos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Fornecedores_Servicos_Precos_sum_fields"],
	var_pop?:ModelTypes["comercial_Fornecedores_Servicos_Precos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Fornecedores_Servicos_Precos_var_samp_fields"],
	variance?:ModelTypes["comercial_Fornecedores_Servicos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Precos_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_avg_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Precos_bool_exp"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_constraint"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_inc_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_inc_input"];
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Precos_max_fields"]: {
		Fornecedor_Servico_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_max_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_max_order_by"];
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Precos_min_fields"]: {
		Fornecedor_Servico_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_min_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_min_order_by"];
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores_Servicos_Precos"][]
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_on_conflict"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Precos". */
["comercial_Fornecedores_Servicos_Precos_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_order_by"];
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Precos */
["comercial_Fornecedores_Servicos_Precos_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_select_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_select_column"];
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_set_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_set_input"];
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Precos_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_sum_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_sum_order_by"];
	/** update columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_update_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Precos_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Precos_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Precos_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_variance_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_variance_order_by"];
	/** columns and relationships of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas"]: {
		Fornecedor_Servico_Id:ModelTypes["uuid"],
	/** An object relationship */
	Fornecedores_Servico:ModelTypes["comercial_Fornecedores_Servicos"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Tarifa:ModelTypes["comercial_Tarifas"],
	Tarifa_Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"][]
};
	/** aggregate fields of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_min_fields"],
	stddev?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_sum_fields"],
	var_pop?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"],
	variance?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Tarifas_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_constraint"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_inc_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_inc_input"];
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Tarifas_max_fields"]: {
		Fornecedor_Servico_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Tarifa_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_max_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_max_order_by"];
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Tarifas_min_fields"]: {
		Fornecedor_Servico_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Tarifa_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_min_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_min_order_by"];
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"][]
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_on_conflict"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Tarifas". */
["comercial_Fornecedores_Servicos_Tarifas_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_order_by"];
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Tarifas */
["comercial_Fornecedores_Servicos_Tarifas_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_select_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_select_column"];
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_set_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_set_input"];
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Tarifas_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"];
	/** update columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_update_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_update_column"];
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Tarifas_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"];
	/** aggregated selection of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores_Servicos"][]
};
	/** aggregate fields of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Fornecedores_Servicos_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_bool_exp"]: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_constraint"]: GraphQLTypes["comercial_Fornecedores_Servicos_constraint"];
	/** input type for inserting data into table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_max_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_max_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_min_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_min_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores_Servicos"][]
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_obj_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_on_conflict"]: GraphQLTypes["comercial_Fornecedores_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos". */
["comercial_Fornecedores_Servicos_order_by"]: GraphQLTypes["comercial_Fornecedores_Servicos_order_by"];
	/** primary key columns input for table: comercial_Fornecedores_Servicos */
["comercial_Fornecedores_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_select_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_select_column"];
	/** input type for updating data in table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_set_input"]: GraphQLTypes["comercial_Fornecedores_Servicos_set_input"];
	/** update columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_update_column"]: GraphQLTypes["comercial_Fornecedores_Servicos_update_column"];
	/** aggregated selection of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate"]: {
		aggregate?:ModelTypes["comercial_Fornecedores_aggregate_fields"],
	nodes:ModelTypes["comercial_Fornecedores"][]
};
	/** aggregate fields of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Fornecedores_max_fields"],
	min?:ModelTypes["comercial_Fornecedores_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_bool_exp"]: GraphQLTypes["comercial_Fornecedores_bool_exp"];
	/** unique or primary key constraints on table "comercial.Fornecedores" */
["comercial_Fornecedores_constraint"]: GraphQLTypes["comercial_Fornecedores_constraint"];
	/** input type for inserting data into table "comercial.Fornecedores" */
["comercial_Fornecedores_insert_input"]: GraphQLTypes["comercial_Fornecedores_insert_input"];
	/** aggregate max on columns */
["comercial_Fornecedores_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Fornecedores" */
["comercial_Fornecedores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Fornecedores"][]
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores" */
["comercial_Fornecedores_obj_rel_insert_input"]: GraphQLTypes["comercial_Fornecedores_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Fornecedores" */
["comercial_Fornecedores_on_conflict"]: GraphQLTypes["comercial_Fornecedores_on_conflict"];
	/** Ordering options when selecting data from "comercial.Fornecedores". */
["comercial_Fornecedores_order_by"]: GraphQLTypes["comercial_Fornecedores_order_by"];
	/** primary key columns input for table: comercial_Fornecedores */
["comercial_Fornecedores_pk_columns_input"]: GraphQLTypes["comercial_Fornecedores_pk_columns_input"];
	/** select columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_select_column"]: GraphQLTypes["comercial_Fornecedores_select_column"];
	/** input type for updating data in table "comercial.Fornecedores" */
["comercial_Fornecedores_set_input"]: GraphQLTypes["comercial_Fornecedores_set_input"];
	/** update columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_update_column"]: GraphQLTypes["comercial_Fornecedores_update_column"];
	/** columns and relationships of "comercial.Planos" */
["comercial_Planos"]: {
		/** An array relationship */
	Combos:ModelTypes["comercial_Combos_Planos"][],
	/** An aggregate relationship */
	Combos_aggregate:ModelTypes["comercial_Combos_Planos_aggregate"],
	/** An array relationship */
	Condicionais:ModelTypes["comercial_Planos_Condicionais"][],
	/** An aggregate relationship */
	Condicionais_aggregate:ModelTypes["comercial_Planos_Condicionais_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Precos:ModelTypes["comercial_Planos_Precos"][],
	/** An aggregate relationship */
	Precos_aggregate:ModelTypes["comercial_Planos_Precos_aggregate"],
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas_Planos"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_Planos_aggregate"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais"]: {
		/** An object relationship */
	Condicional:ModelTypes["comercial_Condicionais"],
	Condicional_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Plano:ModelTypes["comercial_Planos"],
	Plano_Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate"]: {
		aggregate?:ModelTypes["comercial_Planos_Condicionais_aggregate_fields"],
	nodes:ModelTypes["comercial_Planos_Condicionais"][]
};
	/** aggregate fields of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Planos_Condicionais_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Planos_Condicionais_max_fields"],
	min?:ModelTypes["comercial_Planos_Condicionais_min_fields"],
	stddev?:ModelTypes["comercial_Planos_Condicionais_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Planos_Condicionais_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Planos_Condicionais_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Planos_Condicionais_sum_fields"],
	var_pop?:ModelTypes["comercial_Planos_Condicionais_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Planos_Condicionais_var_samp_fields"],
	variance?:ModelTypes["comercial_Planos_Condicionais_variance_fields"]
};
	/** order by aggregate values of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_arr_rel_insert_input"]: GraphQLTypes["comercial_Planos_Condicionais_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Planos_Condicionais_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_avg_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Planos_Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Planos_Condicionais_bool_exp"]: GraphQLTypes["comercial_Planos_Condicionais_bool_exp"];
	/** unique or primary key constraints on table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_constraint"]: GraphQLTypes["comercial_Planos_Condicionais_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_inc_input"]: GraphQLTypes["comercial_Planos_Condicionais_inc_input"];
	/** input type for inserting data into table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_insert_input"]: GraphQLTypes["comercial_Planos_Condicionais_insert_input"];
	/** aggregate max on columns */
["comercial_Planos_Condicionais_max_fields"]: {
		Condicional_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_max_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_max_order_by"];
	/** aggregate min on columns */
["comercial_Planos_Condicionais_min_fields"]: {
		Condicional_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_min_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_min_order_by"];
	/** response of any mutation on the table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Planos_Condicionais"][]
};
	/** on conflict condition type for table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_on_conflict"]: GraphQLTypes["comercial_Planos_Condicionais_on_conflict"];
	/** Ordering options when selecting data from "comercial.Planos_Condicionais". */
["comercial_Planos_Condicionais_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_order_by"];
	/** primary key columns input for table: comercial_Planos_Condicionais */
["comercial_Planos_Condicionais_pk_columns_input"]: GraphQLTypes["comercial_Planos_Condicionais_pk_columns_input"];
	/** select columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_select_column"]: GraphQLTypes["comercial_Planos_Condicionais_select_column"];
	/** input type for updating data in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_set_input"]: GraphQLTypes["comercial_Planos_Condicionais_set_input"];
	/** aggregate stddev on columns */
["comercial_Planos_Condicionais_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Planos_Condicionais_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_pop_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Planos_Condicionais_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_samp_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Planos_Condicionais_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_sum_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_sum_order_by"];
	/** update columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_update_column"]: GraphQLTypes["comercial_Planos_Condicionais_update_column"];
	/** aggregate var_pop on columns */
["comercial_Planos_Condicionais_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_pop_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Planos_Condicionais_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_samp_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Planos_Condicionais_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_variance_order_by"]: GraphQLTypes["comercial_Planos_Condicionais_variance_order_by"];
	/** columns and relationships of "comercial.Planos_Precos" */
["comercial_Planos_Precos"]: {
		/** An array relationship */
	CombosPlanos:ModelTypes["comercial_Combos_Planos"][],
	/** An aggregate relationship */
	CombosPlanos_aggregate:ModelTypes["comercial_Combos_Planos_aggregate"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Plano:ModelTypes["comercial_Planos"],
	Plano_Id:ModelTypes["uuid"],
	/** An array relationship */
	PropostasPlanos:ModelTypes["comercial_Propostas_Planos"][],
	/** An aggregate relationship */
	PropostasPlanos_aggregate:ModelTypes["comercial_Propostas_Planos_aggregate"],
	/** An object relationship */
	ServicoPreco:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicoPreco_Id:ModelTypes["uuid"],
	ValorBase:ModelTypes["float8"],
	ValorPraticado?:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Planos_Precos_aggregate_fields"],
	nodes:ModelTypes["comercial_Planos_Precos"][]
};
	/** aggregate fields of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Planos_Precos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Planos_Precos_max_fields"],
	min?:ModelTypes["comercial_Planos_Precos_min_fields"],
	stddev?:ModelTypes["comercial_Planos_Precos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Planos_Precos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Planos_Precos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Planos_Precos_sum_fields"],
	var_pop?:ModelTypes["comercial_Planos_Precos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Planos_Precos_var_samp_fields"],
	variance?:ModelTypes["comercial_Planos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_order_by"]: GraphQLTypes["comercial_Planos_Precos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_arr_rel_insert_input"]: GraphQLTypes["comercial_Planos_Precos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Planos_Precos_avg_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by avg() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_avg_order_by"]: GraphQLTypes["comercial_Planos_Precos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Planos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Planos_Precos_bool_exp"]: GraphQLTypes["comercial_Planos_Precos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Planos_Precos" */
["comercial_Planos_Precos_constraint"]: GraphQLTypes["comercial_Planos_Precos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_inc_input"]: GraphQLTypes["comercial_Planos_Precos_inc_input"];
	/** input type for inserting data into table "comercial.Planos_Precos" */
["comercial_Planos_Precos_insert_input"]: GraphQLTypes["comercial_Planos_Precos_insert_input"];
	/** aggregate max on columns */
["comercial_Planos_Precos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	ServicoPreco_Id?:ModelTypes["uuid"],
	ValorBase?:ModelTypes["float8"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_max_order_by"]: GraphQLTypes["comercial_Planos_Precos_max_order_by"];
	/** aggregate min on columns */
["comercial_Planos_Precos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	ServicoPreco_Id?:ModelTypes["uuid"],
	ValorBase?:ModelTypes["float8"],
	ValorPraticado?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_min_order_by"]: GraphQLTypes["comercial_Planos_Precos_min_order_by"];
	/** response of any mutation on the table "comercial.Planos_Precos" */
["comercial_Planos_Precos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Planos_Precos"][]
};
	/** input type for inserting object relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_obj_rel_insert_input"]: GraphQLTypes["comercial_Planos_Precos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Planos_Precos" */
["comercial_Planos_Precos_on_conflict"]: GraphQLTypes["comercial_Planos_Precos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Planos_Precos". */
["comercial_Planos_Precos_order_by"]: GraphQLTypes["comercial_Planos_Precos_order_by"];
	/** primary key columns input for table: comercial_Planos_Precos */
["comercial_Planos_Precos_pk_columns_input"]: GraphQLTypes["comercial_Planos_Precos_pk_columns_input"];
	/** select columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_select_column"]: GraphQLTypes["comercial_Planos_Precos_select_column"];
	/** input type for updating data in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_set_input"]: GraphQLTypes["comercial_Planos_Precos_set_input"];
	/** aggregate stddev on columns */
["comercial_Planos_Precos_stddev_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by stddev() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_order_by"]: GraphQLTypes["comercial_Planos_Precos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Planos_Precos_stddev_pop_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by stddev_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_pop_order_by"]: GraphQLTypes["comercial_Planos_Precos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Planos_Precos_stddev_samp_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by stddev_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_samp_order_by"]: GraphQLTypes["comercial_Planos_Precos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Planos_Precos_sum_fields"]: {
		ValorBase?:ModelTypes["float8"],
	ValorPraticado?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_sum_order_by"]: GraphQLTypes["comercial_Planos_Precos_sum_order_by"];
	/** update columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_update_column"]: GraphQLTypes["comercial_Planos_Precos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Planos_Precos_var_pop_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by var_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_pop_order_by"]: GraphQLTypes["comercial_Planos_Precos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Planos_Precos_var_samp_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by var_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_samp_order_by"]: GraphQLTypes["comercial_Planos_Precos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Planos_Precos_variance_fields"]: {
		ValorBase?:number,
	ValorPraticado?:number
};
	/** order by variance() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_variance_order_by"]: GraphQLTypes["comercial_Planos_Precos_variance_order_by"];
	/** aggregated selection of "comercial.Planos" */
["comercial_Planos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Planos_aggregate_fields"],
	nodes:ModelTypes["comercial_Planos"][]
};
	/** aggregate fields of "comercial.Planos" */
["comercial_Planos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Planos_max_fields"],
	min?:ModelTypes["comercial_Planos_min_fields"]
};
	/** order by aggregate values of table "comercial.Planos" */
["comercial_Planos_aggregate_order_by"]: GraphQLTypes["comercial_Planos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Planos" */
["comercial_Planos_arr_rel_insert_input"]: GraphQLTypes["comercial_Planos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Planos". All fields are combined with a logical 'AND'. */
["comercial_Planos_bool_exp"]: GraphQLTypes["comercial_Planos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Planos" */
["comercial_Planos_constraint"]: GraphQLTypes["comercial_Planos_constraint"];
	/** input type for inserting data into table "comercial.Planos" */
["comercial_Planos_insert_input"]: GraphQLTypes["comercial_Planos_insert_input"];
	/** aggregate max on columns */
["comercial_Planos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos" */
["comercial_Planos_max_order_by"]: GraphQLTypes["comercial_Planos_max_order_by"];
	/** aggregate min on columns */
["comercial_Planos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos" */
["comercial_Planos_min_order_by"]: GraphQLTypes["comercial_Planos_min_order_by"];
	/** response of any mutation on the table "comercial.Planos" */
["comercial_Planos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Planos"][]
};
	/** input type for inserting object relation for remote table "comercial.Planos" */
["comercial_Planos_obj_rel_insert_input"]: GraphQLTypes["comercial_Planos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Planos" */
["comercial_Planos_on_conflict"]: GraphQLTypes["comercial_Planos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Planos". */
["comercial_Planos_order_by"]: GraphQLTypes["comercial_Planos_order_by"];
	/** primary key columns input for table: comercial_Planos */
["comercial_Planos_pk_columns_input"]: GraphQLTypes["comercial_Planos_pk_columns_input"];
	/** select columns of table "comercial.Planos" */
["comercial_Planos_select_column"]: GraphQLTypes["comercial_Planos_select_column"];
	/** input type for updating data in table "comercial.Planos" */
["comercial_Planos_set_input"]: GraphQLTypes["comercial_Planos_set_input"];
	/** update columns of table "comercial.Planos" */
["comercial_Planos_update_column"]: GraphQLTypes["comercial_Planos_update_column"];
	/** columns and relationships of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Prestador:ModelTypes["identidades_Fornecedores"],
	Prestador_Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_PrestadorDeServicos_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_PrestadorDeServicos_Servicos"][]
};
	/** aggregate fields of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_PrestadorDeServicos_Servicos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_PrestadorDeServicos_Servicos_max_fields"],
	min?:ModelTypes["comercial_PrestadorDeServicos_Servicos_min_fields"],
	stddev?:ModelTypes["comercial_PrestadorDeServicos_Servicos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_PrestadorDeServicos_Servicos_sum_fields"],
	var_pop?:ModelTypes["comercial_PrestadorDeServicos_Servicos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_PrestadorDeServicos_Servicos_var_samp_fields"],
	variance?:ModelTypes["comercial_PrestadorDeServicos_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_PrestadorDeServicos_Servicos_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_avg_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.PrestadorDeServicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_PrestadorDeServicos_Servicos_bool_exp"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_constraint"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_inc_input"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_inc_input"];
	/** input type for inserting data into table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_insert_input"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_PrestadorDeServicos_Servicos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Prestador_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_max_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_PrestadorDeServicos_Servicos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Prestador_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_min_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_PrestadorDeServicos_Servicos"][]
};
	/** on conflict condition type for table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_on_conflict"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.PrestadorDeServicos_Servicos". */
["comercial_PrestadorDeServicos_Servicos_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_order_by"];
	/** primary key columns input for table: comercial_PrestadorDeServicos_Servicos */
["comercial_PrestadorDeServicos_Servicos_pk_columns_input"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_pk_columns_input"];
	/** select columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_select_column"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_select_column"];
	/** input type for updating data in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_set_input"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_set_input"];
	/** aggregate stddev on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_PrestadorDeServicos_Servicos_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_sum_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_sum_order_by"];
	/** update columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_update_column"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_update_column"];
	/** aggregate var_pop on columns */
["comercial_PrestadorDeServicos_Servicos_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_PrestadorDeServicos_Servicos_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_PrestadorDeServicos_Servicos_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_variance_order_by"]: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_variance_order_by"];
	/** columns and relationships of "comercial.Produtos" */
["comercial_Produtos"]: {
		/** An array relationship */
	Atributos:ModelTypes["comercial_Produtos_Atributos"][],
	/** An aggregate relationship */
	Atributos_aggregate:ModelTypes["comercial_Produtos_Atributos_aggregate"],
	Categorias:ModelTypes["jsonb"],
	/** An array relationship */
	Combos:ModelTypes["comercial_Combos_Produtos"][],
	/** An aggregate relationship */
	Combos_aggregate:ModelTypes["comercial_Combos_Produtos_aggregate"],
	/** An array relationship */
	Fornecedores:ModelTypes["comercial_Fornecedores_Produtos"][],
	/** An aggregate relationship */
	Fornecedores_aggregate:ModelTypes["comercial_Fornecedores_Produtos_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Oportunidades:ModelTypes["comercial_Produtos_Oportunidades"][],
	/** An aggregate relationship */
	Oportunidades_aggregate:ModelTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** An array relationship */
	ProdutosDependentes:ModelTypes["comercial_Produtos_Produtos"][],
	/** An aggregate relationship */
	ProdutosDependentes_aggregate:ModelTypes["comercial_Produtos_Produtos_aggregate"],
	/** An array relationship */
	ProdutosQueDependo:ModelTypes["comercial_Produtos_Produtos"][],
	/** An aggregate relationship */
	ProdutosQueDependo_aggregate:ModelTypes["comercial_Produtos_Produtos_aggregate"],
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas_Produtos"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_Produtos_aggregate"],
	/** An array relationship */
	Servicos:ModelTypes["comercial_Produtos_Servicos"][],
	/** An array relationship */
	Servicos_Produtos:ModelTypes["comercial_Servicos_Produtos"][],
	/** An aggregate relationship */
	Servicos_Produtos_aggregate:ModelTypes["comercial_Servicos_Produtos_aggregate"],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Produtos_Servicos_aggregate"],
	/** An object relationship */
	Tipo:ModelTypes["comercial_Produtos_Tipos"],
	Tipo_Id:ModelTypes["comercial_Produtos_Tipos_enum"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos"]: {
		/** An object relationship */
	Atributo:ModelTypes["comercial_Atributos"],
	Atributo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	Produto_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_Atributos_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos_Atributos"][]
};
	/** aggregate fields of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Produtos_Atributos_max_fields"],
	min?:ModelTypes["comercial_Produtos_Atributos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_order_by"]: GraphQLTypes["comercial_Produtos_Atributos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_arr_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Atributos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Produtos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Atributos_bool_exp"]: GraphQLTypes["comercial_Produtos_Atributos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_constraint"]: GraphQLTypes["comercial_Produtos_Atributos_constraint"];
	/** input type for inserting data into table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_insert_input"]: GraphQLTypes["comercial_Produtos_Atributos_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_Atributos_max_fields"]: {
		Atributo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_max_order_by"]: GraphQLTypes["comercial_Produtos_Atributos_max_order_by"];
	/** aggregate min on columns */
["comercial_Produtos_Atributos_min_fields"]: {
		Atributo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_min_order_by"]: GraphQLTypes["comercial_Produtos_Atributos_min_order_by"];
	/** response of any mutation on the table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos_Atributos"][]
};
	/** on conflict condition type for table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_on_conflict"]: GraphQLTypes["comercial_Produtos_Atributos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos_Atributos". */
["comercial_Produtos_Atributos_order_by"]: GraphQLTypes["comercial_Produtos_Atributos_order_by"];
	/** primary key columns input for table: comercial_Produtos_Atributos */
["comercial_Produtos_Atributos_pk_columns_input"]: GraphQLTypes["comercial_Produtos_Atributos_pk_columns_input"];
	/** select columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_select_column"]: GraphQLTypes["comercial_Produtos_Atributos_select_column"];
	/** input type for updating data in table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_set_input"]: GraphQLTypes["comercial_Produtos_Atributos_set_input"];
	/** update columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_update_column"]: GraphQLTypes["comercial_Produtos_Atributos_update_column"];
	/** columns and relationships of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	OportunidadesDePropostas:ModelTypes["comercial_Propostas_Oportunidades"][],
	/** An aggregate relationship */
	OportunidadesDePropostas_aggregate:ModelTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	Produto_Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_Oportunidades_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos_Oportunidades"][]
};
	/** aggregate fields of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Produtos_Oportunidades_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Produtos_Oportunidades_max_fields"],
	min?:ModelTypes["comercial_Produtos_Oportunidades_min_fields"],
	stddev?:ModelTypes["comercial_Produtos_Oportunidades_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Produtos_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Produtos_Oportunidades_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Produtos_Oportunidades_sum_fields"],
	var_pop?:ModelTypes["comercial_Produtos_Oportunidades_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Produtos_Oportunidades_var_samp_fields"],
	variance?:ModelTypes["comercial_Produtos_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_arr_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Produtos_Oportunidades_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_avg_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Produtos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Oportunidades_bool_exp"]: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_constraint"]: GraphQLTypes["comercial_Produtos_Oportunidades_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_inc_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_inc_input"];
	/** input type for inserting data into table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_insert_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_Oportunidades_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Produto_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_max_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_max_order_by"];
	/** aggregate min on columns */
["comercial_Produtos_Oportunidades_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Produto_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_min_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_min_order_by"];
	/** response of any mutation on the table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos_Oportunidades"][]
};
	/** input type for inserting object relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_obj_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_on_conflict"]: GraphQLTypes["comercial_Produtos_Oportunidades_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos_Oportunidades". */
["comercial_Produtos_Oportunidades_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_order_by"];
	/** primary key columns input for table: comercial_Produtos_Oportunidades */
["comercial_Produtos_Oportunidades_pk_columns_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_pk_columns_input"];
	/** select columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_select_column"]: GraphQLTypes["comercial_Produtos_Oportunidades_select_column"];
	/** input type for updating data in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_set_input"]: GraphQLTypes["comercial_Produtos_Oportunidades_set_input"];
	/** aggregate stddev on columns */
["comercial_Produtos_Oportunidades_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Produtos_Oportunidades_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_pop_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Produtos_Oportunidades_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_samp_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Produtos_Oportunidades_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_sum_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_sum_order_by"];
	/** update columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_update_column"]: GraphQLTypes["comercial_Produtos_Oportunidades_update_column"];
	/** aggregate var_pop on columns */
["comercial_Produtos_Oportunidades_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_pop_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Produtos_Oportunidades_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_samp_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Produtos_Oportunidades_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_variance_order_by"]: GraphQLTypes["comercial_Produtos_Oportunidades_variance_order_by"];
	/** columns and relationships of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoDependente:ModelTypes["comercial_Produtos"],
	ProdutoDependente_Id:ModelTypes["uuid"],
	Produto_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos_Produtos"][]
};
	/** aggregate fields of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Produtos_Produtos_max_fields"],
	min?:ModelTypes["comercial_Produtos_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Produtos_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Produtos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Produtos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Produtos_bool_exp"]: GraphQLTypes["comercial_Produtos_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_constraint"]: GraphQLTypes["comercial_Produtos_Produtos_constraint"];
	/** input type for inserting data into table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_insert_input"]: GraphQLTypes["comercial_Produtos_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_Produtos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	ProdutoDependente_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_max_order_by"]: GraphQLTypes["comercial_Produtos_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Produtos_Produtos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	ProdutoDependente_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_min_order_by"]: GraphQLTypes["comercial_Produtos_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos_Produtos"][]
};
	/** on conflict condition type for table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_on_conflict"]: GraphQLTypes["comercial_Produtos_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos_Produtos". */
["comercial_Produtos_Produtos_order_by"]: GraphQLTypes["comercial_Produtos_Produtos_order_by"];
	/** primary key columns input for table: comercial_Produtos_Produtos */
["comercial_Produtos_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Produtos_Produtos_pk_columns_input"];
	/** select columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_select_column"]: GraphQLTypes["comercial_Produtos_Produtos_select_column"];
	/** input type for updating data in table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_set_input"]: GraphQLTypes["comercial_Produtos_Produtos_set_input"];
	/** update columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_update_column"]: GraphQLTypes["comercial_Produtos_Produtos_update_column"];
	/** columns and relationships of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	Produto_Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos_Servicos"][]
};
	/** aggregate fields of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Produtos_Servicos_max_fields"],
	min?:ModelTypes["comercial_Produtos_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Produtos_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Servicos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Produtos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Servicos_bool_exp"]: GraphQLTypes["comercial_Produtos_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_constraint"]: GraphQLTypes["comercial_Produtos_Servicos_constraint"];
	/** input type for inserting data into table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_insert_input"]: GraphQLTypes["comercial_Produtos_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_Servicos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_max_order_by"]: GraphQLTypes["comercial_Produtos_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Produtos_Servicos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_min_order_by"]: GraphQLTypes["comercial_Produtos_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos_Servicos"][]
};
	/** on conflict condition type for table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_on_conflict"]: GraphQLTypes["comercial_Produtos_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos_Servicos". */
["comercial_Produtos_Servicos_order_by"]: GraphQLTypes["comercial_Produtos_Servicos_order_by"];
	/** primary key columns input for table: comercial_Produtos_Servicos */
["comercial_Produtos_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Produtos_Servicos_pk_columns_input"];
	/** select columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_select_column"]: GraphQLTypes["comercial_Produtos_Servicos_select_column"];
	/** input type for updating data in table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_set_input"]: GraphQLTypes["comercial_Produtos_Servicos_set_input"];
	/** update columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_update_column"]: GraphQLTypes["comercial_Produtos_Servicos_update_column"];
	/** columns and relationships of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos"]: {
		Comentario:string,
	/** An array relationship */
	Produtos:ModelTypes["comercial_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["comercial_Produtos_aggregate"],
	Valor:string
};
	/** aggregated selection of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_Tipos_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos_Tipos"][]
};
	/** aggregate fields of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Produtos_Tipos_max_fields"],
	min?:ModelTypes["comercial_Produtos_Tipos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Tipos_bool_exp"]: GraphQLTypes["comercial_Produtos_Tipos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_constraint"]: GraphQLTypes["comercial_Produtos_Tipos_constraint"];
	["comercial_Produtos_Tipos_enum"]: GraphQLTypes["comercial_Produtos_Tipos_enum"];
	/** Boolean expression to compare columns of type "comercial_Produtos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Produtos_Tipos_enum_comparison_exp"]: GraphQLTypes["comercial_Produtos_Tipos_enum_comparison_exp"];
	/** input type for inserting data into table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_insert_input"]: GraphQLTypes["comercial_Produtos_Tipos_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_Tipos_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["comercial_Produtos_Tipos_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos_Tipos"][]
};
	/** input type for inserting object relation for remote table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_obj_rel_insert_input"]: GraphQLTypes["comercial_Produtos_Tipos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_on_conflict"]: GraphQLTypes["comercial_Produtos_Tipos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos_Tipos". */
["comercial_Produtos_Tipos_order_by"]: GraphQLTypes["comercial_Produtos_Tipos_order_by"];
	/** primary key columns input for table: comercial_Produtos_Tipos */
["comercial_Produtos_Tipos_pk_columns_input"]: GraphQLTypes["comercial_Produtos_Tipos_pk_columns_input"];
	/** select columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_select_column"]: GraphQLTypes["comercial_Produtos_Tipos_select_column"];
	/** input type for updating data in table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_set_input"]: GraphQLTypes["comercial_Produtos_Tipos_set_input"];
	/** update columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_update_column"]: GraphQLTypes["comercial_Produtos_Tipos_update_column"];
	/** aggregated selection of "comercial.Produtos" */
["comercial_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Produtos"][]
};
	/** aggregate fields of "comercial.Produtos" */
["comercial_Produtos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Produtos_max_fields"],
	min?:ModelTypes["comercial_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos" */
["comercial_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Produtos_aggregate_order_by"];
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_append_input"]: GraphQLTypes["comercial_Produtos_append_input"];
	/** input type for inserting array relation for remote table "comercial.Produtos" */
["comercial_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Produtos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_bool_exp"]: GraphQLTypes["comercial_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Produtos" */
["comercial_Produtos_constraint"]: GraphQLTypes["comercial_Produtos_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Produtos_delete_at_path_input"]: GraphQLTypes["comercial_Produtos_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Produtos_delete_elem_input"]: GraphQLTypes["comercial_Produtos_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Produtos_delete_key_input"]: GraphQLTypes["comercial_Produtos_delete_key_input"];
	/** input type for inserting data into table "comercial.Produtos" */
["comercial_Produtos_insert_input"]: GraphQLTypes["comercial_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Produtos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos" */
["comercial_Produtos_max_order_by"]: GraphQLTypes["comercial_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Produtos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos" */
["comercial_Produtos_min_order_by"]: GraphQLTypes["comercial_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Produtos" */
["comercial_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Produtos"][]
};
	/** input type for inserting object relation for remote table "comercial.Produtos" */
["comercial_Produtos_obj_rel_insert_input"]: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Produtos" */
["comercial_Produtos_on_conflict"]: GraphQLTypes["comercial_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Produtos". */
["comercial_Produtos_order_by"]: GraphQLTypes["comercial_Produtos_order_by"];
	/** primary key columns input for table: comercial_Produtos */
["comercial_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Produtos_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_prepend_input"]: GraphQLTypes["comercial_Produtos_prepend_input"];
	/** select columns of table "comercial.Produtos" */
["comercial_Produtos_select_column"]: GraphQLTypes["comercial_Produtos_select_column"];
	/** input type for updating data in table "comercial.Produtos" */
["comercial_Produtos_set_input"]: GraphQLTypes["comercial_Produtos_set_input"];
	/** update columns of table "comercial.Produtos" */
["comercial_Produtos_update_column"]: GraphQLTypes["comercial_Produtos_update_column"];
	/** columns and relationships of "comercial.Propostas" */
["comercial_Propostas"]: {
		/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	Cliente_Id?:ModelTypes["uuid"],
	/** An array relationship */
	Combos:ModelTypes["comercial_Propostas_Combos"][],
	/** An aggregate relationship */
	Combos_aggregate:ModelTypes["comercial_Propostas_Combos_aggregate"],
	DataAceito?:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Instalacoes:ModelTypes["comercial_Propostas_Instalacoes"][],
	/** An aggregate relationship */
	Instalacoes_aggregate:ModelTypes["comercial_Propostas_Instalacoes_aggregate"],
	/** An object relationship */
	Lead?:ModelTypes["clientes_Leads"],
	Lead_Id?:ModelTypes["uuid"],
	/** An array relationship */
	Oportunidades:ModelTypes["comercial_Propostas_Oportunidades"][],
	/** An aggregate relationship */
	Oportunidades_aggregate:ModelTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An array relationship */
	Planos:ModelTypes["comercial_Propostas_Planos"][],
	/** An aggregate relationship */
	Planos_aggregate:ModelTypes["comercial_Propostas_Planos_aggregate"],
	/** An array relationship */
	Produtos:ModelTypes["comercial_Propostas_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["comercial_Propostas_Produtos_aggregate"],
	/** An array relationship */
	Servicos:ModelTypes["comercial_Propostas_Servicos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Propostas_Servicos_aggregate"],
	/** An object relationship */
	Situacao:ModelTypes["comercial_Propostas_Situacoes"],
	Situacao_Id:ModelTypes["comercial_Propostas_Situacoes_enum"],
	/** An object relationship */
	Ticket:ModelTypes["atendimentos_Tickets"],
	Ticket_Id:ModelTypes["uuid"],
	/** An object relationship */
	TipoDePagamento:ModelTypes["vendas_TiposDePagamento"],
	TipoDePagamento_Id:ModelTypes["vendas_TiposDePagamento_enum"],
	/** An object relationship */
	TipoDeRecorrencia:ModelTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id:ModelTypes["vendas_TiposDeRecorrencia_enum"],
	/** An object relationship */
	Usuario:ModelTypes["autenticacao_Usuarios"],
	Usuario_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	/** An object relationship */
	ComboPreco:ModelTypes["comercial_Combos_Precos"],
	ComboPreco_Id:ModelTypes["uuid"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	Veiculo:number,
	/** An object relationship */
	VeiculoRelacionamento?:ModelTypes["clientes_Veiculos"],
	Veiculo_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Combos_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Combos"][]
};
	/** aggregate fields of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Combos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Combos_max_fields"],
	min?:ModelTypes["comercial_Propostas_Combos_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Combos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Combos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Combos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Combos_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Combos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Combos_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Combos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Combos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Combos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Combos_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_avg_order_by"]: GraphQLTypes["comercial_Propostas_Combos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Combos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Combos_bool_exp"]: GraphQLTypes["comercial_Propostas_Combos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_constraint"]: GraphQLTypes["comercial_Propostas_Combos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_inc_input"]: GraphQLTypes["comercial_Propostas_Combos_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_insert_input"]: GraphQLTypes["comercial_Propostas_Combos_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Combos_max_fields"]: {
		ComboPreco_Id?:ModelTypes["uuid"],
	Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_max_order_by"]: GraphQLTypes["comercial_Propostas_Combos_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Combos_min_fields"]: {
		ComboPreco_Id?:ModelTypes["uuid"],
	Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_min_order_by"]: GraphQLTypes["comercial_Propostas_Combos_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Combos"][]
};
	/** on conflict condition type for table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_on_conflict"]: GraphQLTypes["comercial_Propostas_Combos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Combos". */
["comercial_Propostas_Combos_order_by"]: GraphQLTypes["comercial_Propostas_Combos_order_by"];
	/** primary key columns input for table: comercial_Propostas_Combos */
["comercial_Propostas_Combos_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Combos_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_select_column"]: GraphQLTypes["comercial_Propostas_Combos_select_column"];
	/** input type for updating data in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_set_input"]: GraphQLTypes["comercial_Propostas_Combos_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Combos_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Combos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Combos_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Combos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Combos_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Combos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Combos_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_sum_order_by"]: GraphQLTypes["comercial_Propostas_Combos_sum_order_by"];
	/** update columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_update_column"]: GraphQLTypes["comercial_Propostas_Combos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Combos_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Combos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Combos_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Combos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Combos_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_variance_order_by"]: GraphQLTypes["comercial_Propostas_Combos_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes"]: {
		Endereco:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	Veiculo?:number,
	/** An object relationship */
	VeiculoRelacionamento:ModelTypes["clientes_Veiculos"],
	Veiculo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Instalacoes_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Instalacoes"][]
};
	/** aggregate fields of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Instalacoes_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Instalacoes_max_fields"],
	min?:ModelTypes["comercial_Propostas_Instalacoes_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Instalacoes_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Instalacoes_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Instalacoes_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Instalacoes_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Instalacoes_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Instalacoes_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Instalacoes_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate_order_by"];
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_append_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_append_input"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Instalacoes_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_avg_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Instalacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Instalacoes_bool_exp"]: GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_constraint"]: GraphQLTypes["comercial_Propostas_Instalacoes_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Propostas_Instalacoes_delete_at_path_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Propostas_Instalacoes_delete_elem_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Propostas_Instalacoes_delete_key_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_delete_key_input"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_inc_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_insert_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Instalacoes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_max_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Instalacoes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_min_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Instalacoes"][]
};
	/** on conflict condition type for table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_on_conflict"]: GraphQLTypes["comercial_Propostas_Instalacoes_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Instalacoes". */
["comercial_Propostas_Instalacoes_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_order_by"];
	/** primary key columns input for table: comercial_Propostas_Instalacoes */
["comercial_Propostas_Instalacoes_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_prepend_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_prepend_input"];
	/** select columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_select_column"]: GraphQLTypes["comercial_Propostas_Instalacoes_select_column"];
	/** input type for updating data in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_set_input"]: GraphQLTypes["comercial_Propostas_Instalacoes_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Instalacoes_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Instalacoes_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Instalacoes_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Instalacoes_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_sum_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_sum_order_by"];
	/** update columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_update_column"]: GraphQLTypes["comercial_Propostas_Instalacoes_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Instalacoes_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Instalacoes_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Instalacoes_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_variance_order_by"]: GraphQLTypes["comercial_Propostas_Instalacoes_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	OportunidadeDeProduto?:ModelTypes["comercial_Produtos_Oportunidades"],
	/** An object relationship */
	OportunidadeDeServico?:ModelTypes["comercial_Servicos_Oportunidades"],
	OportunidadeProduto_Id?:ModelTypes["uuid"],
	OportunidadeServico_Id?:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	Veiculo:number,
	/** An object relationship */
	VeiculoRelacionamento?:ModelTypes["clientes_Veiculos"],
	Veiculo_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Oportunidades_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Oportunidades"][]
};
	/** aggregate fields of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Oportunidades_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Oportunidades_max_fields"],
	min?:ModelTypes["comercial_Propostas_Oportunidades_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Oportunidades_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Oportunidades_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Oportunidades_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Oportunidades_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Oportunidades_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Oportunidades_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_avg_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Oportunidades_bool_exp"]: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_constraint"]: GraphQLTypes["comercial_Propostas_Oportunidades_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_inc_input"]: GraphQLTypes["comercial_Propostas_Oportunidades_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_insert_input"]: GraphQLTypes["comercial_Propostas_Oportunidades_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Oportunidades_max_fields"]: {
		Id?:ModelTypes["uuid"],
	OportunidadeProduto_Id?:ModelTypes["uuid"],
	OportunidadeServico_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_max_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Oportunidades_min_fields"]: {
		Id?:ModelTypes["uuid"],
	OportunidadeProduto_Id?:ModelTypes["uuid"],
	OportunidadeServico_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_min_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Oportunidades"][]
};
	/** on conflict condition type for table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_on_conflict"]: GraphQLTypes["comercial_Propostas_Oportunidades_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Oportunidades". */
["comercial_Propostas_Oportunidades_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_order_by"];
	/** primary key columns input for table: comercial_Propostas_Oportunidades */
["comercial_Propostas_Oportunidades_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Oportunidades_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_select_column"]: GraphQLTypes["comercial_Propostas_Oportunidades_select_column"];
	/** input type for updating data in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_set_input"]: GraphQLTypes["comercial_Propostas_Oportunidades_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Oportunidades_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Oportunidades_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Oportunidades_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Oportunidades_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_sum_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_sum_order_by"];
	/** update columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_update_column"]: GraphQLTypes["comercial_Propostas_Oportunidades_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Oportunidades_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Oportunidades_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Oportunidades_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_variance_order_by"]: GraphQLTypes["comercial_Propostas_Oportunidades_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Plano:ModelTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco:ModelTypes["comercial_Planos_Precos"],
	PlanoPreco_Id:ModelTypes["uuid"],
	Plano_Id:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	Veiculo:number,
	/** An object relationship */
	VeiculoRelacionamento?:ModelTypes["clientes_Veiculos"],
	Veiculo_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Planos_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Planos"][]
};
	/** aggregate fields of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Planos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Planos_max_fields"],
	min?:ModelTypes["comercial_Propostas_Planos_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Planos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Planos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Planos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Planos_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Planos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Planos_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Planos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Planos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Planos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Planos_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_avg_order_by"]: GraphQLTypes["comercial_Propostas_Planos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Planos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Planos_bool_exp"]: GraphQLTypes["comercial_Propostas_Planos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_constraint"]: GraphQLTypes["comercial_Propostas_Planos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_inc_input"]: GraphQLTypes["comercial_Propostas_Planos_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_insert_input"]: GraphQLTypes["comercial_Propostas_Planos_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Planos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	PlanoPreco_Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_max_order_by"]: GraphQLTypes["comercial_Propostas_Planos_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Planos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	PlanoPreco_Id?:ModelTypes["uuid"],
	Plano_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_min_order_by"]: GraphQLTypes["comercial_Propostas_Planos_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Planos"][]
};
	/** on conflict condition type for table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_on_conflict"]: GraphQLTypes["comercial_Propostas_Planos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Planos". */
["comercial_Propostas_Planos_order_by"]: GraphQLTypes["comercial_Propostas_Planos_order_by"];
	/** primary key columns input for table: comercial_Propostas_Planos */
["comercial_Propostas_Planos_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Planos_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_select_column"]: GraphQLTypes["comercial_Propostas_Planos_select_column"];
	/** input type for updating data in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_set_input"]: GraphQLTypes["comercial_Propostas_Planos_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Planos_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Planos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Planos_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Planos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Planos_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Planos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Planos_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_sum_order_by"]: GraphQLTypes["comercial_Propostas_Planos_sum_order_by"];
	/** update columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_update_column"]: GraphQLTypes["comercial_Propostas_Planos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Planos_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Planos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Planos_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Planos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Planos_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_variance_order_by"]: GraphQLTypes["comercial_Propostas_Planos_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id:ModelTypes["uuid"],
	Produto_Id:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	Veiculo:number,
	/** An object relationship */
	VeiculoRelacionamento?:ModelTypes["clientes_Veiculos"],
	Veiculo_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Produtos"][]
};
	/** aggregate fields of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Produtos_max_fields"],
	min?:ModelTypes["comercial_Propostas_Produtos_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Produtos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Produtos_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Produtos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Produtos_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Produtos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Produtos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Produtos_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_avg_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Produtos_bool_exp"]: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_constraint"]: GraphQLTypes["comercial_Propostas_Produtos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_inc_input"]: GraphQLTypes["comercial_Propostas_Produtos_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_insert_input"]: GraphQLTypes["comercial_Propostas_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Produtos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	ProdutoPreco_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_max_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Produtos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	ProdutoPreco_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_min_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Produtos"][]
};
	/** on conflict condition type for table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_on_conflict"]: GraphQLTypes["comercial_Propostas_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Produtos". */
["comercial_Propostas_Produtos_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_order_by"];
	/** primary key columns input for table: comercial_Propostas_Produtos */
["comercial_Propostas_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Produtos_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_select_column"]: GraphQLTypes["comercial_Propostas_Produtos_select_column"];
	/** input type for updating data in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_set_input"]: GraphQLTypes["comercial_Propostas_Produtos_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Produtos_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Produtos_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Produtos_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Produtos_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_sum_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_sum_order_by"];
	/** update columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_update_column"]: GraphQLTypes["comercial_Propostas_Produtos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Produtos_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Produtos_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Produtos_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_variance_order_by"]: GraphQLTypes["comercial_Propostas_Produtos_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Proposta:ModelTypes["comercial_Propostas"],
	Proposta_Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	/** An object relationship */
	ServicosPreco:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicosPreco_Id:ModelTypes["uuid"],
	Veiculo:number,
	/** An object relationship */
	VeiculoRelacionamento?:ModelTypes["clientes_Veiculos"],
	Veiculo_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Servicos"][]
};
	/** aggregate fields of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Propostas_Servicos_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Propostas_Servicos_max_fields"],
	min?:ModelTypes["comercial_Propostas_Servicos_min_fields"],
	stddev?:ModelTypes["comercial_Propostas_Servicos_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Propostas_Servicos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Propostas_Servicos_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Propostas_Servicos_sum_fields"],
	var_pop?:ModelTypes["comercial_Propostas_Servicos_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Propostas_Servicos_var_samp_fields"],
	variance?:ModelTypes["comercial_Propostas_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Servicos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Propostas_Servicos_avg_fields"]: {
		Veiculo?:number
};
	/** order by avg() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_avg_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Propostas_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Servicos_bool_exp"]: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_constraint"]: GraphQLTypes["comercial_Propostas_Servicos_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_inc_input"]: GraphQLTypes["comercial_Propostas_Servicos_inc_input"];
	/** input type for inserting data into table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_insert_input"]: GraphQLTypes["comercial_Propostas_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Servicos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	ServicosPreco_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_max_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_Servicos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	ServicosPreco_Id?:ModelTypes["uuid"],
	Veiculo?:number,
	Veiculo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_min_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Servicos"][]
};
	/** on conflict condition type for table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_on_conflict"]: GraphQLTypes["comercial_Propostas_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Servicos". */
["comercial_Propostas_Servicos_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_order_by"];
	/** primary key columns input for table: comercial_Propostas_Servicos */
["comercial_Propostas_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Servicos_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_select_column"]: GraphQLTypes["comercial_Propostas_Servicos_select_column"];
	/** input type for updating data in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_set_input"]: GraphQLTypes["comercial_Propostas_Servicos_set_input"];
	/** aggregate stddev on columns */
["comercial_Propostas_Servicos_stddev_fields"]: {
		Veiculo?:number
};
	/** order by stddev() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Servicos_stddev_pop_fields"]: {
		Veiculo?:number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_pop_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Servicos_stddev_samp_fields"]: {
		Veiculo?:number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_samp_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Propostas_Servicos_sum_fields"]: {
		Veiculo?:number
};
	/** order by sum() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_sum_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_sum_order_by"];
	/** update columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_update_column"]: GraphQLTypes["comercial_Propostas_Servicos_update_column"];
	/** aggregate var_pop on columns */
["comercial_Propostas_Servicos_var_pop_fields"]: {
		Veiculo?:number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_pop_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Propostas_Servicos_var_samp_fields"]: {
		Veiculo?:number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_samp_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Propostas_Servicos_variance_fields"]: {
		Veiculo?:number
};
	/** order by variance() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_variance_order_by"]: GraphQLTypes["comercial_Propostas_Servicos_variance_order_by"];
	/** columns and relationships of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes"]: {
		Comentario:string,
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_aggregate"],
	Valor:string
};
	/** aggregated selection of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_Situacoes_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas_Situacoes"][]
};
	/** aggregate fields of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Propostas_Situacoes_max_fields"],
	min?:ModelTypes["comercial_Propostas_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Situacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Situacoes_bool_exp"]: GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_constraint"]: GraphQLTypes["comercial_Propostas_Situacoes_constraint"];
	["comercial_Propostas_Situacoes_enum"]: GraphQLTypes["comercial_Propostas_Situacoes_enum"];
	/** Boolean expression to compare columns of type "comercial_Propostas_Situacoes_enum". All fields are combined with logical 'AND'. */
["comercial_Propostas_Situacoes_enum_comparison_exp"]: GraphQLTypes["comercial_Propostas_Situacoes_enum_comparison_exp"];
	/** input type for inserting data into table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_insert_input"]: GraphQLTypes["comercial_Propostas_Situacoes_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_Situacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["comercial_Propostas_Situacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas_Situacoes"][]
};
	/** input type for inserting object relation for remote table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_obj_rel_insert_input"]: GraphQLTypes["comercial_Propostas_Situacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_on_conflict"]: GraphQLTypes["comercial_Propostas_Situacoes_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas_Situacoes". */
["comercial_Propostas_Situacoes_order_by"]: GraphQLTypes["comercial_Propostas_Situacoes_order_by"];
	/** primary key columns input for table: comercial_Propostas_Situacoes */
["comercial_Propostas_Situacoes_pk_columns_input"]: GraphQLTypes["comercial_Propostas_Situacoes_pk_columns_input"];
	/** select columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_select_column"]: GraphQLTypes["comercial_Propostas_Situacoes_select_column"];
	/** input type for updating data in table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_set_input"]: GraphQLTypes["comercial_Propostas_Situacoes_set_input"];
	/** update columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_update_column"]: GraphQLTypes["comercial_Propostas_Situacoes_update_column"];
	/** aggregated selection of "comercial.Propostas" */
["comercial_Propostas_aggregate"]: {
		aggregate?:ModelTypes["comercial_Propostas_aggregate_fields"],
	nodes:ModelTypes["comercial_Propostas"][]
};
	/** aggregate fields of "comercial.Propostas" */
["comercial_Propostas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Propostas_max_fields"],
	min?:ModelTypes["comercial_Propostas_min_fields"]
};
	/** order by aggregate values of table "comercial.Propostas" */
["comercial_Propostas_aggregate_order_by"]: GraphQLTypes["comercial_Propostas_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Propostas" */
["comercial_Propostas_arr_rel_insert_input"]: GraphQLTypes["comercial_Propostas_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Propostas". All fields are combined with a logical 'AND'. */
["comercial_Propostas_bool_exp"]: GraphQLTypes["comercial_Propostas_bool_exp"];
	/** unique or primary key constraints on table "comercial.Propostas" */
["comercial_Propostas_constraint"]: GraphQLTypes["comercial_Propostas_constraint"];
	/** input type for inserting data into table "comercial.Propostas" */
["comercial_Propostas_insert_input"]: GraphQLTypes["comercial_Propostas_insert_input"];
	/** aggregate max on columns */
["comercial_Propostas_max_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	DataAceito?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Ticket_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas" */
["comercial_Propostas_max_order_by"]: GraphQLTypes["comercial_Propostas_max_order_by"];
	/** aggregate min on columns */
["comercial_Propostas_min_fields"]: {
		Cliente_Id?:ModelTypes["uuid"],
	DataAceito?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Lead_Id?:ModelTypes["uuid"],
	Ticket_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas" */
["comercial_Propostas_min_order_by"]: GraphQLTypes["comercial_Propostas_min_order_by"];
	/** response of any mutation on the table "comercial.Propostas" */
["comercial_Propostas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Propostas"][]
};
	/** input type for inserting object relation for remote table "comercial.Propostas" */
["comercial_Propostas_obj_rel_insert_input"]: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Propostas" */
["comercial_Propostas_on_conflict"]: GraphQLTypes["comercial_Propostas_on_conflict"];
	/** Ordering options when selecting data from "comercial.Propostas". */
["comercial_Propostas_order_by"]: GraphQLTypes["comercial_Propostas_order_by"];
	/** primary key columns input for table: comercial_Propostas */
["comercial_Propostas_pk_columns_input"]: GraphQLTypes["comercial_Propostas_pk_columns_input"];
	/** select columns of table "comercial.Propostas" */
["comercial_Propostas_select_column"]: GraphQLTypes["comercial_Propostas_select_column"];
	/** input type for updating data in table "comercial.Propostas" */
["comercial_Propostas_set_input"]: GraphQLTypes["comercial_Propostas_set_input"];
	/** update columns of table "comercial.Propostas" */
["comercial_Propostas_update_column"]: GraphQLTypes["comercial_Propostas_update_column"];
	/** columns and relationships of "comercial.Servicos" */
["comercial_Servicos"]: {
		/** An array relationship */
	Atributos:ModelTypes["comercial_Servicos_Atributos"][],
	/** An aggregate relationship */
	Atributos_aggregate:ModelTypes["comercial_Servicos_Atributos_aggregate"],
	Categorias:ModelTypes["jsonb"],
	/** An array relationship */
	Combos:ModelTypes["comercial_Combos_Servicos"][],
	/** An aggregate relationship */
	Combos_aggregate:ModelTypes["comercial_Combos_Servicos_aggregate"],
	/** An array relationship */
	Fornecedores:ModelTypes["comercial_Fornecedores_Servicos"][],
	/** An aggregate relationship */
	Fornecedores_aggregate:ModelTypes["comercial_Fornecedores_Servicos_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Oportunidades:ModelTypes["comercial_Servicos_Oportunidades"][],
	/** An aggregate relationship */
	Oportunidades_aggregate:ModelTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** An array relationship */
	Planos:ModelTypes["comercial_Planos"][],
	/** An aggregate relationship */
	Planos_aggregate:ModelTypes["comercial_Planos_aggregate"],
	/** An array relationship */
	PrestadoresDeServicos:ModelTypes["comercial_PrestadorDeServicos_Servicos"][],
	/** An aggregate relationship */
	PrestadoresDeServicos_aggregate:ModelTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** An array relationship */
	Produtos_Servicos:ModelTypes["comercial_Produtos_Servicos"][],
	/** An aggregate relationship */
	Produtos_Servicos_aggregate:ModelTypes["comercial_Produtos_Servicos_aggregate"],
	/** An array relationship */
	Propostas:ModelTypes["comercial_Propostas_Servicos"][],
	/** An aggregate relationship */
	Propostas_aggregate:ModelTypes["comercial_Propostas_Servicos_aggregate"],
	/** An array relationship */
	Servicos_Produtos:ModelTypes["comercial_Servicos_Produtos"][],
	/** An aggregate relationship */
	Servicos_Produtos_aggregate:ModelTypes["comercial_Servicos_Produtos_aggregate"],
	/** An array relationship */
	Servicos_ServicosDependente:ModelTypes["comercial_Servicos_Servicos"][],
	/** An aggregate relationship */
	Servicos_ServicosDependente_aggregate:ModelTypes["comercial_Servicos_Servicos_aggregate"],
	/** An array relationship */
	Tarifas:ModelTypes["comercial_Servicos_Tarifas"][],
	/** An aggregate relationship */
	Tarifas_aggregate:ModelTypes["comercial_Servicos_Tarifas_aggregate"],
	/** An object relationship */
	Tipo:ModelTypes["comercial_Servicos_Tipos"],
	Tipo_Id:ModelTypes["comercial_Servicos_Tipos_enum"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	/** An array relationship */
	servicosServicos:ModelTypes["comercial_Servicos_Servicos"][],
	/** An aggregate relationship */
	servicosServicos_aggregate:ModelTypes["comercial_Servicos_Servicos_aggregate"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos"]: {
		/** An object relationship */
	Atributo:ModelTypes["comercial_Atributos"],
	Atributo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Atributos_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Atributos"][]
};
	/** aggregate fields of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_Atributos_max_fields"],
	min?:ModelTypes["comercial_Servicos_Atributos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_Atributos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Atributos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Servicos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Atributos_bool_exp"]: GraphQLTypes["comercial_Servicos_Atributos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_constraint"]: GraphQLTypes["comercial_Servicos_Atributos_constraint"];
	/** input type for inserting data into table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_insert_input"]: GraphQLTypes["comercial_Servicos_Atributos_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Atributos_max_fields"]: {
		Atributo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_max_order_by"]: GraphQLTypes["comercial_Servicos_Atributos_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_Atributos_min_fields"]: {
		Atributo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_min_order_by"]: GraphQLTypes["comercial_Servicos_Atributos_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Atributos"][]
};
	/** on conflict condition type for table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_on_conflict"]: GraphQLTypes["comercial_Servicos_Atributos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Atributos". */
["comercial_Servicos_Atributos_order_by"]: GraphQLTypes["comercial_Servicos_Atributos_order_by"];
	/** primary key columns input for table: comercial_Servicos_Atributos */
["comercial_Servicos_Atributos_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Atributos_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_select_column"]: GraphQLTypes["comercial_Servicos_Atributos_select_column"];
	/** input type for updating data in table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_set_input"]: GraphQLTypes["comercial_Servicos_Atributos_set_input"];
	/** update columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_update_column"]: GraphQLTypes["comercial_Servicos_Atributos_update_column"];
	/** columns and relationships of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades"]: {
		/** An object relationship */
	Combo:ModelTypes["comercial_Combos"],
	Combo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	OportunidadesDePropostas:ModelTypes["comercial_Propostas_Oportunidades"][],
	/** An aggregate relationship */
	OportunidadesDePropostas_aggregate:ModelTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Oportunidades_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Oportunidades"][]
};
	/** aggregate fields of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_fields"]: {
		avg?:ModelTypes["comercial_Servicos_Oportunidades_avg_fields"],
	count:number,
	max?:ModelTypes["comercial_Servicos_Oportunidades_max_fields"],
	min?:ModelTypes["comercial_Servicos_Oportunidades_min_fields"],
	stddev?:ModelTypes["comercial_Servicos_Oportunidades_stddev_fields"],
	stddev_pop?:ModelTypes["comercial_Servicos_Oportunidades_stddev_pop_fields"],
	stddev_samp?:ModelTypes["comercial_Servicos_Oportunidades_stddev_samp_fields"],
	sum?:ModelTypes["comercial_Servicos_Oportunidades_sum_fields"],
	var_pop?:ModelTypes["comercial_Servicos_Oportunidades_var_pop_fields"],
	var_samp?:ModelTypes["comercial_Servicos_Oportunidades_var_samp_fields"],
	variance?:ModelTypes["comercial_Servicos_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_arr_rel_insert_input"];
	/** aggregate avg on columns */
["comercial_Servicos_Oportunidades_avg_fields"]: {
		Valor?:number
};
	/** order by avg() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_avg_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_avg_order_by"];
	/** Boolean expression to filter rows from the table "comercial.Servicos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Oportunidades_bool_exp"]: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_constraint"]: GraphQLTypes["comercial_Servicos_Oportunidades_constraint"];
	/** input type for incrementing numeric columns in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_inc_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_inc_input"];
	/** input type for inserting data into table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_insert_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Oportunidades_max_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Servico_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_max_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_Oportunidades_min_fields"]: {
		Combo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Servico_Id?:ModelTypes["uuid"],
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_min_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Oportunidades"][]
};
	/** input type for inserting object relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_obj_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_on_conflict"]: GraphQLTypes["comercial_Servicos_Oportunidades_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Oportunidades". */
["comercial_Servicos_Oportunidades_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_order_by"];
	/** primary key columns input for table: comercial_Servicos_Oportunidades */
["comercial_Servicos_Oportunidades_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_select_column"]: GraphQLTypes["comercial_Servicos_Oportunidades_select_column"];
	/** input type for updating data in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_set_input"]: GraphQLTypes["comercial_Servicos_Oportunidades_set_input"];
	/** aggregate stddev on columns */
["comercial_Servicos_Oportunidades_stddev_fields"]: {
		Valor?:number
};
	/** order by stddev() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["comercial_Servicos_Oportunidades_stddev_pop_fields"]: {
		Valor?:number
};
	/** order by stddev_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_pop_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["comercial_Servicos_Oportunidades_stddev_samp_fields"]: {
		Valor?:number
};
	/** order by stddev_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_samp_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_samp_order_by"];
	/** aggregate sum on columns */
["comercial_Servicos_Oportunidades_sum_fields"]: {
		Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_sum_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_sum_order_by"];
	/** update columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_update_column"]: GraphQLTypes["comercial_Servicos_Oportunidades_update_column"];
	/** aggregate var_pop on columns */
["comercial_Servicos_Oportunidades_var_pop_fields"]: {
		Valor?:number
};
	/** order by var_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_pop_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_var_pop_order_by"];
	/** aggregate var_samp on columns */
["comercial_Servicos_Oportunidades_var_samp_fields"]: {
		Valor?:number
};
	/** order by var_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_samp_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_var_samp_order_by"];
	/** aggregate variance on columns */
["comercial_Servicos_Oportunidades_variance_fields"]: {
		Valor?:number
};
	/** order by variance() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_variance_order_by"]: GraphQLTypes["comercial_Servicos_Oportunidades_variance_order_by"];
	/** columns and relationships of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["comercial_Produtos"],
	Produto_Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Produtos_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Produtos"][]
};
	/** aggregate fields of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_Produtos_max_fields"],
	min?:ModelTypes["comercial_Servicos_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Produtos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Servicos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Produtos_bool_exp"]: GraphQLTypes["comercial_Servicos_Produtos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_constraint"]: GraphQLTypes["comercial_Servicos_Produtos_constraint"];
	/** input type for inserting data into table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_insert_input"]: GraphQLTypes["comercial_Servicos_Produtos_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Produtos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_max_order_by"]: GraphQLTypes["comercial_Servicos_Produtos_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_Produtos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_min_order_by"]: GraphQLTypes["comercial_Servicos_Produtos_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Produtos"][]
};
	/** on conflict condition type for table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_on_conflict"]: GraphQLTypes["comercial_Servicos_Produtos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Produtos". */
["comercial_Servicos_Produtos_order_by"]: GraphQLTypes["comercial_Servicos_Produtos_order_by"];
	/** primary key columns input for table: comercial_Servicos_Produtos */
["comercial_Servicos_Produtos_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Produtos_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_select_column"]: GraphQLTypes["comercial_Servicos_Produtos_select_column"];
	/** input type for updating data in table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_set_input"]: GraphQLTypes["comercial_Servicos_Produtos_set_input"];
	/** update columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_update_column"]: GraphQLTypes["comercial_Servicos_Produtos_update_column"];
	/** columns and relationships of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	/** An object relationship */
	ServicoDependente:ModelTypes["comercial_Servicos"],
	ServicoDependente_Id:ModelTypes["uuid"],
	Servico_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Servicos"][]
};
	/** aggregate fields of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_Servicos_max_fields"],
	min?:ModelTypes["comercial_Servicos_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_Servicos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Servicos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Servicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Servicos_bool_exp"]: GraphQLTypes["comercial_Servicos_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_constraint"]: GraphQLTypes["comercial_Servicos_Servicos_constraint"];
	/** input type for inserting data into table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_insert_input"]: GraphQLTypes["comercial_Servicos_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Servicos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	ServicoDependente_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_max_order_by"]: GraphQLTypes["comercial_Servicos_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_Servicos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	ServicoDependente_Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_min_order_by"]: GraphQLTypes["comercial_Servicos_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Servicos"][]
};
	/** on conflict condition type for table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_on_conflict"]: GraphQLTypes["comercial_Servicos_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Servicos". */
["comercial_Servicos_Servicos_order_by"]: GraphQLTypes["comercial_Servicos_Servicos_order_by"];
	/** primary key columns input for table: comercial_Servicos_Servicos */
["comercial_Servicos_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Servicos_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_select_column"]: GraphQLTypes["comercial_Servicos_Servicos_select_column"];
	/** input type for updating data in table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_set_input"]: GraphQLTypes["comercial_Servicos_Servicos_set_input"];
	/** update columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_update_column"]: GraphQLTypes["comercial_Servicos_Servicos_update_column"];
	/** columns and relationships of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Servico:ModelTypes["comercial_Servicos"],
	Servico_Id:ModelTypes["uuid"],
	/** An object relationship */
	Tarifa:ModelTypes["comercial_Tarifas"],
	Tarifa_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Tarifas_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Tarifas"][]
};
	/** aggregate fields of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_Tarifas_max_fields"],
	min?:ModelTypes["comercial_Servicos_Tarifas_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_Tarifas_aggregate_order_by"];
	/** input type for inserting array relation for remote table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Tarifas_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tarifas_bool_exp"]: GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_constraint"]: GraphQLTypes["comercial_Servicos_Tarifas_constraint"];
	/** input type for inserting data into table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_insert_input"]: GraphQLTypes["comercial_Servicos_Tarifas_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Tarifas_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	Tarifa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_max_order_by"]: GraphQLTypes["comercial_Servicos_Tarifas_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_Tarifas_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Servico_Id?:ModelTypes["uuid"],
	Tarifa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_min_order_by"]: GraphQLTypes["comercial_Servicos_Tarifas_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Tarifas"][]
};
	/** on conflict condition type for table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_on_conflict"]: GraphQLTypes["comercial_Servicos_Tarifas_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Tarifas". */
["comercial_Servicos_Tarifas_order_by"]: GraphQLTypes["comercial_Servicos_Tarifas_order_by"];
	/** primary key columns input for table: comercial_Servicos_Tarifas */
["comercial_Servicos_Tarifas_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Tarifas_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_select_column"]: GraphQLTypes["comercial_Servicos_Tarifas_select_column"];
	/** input type for updating data in table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_set_input"]: GraphQLTypes["comercial_Servicos_Tarifas_set_input"];
	/** update columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_update_column"]: GraphQLTypes["comercial_Servicos_Tarifas_update_column"];
	/** columns and relationships of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos"]: {
		Comentario:string,
	/** An array relationship */
	Servicos:ModelTypes["comercial_Servicos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Servicos_aggregate"],
	Valor:string
};
	/** aggregated selection of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_Tipos_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos_Tipos"][]
};
	/** aggregate fields of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_Tipos_max_fields"],
	min?:ModelTypes["comercial_Servicos_Tipos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tipos_bool_exp"]: GraphQLTypes["comercial_Servicos_Tipos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_constraint"]: GraphQLTypes["comercial_Servicos_Tipos_constraint"];
	["comercial_Servicos_Tipos_enum"]: GraphQLTypes["comercial_Servicos_Tipos_enum"];
	/** Boolean expression to compare columns of type "comercial_Servicos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Servicos_Tipos_enum_comparison_exp"]: GraphQLTypes["comercial_Servicos_Tipos_enum_comparison_exp"];
	/** input type for inserting data into table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_insert_input"]: GraphQLTypes["comercial_Servicos_Tipos_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_Tipos_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["comercial_Servicos_Tipos_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos_Tipos"][]
};
	/** input type for inserting object relation for remote table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_obj_rel_insert_input"]: GraphQLTypes["comercial_Servicos_Tipos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_on_conflict"]: GraphQLTypes["comercial_Servicos_Tipos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos_Tipos". */
["comercial_Servicos_Tipos_order_by"]: GraphQLTypes["comercial_Servicos_Tipos_order_by"];
	/** primary key columns input for table: comercial_Servicos_Tipos */
["comercial_Servicos_Tipos_pk_columns_input"]: GraphQLTypes["comercial_Servicos_Tipos_pk_columns_input"];
	/** select columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_select_column"]: GraphQLTypes["comercial_Servicos_Tipos_select_column"];
	/** input type for updating data in table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_set_input"]: GraphQLTypes["comercial_Servicos_Tipos_set_input"];
	/** update columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_update_column"]: GraphQLTypes["comercial_Servicos_Tipos_update_column"];
	/** aggregated selection of "comercial.Servicos" */
["comercial_Servicos_aggregate"]: {
		aggregate?:ModelTypes["comercial_Servicos_aggregate_fields"],
	nodes:ModelTypes["comercial_Servicos"][]
};
	/** aggregate fields of "comercial.Servicos" */
["comercial_Servicos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Servicos_max_fields"],
	min?:ModelTypes["comercial_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos" */
["comercial_Servicos_aggregate_order_by"]: GraphQLTypes["comercial_Servicos_aggregate_order_by"];
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_append_input"]: GraphQLTypes["comercial_Servicos_append_input"];
	/** input type for inserting array relation for remote table "comercial.Servicos" */
["comercial_Servicos_arr_rel_insert_input"]: GraphQLTypes["comercial_Servicos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "comercial.Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_bool_exp"]: GraphQLTypes["comercial_Servicos_bool_exp"];
	/** unique or primary key constraints on table "comercial.Servicos" */
["comercial_Servicos_constraint"]: GraphQLTypes["comercial_Servicos_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Servicos_delete_at_path_input"]: GraphQLTypes["comercial_Servicos_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Servicos_delete_elem_input"]: GraphQLTypes["comercial_Servicos_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Servicos_delete_key_input"]: GraphQLTypes["comercial_Servicos_delete_key_input"];
	/** input type for inserting data into table "comercial.Servicos" */
["comercial_Servicos_insert_input"]: GraphQLTypes["comercial_Servicos_insert_input"];
	/** aggregate max on columns */
["comercial_Servicos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos" */
["comercial_Servicos_max_order_by"]: GraphQLTypes["comercial_Servicos_max_order_by"];
	/** aggregate min on columns */
["comercial_Servicos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos" */
["comercial_Servicos_min_order_by"]: GraphQLTypes["comercial_Servicos_min_order_by"];
	/** response of any mutation on the table "comercial.Servicos" */
["comercial_Servicos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Servicos"][]
};
	/** input type for inserting object relation for remote table "comercial.Servicos" */
["comercial_Servicos_obj_rel_insert_input"]: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Servicos" */
["comercial_Servicos_on_conflict"]: GraphQLTypes["comercial_Servicos_on_conflict"];
	/** Ordering options when selecting data from "comercial.Servicos". */
["comercial_Servicos_order_by"]: GraphQLTypes["comercial_Servicos_order_by"];
	/** primary key columns input for table: comercial_Servicos */
["comercial_Servicos_pk_columns_input"]: GraphQLTypes["comercial_Servicos_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_prepend_input"]: GraphQLTypes["comercial_Servicos_prepend_input"];
	/** select columns of table "comercial.Servicos" */
["comercial_Servicos_select_column"]: GraphQLTypes["comercial_Servicos_select_column"];
	/** input type for updating data in table "comercial.Servicos" */
["comercial_Servicos_set_input"]: GraphQLTypes["comercial_Servicos_set_input"];
	/** update columns of table "comercial.Servicos" */
["comercial_Servicos_update_column"]: GraphQLTypes["comercial_Servicos_update_column"];
	/** columns and relationships of "comercial.Tarifas" */
["comercial_Tarifas"]: {
		/** An array relationship */
	Fornecedores_Servicos:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"][],
	/** An aggregate relationship */
	Fornecedores_Servicos_aggregate:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Servicos:ModelTypes["comercial_Servicos_Tarifas"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_Servicos_Tarifas_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Tarifas" */
["comercial_Tarifas_aggregate"]: {
		aggregate?:ModelTypes["comercial_Tarifas_aggregate_fields"],
	nodes:ModelTypes["comercial_Tarifas"][]
};
	/** aggregate fields of "comercial.Tarifas" */
["comercial_Tarifas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["comercial_Tarifas_max_fields"],
	min?:ModelTypes["comercial_Tarifas_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Tarifas_bool_exp"]: GraphQLTypes["comercial_Tarifas_bool_exp"];
	/** unique or primary key constraints on table "comercial.Tarifas" */
["comercial_Tarifas_constraint"]: GraphQLTypes["comercial_Tarifas_constraint"];
	/** input type for inserting data into table "comercial.Tarifas" */
["comercial_Tarifas_insert_input"]: GraphQLTypes["comercial_Tarifas_insert_input"];
	/** aggregate max on columns */
["comercial_Tarifas_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Tarifas_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Tarifas" */
["comercial_Tarifas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["comercial_Tarifas"][]
};
	/** input type for inserting object relation for remote table "comercial.Tarifas" */
["comercial_Tarifas_obj_rel_insert_input"]: GraphQLTypes["comercial_Tarifas_obj_rel_insert_input"];
	/** on conflict condition type for table "comercial.Tarifas" */
["comercial_Tarifas_on_conflict"]: GraphQLTypes["comercial_Tarifas_on_conflict"];
	/** Ordering options when selecting data from "comercial.Tarifas". */
["comercial_Tarifas_order_by"]: GraphQLTypes["comercial_Tarifas_order_by"];
	/** primary key columns input for table: comercial_Tarifas */
["comercial_Tarifas_pk_columns_input"]: GraphQLTypes["comercial_Tarifas_pk_columns_input"];
	/** select columns of table "comercial.Tarifas" */
["comercial_Tarifas_select_column"]: GraphQLTypes["comercial_Tarifas_select_column"];
	/** input type for updating data in table "comercial.Tarifas" */
["comercial_Tarifas_set_input"]: GraphQLTypes["comercial_Tarifas_set_input"];
	/** update columns of table "comercial.Tarifas" */
["comercial_Tarifas_update_column"]: GraphQLTypes["comercial_Tarifas_update_column"];
	/** columns and relationships of "contatos.Emails" */
["contatos_Emails"]: {
		Categorias:ModelTypes["jsonb"],
	Email:string,
	Id:ModelTypes["uuid"],
	Identidades:ModelTypes["jsonb"],
	NomeDoResponsavel?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Emails" */
["contatos_Emails_aggregate"]: {
		aggregate?:ModelTypes["contatos_Emails_aggregate_fields"],
	nodes:ModelTypes["contatos_Emails"][]
};
	/** aggregate fields of "contatos.Emails" */
["contatos_Emails_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["contatos_Emails_max_fields"],
	min?:ModelTypes["contatos_Emails_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_append_input"]: GraphQLTypes["contatos_Emails_append_input"];
	/** Boolean expression to filter rows from the table "contatos.Emails". All fields are combined with a logical 'AND'. */
["contatos_Emails_bool_exp"]: GraphQLTypes["contatos_Emails_bool_exp"];
	/** unique or primary key constraints on table "contatos.Emails" */
["contatos_Emails_constraint"]: GraphQLTypes["contatos_Emails_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Emails_delete_at_path_input"]: GraphQLTypes["contatos_Emails_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Emails_delete_elem_input"]: GraphQLTypes["contatos_Emails_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Emails_delete_key_input"]: GraphQLTypes["contatos_Emails_delete_key_input"];
	/** input type for inserting data into table "contatos.Emails" */
["contatos_Emails_insert_input"]: GraphQLTypes["contatos_Emails_insert_input"];
	/** aggregate max on columns */
["contatos_Emails_max_fields"]: {
		Email?:string,
	Id?:ModelTypes["uuid"],
	NomeDoResponsavel?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Emails_min_fields"]: {
		Email?:string,
	Id?:ModelTypes["uuid"],
	NomeDoResponsavel?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Emails" */
["contatos_Emails_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["contatos_Emails"][]
};
	/** on conflict condition type for table "contatos.Emails" */
["contatos_Emails_on_conflict"]: GraphQLTypes["contatos_Emails_on_conflict"];
	/** Ordering options when selecting data from "contatos.Emails". */
["contatos_Emails_order_by"]: GraphQLTypes["contatos_Emails_order_by"];
	/** primary key columns input for table: contatos_Emails */
["contatos_Emails_pk_columns_input"]: GraphQLTypes["contatos_Emails_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_prepend_input"]: GraphQLTypes["contatos_Emails_prepend_input"];
	/** select columns of table "contatos.Emails" */
["contatos_Emails_select_column"]: GraphQLTypes["contatos_Emails_select_column"];
	/** input type for updating data in table "contatos.Emails" */
["contatos_Emails_set_input"]: GraphQLTypes["contatos_Emails_set_input"];
	/** update columns of table "contatos.Emails" */
["contatos_Emails_update_column"]: GraphQLTypes["contatos_Emails_update_column"];
	/** columns and relationships of "contatos.Enderecos" */
["contatos_Enderecos"]: {
		Bairro:string,
	Categorias:ModelTypes["jsonb"],
	Cep?:string,
	/** An object relationship */
	Cidade:ModelTypes["EstadosEMunicipios"],
	Cidade_Id:ModelTypes["uuid"],
	Complemento?:string,
	/** An object relationship */
	Estado:ModelTypes["EstadosEMunicipios"],
	Estado_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Identidades:ModelTypes["jsonb"],
	Logradouro:string,
	Numero?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Enderecos" */
["contatos_Enderecos_aggregate"]: {
		aggregate?:ModelTypes["contatos_Enderecos_aggregate_fields"],
	nodes:ModelTypes["contatos_Enderecos"][]
};
	/** aggregate fields of "contatos.Enderecos" */
["contatos_Enderecos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["contatos_Enderecos_max_fields"],
	min?:ModelTypes["contatos_Enderecos_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_append_input"]: GraphQLTypes["contatos_Enderecos_append_input"];
	/** Boolean expression to filter rows from the table "contatos.Enderecos". All fields are combined with a logical 'AND'. */
["contatos_Enderecos_bool_exp"]: GraphQLTypes["contatos_Enderecos_bool_exp"];
	/** unique or primary key constraints on table "contatos.Enderecos" */
["contatos_Enderecos_constraint"]: GraphQLTypes["contatos_Enderecos_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Enderecos_delete_at_path_input"]: GraphQLTypes["contatos_Enderecos_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Enderecos_delete_elem_input"]: GraphQLTypes["contatos_Enderecos_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Enderecos_delete_key_input"]: GraphQLTypes["contatos_Enderecos_delete_key_input"];
	/** input type for inserting data into table "contatos.Enderecos" */
["contatos_Enderecos_insert_input"]: GraphQLTypes["contatos_Enderecos_insert_input"];
	/** aggregate max on columns */
["contatos_Enderecos_max_fields"]: {
		Bairro?:string,
	Cep?:string,
	Cidade_Id?:ModelTypes["uuid"],
	Complemento?:string,
	Estado_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Logradouro?:string,
	Numero?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Enderecos_min_fields"]: {
		Bairro?:string,
	Cep?:string,
	Cidade_Id?:ModelTypes["uuid"],
	Complemento?:string,
	Estado_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Logradouro?:string,
	Numero?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Enderecos" */
["contatos_Enderecos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["contatos_Enderecos"][]
};
	/** on conflict condition type for table "contatos.Enderecos" */
["contatos_Enderecos_on_conflict"]: GraphQLTypes["contatos_Enderecos_on_conflict"];
	/** Ordering options when selecting data from "contatos.Enderecos". */
["contatos_Enderecos_order_by"]: GraphQLTypes["contatos_Enderecos_order_by"];
	/** primary key columns input for table: contatos_Enderecos */
["contatos_Enderecos_pk_columns_input"]: GraphQLTypes["contatos_Enderecos_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_prepend_input"]: GraphQLTypes["contatos_Enderecos_prepend_input"];
	/** select columns of table "contatos.Enderecos" */
["contatos_Enderecos_select_column"]: GraphQLTypes["contatos_Enderecos_select_column"];
	/** input type for updating data in table "contatos.Enderecos" */
["contatos_Enderecos_set_input"]: GraphQLTypes["contatos_Enderecos_set_input"];
	/** update columns of table "contatos.Enderecos" */
["contatos_Enderecos_update_column"]: GraphQLTypes["contatos_Enderecos_update_column"];
	/** columns and relationships of "contatos.Logs" */
["contatos_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Logs" */
["contatos_Logs_aggregate"]: {
		aggregate?:ModelTypes["contatos_Logs_aggregate_fields"],
	nodes:ModelTypes["contatos_Logs"][]
};
	/** aggregate fields of "contatos.Logs" */
["contatos_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["contatos_Logs_max_fields"],
	min?:ModelTypes["contatos_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_append_input"]: GraphQLTypes["contatos_Logs_append_input"];
	/** Boolean expression to filter rows from the table "contatos.Logs". All fields are combined with a logical 'AND'. */
["contatos_Logs_bool_exp"]: GraphQLTypes["contatos_Logs_bool_exp"];
	/** unique or primary key constraints on table "contatos.Logs" */
["contatos_Logs_constraint"]: GraphQLTypes["contatos_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Logs_delete_at_path_input"]: GraphQLTypes["contatos_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Logs_delete_elem_input"]: GraphQLTypes["contatos_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Logs_delete_key_input"]: GraphQLTypes["contatos_Logs_delete_key_input"];
	/** input type for inserting data into table "contatos.Logs" */
["contatos_Logs_insert_input"]: GraphQLTypes["contatos_Logs_insert_input"];
	/** aggregate max on columns */
["contatos_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Logs" */
["contatos_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["contatos_Logs"][]
};
	/** on conflict condition type for table "contatos.Logs" */
["contatos_Logs_on_conflict"]: GraphQLTypes["contatos_Logs_on_conflict"];
	/** Ordering options when selecting data from "contatos.Logs". */
["contatos_Logs_order_by"]: GraphQLTypes["contatos_Logs_order_by"];
	/** primary key columns input for table: contatos_Logs */
["contatos_Logs_pk_columns_input"]: GraphQLTypes["contatos_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_prepend_input"]: GraphQLTypes["contatos_Logs_prepend_input"];
	/** select columns of table "contatos.Logs" */
["contatos_Logs_select_column"]: GraphQLTypes["contatos_Logs_select_column"];
	/** input type for updating data in table "contatos.Logs" */
["contatos_Logs_set_input"]: GraphQLTypes["contatos_Logs_set_input"];
	/** update columns of table "contatos.Logs" */
["contatos_Logs_update_column"]: GraphQLTypes["contatos_Logs_update_column"];
	/** columns and relationships of "contatos.Telefones" */
["contatos_Telefones"]: {
		Categorias:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Identidades:ModelTypes["jsonb"],
	NomeDoResponsavel?:string,
	Telefone:ModelTypes["bigint"],
	Tipos:ModelTypes["jsonb"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Telefones" */
["contatos_Telefones_aggregate"]: {
		aggregate?:ModelTypes["contatos_Telefones_aggregate_fields"],
	nodes:ModelTypes["contatos_Telefones"][]
};
	/** aggregate fields of "contatos.Telefones" */
["contatos_Telefones_aggregate_fields"]: {
		avg?:ModelTypes["contatos_Telefones_avg_fields"],
	count:number,
	max?:ModelTypes["contatos_Telefones_max_fields"],
	min?:ModelTypes["contatos_Telefones_min_fields"],
	stddev?:ModelTypes["contatos_Telefones_stddev_fields"],
	stddev_pop?:ModelTypes["contatos_Telefones_stddev_pop_fields"],
	stddev_samp?:ModelTypes["contatos_Telefones_stddev_samp_fields"],
	sum?:ModelTypes["contatos_Telefones_sum_fields"],
	var_pop?:ModelTypes["contatos_Telefones_var_pop_fields"],
	var_samp?:ModelTypes["contatos_Telefones_var_samp_fields"],
	variance?:ModelTypes["contatos_Telefones_variance_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_append_input"]: GraphQLTypes["contatos_Telefones_append_input"];
	/** aggregate avg on columns */
["contatos_Telefones_avg_fields"]: {
		Telefone?:number
};
	/** Boolean expression to filter rows from the table "contatos.Telefones". All fields are combined with a logical 'AND'. */
["contatos_Telefones_bool_exp"]: GraphQLTypes["contatos_Telefones_bool_exp"];
	/** unique or primary key constraints on table "contatos.Telefones" */
["contatos_Telefones_constraint"]: GraphQLTypes["contatos_Telefones_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Telefones_delete_at_path_input"]: GraphQLTypes["contatos_Telefones_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Telefones_delete_elem_input"]: GraphQLTypes["contatos_Telefones_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Telefones_delete_key_input"]: GraphQLTypes["contatos_Telefones_delete_key_input"];
	/** input type for incrementing numeric columns in table "contatos.Telefones" */
["contatos_Telefones_inc_input"]: GraphQLTypes["contatos_Telefones_inc_input"];
	/** input type for inserting data into table "contatos.Telefones" */
["contatos_Telefones_insert_input"]: GraphQLTypes["contatos_Telefones_insert_input"];
	/** aggregate max on columns */
["contatos_Telefones_max_fields"]: {
		Id?:ModelTypes["uuid"],
	NomeDoResponsavel?:string,
	Telefone?:ModelTypes["bigint"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Telefones_min_fields"]: {
		Id?:ModelTypes["uuid"],
	NomeDoResponsavel?:string,
	Telefone?:ModelTypes["bigint"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Telefones" */
["contatos_Telefones_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["contatos_Telefones"][]
};
	/** on conflict condition type for table "contatos.Telefones" */
["contatos_Telefones_on_conflict"]: GraphQLTypes["contatos_Telefones_on_conflict"];
	/** Ordering options when selecting data from "contatos.Telefones". */
["contatos_Telefones_order_by"]: GraphQLTypes["contatos_Telefones_order_by"];
	/** primary key columns input for table: contatos_Telefones */
["contatos_Telefones_pk_columns_input"]: GraphQLTypes["contatos_Telefones_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_prepend_input"]: GraphQLTypes["contatos_Telefones_prepend_input"];
	/** select columns of table "contatos.Telefones" */
["contatos_Telefones_select_column"]: GraphQLTypes["contatos_Telefones_select_column"];
	/** input type for updating data in table "contatos.Telefones" */
["contatos_Telefones_set_input"]: GraphQLTypes["contatos_Telefones_set_input"];
	/** aggregate stddev on columns */
["contatos_Telefones_stddev_fields"]: {
		Telefone?:number
};
	/** aggregate stddev_pop on columns */
["contatos_Telefones_stddev_pop_fields"]: {
		Telefone?:number
};
	/** aggregate stddev_samp on columns */
["contatos_Telefones_stddev_samp_fields"]: {
		Telefone?:number
};
	/** aggregate sum on columns */
["contatos_Telefones_sum_fields"]: {
		Telefone?:ModelTypes["bigint"]
};
	/** update columns of table "contatos.Telefones" */
["contatos_Telefones_update_column"]: GraphQLTypes["contatos_Telefones_update_column"];
	/** aggregate var_pop on columns */
["contatos_Telefones_var_pop_fields"]: {
		Telefone?:number
};
	/** aggregate var_samp on columns */
["contatos_Telefones_var_samp_fields"]: {
		Telefone?:number
};
	/** aggregate variance on columns */
["contatos_Telefones_variance_fields"]: {
		Telefone?:number
};
	/** columns and relationships of "estoque.Enderecamentos" */
["estoque_Enderecamentos"]: {
		Descricao:string,
	/** An array relationship */
	Filhos:ModelTypes["estoque_Enderecamentos"][],
	/** An aggregate relationship */
	Filhos_aggregate:ModelTypes["estoque_Enderecamentos_aggregate"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	Nome:string,
	/** An object relationship */
	Pai?:ModelTypes["estoque_Enderecamentos"],
	Pai_Id?:ModelTypes["uuid"],
	/** An object relationship */
	Tipo:ModelTypes["estoque_TiposDeEnderecamentos"],
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate"]: {
		aggregate?:ModelTypes["estoque_Enderecamentos_aggregate_fields"],
	nodes:ModelTypes["estoque_Enderecamentos"][]
};
	/** aggregate fields of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Enderecamentos_max_fields"],
	min?:ModelTypes["estoque_Enderecamentos_min_fields"]
};
	/** order by aggregate values of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_order_by"]: GraphQLTypes["estoque_Enderecamentos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_arr_rel_insert_input"]: GraphQLTypes["estoque_Enderecamentos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "estoque.Enderecamentos". All fields are combined with a logical 'AND'. */
["estoque_Enderecamentos_bool_exp"]: GraphQLTypes["estoque_Enderecamentos_bool_exp"];
	/** unique or primary key constraints on table "estoque.Enderecamentos" */
["estoque_Enderecamentos_constraint"]: GraphQLTypes["estoque_Enderecamentos_constraint"];
	/** input type for inserting data into table "estoque.Enderecamentos" */
["estoque_Enderecamentos_insert_input"]: GraphQLTypes["estoque_Enderecamentos_insert_input"];
	/** aggregate max on columns */
["estoque_Enderecamentos_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_max_order_by"]: GraphQLTypes["estoque_Enderecamentos_max_order_by"];
	/** aggregate min on columns */
["estoque_Enderecamentos_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_min_order_by"]: GraphQLTypes["estoque_Enderecamentos_min_order_by"];
	/** response of any mutation on the table "estoque.Enderecamentos" */
["estoque_Enderecamentos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Enderecamentos"][]
};
	/** input type for inserting object relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_obj_rel_insert_input"]: GraphQLTypes["estoque_Enderecamentos_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Enderecamentos" */
["estoque_Enderecamentos_on_conflict"]: GraphQLTypes["estoque_Enderecamentos_on_conflict"];
	/** Ordering options when selecting data from "estoque.Enderecamentos". */
["estoque_Enderecamentos_order_by"]: GraphQLTypes["estoque_Enderecamentos_order_by"];
	/** primary key columns input for table: estoque_Enderecamentos */
["estoque_Enderecamentos_pk_columns_input"]: GraphQLTypes["estoque_Enderecamentos_pk_columns_input"];
	/** select columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_select_column"]: GraphQLTypes["estoque_Enderecamentos_select_column"];
	/** input type for updating data in table "estoque.Enderecamentos" */
["estoque_Enderecamentos_set_input"]: GraphQLTypes["estoque_Enderecamentos_set_input"];
	/** update columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_update_column"]: GraphQLTypes["estoque_Enderecamentos_update_column"];
	/** columns and relationships of "estoque.Fabricantes" */
["estoque_Fabricantes"]: {
		Descricao:string,
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	/** An array relationship */
	Modelos:ModelTypes["estoque_Modelos"][],
	/** An aggregate relationship */
	Modelos_aggregate:ModelTypes["estoque_Modelos_aggregate"],
	Nome:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate"]: {
		aggregate?:ModelTypes["estoque_Fabricantes_aggregate_fields"],
	nodes:ModelTypes["estoque_Fabricantes"][]
};
	/** aggregate fields of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Fabricantes_max_fields"],
	min?:ModelTypes["estoque_Fabricantes_min_fields"]
};
	/** Boolean expression to filter rows from the table "estoque.Fabricantes". All fields are combined with a logical 'AND'. */
["estoque_Fabricantes_bool_exp"]: GraphQLTypes["estoque_Fabricantes_bool_exp"];
	/** unique or primary key constraints on table "estoque.Fabricantes" */
["estoque_Fabricantes_constraint"]: GraphQLTypes["estoque_Fabricantes_constraint"];
	/** input type for inserting data into table "estoque.Fabricantes" */
["estoque_Fabricantes_insert_input"]: GraphQLTypes["estoque_Fabricantes_insert_input"];
	/** aggregate max on columns */
["estoque_Fabricantes_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Fabricantes_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Fabricantes" */
["estoque_Fabricantes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Fabricantes"][]
};
	/** input type for inserting object relation for remote table "estoque.Fabricantes" */
["estoque_Fabricantes_obj_rel_insert_input"]: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Fabricantes" */
["estoque_Fabricantes_on_conflict"]: GraphQLTypes["estoque_Fabricantes_on_conflict"];
	/** Ordering options when selecting data from "estoque.Fabricantes". */
["estoque_Fabricantes_order_by"]: GraphQLTypes["estoque_Fabricantes_order_by"];
	/** primary key columns input for table: estoque_Fabricantes */
["estoque_Fabricantes_pk_columns_input"]: GraphQLTypes["estoque_Fabricantes_pk_columns_input"];
	/** select columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_select_column"]: GraphQLTypes["estoque_Fabricantes_select_column"];
	/** input type for updating data in table "estoque.Fabricantes" */
["estoque_Fabricantes_set_input"]: GraphQLTypes["estoque_Fabricantes_set_input"];
	/** update columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_update_column"]: GraphQLTypes["estoque_Fabricantes_update_column"];
	/** columns and relationships of "estoque.Familias" */
["estoque_Familias"]: {
		Descricao:string,
	/** An array relationship */
	Filhos:ModelTypes["estoque_Familias"][],
	/** An aggregate relationship */
	Filhos_aggregate:ModelTypes["estoque_Familias_aggregate"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	Nome:string,
	/** An object relationship */
	Pai?:ModelTypes["estoque_Familias"],
	Pai_Id?:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Familias" */
["estoque_Familias_aggregate"]: {
		aggregate?:ModelTypes["estoque_Familias_aggregate_fields"],
	nodes:ModelTypes["estoque_Familias"][]
};
	/** aggregate fields of "estoque.Familias" */
["estoque_Familias_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Familias_max_fields"],
	min?:ModelTypes["estoque_Familias_min_fields"]
};
	/** order by aggregate values of table "estoque.Familias" */
["estoque_Familias_aggregate_order_by"]: GraphQLTypes["estoque_Familias_aggregate_order_by"];
	/** input type for inserting array relation for remote table "estoque.Familias" */
["estoque_Familias_arr_rel_insert_input"]: GraphQLTypes["estoque_Familias_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "estoque.Familias". All fields are combined with a logical 'AND'. */
["estoque_Familias_bool_exp"]: GraphQLTypes["estoque_Familias_bool_exp"];
	/** unique or primary key constraints on table "estoque.Familias" */
["estoque_Familias_constraint"]: GraphQLTypes["estoque_Familias_constraint"];
	/** input type for inserting data into table "estoque.Familias" */
["estoque_Familias_insert_input"]: GraphQLTypes["estoque_Familias_insert_input"];
	/** aggregate max on columns */
["estoque_Familias_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Familias" */
["estoque_Familias_max_order_by"]: GraphQLTypes["estoque_Familias_max_order_by"];
	/** aggregate min on columns */
["estoque_Familias_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Pai_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Familias" */
["estoque_Familias_min_order_by"]: GraphQLTypes["estoque_Familias_min_order_by"];
	/** response of any mutation on the table "estoque.Familias" */
["estoque_Familias_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Familias"][]
};
	/** input type for inserting object relation for remote table "estoque.Familias" */
["estoque_Familias_obj_rel_insert_input"]: GraphQLTypes["estoque_Familias_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Familias" */
["estoque_Familias_on_conflict"]: GraphQLTypes["estoque_Familias_on_conflict"];
	/** Ordering options when selecting data from "estoque.Familias". */
["estoque_Familias_order_by"]: GraphQLTypes["estoque_Familias_order_by"];
	/** primary key columns input for table: estoque_Familias */
["estoque_Familias_pk_columns_input"]: GraphQLTypes["estoque_Familias_pk_columns_input"];
	/** select columns of table "estoque.Familias" */
["estoque_Familias_select_column"]: GraphQLTypes["estoque_Familias_select_column"];
	/** input type for updating data in table "estoque.Familias" */
["estoque_Familias_set_input"]: GraphQLTypes["estoque_Familias_set_input"];
	/** update columns of table "estoque.Familias" */
["estoque_Familias_update_column"]: GraphQLTypes["estoque_Familias_update_column"];
	/** columns and relationships of "estoque.Grupos" */
["estoque_Grupos"]: {
		Descricao:string,
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	Nome:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Grupos" */
["estoque_Grupos_aggregate"]: {
		aggregate?:ModelTypes["estoque_Grupos_aggregate_fields"],
	nodes:ModelTypes["estoque_Grupos"][]
};
	/** aggregate fields of "estoque.Grupos" */
["estoque_Grupos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Grupos_max_fields"],
	min?:ModelTypes["estoque_Grupos_min_fields"]
};
	/** Boolean expression to filter rows from the table "estoque.Grupos". All fields are combined with a logical 'AND'. */
["estoque_Grupos_bool_exp"]: GraphQLTypes["estoque_Grupos_bool_exp"];
	/** unique or primary key constraints on table "estoque.Grupos" */
["estoque_Grupos_constraint"]: GraphQLTypes["estoque_Grupos_constraint"];
	/** input type for inserting data into table "estoque.Grupos" */
["estoque_Grupos_insert_input"]: GraphQLTypes["estoque_Grupos_insert_input"];
	/** aggregate max on columns */
["estoque_Grupos_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Grupos_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Grupos" */
["estoque_Grupos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Grupos"][]
};
	/** input type for inserting object relation for remote table "estoque.Grupos" */
["estoque_Grupos_obj_rel_insert_input"]: GraphQLTypes["estoque_Grupos_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Grupos" */
["estoque_Grupos_on_conflict"]: GraphQLTypes["estoque_Grupos_on_conflict"];
	/** Ordering options when selecting data from "estoque.Grupos". */
["estoque_Grupos_order_by"]: GraphQLTypes["estoque_Grupos_order_by"];
	/** primary key columns input for table: estoque_Grupos */
["estoque_Grupos_pk_columns_input"]: GraphQLTypes["estoque_Grupos_pk_columns_input"];
	/** select columns of table "estoque.Grupos" */
["estoque_Grupos_select_column"]: GraphQLTypes["estoque_Grupos_select_column"];
	/** input type for updating data in table "estoque.Grupos" */
["estoque_Grupos_set_input"]: GraphQLTypes["estoque_Grupos_set_input"];
	/** update columns of table "estoque.Grupos" */
["estoque_Grupos_update_column"]: GraphQLTypes["estoque_Grupos_update_column"];
	/** columns and relationships of "estoque.Itens" */
["estoque_Itens"]: {
		Classificacao:string,
	Criticidade:string,
	/** An object relationship */
	Enderecamento:ModelTypes["estoque_Enderecamentos"],
	Enderecamento_Id:ModelTypes["uuid"],
	EstoqueMinimo:number,
	/** An object relationship */
	Fabricante:ModelTypes["estoque_Fabricantes"],
	Fabricante_Id:ModelTypes["uuid"],
	/** An object relationship */
	Familia:ModelTypes["estoque_Familias"],
	Familia_Id:ModelTypes["uuid"],
	/** An object relationship */
	Grupo:ModelTypes["estoque_Grupos"],
	Grupo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Modelo?:ModelTypes["estoque_Modelos"],
	Modelo_Id?:ModelTypes["uuid"],
	/** An array relationship */
	Movimentacoes:ModelTypes["movimentacoes_Movimentacoes"][],
	/** An aggregate relationship */
	Movimentacoes_aggregate:ModelTypes["movimentacoes_Movimentacoes_aggregate"],
	/** An object relationship */
	Produto:ModelTypes["Produtos"],
	Produto_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Itens" */
["estoque_Itens_aggregate"]: {
		aggregate?:ModelTypes["estoque_Itens_aggregate_fields"],
	nodes:ModelTypes["estoque_Itens"][]
};
	/** aggregate fields of "estoque.Itens" */
["estoque_Itens_aggregate_fields"]: {
		avg?:ModelTypes["estoque_Itens_avg_fields"],
	count:number,
	max?:ModelTypes["estoque_Itens_max_fields"],
	min?:ModelTypes["estoque_Itens_min_fields"],
	stddev?:ModelTypes["estoque_Itens_stddev_fields"],
	stddev_pop?:ModelTypes["estoque_Itens_stddev_pop_fields"],
	stddev_samp?:ModelTypes["estoque_Itens_stddev_samp_fields"],
	sum?:ModelTypes["estoque_Itens_sum_fields"],
	var_pop?:ModelTypes["estoque_Itens_var_pop_fields"],
	var_samp?:ModelTypes["estoque_Itens_var_samp_fields"],
	variance?:ModelTypes["estoque_Itens_variance_fields"]
};
	/** order by aggregate values of table "estoque.Itens" */
["estoque_Itens_aggregate_order_by"]: GraphQLTypes["estoque_Itens_aggregate_order_by"];
	/** input type for inserting array relation for remote table "estoque.Itens" */
["estoque_Itens_arr_rel_insert_input"]: GraphQLTypes["estoque_Itens_arr_rel_insert_input"];
	/** aggregate avg on columns */
["estoque_Itens_avg_fields"]: {
		EstoqueMinimo?:number
};
	/** order by avg() on columns of table "estoque.Itens" */
["estoque_Itens_avg_order_by"]: GraphQLTypes["estoque_Itens_avg_order_by"];
	/** Boolean expression to filter rows from the table "estoque.Itens". All fields are combined with a logical 'AND'. */
["estoque_Itens_bool_exp"]: GraphQLTypes["estoque_Itens_bool_exp"];
	/** unique or primary key constraints on table "estoque.Itens" */
["estoque_Itens_constraint"]: GraphQLTypes["estoque_Itens_constraint"];
	/** input type for incrementing numeric columns in table "estoque.Itens" */
["estoque_Itens_inc_input"]: GraphQLTypes["estoque_Itens_inc_input"];
	/** input type for inserting data into table "estoque.Itens" */
["estoque_Itens_insert_input"]: GraphQLTypes["estoque_Itens_insert_input"];
	/** aggregate max on columns */
["estoque_Itens_max_fields"]: {
		Classificacao?:string,
	Criticidade?:string,
	Enderecamento_Id?:ModelTypes["uuid"],
	EstoqueMinimo?:number,
	Fabricante_Id?:ModelTypes["uuid"],
	Familia_Id?:ModelTypes["uuid"],
	Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Modelo_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Itens" */
["estoque_Itens_max_order_by"]: GraphQLTypes["estoque_Itens_max_order_by"];
	/** aggregate min on columns */
["estoque_Itens_min_fields"]: {
		Classificacao?:string,
	Criticidade?:string,
	Enderecamento_Id?:ModelTypes["uuid"],
	EstoqueMinimo?:number,
	Fabricante_Id?:ModelTypes["uuid"],
	Familia_Id?:ModelTypes["uuid"],
	Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Modelo_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Itens" */
["estoque_Itens_min_order_by"]: GraphQLTypes["estoque_Itens_min_order_by"];
	/** response of any mutation on the table "estoque.Itens" */
["estoque_Itens_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Itens"][]
};
	/** input type for inserting object relation for remote table "estoque.Itens" */
["estoque_Itens_obj_rel_insert_input"]: GraphQLTypes["estoque_Itens_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Itens" */
["estoque_Itens_on_conflict"]: GraphQLTypes["estoque_Itens_on_conflict"];
	/** Ordering options when selecting data from "estoque.Itens". */
["estoque_Itens_order_by"]: GraphQLTypes["estoque_Itens_order_by"];
	/** primary key columns input for table: estoque_Itens */
["estoque_Itens_pk_columns_input"]: GraphQLTypes["estoque_Itens_pk_columns_input"];
	/** select columns of table "estoque.Itens" */
["estoque_Itens_select_column"]: GraphQLTypes["estoque_Itens_select_column"];
	/** input type for updating data in table "estoque.Itens" */
["estoque_Itens_set_input"]: GraphQLTypes["estoque_Itens_set_input"];
	/** aggregate stddev on columns */
["estoque_Itens_stddev_fields"]: {
		EstoqueMinimo?:number
};
	/** order by stddev() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_order_by"]: GraphQLTypes["estoque_Itens_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["estoque_Itens_stddev_pop_fields"]: {
		EstoqueMinimo?:number
};
	/** order by stddev_pop() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_pop_order_by"]: GraphQLTypes["estoque_Itens_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["estoque_Itens_stddev_samp_fields"]: {
		EstoqueMinimo?:number
};
	/** order by stddev_samp() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_samp_order_by"]: GraphQLTypes["estoque_Itens_stddev_samp_order_by"];
	/** aggregate sum on columns */
["estoque_Itens_sum_fields"]: {
		EstoqueMinimo?:number
};
	/** order by sum() on columns of table "estoque.Itens" */
["estoque_Itens_sum_order_by"]: GraphQLTypes["estoque_Itens_sum_order_by"];
	/** update columns of table "estoque.Itens" */
["estoque_Itens_update_column"]: GraphQLTypes["estoque_Itens_update_column"];
	/** aggregate var_pop on columns */
["estoque_Itens_var_pop_fields"]: {
		EstoqueMinimo?:number
};
	/** order by var_pop() on columns of table "estoque.Itens" */
["estoque_Itens_var_pop_order_by"]: GraphQLTypes["estoque_Itens_var_pop_order_by"];
	/** aggregate var_samp on columns */
["estoque_Itens_var_samp_fields"]: {
		EstoqueMinimo?:number
};
	/** order by var_samp() on columns of table "estoque.Itens" */
["estoque_Itens_var_samp_order_by"]: GraphQLTypes["estoque_Itens_var_samp_order_by"];
	/** aggregate variance on columns */
["estoque_Itens_variance_fields"]: {
		EstoqueMinimo?:number
};
	/** order by variance() on columns of table "estoque.Itens" */
["estoque_Itens_variance_order_by"]: GraphQLTypes["estoque_Itens_variance_order_by"];
	/** columns and relationships of "estoque.Logs" */
["estoque_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Logs" */
["estoque_Logs_aggregate"]: {
		aggregate?:ModelTypes["estoque_Logs_aggregate_fields"],
	nodes:ModelTypes["estoque_Logs"][]
};
	/** aggregate fields of "estoque.Logs" */
["estoque_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Logs_max_fields"],
	min?:ModelTypes["estoque_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_append_input"]: GraphQLTypes["estoque_Logs_append_input"];
	/** Boolean expression to filter rows from the table "estoque.Logs". All fields are combined with a logical 'AND'. */
["estoque_Logs_bool_exp"]: GraphQLTypes["estoque_Logs_bool_exp"];
	/** unique or primary key constraints on table "estoque.Logs" */
["estoque_Logs_constraint"]: GraphQLTypes["estoque_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["estoque_Logs_delete_at_path_input"]: GraphQLTypes["estoque_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["estoque_Logs_delete_elem_input"]: GraphQLTypes["estoque_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["estoque_Logs_delete_key_input"]: GraphQLTypes["estoque_Logs_delete_key_input"];
	/** input type for inserting data into table "estoque.Logs" */
["estoque_Logs_insert_input"]: GraphQLTypes["estoque_Logs_insert_input"];
	/** aggregate max on columns */
["estoque_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Logs" */
["estoque_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Logs"][]
};
	/** on conflict condition type for table "estoque.Logs" */
["estoque_Logs_on_conflict"]: GraphQLTypes["estoque_Logs_on_conflict"];
	/** Ordering options when selecting data from "estoque.Logs". */
["estoque_Logs_order_by"]: GraphQLTypes["estoque_Logs_order_by"];
	/** primary key columns input for table: estoque_Logs */
["estoque_Logs_pk_columns_input"]: GraphQLTypes["estoque_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_prepend_input"]: GraphQLTypes["estoque_Logs_prepend_input"];
	/** select columns of table "estoque.Logs" */
["estoque_Logs_select_column"]: GraphQLTypes["estoque_Logs_select_column"];
	/** input type for updating data in table "estoque.Logs" */
["estoque_Logs_set_input"]: GraphQLTypes["estoque_Logs_set_input"];
	/** update columns of table "estoque.Logs" */
["estoque_Logs_update_column"]: GraphQLTypes["estoque_Logs_update_column"];
	/** columns and relationships of "estoque.Modelos" */
["estoque_Modelos"]: {
		Descricao:string,
	/** An object relationship */
	Fabricante:ModelTypes["estoque_Fabricantes"],
	Fabricante_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	Nome:string,
	/** An object relationship */
	Produto:ModelTypes["Produtos"],
	Produto_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Modelos" */
["estoque_Modelos_aggregate"]: {
		aggregate?:ModelTypes["estoque_Modelos_aggregate_fields"],
	nodes:ModelTypes["estoque_Modelos"][]
};
	/** aggregate fields of "estoque.Modelos" */
["estoque_Modelos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["estoque_Modelos_max_fields"],
	min?:ModelTypes["estoque_Modelos_min_fields"]
};
	/** order by aggregate values of table "estoque.Modelos" */
["estoque_Modelos_aggregate_order_by"]: GraphQLTypes["estoque_Modelos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "estoque.Modelos" */
["estoque_Modelos_arr_rel_insert_input"]: GraphQLTypes["estoque_Modelos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "estoque.Modelos". All fields are combined with a logical 'AND'. */
["estoque_Modelos_bool_exp"]: GraphQLTypes["estoque_Modelos_bool_exp"];
	/** unique or primary key constraints on table "estoque.Modelos" */
["estoque_Modelos_constraint"]: GraphQLTypes["estoque_Modelos_constraint"];
	/** input type for inserting data into table "estoque.Modelos" */
["estoque_Modelos_insert_input"]: GraphQLTypes["estoque_Modelos_insert_input"];
	/** aggregate max on columns */
["estoque_Modelos_max_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Modelos" */
["estoque_Modelos_max_order_by"]: GraphQLTypes["estoque_Modelos_max_order_by"];
	/** aggregate min on columns */
["estoque_Modelos_min_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Produto_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Modelos" */
["estoque_Modelos_min_order_by"]: GraphQLTypes["estoque_Modelos_min_order_by"];
	/** response of any mutation on the table "estoque.Modelos" */
["estoque_Modelos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_Modelos"][]
};
	/** input type for inserting object relation for remote table "estoque.Modelos" */
["estoque_Modelos_obj_rel_insert_input"]: GraphQLTypes["estoque_Modelos_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.Modelos" */
["estoque_Modelos_on_conflict"]: GraphQLTypes["estoque_Modelos_on_conflict"];
	/** Ordering options when selecting data from "estoque.Modelos". */
["estoque_Modelos_order_by"]: GraphQLTypes["estoque_Modelos_order_by"];
	/** primary key columns input for table: estoque_Modelos */
["estoque_Modelos_pk_columns_input"]: GraphQLTypes["estoque_Modelos_pk_columns_input"];
	/** select columns of table "estoque.Modelos" */
["estoque_Modelos_select_column"]: GraphQLTypes["estoque_Modelos_select_column"];
	/** input type for updating data in table "estoque.Modelos" */
["estoque_Modelos_set_input"]: GraphQLTypes["estoque_Modelos_set_input"];
	/** update columns of table "estoque.Modelos" */
["estoque_Modelos_update_column"]: GraphQLTypes["estoque_Modelos_update_column"];
	/** columns and relationships of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos"]: {
		CodigoReferencia:number,
	Descricao:string,
	/** An array relationship */
	Enderecamentos:ModelTypes["estoque_Enderecamentos"][],
	/** An aggregate relationship */
	Enderecamentos_aggregate:ModelTypes["estoque_Enderecamentos_aggregate"],
	Id:ModelTypes["uuid"],
	Nome:string,
	Slug?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate"]: {
		aggregate?:ModelTypes["estoque_TiposDeEnderecamentos_aggregate_fields"],
	nodes:ModelTypes["estoque_TiposDeEnderecamentos"][]
};
	/** aggregate fields of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate_fields"]: {
		avg?:ModelTypes["estoque_TiposDeEnderecamentos_avg_fields"],
	count:number,
	max?:ModelTypes["estoque_TiposDeEnderecamentos_max_fields"],
	min?:ModelTypes["estoque_TiposDeEnderecamentos_min_fields"],
	stddev?:ModelTypes["estoque_TiposDeEnderecamentos_stddev_fields"],
	stddev_pop?:ModelTypes["estoque_TiposDeEnderecamentos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["estoque_TiposDeEnderecamentos_stddev_samp_fields"],
	sum?:ModelTypes["estoque_TiposDeEnderecamentos_sum_fields"],
	var_pop?:ModelTypes["estoque_TiposDeEnderecamentos_var_pop_fields"],
	var_samp?:ModelTypes["estoque_TiposDeEnderecamentos_var_samp_fields"],
	variance?:ModelTypes["estoque_TiposDeEnderecamentos_variance_fields"]
};
	/** aggregate avg on columns */
["estoque_TiposDeEnderecamentos_avg_fields"]: {
		CodigoReferencia?:number
};
	/** Boolean expression to filter rows from the table "estoque.TiposDeEnderecamentos". All fields are combined with a logical 'AND'. */
["estoque_TiposDeEnderecamentos_bool_exp"]: GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"];
	/** unique or primary key constraints on table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_constraint"]: GraphQLTypes["estoque_TiposDeEnderecamentos_constraint"];
	/** input type for incrementing numeric columns in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_inc_input"]: GraphQLTypes["estoque_TiposDeEnderecamentos_inc_input"];
	/** input type for inserting data into table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_insert_input"]: GraphQLTypes["estoque_TiposDeEnderecamentos_insert_input"];
	/** aggregate max on columns */
["estoque_TiposDeEnderecamentos_max_fields"]: {
		CodigoReferencia?:number,
	Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Slug?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_TiposDeEnderecamentos_min_fields"]: {
		CodigoReferencia?:number,
	Descricao?:string,
	Id?:ModelTypes["uuid"],
	Nome?:string,
	Slug?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["estoque_TiposDeEnderecamentos"][]
};
	/** input type for inserting object relation for remote table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_obj_rel_insert_input"]: GraphQLTypes["estoque_TiposDeEnderecamentos_obj_rel_insert_input"];
	/** on conflict condition type for table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_on_conflict"]: GraphQLTypes["estoque_TiposDeEnderecamentos_on_conflict"];
	/** Ordering options when selecting data from "estoque.TiposDeEnderecamentos". */
["estoque_TiposDeEnderecamentos_order_by"]: GraphQLTypes["estoque_TiposDeEnderecamentos_order_by"];
	/** primary key columns input for table: estoque_TiposDeEnderecamentos */
["estoque_TiposDeEnderecamentos_pk_columns_input"]: GraphQLTypes["estoque_TiposDeEnderecamentos_pk_columns_input"];
	/** select columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_select_column"]: GraphQLTypes["estoque_TiposDeEnderecamentos_select_column"];
	/** input type for updating data in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_set_input"]: GraphQLTypes["estoque_TiposDeEnderecamentos_set_input"];
	/** aggregate stddev on columns */
["estoque_TiposDeEnderecamentos_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** aggregate stddev_pop on columns */
["estoque_TiposDeEnderecamentos_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** aggregate stddev_samp on columns */
["estoque_TiposDeEnderecamentos_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** aggregate sum on columns */
["estoque_TiposDeEnderecamentos_sum_fields"]: {
		CodigoReferencia?:number
};
	/** update columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_update_column"]: GraphQLTypes["estoque_TiposDeEnderecamentos_update_column"];
	/** aggregate var_pop on columns */
["estoque_TiposDeEnderecamentos_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** aggregate var_samp on columns */
["estoque_TiposDeEnderecamentos_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** aggregate variance on columns */
["estoque_TiposDeEnderecamentos_variance_fields"]: {
		CodigoReferencia?:number
};
	["float8"]:any;
	/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
["float8_comparison_exp"]: GraphQLTypes["float8_comparison_exp"];
	/** columns and relationships of "identidades.Clientes" */
["identidades_Clientes"]: {
		Id:ModelTypes["uuid"],
	/** An array relationship */
	Leads:ModelTypes["clientes_Leads"][],
	/** An aggregate relationship */
	Leads_aggregate:ModelTypes["clientes_Leads_aggregate"],
	/** An object relationship */
	Pessoa:ModelTypes["identidades_Pessoas"],
	Pessoa_Id:ModelTypes["uuid"],
	/** An array relationship */
	Tickets:ModelTypes["atendimentos_Tickets"][],
	/** An aggregate relationship */
	Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	/** An array relationship */
	Usuarios:ModelTypes["autenticacao_Usuarios"][],
	/** An aggregate relationship */
	Usuarios_aggregate:ModelTypes["autenticacao_Usuarios_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos"]: {
		DataAprovado?:ModelTypes["timestamptz"],
	DataRecusado?:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	MotivoRecusa?:string,
	Nome:string,
	/** An object relationship */
	Pessoa:ModelTypes["identidades_Pessoas"],
	Pessoa_Id:ModelTypes["uuid"],
	/** An object relationship */
	Situacao?:ModelTypes["identidades_Clientes_Documentos_Situacoes"],
	Situacao_Id?:ModelTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes"]: {
		/** An array relationship */
	Clientes_Documentos:ModelTypes["identidades_Clientes_Documentos"][],
	/** An aggregate relationship */
	Clientes_Documentos_aggregate:ModelTypes["identidades_Clientes_Documentos_aggregate"],
	Comentario:string,
	Valor:string
};
	/** aggregated selection of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate"]: {
		aggregate?:ModelTypes["identidades_Clientes_Documentos_Situacoes_aggregate_fields"],
	nodes:ModelTypes["identidades_Clientes_Documentos_Situacoes"][]
};
	/** aggregate fields of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Clientes_Documentos_Situacoes_max_fields"],
	min?:ModelTypes["identidades_Clientes_Documentos_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos_Situacoes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_bool_exp"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"];
	/** unique or primary key constraints on table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_constraint"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_constraint"];
	["identidades_Clientes_Documentos_Situacoes_enum"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"];
	/** Boolean expression to compare columns of type "identidades_Clientes_Documentos_Situacoes_enum". All fields are combined with logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"];
	/** input type for inserting data into table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_insert_input"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_insert_input"];
	/** aggregate max on columns */
["identidades_Clientes_Documentos_Situacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["identidades_Clientes_Documentos_Situacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Clientes_Documentos_Situacoes"][]
};
	/** input type for inserting object relation for remote table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_on_conflict"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_on_conflict"];
	/** Ordering options when selecting data from "identidades.Clientes_Documentos_Situacoes". */
["identidades_Clientes_Documentos_Situacoes_order_by"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_order_by"];
	/** primary key columns input for table: identidades_Clientes_Documentos_Situacoes */
["identidades_Clientes_Documentos_Situacoes_pk_columns_input"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_pk_columns_input"];
	/** select columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_select_column"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_select_column"];
	/** input type for updating data in table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_set_input"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_set_input"];
	/** update columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_update_column"]: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_update_column"];
	/** aggregated selection of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate"]: {
		aggregate?:ModelTypes["identidades_Clientes_Documentos_aggregate_fields"],
	nodes:ModelTypes["identidades_Clientes_Documentos"][]
};
	/** aggregate fields of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Clientes_Documentos_max_fields"],
	min?:ModelTypes["identidades_Clientes_Documentos_min_fields"]
};
	/** order by aggregate values of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_order_by"]: GraphQLTypes["identidades_Clientes_Documentos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_arr_rel_insert_input"]: GraphQLTypes["identidades_Clientes_Documentos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_bool_exp"]: GraphQLTypes["identidades_Clientes_Documentos_bool_exp"];
	/** unique or primary key constraints on table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_constraint"]: GraphQLTypes["identidades_Clientes_Documentos_constraint"];
	/** input type for inserting data into table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_insert_input"]: GraphQLTypes["identidades_Clientes_Documentos_insert_input"];
	/** aggregate max on columns */
["identidades_Clientes_Documentos_max_fields"]: {
		DataAprovado?:ModelTypes["timestamptz"],
	DataRecusado?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusa?:string,
	Nome?:string,
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_max_order_by"]: GraphQLTypes["identidades_Clientes_Documentos_max_order_by"];
	/** aggregate min on columns */
["identidades_Clientes_Documentos_min_fields"]: {
		DataAprovado?:ModelTypes["timestamptz"],
	DataRecusado?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusa?:string,
	Nome?:string,
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_min_order_by"]: GraphQLTypes["identidades_Clientes_Documentos_min_order_by"];
	/** response of any mutation on the table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Clientes_Documentos"][]
};
	/** on conflict condition type for table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_on_conflict"]: GraphQLTypes["identidades_Clientes_Documentos_on_conflict"];
	/** Ordering options when selecting data from "identidades.Clientes_Documentos". */
["identidades_Clientes_Documentos_order_by"]: GraphQLTypes["identidades_Clientes_Documentos_order_by"];
	/** primary key columns input for table: identidades_Clientes_Documentos */
["identidades_Clientes_Documentos_pk_columns_input"]: GraphQLTypes["identidades_Clientes_Documentos_pk_columns_input"];
	/** select columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_select_column"]: GraphQLTypes["identidades_Clientes_Documentos_select_column"];
	/** input type for updating data in table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_set_input"]: GraphQLTypes["identidades_Clientes_Documentos_set_input"];
	/** update columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_update_column"]: GraphQLTypes["identidades_Clientes_Documentos_update_column"];
	/** aggregated selection of "identidades.Clientes" */
["identidades_Clientes_aggregate"]: {
		aggregate?:ModelTypes["identidades_Clientes_aggregate_fields"],
	nodes:ModelTypes["identidades_Clientes"][]
};
	/** aggregate fields of "identidades.Clientes" */
["identidades_Clientes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Clientes_max_fields"],
	min?:ModelTypes["identidades_Clientes_min_fields"]
};
	/** Boolean expression to filter rows from the table "identidades.Clientes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_bool_exp"]: GraphQLTypes["identidades_Clientes_bool_exp"];
	/** unique or primary key constraints on table "identidades.Clientes" */
["identidades_Clientes_constraint"]: GraphQLTypes["identidades_Clientes_constraint"];
	/** input type for inserting data into table "identidades.Clientes" */
["identidades_Clientes_insert_input"]: GraphQLTypes["identidades_Clientes_insert_input"];
	/** aggregate max on columns */
["identidades_Clientes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Clientes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Clientes" */
["identidades_Clientes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Clientes"][]
};
	/** input type for inserting object relation for remote table "identidades.Clientes" */
["identidades_Clientes_obj_rel_insert_input"]: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"];
	/** on conflict condition type for table "identidades.Clientes" */
["identidades_Clientes_on_conflict"]: GraphQLTypes["identidades_Clientes_on_conflict"];
	/** Ordering options when selecting data from "identidades.Clientes". */
["identidades_Clientes_order_by"]: GraphQLTypes["identidades_Clientes_order_by"];
	/** primary key columns input for table: identidades_Clientes */
["identidades_Clientes_pk_columns_input"]: GraphQLTypes["identidades_Clientes_pk_columns_input"];
	/** select columns of table "identidades.Clientes" */
["identidades_Clientes_select_column"]: GraphQLTypes["identidades_Clientes_select_column"];
	/** input type for updating data in table "identidades.Clientes" */
["identidades_Clientes_set_input"]: GraphQLTypes["identidades_Clientes_set_input"];
	/** update columns of table "identidades.Clientes" */
["identidades_Clientes_update_column"]: GraphQLTypes["identidades_Clientes_update_column"];
	/** columns and relationships of "identidades.Colaboradores" */
["identidades_Colaboradores"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Pessoa:ModelTypes["identidades_Pessoas"],
	Pessoa_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate"]: {
		aggregate?:ModelTypes["identidades_Colaboradores_aggregate_fields"],
	nodes:ModelTypes["identidades_Colaboradores"][]
};
	/** aggregate fields of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Colaboradores_max_fields"],
	min?:ModelTypes["identidades_Colaboradores_min_fields"]
};
	/** order by aggregate values of table "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_order_by"]: GraphQLTypes["identidades_Colaboradores_aggregate_order_by"];
	/** input type for inserting array relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_arr_rel_insert_input"]: GraphQLTypes["identidades_Colaboradores_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "identidades.Colaboradores". All fields are combined with a logical 'AND'. */
["identidades_Colaboradores_bool_exp"]: GraphQLTypes["identidades_Colaboradores_bool_exp"];
	/** unique or primary key constraints on table "identidades.Colaboradores" */
["identidades_Colaboradores_constraint"]: GraphQLTypes["identidades_Colaboradores_constraint"];
	/** input type for inserting data into table "identidades.Colaboradores" */
["identidades_Colaboradores_insert_input"]: GraphQLTypes["identidades_Colaboradores_insert_input"];
	/** aggregate max on columns */
["identidades_Colaboradores_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_max_order_by"]: GraphQLTypes["identidades_Colaboradores_max_order_by"];
	/** aggregate min on columns */
["identidades_Colaboradores_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_min_order_by"]: GraphQLTypes["identidades_Colaboradores_min_order_by"];
	/** response of any mutation on the table "identidades.Colaboradores" */
["identidades_Colaboradores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Colaboradores"][]
};
	/** input type for inserting object relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_obj_rel_insert_input"]: GraphQLTypes["identidades_Colaboradores_obj_rel_insert_input"];
	/** on conflict condition type for table "identidades.Colaboradores" */
["identidades_Colaboradores_on_conflict"]: GraphQLTypes["identidades_Colaboradores_on_conflict"];
	/** Ordering options when selecting data from "identidades.Colaboradores". */
["identidades_Colaboradores_order_by"]: GraphQLTypes["identidades_Colaboradores_order_by"];
	/** primary key columns input for table: identidades_Colaboradores */
["identidades_Colaboradores_pk_columns_input"]: GraphQLTypes["identidades_Colaboradores_pk_columns_input"];
	/** select columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_select_column"]: GraphQLTypes["identidades_Colaboradores_select_column"];
	/** input type for updating data in table "identidades.Colaboradores" */
["identidades_Colaboradores_set_input"]: GraphQLTypes["identidades_Colaboradores_set_input"];
	/** update columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_update_column"]: GraphQLTypes["identidades_Colaboradores_update_column"];
	/** columns and relationships of "identidades.Fornecedores" */
["identidades_Fornecedores"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Pessoa:ModelTypes["identidades_Pessoas"],
	Pessoa_Id:ModelTypes["uuid"],
	PrecoDoKm?:ModelTypes["float8"],
	PrestadorDeServico:boolean,
	/** An array relationship */
	Servicos:ModelTypes["comercial_PrestadorDeServicos_Servicos"][],
	/** An aggregate relationship */
	Servicos_aggregate:ModelTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** An array relationship */
	Vendedores:ModelTypes["identidades_Vendedores"][],
	/** An aggregate relationship */
	Vendedores_aggregate:ModelTypes["identidades_Vendedores_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate"]: {
		aggregate?:ModelTypes["identidades_Fornecedores_aggregate_fields"],
	nodes:ModelTypes["identidades_Fornecedores"][]
};
	/** aggregate fields of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate_fields"]: {
		avg?:ModelTypes["identidades_Fornecedores_avg_fields"],
	count:number,
	max?:ModelTypes["identidades_Fornecedores_max_fields"],
	min?:ModelTypes["identidades_Fornecedores_min_fields"],
	stddev?:ModelTypes["identidades_Fornecedores_stddev_fields"],
	stddev_pop?:ModelTypes["identidades_Fornecedores_stddev_pop_fields"],
	stddev_samp?:ModelTypes["identidades_Fornecedores_stddev_samp_fields"],
	sum?:ModelTypes["identidades_Fornecedores_sum_fields"],
	var_pop?:ModelTypes["identidades_Fornecedores_var_pop_fields"],
	var_samp?:ModelTypes["identidades_Fornecedores_var_samp_fields"],
	variance?:ModelTypes["identidades_Fornecedores_variance_fields"]
};
	/** aggregate avg on columns */
["identidades_Fornecedores_avg_fields"]: {
		PrecoDoKm?:number
};
	/** Boolean expression to filter rows from the table "identidades.Fornecedores". All fields are combined with a logical 'AND'. */
["identidades_Fornecedores_bool_exp"]: GraphQLTypes["identidades_Fornecedores_bool_exp"];
	/** unique or primary key constraints on table "identidades.Fornecedores" */
["identidades_Fornecedores_constraint"]: GraphQLTypes["identidades_Fornecedores_constraint"];
	/** input type for incrementing numeric columns in table "identidades.Fornecedores" */
["identidades_Fornecedores_inc_input"]: GraphQLTypes["identidades_Fornecedores_inc_input"];
	/** input type for inserting data into table "identidades.Fornecedores" */
["identidades_Fornecedores_insert_input"]: GraphQLTypes["identidades_Fornecedores_insert_input"];
	/** aggregate max on columns */
["identidades_Fornecedores_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	PrecoDoKm?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Fornecedores_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	PrecoDoKm?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Fornecedores" */
["identidades_Fornecedores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Fornecedores"][]
};
	/** input type for inserting object relation for remote table "identidades.Fornecedores" */
["identidades_Fornecedores_obj_rel_insert_input"]: GraphQLTypes["identidades_Fornecedores_obj_rel_insert_input"];
	/** on conflict condition type for table "identidades.Fornecedores" */
["identidades_Fornecedores_on_conflict"]: GraphQLTypes["identidades_Fornecedores_on_conflict"];
	/** Ordering options when selecting data from "identidades.Fornecedores". */
["identidades_Fornecedores_order_by"]: GraphQLTypes["identidades_Fornecedores_order_by"];
	/** primary key columns input for table: identidades_Fornecedores */
["identidades_Fornecedores_pk_columns_input"]: GraphQLTypes["identidades_Fornecedores_pk_columns_input"];
	/** select columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_select_column"]: GraphQLTypes["identidades_Fornecedores_select_column"];
	/** input type for updating data in table "identidades.Fornecedores" */
["identidades_Fornecedores_set_input"]: GraphQLTypes["identidades_Fornecedores_set_input"];
	/** aggregate stddev on columns */
["identidades_Fornecedores_stddev_fields"]: {
		PrecoDoKm?:number
};
	/** aggregate stddev_pop on columns */
["identidades_Fornecedores_stddev_pop_fields"]: {
		PrecoDoKm?:number
};
	/** aggregate stddev_samp on columns */
["identidades_Fornecedores_stddev_samp_fields"]: {
		PrecoDoKm?:number
};
	/** aggregate sum on columns */
["identidades_Fornecedores_sum_fields"]: {
		PrecoDoKm?:ModelTypes["float8"]
};
	/** update columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_update_column"]: GraphQLTypes["identidades_Fornecedores_update_column"];
	/** aggregate var_pop on columns */
["identidades_Fornecedores_var_pop_fields"]: {
		PrecoDoKm?:number
};
	/** aggregate var_samp on columns */
["identidades_Fornecedores_var_samp_fields"]: {
		PrecoDoKm?:number
};
	/** aggregate variance on columns */
["identidades_Fornecedores_variance_fields"]: {
		PrecoDoKm?:number
};
	/** columns and relationships of "identidades.Logs" */
["identidades_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Logs" */
["identidades_Logs_aggregate"]: {
		aggregate?:ModelTypes["identidades_Logs_aggregate_fields"],
	nodes:ModelTypes["identidades_Logs"][]
};
	/** aggregate fields of "identidades.Logs" */
["identidades_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Logs_max_fields"],
	min?:ModelTypes["identidades_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_append_input"]: GraphQLTypes["identidades_Logs_append_input"];
	/** Boolean expression to filter rows from the table "identidades.Logs". All fields are combined with a logical 'AND'. */
["identidades_Logs_bool_exp"]: GraphQLTypes["identidades_Logs_bool_exp"];
	/** unique or primary key constraints on table "identidades.Logs" */
["identidades_Logs_constraint"]: GraphQLTypes["identidades_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Logs_delete_at_path_input"]: GraphQLTypes["identidades_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Logs_delete_elem_input"]: GraphQLTypes["identidades_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Logs_delete_key_input"]: GraphQLTypes["identidades_Logs_delete_key_input"];
	/** input type for inserting data into table "identidades.Logs" */
["identidades_Logs_insert_input"]: GraphQLTypes["identidades_Logs_insert_input"];
	/** aggregate max on columns */
["identidades_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Logs" */
["identidades_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Logs"][]
};
	/** on conflict condition type for table "identidades.Logs" */
["identidades_Logs_on_conflict"]: GraphQLTypes["identidades_Logs_on_conflict"];
	/** Ordering options when selecting data from "identidades.Logs". */
["identidades_Logs_order_by"]: GraphQLTypes["identidades_Logs_order_by"];
	/** primary key columns input for table: identidades_Logs */
["identidades_Logs_pk_columns_input"]: GraphQLTypes["identidades_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_prepend_input"]: GraphQLTypes["identidades_Logs_prepend_input"];
	/** select columns of table "identidades.Logs" */
["identidades_Logs_select_column"]: GraphQLTypes["identidades_Logs_select_column"];
	/** input type for updating data in table "identidades.Logs" */
["identidades_Logs_set_input"]: GraphQLTypes["identidades_Logs_set_input"];
	/** update columns of table "identidades.Logs" */
["identidades_Logs_update_column"]: GraphQLTypes["identidades_Logs_update_column"];
	/** columns and relationships of "identidades.Pessoas" */
["identidades_Pessoas"]: {
		/** An object relationship */
	Cliente?:ModelTypes["identidades_Clientes"],
	/** An array relationship */
	Colaboradores:ModelTypes["identidades_Colaboradores"][],
	/** An aggregate relationship */
	Colaboradores_aggregate:ModelTypes["identidades_Colaboradores_aggregate"],
	DadosDaApi:ModelTypes["jsonb"],
	/** An array relationship */
	Documentos:ModelTypes["identidades_Clientes_Documentos"][],
	/** An aggregate relationship */
	Documentos_aggregate:ModelTypes["identidades_Clientes_Documentos_aggregate"],
	/** An object relationship */
	Fornecedor?:ModelTypes["identidades_Fornecedores"],
	Id:ModelTypes["uuid"],
	Identificador:string,
	Nome:string,
	PessoaJuridica:boolean,
	/** An array relationship */
	Representantes:ModelTypes["identidades_Representantes"][],
	/** An aggregate relationship */
	Representantes_aggregate:ModelTypes["identidades_Representantes_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Pessoas" */
["identidades_Pessoas_aggregate"]: {
		aggregate?:ModelTypes["identidades_Pessoas_aggregate_fields"],
	nodes:ModelTypes["identidades_Pessoas"][]
};
	/** aggregate fields of "identidades.Pessoas" */
["identidades_Pessoas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Pessoas_max_fields"],
	min?:ModelTypes["identidades_Pessoas_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_append_input"]: GraphQLTypes["identidades_Pessoas_append_input"];
	/** Boolean expression to filter rows from the table "identidades.Pessoas". All fields are combined with a logical 'AND'. */
["identidades_Pessoas_bool_exp"]: GraphQLTypes["identidades_Pessoas_bool_exp"];
	/** unique or primary key constraints on table "identidades.Pessoas" */
["identidades_Pessoas_constraint"]: GraphQLTypes["identidades_Pessoas_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Pessoas_delete_at_path_input"]: GraphQLTypes["identidades_Pessoas_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Pessoas_delete_elem_input"]: GraphQLTypes["identidades_Pessoas_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Pessoas_delete_key_input"]: GraphQLTypes["identidades_Pessoas_delete_key_input"];
	/** input type for inserting data into table "identidades.Pessoas" */
["identidades_Pessoas_insert_input"]: GraphQLTypes["identidades_Pessoas_insert_input"];
	/** aggregate max on columns */
["identidades_Pessoas_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Identificador?:string,
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Pessoas_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Identificador?:string,
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Pessoas" */
["identidades_Pessoas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Pessoas"][]
};
	/** input type for inserting object relation for remote table "identidades.Pessoas" */
["identidades_Pessoas_obj_rel_insert_input"]: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"];
	/** on conflict condition type for table "identidades.Pessoas" */
["identidades_Pessoas_on_conflict"]: GraphQLTypes["identidades_Pessoas_on_conflict"];
	/** Ordering options when selecting data from "identidades.Pessoas". */
["identidades_Pessoas_order_by"]: GraphQLTypes["identidades_Pessoas_order_by"];
	/** primary key columns input for table: identidades_Pessoas */
["identidades_Pessoas_pk_columns_input"]: GraphQLTypes["identidades_Pessoas_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_prepend_input"]: GraphQLTypes["identidades_Pessoas_prepend_input"];
	/** select columns of table "identidades.Pessoas" */
["identidades_Pessoas_select_column"]: GraphQLTypes["identidades_Pessoas_select_column"];
	/** input type for updating data in table "identidades.Pessoas" */
["identidades_Pessoas_set_input"]: GraphQLTypes["identidades_Pessoas_set_input"];
	/** update columns of table "identidades.Pessoas" */
["identidades_Pessoas_update_column"]: GraphQLTypes["identidades_Pessoas_update_column"];
	/** columns and relationships of "identidades.Representantes" */
["identidades_Representantes"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Pessoa:ModelTypes["identidades_Pessoas"],
	/** An object relationship */
	PessoaRepresentada?:ModelTypes["identidades_Pessoas"],
	PessoaRepresentada_Id:ModelTypes["uuid"],
	Pessoa_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Representantes" */
["identidades_Representantes_aggregate"]: {
		aggregate?:ModelTypes["identidades_Representantes_aggregate_fields"],
	nodes:ModelTypes["identidades_Representantes"][]
};
	/** aggregate fields of "identidades.Representantes" */
["identidades_Representantes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Representantes_max_fields"],
	min?:ModelTypes["identidades_Representantes_min_fields"]
};
	/** order by aggregate values of table "identidades.Representantes" */
["identidades_Representantes_aggregate_order_by"]: GraphQLTypes["identidades_Representantes_aggregate_order_by"];
	/** input type for inserting array relation for remote table "identidades.Representantes" */
["identidades_Representantes_arr_rel_insert_input"]: GraphQLTypes["identidades_Representantes_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "identidades.Representantes". All fields are combined with a logical 'AND'. */
["identidades_Representantes_bool_exp"]: GraphQLTypes["identidades_Representantes_bool_exp"];
	/** unique or primary key constraints on table "identidades.Representantes" */
["identidades_Representantes_constraint"]: GraphQLTypes["identidades_Representantes_constraint"];
	/** input type for inserting data into table "identidades.Representantes" */
["identidades_Representantes_insert_input"]: GraphQLTypes["identidades_Representantes_insert_input"];
	/** aggregate max on columns */
["identidades_Representantes_max_fields"]: {
		Id?:ModelTypes["uuid"],
	PessoaRepresentada_Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Representantes" */
["identidades_Representantes_max_order_by"]: GraphQLTypes["identidades_Representantes_max_order_by"];
	/** aggregate min on columns */
["identidades_Representantes_min_fields"]: {
		Id?:ModelTypes["uuid"],
	PessoaRepresentada_Id?:ModelTypes["uuid"],
	Pessoa_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Representantes" */
["identidades_Representantes_min_order_by"]: GraphQLTypes["identidades_Representantes_min_order_by"];
	/** response of any mutation on the table "identidades.Representantes" */
["identidades_Representantes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Representantes"][]
};
	/** on conflict condition type for table "identidades.Representantes" */
["identidades_Representantes_on_conflict"]: GraphQLTypes["identidades_Representantes_on_conflict"];
	/** Ordering options when selecting data from "identidades.Representantes". */
["identidades_Representantes_order_by"]: GraphQLTypes["identidades_Representantes_order_by"];
	/** primary key columns input for table: identidades_Representantes */
["identidades_Representantes_pk_columns_input"]: GraphQLTypes["identidades_Representantes_pk_columns_input"];
	/** select columns of table "identidades.Representantes" */
["identidades_Representantes_select_column"]: GraphQLTypes["identidades_Representantes_select_column"];
	/** input type for updating data in table "identidades.Representantes" */
["identidades_Representantes_set_input"]: GraphQLTypes["identidades_Representantes_set_input"];
	/** update columns of table "identidades.Representantes" */
["identidades_Representantes_update_column"]: GraphQLTypes["identidades_Representantes_update_column"];
	/** columns and relationships of "identidades.Vendedores" */
["identidades_Vendedores"]: {
		Emails?:ModelTypes["jsonb"],
	/** An object relationship */
	Fornecedor:ModelTypes["identidades_Fornecedores"],
	Fornecedor_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	Nome:string,
	Telefones?:ModelTypes["jsonb"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Vendedores" */
["identidades_Vendedores_aggregate"]: {
		aggregate?:ModelTypes["identidades_Vendedores_aggregate_fields"],
	nodes:ModelTypes["identidades_Vendedores"][]
};
	/** aggregate fields of "identidades.Vendedores" */
["identidades_Vendedores_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["identidades_Vendedores_max_fields"],
	min?:ModelTypes["identidades_Vendedores_min_fields"]
};
	/** order by aggregate values of table "identidades.Vendedores" */
["identidades_Vendedores_aggregate_order_by"]: GraphQLTypes["identidades_Vendedores_aggregate_order_by"];
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_append_input"]: GraphQLTypes["identidades_Vendedores_append_input"];
	/** input type for inserting array relation for remote table "identidades.Vendedores" */
["identidades_Vendedores_arr_rel_insert_input"]: GraphQLTypes["identidades_Vendedores_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "identidades.Vendedores". All fields are combined with a logical 'AND'. */
["identidades_Vendedores_bool_exp"]: GraphQLTypes["identidades_Vendedores_bool_exp"];
	/** unique or primary key constraints on table "identidades.Vendedores" */
["identidades_Vendedores_constraint"]: GraphQLTypes["identidades_Vendedores_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Vendedores_delete_at_path_input"]: GraphQLTypes["identidades_Vendedores_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Vendedores_delete_elem_input"]: GraphQLTypes["identidades_Vendedores_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Vendedores_delete_key_input"]: GraphQLTypes["identidades_Vendedores_delete_key_input"];
	/** input type for inserting data into table "identidades.Vendedores" */
["identidades_Vendedores_insert_input"]: GraphQLTypes["identidades_Vendedores_insert_input"];
	/** aggregate max on columns */
["identidades_Vendedores_max_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_max_order_by"]: GraphQLTypes["identidades_Vendedores_max_order_by"];
	/** aggregate min on columns */
["identidades_Vendedores_min_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_min_order_by"]: GraphQLTypes["identidades_Vendedores_min_order_by"];
	/** response of any mutation on the table "identidades.Vendedores" */
["identidades_Vendedores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["identidades_Vendedores"][]
};
	/** on conflict condition type for table "identidades.Vendedores" */
["identidades_Vendedores_on_conflict"]: GraphQLTypes["identidades_Vendedores_on_conflict"];
	/** Ordering options when selecting data from "identidades.Vendedores". */
["identidades_Vendedores_order_by"]: GraphQLTypes["identidades_Vendedores_order_by"];
	/** primary key columns input for table: identidades_Vendedores */
["identidades_Vendedores_pk_columns_input"]: GraphQLTypes["identidades_Vendedores_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_prepend_input"]: GraphQLTypes["identidades_Vendedores_prepend_input"];
	/** select columns of table "identidades.Vendedores" */
["identidades_Vendedores_select_column"]: GraphQLTypes["identidades_Vendedores_select_column"];
	/** input type for updating data in table "identidades.Vendedores" */
["identidades_Vendedores_set_input"]: GraphQLTypes["identidades_Vendedores_set_input"];
	/** update columns of table "identidades.Vendedores" */
["identidades_Vendedores_update_column"]: GraphQLTypes["identidades_Vendedores_update_column"];
	["jsonb"]:any;
	/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
["jsonb_comparison_exp"]: GraphQLTypes["jsonb_comparison_exp"];
	/** columns and relationships of "movimentacoes.Motivos" */
["movimentacoes_Motivos"]: {
		Comentario:string,
	/** An array relationship */
	Movimentacoes:ModelTypes["movimentacoes_Movimentacoes"][],
	/** An aggregate relationship */
	Movimentacoes_aggregate:ModelTypes["movimentacoes_Movimentacoes_aggregate"],
	Valor:string
};
	/** aggregated selection of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate"]: {
		aggregate?:ModelTypes["movimentacoes_Motivos_aggregate_fields"],
	nodes:ModelTypes["movimentacoes_Motivos"][]
};
	/** aggregate fields of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["movimentacoes_Motivos_max_fields"],
	min?:ModelTypes["movimentacoes_Motivos_min_fields"]
};
	/** Boolean expression to filter rows from the table "movimentacoes.Motivos". All fields are combined with a logical 'AND'. */
["movimentacoes_Motivos_bool_exp"]: GraphQLTypes["movimentacoes_Motivos_bool_exp"];
	/** unique or primary key constraints on table "movimentacoes.Motivos" */
["movimentacoes_Motivos_constraint"]: GraphQLTypes["movimentacoes_Motivos_constraint"];
	["movimentacoes_Motivos_enum"]: GraphQLTypes["movimentacoes_Motivos_enum"];
	/** Boolean expression to compare columns of type "movimentacoes_Motivos_enum". All fields are combined with logical 'AND'. */
["movimentacoes_Motivos_enum_comparison_exp"]: GraphQLTypes["movimentacoes_Motivos_enum_comparison_exp"];
	/** input type for inserting data into table "movimentacoes.Motivos" */
["movimentacoes_Motivos_insert_input"]: GraphQLTypes["movimentacoes_Motivos_insert_input"];
	/** aggregate max on columns */
["movimentacoes_Motivos_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["movimentacoes_Motivos_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "movimentacoes.Motivos" */
["movimentacoes_Motivos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["movimentacoes_Motivos"][]
};
	/** input type for inserting object relation for remote table "movimentacoes.Motivos" */
["movimentacoes_Motivos_obj_rel_insert_input"]: GraphQLTypes["movimentacoes_Motivos_obj_rel_insert_input"];
	/** on conflict condition type for table "movimentacoes.Motivos" */
["movimentacoes_Motivos_on_conflict"]: GraphQLTypes["movimentacoes_Motivos_on_conflict"];
	/** Ordering options when selecting data from "movimentacoes.Motivos". */
["movimentacoes_Motivos_order_by"]: GraphQLTypes["movimentacoes_Motivos_order_by"];
	/** primary key columns input for table: movimentacoes_Motivos */
["movimentacoes_Motivos_pk_columns_input"]: GraphQLTypes["movimentacoes_Motivos_pk_columns_input"];
	/** select columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_select_column"]: GraphQLTypes["movimentacoes_Motivos_select_column"];
	/** input type for updating data in table "movimentacoes.Motivos" */
["movimentacoes_Motivos_set_input"]: GraphQLTypes["movimentacoes_Motivos_set_input"];
	/** update columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_update_column"]: GraphQLTypes["movimentacoes_Motivos_update_column"];
	/** columns and relationships of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes"]: {
		Data:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An object relationship */
	Motivo?:ModelTypes["movimentacoes_Motivos"],
	Motivo_Id?:ModelTypes["movimentacoes_Motivos_enum"],
	Quantidade:number,
	Tipo:string,
	Valor:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate"]: {
		aggregate?:ModelTypes["movimentacoes_Movimentacoes_aggregate_fields"],
	nodes:ModelTypes["movimentacoes_Movimentacoes"][]
};
	/** aggregate fields of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_fields"]: {
		avg?:ModelTypes["movimentacoes_Movimentacoes_avg_fields"],
	count:number,
	max?:ModelTypes["movimentacoes_Movimentacoes_max_fields"],
	min?:ModelTypes["movimentacoes_Movimentacoes_min_fields"],
	stddev?:ModelTypes["movimentacoes_Movimentacoes_stddev_fields"],
	stddev_pop?:ModelTypes["movimentacoes_Movimentacoes_stddev_pop_fields"],
	stddev_samp?:ModelTypes["movimentacoes_Movimentacoes_stddev_samp_fields"],
	sum?:ModelTypes["movimentacoes_Movimentacoes_sum_fields"],
	var_pop?:ModelTypes["movimentacoes_Movimentacoes_var_pop_fields"],
	var_samp?:ModelTypes["movimentacoes_Movimentacoes_var_samp_fields"],
	variance?:ModelTypes["movimentacoes_Movimentacoes_variance_fields"]
};
	/** order by aggregate values of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_aggregate_order_by"];
	/** input type for inserting array relation for remote table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_arr_rel_insert_input"]: GraphQLTypes["movimentacoes_Movimentacoes_arr_rel_insert_input"];
	/** aggregate avg on columns */
["movimentacoes_Movimentacoes_avg_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by avg() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_avg_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_avg_order_by"];
	/** Boolean expression to filter rows from the table "movimentacoes.Movimentacoes". All fields are combined with a logical 'AND'. */
["movimentacoes_Movimentacoes_bool_exp"]: GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"];
	/** unique or primary key constraints on table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_constraint"]: GraphQLTypes["movimentacoes_Movimentacoes_constraint"];
	/** input type for incrementing numeric columns in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_inc_input"]: GraphQLTypes["movimentacoes_Movimentacoes_inc_input"];
	/** input type for inserting data into table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_insert_input"]: GraphQLTypes["movimentacoes_Movimentacoes_insert_input"];
	/** aggregate max on columns */
["movimentacoes_Movimentacoes_max_fields"]: {
		Data?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	Tipo?:string,
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_max_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_max_order_by"];
	/** aggregate min on columns */
["movimentacoes_Movimentacoes_min_fields"]: {
		Data?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	Tipo?:string,
	Valor?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_min_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_min_order_by"];
	/** response of any mutation on the table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["movimentacoes_Movimentacoes"][]
};
	/** on conflict condition type for table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_on_conflict"]: GraphQLTypes["movimentacoes_Movimentacoes_on_conflict"];
	/** Ordering options when selecting data from "movimentacoes.Movimentacoes". */
["movimentacoes_Movimentacoes_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_order_by"];
	/** primary key columns input for table: movimentacoes_Movimentacoes */
["movimentacoes_Movimentacoes_pk_columns_input"]: GraphQLTypes["movimentacoes_Movimentacoes_pk_columns_input"];
	/** select columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_select_column"]: GraphQLTypes["movimentacoes_Movimentacoes_select_column"];
	/** input type for updating data in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_set_input"]: GraphQLTypes["movimentacoes_Movimentacoes_set_input"];
	/** aggregate stddev on columns */
["movimentacoes_Movimentacoes_stddev_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by stddev() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["movimentacoes_Movimentacoes_stddev_pop_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by stddev_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_pop_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["movimentacoes_Movimentacoes_stddev_samp_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by stddev_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_samp_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_stddev_samp_order_by"];
	/** aggregate sum on columns */
["movimentacoes_Movimentacoes_sum_fields"]: {
		Quantidade?:number,
	Valor?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_sum_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_sum_order_by"];
	/** update columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_update_column"]: GraphQLTypes["movimentacoes_Movimentacoes_update_column"];
	/** aggregate var_pop on columns */
["movimentacoes_Movimentacoes_var_pop_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by var_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_pop_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_var_pop_order_by"];
	/** aggregate var_samp on columns */
["movimentacoes_Movimentacoes_var_samp_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by var_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_samp_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_var_samp_order_by"];
	/** aggregate variance on columns */
["movimentacoes_Movimentacoes_variance_fields"]: {
		Quantidade?:number,
	Valor?:number
};
	/** order by variance() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_variance_order_by"]: GraphQLTypes["movimentacoes_Movimentacoes_variance_order_by"];
	/** mutation root */
["mutation_root"]: {
		CadastrarCliente?:ModelTypes["CadastrarClienteOutput"],
	CadastrarColaborador?:ModelTypes["CadastrarColaboradorOutput"],
	CadastrarFornecedor?:ModelTypes["CadastrarFornecedorOutput"],
	CadastrarRepresentante?:ModelTypes["CadastrarRepresentanteOutput"],
	/** delete data from the table: "CategoriasDeVeiculos" */
	delete_CategoriasDeVeiculos?:ModelTypes["CategoriasDeVeiculos_mutation_response"],
	/** delete single row from the table: "CategoriasDeVeiculos" */
	delete_CategoriasDeVeiculos_by_pk?:ModelTypes["CategoriasDeVeiculos"],
	/** delete data from the table: "Configuracoes" */
	delete_Configuracoes?:ModelTypes["Configuracoes_mutation_response"],
	/** delete single row from the table: "Configuracoes" */
	delete_Configuracoes_by_pk?:ModelTypes["Configuracoes"],
	/** delete data from the table: "EstadosEMunicipios" */
	delete_EstadosEMunicipios?:ModelTypes["EstadosEMunicipios_mutation_response"],
	/** delete single row from the table: "EstadosEMunicipios" */
	delete_EstadosEMunicipios_by_pk?:ModelTypes["EstadosEMunicipios"],
	/** delete data from the table: "Operadoras" */
	delete_Operadoras?:ModelTypes["Operadoras_mutation_response"],
	/** delete single row from the table: "Operadoras" */
	delete_Operadoras_by_pk?:ModelTypes["Operadoras"],
	/** delete data from the table: "Produtos" */
	delete_Produtos?:ModelTypes["Produtos_mutation_response"],
	/** delete single row from the table: "Produtos" */
	delete_Produtos_by_pk?:ModelTypes["Produtos"],
	/** delete data from the table: "UnidadesDeMedidas" */
	delete_UnidadesDeMedidas?:ModelTypes["UnidadesDeMedidas_mutation_response"],
	/** delete single row from the table: "UnidadesDeMedidas" */
	delete_UnidadesDeMedidas_by_pk?:ModelTypes["UnidadesDeMedidas"],
	/** delete data from the table: "atendimentos.EtapasDosFluxos" */
	delete_atendimentos_EtapasDosFluxos?:ModelTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** delete single row from the table: "atendimentos.EtapasDosFluxos" */
	delete_atendimentos_EtapasDosFluxos_by_pk?:ModelTypes["atendimentos_EtapasDosFluxos"],
	/** delete data from the table: "atendimentos.Fluxos" */
	delete_atendimentos_Fluxos?:ModelTypes["atendimentos_Fluxos_mutation_response"],
	/** delete single row from the table: "atendimentos.Fluxos" */
	delete_atendimentos_Fluxos_by_pk?:ModelTypes["atendimentos_Fluxos"],
	/** delete data from the table: "atendimentos.Tickets" */
	delete_atendimentos_Tickets?:ModelTypes["atendimentos_Tickets_mutation_response"],
	/** delete single row from the table: "atendimentos.Tickets" */
	delete_atendimentos_Tickets_by_pk?:ModelTypes["atendimentos_Tickets"],
	/** delete data from the table: "atendimentos.TiposDeTickets" */
	delete_atendimentos_TiposDeTickets?:ModelTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** delete single row from the table: "atendimentos.TiposDeTickets" */
	delete_atendimentos_TiposDeTickets_by_pk?:ModelTypes["atendimentos_TiposDeTickets"],
	/** delete data from the table: "autenticacao.Atendentes" */
	delete_autenticacao_Atendentes?:ModelTypes["autenticacao_Atendentes_mutation_response"],
	/** delete single row from the table: "autenticacao.Atendentes" */
	delete_autenticacao_Atendentes_by_pk?:ModelTypes["autenticacao_Atendentes"],
	/** delete data from the table: "autenticacao.Usuarios" */
	delete_autenticacao_Usuarios?:ModelTypes["autenticacao_Usuarios_mutation_response"],
	/** delete single row from the table: "autenticacao.Usuarios" */
	delete_autenticacao_Usuarios_by_pk?:ModelTypes["autenticacao_Usuarios"],
	/** delete data from the table: "clientes.Leads" */
	delete_clientes_Leads?:ModelTypes["clientes_Leads_mutation_response"],
	/** delete single row from the table: "clientes.Leads" */
	delete_clientes_Leads_by_pk?:ModelTypes["clientes_Leads"],
	/** delete data from the table: "clientes.PerfisComerciais" */
	delete_clientes_PerfisComerciais?:ModelTypes["clientes_PerfisComerciais_mutation_response"],
	/** delete single row from the table: "clientes.PerfisComerciais" */
	delete_clientes_PerfisComerciais_by_pk?:ModelTypes["clientes_PerfisComerciais"],
	/** delete data from the table: "clientes.Veiculos" */
	delete_clientes_Veiculos?:ModelTypes["clientes_Veiculos_mutation_response"],
	/** delete single row from the table: "clientes.Veiculos" */
	delete_clientes_Veiculos_by_pk?:ModelTypes["clientes_Veiculos"],
	/** delete data from the table: "comercial.Acoes" */
	delete_comercial_Acoes?:ModelTypes["comercial_Acoes_mutation_response"],
	/** delete single row from the table: "comercial.Acoes" */
	delete_comercial_Acoes_by_pk?:ModelTypes["comercial_Acoes"],
	/** delete data from the table: "comercial.Atributos" */
	delete_comercial_Atributos?:ModelTypes["comercial_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Atributos" */
	delete_comercial_Atributos_by_pk?:ModelTypes["comercial_Atributos"],
	/** delete data from the table: "comercial.Coberturas" */
	delete_comercial_Coberturas?:ModelTypes["comercial_Coberturas_mutation_response"],
	/** delete single row from the table: "comercial.Coberturas" */
	delete_comercial_Coberturas_by_pk?:ModelTypes["comercial_Coberturas"],
	/** delete data from the table: "comercial.Combos" */
	delete_comercial_Combos?:ModelTypes["comercial_Combos_mutation_response"],
	/** delete data from the table: "comercial.Combos_Combos" */
	delete_comercial_Combos_Combos?:ModelTypes["comercial_Combos_Combos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Combos" */
	delete_comercial_Combos_Combos_by_pk?:ModelTypes["comercial_Combos_Combos"],
	/** delete data from the table: "comercial.Combos_Planos" */
	delete_comercial_Combos_Planos?:ModelTypes["comercial_Combos_Planos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Planos" */
	delete_comercial_Combos_Planos_by_pk?:ModelTypes["comercial_Combos_Planos"],
	/** delete data from the table: "comercial.Combos_Precos" */
	delete_comercial_Combos_Precos?:ModelTypes["comercial_Combos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Precos" */
	delete_comercial_Combos_Precos_by_pk?:ModelTypes["comercial_Combos_Precos"],
	/** delete data from the table: "comercial.Combos_Produtos" */
	delete_comercial_Combos_Produtos?:ModelTypes["comercial_Combos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Produtos" */
	delete_comercial_Combos_Produtos_by_pk?:ModelTypes["comercial_Combos_Produtos"],
	/** delete data from the table: "comercial.Combos_Servicos" */
	delete_comercial_Combos_Servicos?:ModelTypes["comercial_Combos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Servicos" */
	delete_comercial_Combos_Servicos_by_pk?:ModelTypes["comercial_Combos_Servicos"],
	/** delete single row from the table: "comercial.Combos" */
	delete_comercial_Combos_by_pk?:ModelTypes["comercial_Combos"],
	/** delete data from the table: "comercial.Condicionais" */
	delete_comercial_Condicionais?:ModelTypes["comercial_Condicionais_mutation_response"],
	/** delete data from the table: "comercial.CondicionaisSituacoes" */
	delete_comercial_CondicionaisSituacoes?:ModelTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** delete single row from the table: "comercial.CondicionaisSituacoes" */
	delete_comercial_CondicionaisSituacoes_by_pk?:ModelTypes["comercial_CondicionaisSituacoes"],
	/** delete single row from the table: "comercial.Condicionais" */
	delete_comercial_Condicionais_by_pk?:ModelTypes["comercial_Condicionais"],
	/** delete data from the table: "comercial.ContratosBase" */
	delete_comercial_ContratosBase?:ModelTypes["comercial_ContratosBase_mutation_response"],
	/** delete data from the table: "comercial.ContratosBase_Versoes" */
	delete_comercial_ContratosBase_Versoes?:ModelTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** delete single row from the table: "comercial.ContratosBase_Versoes" */
	delete_comercial_ContratosBase_Versoes_by_pk?:ModelTypes["comercial_ContratosBase_Versoes"],
	/** delete single row from the table: "comercial.ContratosBase" */
	delete_comercial_ContratosBase_by_pk?:ModelTypes["comercial_ContratosBase"],
	/** delete data from the table: "comercial.Fornecedores" */
	delete_comercial_Fornecedores?:ModelTypes["comercial_Fornecedores_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Produtos" */
	delete_comercial_Fornecedores_Produtos?:ModelTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Produtos_Precos" */
	delete_comercial_Fornecedores_Produtos_Precos?:ModelTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Produtos_Precos" */
	delete_comercial_Fornecedores_Produtos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	/** delete single row from the table: "comercial.Fornecedores_Produtos" */
	delete_comercial_Fornecedores_Produtos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos"],
	/** delete data from the table: "comercial.Fornecedores_Servicos" */
	delete_comercial_Fornecedores_Servicos?:ModelTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Servicos_Precos" */
	delete_comercial_Fornecedores_Servicos_Precos?:ModelTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos_Precos" */
	delete_comercial_Fornecedores_Servicos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	/** delete data from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	delete_comercial_Fornecedores_Servicos_Tarifas?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	delete_comercial_Fornecedores_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos" */
	delete_comercial_Fornecedores_Servicos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos"],
	/** delete single row from the table: "comercial.Fornecedores" */
	delete_comercial_Fornecedores_by_pk?:ModelTypes["comercial_Fornecedores"],
	/** delete data from the table: "comercial.Planos" */
	delete_comercial_Planos?:ModelTypes["comercial_Planos_mutation_response"],
	/** delete data from the table: "comercial.Planos_Condicionais" */
	delete_comercial_Planos_Condicionais?:ModelTypes["comercial_Planos_Condicionais_mutation_response"],
	/** delete single row from the table: "comercial.Planos_Condicionais" */
	delete_comercial_Planos_Condicionais_by_pk?:ModelTypes["comercial_Planos_Condicionais"],
	/** delete data from the table: "comercial.Planos_Precos" */
	delete_comercial_Planos_Precos?:ModelTypes["comercial_Planos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Planos_Precos" */
	delete_comercial_Planos_Precos_by_pk?:ModelTypes["comercial_Planos_Precos"],
	/** delete single row from the table: "comercial.Planos" */
	delete_comercial_Planos_by_pk?:ModelTypes["comercial_Planos"],
	/** delete data from the table: "comercial.PrestadorDeServicos_Servicos" */
	delete_comercial_PrestadorDeServicos_Servicos?:ModelTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.PrestadorDeServicos_Servicos" */
	delete_comercial_PrestadorDeServicos_Servicos_by_pk?:ModelTypes["comercial_PrestadorDeServicos_Servicos"],
	/** delete data from the table: "comercial.Produtos" */
	delete_comercial_Produtos?:ModelTypes["comercial_Produtos_mutation_response"],
	/** delete data from the table: "comercial.Produtos_Atributos" */
	delete_comercial_Produtos_Atributos?:ModelTypes["comercial_Produtos_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Atributos" */
	delete_comercial_Produtos_Atributos_by_pk?:ModelTypes["comercial_Produtos_Atributos"],
	/** delete data from the table: "comercial.Produtos_Oportunidades" */
	delete_comercial_Produtos_Oportunidades?:ModelTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Oportunidades" */
	delete_comercial_Produtos_Oportunidades_by_pk?:ModelTypes["comercial_Produtos_Oportunidades"],
	/** delete data from the table: "comercial.Produtos_Produtos" */
	delete_comercial_Produtos_Produtos?:ModelTypes["comercial_Produtos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Produtos" */
	delete_comercial_Produtos_Produtos_by_pk?:ModelTypes["comercial_Produtos_Produtos"],
	/** delete data from the table: "comercial.Produtos_Servicos" */
	delete_comercial_Produtos_Servicos?:ModelTypes["comercial_Produtos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Servicos" */
	delete_comercial_Produtos_Servicos_by_pk?:ModelTypes["comercial_Produtos_Servicos"],
	/** delete data from the table: "comercial.Produtos_Tipos" */
	delete_comercial_Produtos_Tipos?:ModelTypes["comercial_Produtos_Tipos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Tipos" */
	delete_comercial_Produtos_Tipos_by_pk?:ModelTypes["comercial_Produtos_Tipos"],
	/** delete single row from the table: "comercial.Produtos" */
	delete_comercial_Produtos_by_pk?:ModelTypes["comercial_Produtos"],
	/** delete data from the table: "comercial.Propostas" */
	delete_comercial_Propostas?:ModelTypes["comercial_Propostas_mutation_response"],
	/** delete data from the table: "comercial.Propostas_Combos" */
	delete_comercial_Propostas_Combos?:ModelTypes["comercial_Propostas_Combos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Combos" */
	delete_comercial_Propostas_Combos_by_pk?:ModelTypes["comercial_Propostas_Combos"],
	/** delete data from the table: "comercial.Propostas_Instalacoes" */
	delete_comercial_Propostas_Instalacoes?:ModelTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Instalacoes" */
	delete_comercial_Propostas_Instalacoes_by_pk?:ModelTypes["comercial_Propostas_Instalacoes"],
	/** delete data from the table: "comercial.Propostas_Oportunidades" */
	delete_comercial_Propostas_Oportunidades?:ModelTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Oportunidades" */
	delete_comercial_Propostas_Oportunidades_by_pk?:ModelTypes["comercial_Propostas_Oportunidades"],
	/** delete data from the table: "comercial.Propostas_Planos" */
	delete_comercial_Propostas_Planos?:ModelTypes["comercial_Propostas_Planos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Planos" */
	delete_comercial_Propostas_Planos_by_pk?:ModelTypes["comercial_Propostas_Planos"],
	/** delete data from the table: "comercial.Propostas_Produtos" */
	delete_comercial_Propostas_Produtos?:ModelTypes["comercial_Propostas_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Produtos" */
	delete_comercial_Propostas_Produtos_by_pk?:ModelTypes["comercial_Propostas_Produtos"],
	/** delete data from the table: "comercial.Propostas_Servicos" */
	delete_comercial_Propostas_Servicos?:ModelTypes["comercial_Propostas_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Servicos" */
	delete_comercial_Propostas_Servicos_by_pk?:ModelTypes["comercial_Propostas_Servicos"],
	/** delete data from the table: "comercial.Propostas_Situacoes" */
	delete_comercial_Propostas_Situacoes?:ModelTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Situacoes" */
	delete_comercial_Propostas_Situacoes_by_pk?:ModelTypes["comercial_Propostas_Situacoes"],
	/** delete single row from the table: "comercial.Propostas" */
	delete_comercial_Propostas_by_pk?:ModelTypes["comercial_Propostas"],
	/** delete data from the table: "comercial.Servicos" */
	delete_comercial_Servicos?:ModelTypes["comercial_Servicos_mutation_response"],
	/** delete data from the table: "comercial.Servicos_Atributos" */
	delete_comercial_Servicos_Atributos?:ModelTypes["comercial_Servicos_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Atributos" */
	delete_comercial_Servicos_Atributos_by_pk?:ModelTypes["comercial_Servicos_Atributos"],
	/** delete data from the table: "comercial.Servicos_Oportunidades" */
	delete_comercial_Servicos_Oportunidades?:ModelTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Oportunidades" */
	delete_comercial_Servicos_Oportunidades_by_pk?:ModelTypes["comercial_Servicos_Oportunidades"],
	/** delete data from the table: "comercial.Servicos_Produtos" */
	delete_comercial_Servicos_Produtos?:ModelTypes["comercial_Servicos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Produtos" */
	delete_comercial_Servicos_Produtos_by_pk?:ModelTypes["comercial_Servicos_Produtos"],
	/** delete data from the table: "comercial.Servicos_Servicos" */
	delete_comercial_Servicos_Servicos?:ModelTypes["comercial_Servicos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Servicos" */
	delete_comercial_Servicos_Servicos_by_pk?:ModelTypes["comercial_Servicos_Servicos"],
	/** delete data from the table: "comercial.Servicos_Tarifas" */
	delete_comercial_Servicos_Tarifas?:ModelTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Tarifas" */
	delete_comercial_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Servicos_Tarifas"],
	/** delete data from the table: "comercial.Servicos_Tipos" */
	delete_comercial_Servicos_Tipos?:ModelTypes["comercial_Servicos_Tipos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Tipos" */
	delete_comercial_Servicos_Tipos_by_pk?:ModelTypes["comercial_Servicos_Tipos"],
	/** delete single row from the table: "comercial.Servicos" */
	delete_comercial_Servicos_by_pk?:ModelTypes["comercial_Servicos"],
	/** delete data from the table: "comercial.Tarifas" */
	delete_comercial_Tarifas?:ModelTypes["comercial_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Tarifas" */
	delete_comercial_Tarifas_by_pk?:ModelTypes["comercial_Tarifas"],
	/** delete data from the table: "contatos.Emails" */
	delete_contatos_Emails?:ModelTypes["contatos_Emails_mutation_response"],
	/** delete single row from the table: "contatos.Emails" */
	delete_contatos_Emails_by_pk?:ModelTypes["contatos_Emails"],
	/** delete data from the table: "contatos.Enderecos" */
	delete_contatos_Enderecos?:ModelTypes["contatos_Enderecos_mutation_response"],
	/** delete single row from the table: "contatos.Enderecos" */
	delete_contatos_Enderecos_by_pk?:ModelTypes["contatos_Enderecos"],
	/** delete data from the table: "contatos.Logs" */
	delete_contatos_Logs?:ModelTypes["contatos_Logs_mutation_response"],
	/** delete single row from the table: "contatos.Logs" */
	delete_contatos_Logs_by_pk?:ModelTypes["contatos_Logs"],
	/** delete data from the table: "contatos.Telefones" */
	delete_contatos_Telefones?:ModelTypes["contatos_Telefones_mutation_response"],
	/** delete single row from the table: "contatos.Telefones" */
	delete_contatos_Telefones_by_pk?:ModelTypes["contatos_Telefones"],
	/** delete data from the table: "estoque.Enderecamentos" */
	delete_estoque_Enderecamentos?:ModelTypes["estoque_Enderecamentos_mutation_response"],
	/** delete single row from the table: "estoque.Enderecamentos" */
	delete_estoque_Enderecamentos_by_pk?:ModelTypes["estoque_Enderecamentos"],
	/** delete data from the table: "estoque.Fabricantes" */
	delete_estoque_Fabricantes?:ModelTypes["estoque_Fabricantes_mutation_response"],
	/** delete single row from the table: "estoque.Fabricantes" */
	delete_estoque_Fabricantes_by_pk?:ModelTypes["estoque_Fabricantes"],
	/** delete data from the table: "estoque.Familias" */
	delete_estoque_Familias?:ModelTypes["estoque_Familias_mutation_response"],
	/** delete single row from the table: "estoque.Familias" */
	delete_estoque_Familias_by_pk?:ModelTypes["estoque_Familias"],
	/** delete data from the table: "estoque.Grupos" */
	delete_estoque_Grupos?:ModelTypes["estoque_Grupos_mutation_response"],
	/** delete single row from the table: "estoque.Grupos" */
	delete_estoque_Grupos_by_pk?:ModelTypes["estoque_Grupos"],
	/** delete data from the table: "estoque.Itens" */
	delete_estoque_Itens?:ModelTypes["estoque_Itens_mutation_response"],
	/** delete single row from the table: "estoque.Itens" */
	delete_estoque_Itens_by_pk?:ModelTypes["estoque_Itens"],
	/** delete data from the table: "estoque.Logs" */
	delete_estoque_Logs?:ModelTypes["estoque_Logs_mutation_response"],
	/** delete single row from the table: "estoque.Logs" */
	delete_estoque_Logs_by_pk?:ModelTypes["estoque_Logs"],
	/** delete data from the table: "estoque.Modelos" */
	delete_estoque_Modelos?:ModelTypes["estoque_Modelos_mutation_response"],
	/** delete single row from the table: "estoque.Modelos" */
	delete_estoque_Modelos_by_pk?:ModelTypes["estoque_Modelos"],
	/** delete data from the table: "estoque.TiposDeEnderecamentos" */
	delete_estoque_TiposDeEnderecamentos?:ModelTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** delete single row from the table: "estoque.TiposDeEnderecamentos" */
	delete_estoque_TiposDeEnderecamentos_by_pk?:ModelTypes["estoque_TiposDeEnderecamentos"],
	/** delete data from the table: "identidades.Clientes" */
	delete_identidades_Clientes?:ModelTypes["identidades_Clientes_mutation_response"],
	/** delete data from the table: "identidades.Clientes_Documentos" */
	delete_identidades_Clientes_Documentos?:ModelTypes["identidades_Clientes_Documentos_mutation_response"],
	/** delete data from the table: "identidades.Clientes_Documentos_Situacoes" */
	delete_identidades_Clientes_Documentos_Situacoes?:ModelTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** delete single row from the table: "identidades.Clientes_Documentos_Situacoes" */
	delete_identidades_Clientes_Documentos_Situacoes_by_pk?:ModelTypes["identidades_Clientes_Documentos_Situacoes"],
	/** delete single row from the table: "identidades.Clientes_Documentos" */
	delete_identidades_Clientes_Documentos_by_pk?:ModelTypes["identidades_Clientes_Documentos"],
	/** delete single row from the table: "identidades.Clientes" */
	delete_identidades_Clientes_by_pk?:ModelTypes["identidades_Clientes"],
	/** delete data from the table: "identidades.Colaboradores" */
	delete_identidades_Colaboradores?:ModelTypes["identidades_Colaboradores_mutation_response"],
	/** delete single row from the table: "identidades.Colaboradores" */
	delete_identidades_Colaboradores_by_pk?:ModelTypes["identidades_Colaboradores"],
	/** delete data from the table: "identidades.Fornecedores" */
	delete_identidades_Fornecedores?:ModelTypes["identidades_Fornecedores_mutation_response"],
	/** delete single row from the table: "identidades.Fornecedores" */
	delete_identidades_Fornecedores_by_pk?:ModelTypes["identidades_Fornecedores"],
	/** delete data from the table: "identidades.Logs" */
	delete_identidades_Logs?:ModelTypes["identidades_Logs_mutation_response"],
	/** delete single row from the table: "identidades.Logs" */
	delete_identidades_Logs_by_pk?:ModelTypes["identidades_Logs"],
	/** delete data from the table: "identidades.Pessoas" */
	delete_identidades_Pessoas?:ModelTypes["identidades_Pessoas_mutation_response"],
	/** delete single row from the table: "identidades.Pessoas" */
	delete_identidades_Pessoas_by_pk?:ModelTypes["identidades_Pessoas"],
	/** delete data from the table: "identidades.Representantes" */
	delete_identidades_Representantes?:ModelTypes["identidades_Representantes_mutation_response"],
	/** delete single row from the table: "identidades.Representantes" */
	delete_identidades_Representantes_by_pk?:ModelTypes["identidades_Representantes"],
	/** delete data from the table: "identidades.Vendedores" */
	delete_identidades_Vendedores?:ModelTypes["identidades_Vendedores_mutation_response"],
	/** delete single row from the table: "identidades.Vendedores" */
	delete_identidades_Vendedores_by_pk?:ModelTypes["identidades_Vendedores"],
	/** delete data from the table: "movimentacoes.Motivos" */
	delete_movimentacoes_Motivos?:ModelTypes["movimentacoes_Motivos_mutation_response"],
	/** delete single row from the table: "movimentacoes.Motivos" */
	delete_movimentacoes_Motivos_by_pk?:ModelTypes["movimentacoes_Motivos"],
	/** delete data from the table: "movimentacoes.Movimentacoes" */
	delete_movimentacoes_Movimentacoes?:ModelTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** delete single row from the table: "movimentacoes.Movimentacoes" */
	delete_movimentacoes_Movimentacoes_by_pk?:ModelTypes["movimentacoes_Movimentacoes"],
	/** delete data from the table: "operacional.OrdemDeServico" */
	delete_operacional_OrdemDeServico?:ModelTypes["operacional_OrdemDeServico_mutation_response"],
	/** delete data from the table: "operacional.OrdemDeServico_Atividades" */
	delete_operacional_OrdemDeServico_Atividades?:ModelTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Atividades" */
	delete_operacional_OrdemDeServico_Atividades_by_pk?:ModelTypes["operacional_OrdemDeServico_Atividades"],
	/** delete data from the table: "operacional.OrdemDeServico_Situacoes" */
	delete_operacional_OrdemDeServico_Situacoes?:ModelTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Situacoes" */
	delete_operacional_OrdemDeServico_Situacoes_by_pk?:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	/** delete data from the table: "operacional.OrdemDeServico_Tipo" */
	delete_operacional_OrdemDeServico_Tipo?:ModelTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Tipo" */
	delete_operacional_OrdemDeServico_Tipo_by_pk?:ModelTypes["operacional_OrdemDeServico_Tipo"],
	/** delete single row from the table: "operacional.OrdemDeServico" */
	delete_operacional_OrdemDeServico_by_pk?:ModelTypes["operacional_OrdemDeServico"],
	/** delete data from the table: "pedidosDeCompra.Logs" */
	delete_pedidosDeCompra_Logs?:ModelTypes["pedidosDeCompra_Logs_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Logs" */
	delete_pedidosDeCompra_Logs_by_pk?:ModelTypes["pedidosDeCompra_Logs"],
	/** delete data from the table: "pedidosDeCompra.Orcamentos" */
	delete_pedidosDeCompra_Orcamentos?:ModelTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** delete data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	delete_pedidosDeCompra_Orcamentos_Produtos?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	delete_pedidosDeCompra_Orcamentos_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** delete single row from the table: "pedidosDeCompra.Orcamentos" */
	delete_pedidosDeCompra_Orcamentos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos"],
	/** delete data from the table: "pedidosDeCompra.Pedidos" */
	delete_pedidosDeCompra_Pedidos?:ModelTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Pedidos" */
	delete_pedidosDeCompra_Pedidos_by_pk?:ModelTypes["pedidosDeCompra_Pedidos"],
	/** delete data from the table: "pedidosDeCompra.Produtos" */
	delete_pedidosDeCompra_Produtos?:ModelTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Produtos" */
	delete_pedidosDeCompra_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Produtos"],
	/** delete data from the table: "pedidosDeCompra.Situacoes" */
	delete_pedidosDeCompra_Situacoes?:ModelTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Situacoes" */
	delete_pedidosDeCompra_Situacoes_by_pk?:ModelTypes["pedidosDeCompra_Situacoes"],
	/** delete data from the table: "pedidosDeSaida.Logs" */
	delete_pedidosDeSaida_Logs?:ModelTypes["pedidosDeSaida_Logs_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Logs" */
	delete_pedidosDeSaida_Logs_by_pk?:ModelTypes["pedidosDeSaida_Logs"],
	/** delete data from the table: "pedidosDeSaida.Pedidos" */
	delete_pedidosDeSaida_Pedidos?:ModelTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Pedidos" */
	delete_pedidosDeSaida_Pedidos_by_pk?:ModelTypes["pedidosDeSaida_Pedidos"],
	/** delete data from the table: "pedidosDeSaida.Produtos" */
	delete_pedidosDeSaida_Produtos?:ModelTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Produtos" */
	delete_pedidosDeSaida_Produtos_by_pk?:ModelTypes["pedidosDeSaida_Produtos"],
	/** delete data from the table: "pedidosDeSaida.Situacoes" */
	delete_pedidosDeSaida_Situacoes?:ModelTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Situacoes" */
	delete_pedidosDeSaida_Situacoes_by_pk?:ModelTypes["pedidosDeSaida_Situacoes"],
	/** delete data from the table: "producao.Chips" */
	delete_producao_Chips?:ModelTypes["producao_Chips_mutation_response"],
	/** delete data from the table: "producao.ChipsSituacoes" */
	delete_producao_ChipsSituacoes?:ModelTypes["producao_ChipsSituacoes_mutation_response"],
	/** delete single row from the table: "producao.ChipsSituacoes" */
	delete_producao_ChipsSituacoes_by_pk?:ModelTypes["producao_ChipsSituacoes"],
	/** delete single row from the table: "producao.Chips" */
	delete_producao_Chips_by_pk?:ModelTypes["producao_Chips"],
	/** delete data from the table: "producao.Equipamentos" */
	delete_producao_Equipamentos?:ModelTypes["producao_Equipamentos_mutation_response"],
	/** delete single row from the table: "producao.Equipamentos" */
	delete_producao_Equipamentos_by_pk?:ModelTypes["producao_Equipamentos"],
	/** delete data from the table: "producao.Identificadores" */
	delete_producao_Identificadores?:ModelTypes["producao_Identificadores_mutation_response"],
	/** delete single row from the table: "producao.Identificadores" */
	delete_producao_Identificadores_by_pk?:ModelTypes["producao_Identificadores"],
	/** delete data from the table: "producao.KitDeInsumo_Itens" */
	delete_producao_KitDeInsumo_Itens?:ModelTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** delete single row from the table: "producao.KitDeInsumo_Itens" */
	delete_producao_KitDeInsumo_Itens_by_pk?:ModelTypes["producao_KitDeInsumo_Itens"],
	/** delete data from the table: "producao.KitsDeInstalacao" */
	delete_producao_KitsDeInstalacao?:ModelTypes["producao_KitsDeInstalacao_mutation_response"],
	/** delete single row from the table: "producao.KitsDeInstalacao" */
	delete_producao_KitsDeInstalacao_by_pk?:ModelTypes["producao_KitsDeInstalacao"],
	/** delete data from the table: "producao.KitsDeInsumo" */
	delete_producao_KitsDeInsumo?:ModelTypes["producao_KitsDeInsumo_mutation_response"],
	/** delete single row from the table: "producao.KitsDeInsumo" */
	delete_producao_KitsDeInsumo_by_pk?:ModelTypes["producao_KitsDeInsumo"],
	/** delete data from the table: "producao.Logs" */
	delete_producao_Logs?:ModelTypes["producao_Logs_mutation_response"],
	/** delete single row from the table: "producao.Logs" */
	delete_producao_Logs_by_pk?:ModelTypes["producao_Logs"],
	/** delete data from the table: "producao.Rastreadores" */
	delete_producao_Rastreadores?:ModelTypes["producao_Rastreadores_mutation_response"],
	/** delete single row from the table: "producao.Rastreadores" */
	delete_producao_Rastreadores_by_pk?:ModelTypes["producao_Rastreadores"],
	/** delete data from the table: "producao.TiposDeKitDeInsumo" */
	delete_producao_TiposDeKitDeInsumo?:ModelTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** delete single row from the table: "producao.TiposDeKitDeInsumo" */
	delete_producao_TiposDeKitDeInsumo_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo"],
	/** delete data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	delete_producao_TiposDeKitDeInsumo_estoque_Itens?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** delete single row from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	delete_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** delete data from the table: "vendas.GruposDePerguntas" */
	delete_vendas_GruposDePerguntas?:ModelTypes["vendas_GruposDePerguntas_mutation_response"],
	/** delete data from the table: "vendas.GruposDePerguntas_Perguntas" */
	delete_vendas_GruposDePerguntas_Perguntas?:ModelTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** delete single row from the table: "vendas.GruposDePerguntas_Perguntas" */
	delete_vendas_GruposDePerguntas_Perguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas_Perguntas"],
	/** delete single row from the table: "vendas.GruposDePerguntas" */
	delete_vendas_GruposDePerguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas"],
	/** delete data from the table: "vendas.Perguntas" */
	delete_vendas_Perguntas?:ModelTypes["vendas_Perguntas_mutation_response"],
	/** delete single row from the table: "vendas.Perguntas" */
	delete_vendas_Perguntas_by_pk?:ModelTypes["vendas_Perguntas"],
	/** delete data from the table: "vendas.TiposDePagamento" */
	delete_vendas_TiposDePagamento?:ModelTypes["vendas_TiposDePagamento_mutation_response"],
	/** delete single row from the table: "vendas.TiposDePagamento" */
	delete_vendas_TiposDePagamento_by_pk?:ModelTypes["vendas_TiposDePagamento"],
	/** delete data from the table: "vendas.TiposDeRecorrencia" */
	delete_vendas_TiposDeRecorrencia?:ModelTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** delete single row from the table: "vendas.TiposDeRecorrencia" */
	delete_vendas_TiposDeRecorrencia_by_pk?:ModelTypes["vendas_TiposDeRecorrencia"],
	/** insert data into the table: "CategoriasDeVeiculos" */
	insert_CategoriasDeVeiculos?:ModelTypes["CategoriasDeVeiculos_mutation_response"],
	/** insert a single row into the table: "CategoriasDeVeiculos" */
	insert_CategoriasDeVeiculos_one?:ModelTypes["CategoriasDeVeiculos"],
	/** insert data into the table: "Configuracoes" */
	insert_Configuracoes?:ModelTypes["Configuracoes_mutation_response"],
	/** insert a single row into the table: "Configuracoes" */
	insert_Configuracoes_one?:ModelTypes["Configuracoes"],
	/** insert data into the table: "EstadosEMunicipios" */
	insert_EstadosEMunicipios?:ModelTypes["EstadosEMunicipios_mutation_response"],
	/** insert a single row into the table: "EstadosEMunicipios" */
	insert_EstadosEMunicipios_one?:ModelTypes["EstadosEMunicipios"],
	/** insert data into the table: "Operadoras" */
	insert_Operadoras?:ModelTypes["Operadoras_mutation_response"],
	/** insert a single row into the table: "Operadoras" */
	insert_Operadoras_one?:ModelTypes["Operadoras"],
	/** insert data into the table: "Produtos" */
	insert_Produtos?:ModelTypes["Produtos_mutation_response"],
	/** insert a single row into the table: "Produtos" */
	insert_Produtos_one?:ModelTypes["Produtos"],
	/** insert data into the table: "UnidadesDeMedidas" */
	insert_UnidadesDeMedidas?:ModelTypes["UnidadesDeMedidas_mutation_response"],
	/** insert a single row into the table: "UnidadesDeMedidas" */
	insert_UnidadesDeMedidas_one?:ModelTypes["UnidadesDeMedidas"],
	/** insert data into the table: "atendimentos.EtapasDosFluxos" */
	insert_atendimentos_EtapasDosFluxos?:ModelTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** insert a single row into the table: "atendimentos.EtapasDosFluxos" */
	insert_atendimentos_EtapasDosFluxos_one?:ModelTypes["atendimentos_EtapasDosFluxos"],
	/** insert data into the table: "atendimentos.Fluxos" */
	insert_atendimentos_Fluxos?:ModelTypes["atendimentos_Fluxos_mutation_response"],
	/** insert a single row into the table: "atendimentos.Fluxos" */
	insert_atendimentos_Fluxos_one?:ModelTypes["atendimentos_Fluxos"],
	/** insert data into the table: "atendimentos.Tickets" */
	insert_atendimentos_Tickets?:ModelTypes["atendimentos_Tickets_mutation_response"],
	/** insert a single row into the table: "atendimentos.Tickets" */
	insert_atendimentos_Tickets_one?:ModelTypes["atendimentos_Tickets"],
	/** insert data into the table: "atendimentos.TiposDeTickets" */
	insert_atendimentos_TiposDeTickets?:ModelTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** insert a single row into the table: "atendimentos.TiposDeTickets" */
	insert_atendimentos_TiposDeTickets_one?:ModelTypes["atendimentos_TiposDeTickets"],
	/** insert data into the table: "autenticacao.Atendentes" */
	insert_autenticacao_Atendentes?:ModelTypes["autenticacao_Atendentes_mutation_response"],
	/** insert a single row into the table: "autenticacao.Atendentes" */
	insert_autenticacao_Atendentes_one?:ModelTypes["autenticacao_Atendentes"],
	/** insert data into the table: "autenticacao.Usuarios" */
	insert_autenticacao_Usuarios?:ModelTypes["autenticacao_Usuarios_mutation_response"],
	/** insert a single row into the table: "autenticacao.Usuarios" */
	insert_autenticacao_Usuarios_one?:ModelTypes["autenticacao_Usuarios"],
	/** insert data into the table: "clientes.Leads" */
	insert_clientes_Leads?:ModelTypes["clientes_Leads_mutation_response"],
	/** insert a single row into the table: "clientes.Leads" */
	insert_clientes_Leads_one?:ModelTypes["clientes_Leads"],
	/** insert data into the table: "clientes.PerfisComerciais" */
	insert_clientes_PerfisComerciais?:ModelTypes["clientes_PerfisComerciais_mutation_response"],
	/** insert a single row into the table: "clientes.PerfisComerciais" */
	insert_clientes_PerfisComerciais_one?:ModelTypes["clientes_PerfisComerciais"],
	/** insert data into the table: "clientes.Veiculos" */
	insert_clientes_Veiculos?:ModelTypes["clientes_Veiculos_mutation_response"],
	/** insert a single row into the table: "clientes.Veiculos" */
	insert_clientes_Veiculos_one?:ModelTypes["clientes_Veiculos"],
	/** insert data into the table: "comercial.Acoes" */
	insert_comercial_Acoes?:ModelTypes["comercial_Acoes_mutation_response"],
	/** insert a single row into the table: "comercial.Acoes" */
	insert_comercial_Acoes_one?:ModelTypes["comercial_Acoes"],
	/** insert data into the table: "comercial.Atributos" */
	insert_comercial_Atributos?:ModelTypes["comercial_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Atributos" */
	insert_comercial_Atributos_one?:ModelTypes["comercial_Atributos"],
	/** insert data into the table: "comercial.Coberturas" */
	insert_comercial_Coberturas?:ModelTypes["comercial_Coberturas_mutation_response"],
	/** insert a single row into the table: "comercial.Coberturas" */
	insert_comercial_Coberturas_one?:ModelTypes["comercial_Coberturas"],
	/** insert data into the table: "comercial.Combos" */
	insert_comercial_Combos?:ModelTypes["comercial_Combos_mutation_response"],
	/** insert data into the table: "comercial.Combos_Combos" */
	insert_comercial_Combos_Combos?:ModelTypes["comercial_Combos_Combos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Combos" */
	insert_comercial_Combos_Combos_one?:ModelTypes["comercial_Combos_Combos"],
	/** insert data into the table: "comercial.Combos_Planos" */
	insert_comercial_Combos_Planos?:ModelTypes["comercial_Combos_Planos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Planos" */
	insert_comercial_Combos_Planos_one?:ModelTypes["comercial_Combos_Planos"],
	/** insert data into the table: "comercial.Combos_Precos" */
	insert_comercial_Combos_Precos?:ModelTypes["comercial_Combos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Precos" */
	insert_comercial_Combos_Precos_one?:ModelTypes["comercial_Combos_Precos"],
	/** insert data into the table: "comercial.Combos_Produtos" */
	insert_comercial_Combos_Produtos?:ModelTypes["comercial_Combos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Produtos" */
	insert_comercial_Combos_Produtos_one?:ModelTypes["comercial_Combos_Produtos"],
	/** insert data into the table: "comercial.Combos_Servicos" */
	insert_comercial_Combos_Servicos?:ModelTypes["comercial_Combos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Servicos" */
	insert_comercial_Combos_Servicos_one?:ModelTypes["comercial_Combos_Servicos"],
	/** insert a single row into the table: "comercial.Combos" */
	insert_comercial_Combos_one?:ModelTypes["comercial_Combos"],
	/** insert data into the table: "comercial.Condicionais" */
	insert_comercial_Condicionais?:ModelTypes["comercial_Condicionais_mutation_response"],
	/** insert data into the table: "comercial.CondicionaisSituacoes" */
	insert_comercial_CondicionaisSituacoes?:ModelTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** insert a single row into the table: "comercial.CondicionaisSituacoes" */
	insert_comercial_CondicionaisSituacoes_one?:ModelTypes["comercial_CondicionaisSituacoes"],
	/** insert a single row into the table: "comercial.Condicionais" */
	insert_comercial_Condicionais_one?:ModelTypes["comercial_Condicionais"],
	/** insert data into the table: "comercial.ContratosBase" */
	insert_comercial_ContratosBase?:ModelTypes["comercial_ContratosBase_mutation_response"],
	/** insert data into the table: "comercial.ContratosBase_Versoes" */
	insert_comercial_ContratosBase_Versoes?:ModelTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** insert a single row into the table: "comercial.ContratosBase_Versoes" */
	insert_comercial_ContratosBase_Versoes_one?:ModelTypes["comercial_ContratosBase_Versoes"],
	/** insert a single row into the table: "comercial.ContratosBase" */
	insert_comercial_ContratosBase_one?:ModelTypes["comercial_ContratosBase"],
	/** insert data into the table: "comercial.Fornecedores" */
	insert_comercial_Fornecedores?:ModelTypes["comercial_Fornecedores_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Produtos" */
	insert_comercial_Fornecedores_Produtos?:ModelTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Produtos_Precos" */
	insert_comercial_Fornecedores_Produtos_Precos?:ModelTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Produtos_Precos" */
	insert_comercial_Fornecedores_Produtos_Precos_one?:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	/** insert a single row into the table: "comercial.Fornecedores_Produtos" */
	insert_comercial_Fornecedores_Produtos_one?:ModelTypes["comercial_Fornecedores_Produtos"],
	/** insert data into the table: "comercial.Fornecedores_Servicos" */
	insert_comercial_Fornecedores_Servicos?:ModelTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Servicos_Precos" */
	insert_comercial_Fornecedores_Servicos_Precos?:ModelTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos_Precos" */
	insert_comercial_Fornecedores_Servicos_Precos_one?:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	/** insert data into the table: "comercial.Fornecedores_Servicos_Tarifas" */
	insert_comercial_Fornecedores_Servicos_Tarifas?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos_Tarifas" */
	insert_comercial_Fornecedores_Servicos_Tarifas_one?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos" */
	insert_comercial_Fornecedores_Servicos_one?:ModelTypes["comercial_Fornecedores_Servicos"],
	/** insert a single row into the table: "comercial.Fornecedores" */
	insert_comercial_Fornecedores_one?:ModelTypes["comercial_Fornecedores"],
	/** insert data into the table: "comercial.Planos" */
	insert_comercial_Planos?:ModelTypes["comercial_Planos_mutation_response"],
	/** insert data into the table: "comercial.Planos_Condicionais" */
	insert_comercial_Planos_Condicionais?:ModelTypes["comercial_Planos_Condicionais_mutation_response"],
	/** insert a single row into the table: "comercial.Planos_Condicionais" */
	insert_comercial_Planos_Condicionais_one?:ModelTypes["comercial_Planos_Condicionais"],
	/** insert data into the table: "comercial.Planos_Precos" */
	insert_comercial_Planos_Precos?:ModelTypes["comercial_Planos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Planos_Precos" */
	insert_comercial_Planos_Precos_one?:ModelTypes["comercial_Planos_Precos"],
	/** insert a single row into the table: "comercial.Planos" */
	insert_comercial_Planos_one?:ModelTypes["comercial_Planos"],
	/** insert data into the table: "comercial.PrestadorDeServicos_Servicos" */
	insert_comercial_PrestadorDeServicos_Servicos?:ModelTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.PrestadorDeServicos_Servicos" */
	insert_comercial_PrestadorDeServicos_Servicos_one?:ModelTypes["comercial_PrestadorDeServicos_Servicos"],
	/** insert data into the table: "comercial.Produtos" */
	insert_comercial_Produtos?:ModelTypes["comercial_Produtos_mutation_response"],
	/** insert data into the table: "comercial.Produtos_Atributos" */
	insert_comercial_Produtos_Atributos?:ModelTypes["comercial_Produtos_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Atributos" */
	insert_comercial_Produtos_Atributos_one?:ModelTypes["comercial_Produtos_Atributos"],
	/** insert data into the table: "comercial.Produtos_Oportunidades" */
	insert_comercial_Produtos_Oportunidades?:ModelTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Oportunidades" */
	insert_comercial_Produtos_Oportunidades_one?:ModelTypes["comercial_Produtos_Oportunidades"],
	/** insert data into the table: "comercial.Produtos_Produtos" */
	insert_comercial_Produtos_Produtos?:ModelTypes["comercial_Produtos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Produtos" */
	insert_comercial_Produtos_Produtos_one?:ModelTypes["comercial_Produtos_Produtos"],
	/** insert data into the table: "comercial.Produtos_Servicos" */
	insert_comercial_Produtos_Servicos?:ModelTypes["comercial_Produtos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Servicos" */
	insert_comercial_Produtos_Servicos_one?:ModelTypes["comercial_Produtos_Servicos"],
	/** insert data into the table: "comercial.Produtos_Tipos" */
	insert_comercial_Produtos_Tipos?:ModelTypes["comercial_Produtos_Tipos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Tipos" */
	insert_comercial_Produtos_Tipos_one?:ModelTypes["comercial_Produtos_Tipos"],
	/** insert a single row into the table: "comercial.Produtos" */
	insert_comercial_Produtos_one?:ModelTypes["comercial_Produtos"],
	/** insert data into the table: "comercial.Propostas" */
	insert_comercial_Propostas?:ModelTypes["comercial_Propostas_mutation_response"],
	/** insert data into the table: "comercial.Propostas_Combos" */
	insert_comercial_Propostas_Combos?:ModelTypes["comercial_Propostas_Combos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Combos" */
	insert_comercial_Propostas_Combos_one?:ModelTypes["comercial_Propostas_Combos"],
	/** insert data into the table: "comercial.Propostas_Instalacoes" */
	insert_comercial_Propostas_Instalacoes?:ModelTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Instalacoes" */
	insert_comercial_Propostas_Instalacoes_one?:ModelTypes["comercial_Propostas_Instalacoes"],
	/** insert data into the table: "comercial.Propostas_Oportunidades" */
	insert_comercial_Propostas_Oportunidades?:ModelTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Oportunidades" */
	insert_comercial_Propostas_Oportunidades_one?:ModelTypes["comercial_Propostas_Oportunidades"],
	/** insert data into the table: "comercial.Propostas_Planos" */
	insert_comercial_Propostas_Planos?:ModelTypes["comercial_Propostas_Planos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Planos" */
	insert_comercial_Propostas_Planos_one?:ModelTypes["comercial_Propostas_Planos"],
	/** insert data into the table: "comercial.Propostas_Produtos" */
	insert_comercial_Propostas_Produtos?:ModelTypes["comercial_Propostas_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Produtos" */
	insert_comercial_Propostas_Produtos_one?:ModelTypes["comercial_Propostas_Produtos"],
	/** insert data into the table: "comercial.Propostas_Servicos" */
	insert_comercial_Propostas_Servicos?:ModelTypes["comercial_Propostas_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Servicos" */
	insert_comercial_Propostas_Servicos_one?:ModelTypes["comercial_Propostas_Servicos"],
	/** insert data into the table: "comercial.Propostas_Situacoes" */
	insert_comercial_Propostas_Situacoes?:ModelTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Situacoes" */
	insert_comercial_Propostas_Situacoes_one?:ModelTypes["comercial_Propostas_Situacoes"],
	/** insert a single row into the table: "comercial.Propostas" */
	insert_comercial_Propostas_one?:ModelTypes["comercial_Propostas"],
	/** insert data into the table: "comercial.Servicos" */
	insert_comercial_Servicos?:ModelTypes["comercial_Servicos_mutation_response"],
	/** insert data into the table: "comercial.Servicos_Atributos" */
	insert_comercial_Servicos_Atributos?:ModelTypes["comercial_Servicos_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Atributos" */
	insert_comercial_Servicos_Atributos_one?:ModelTypes["comercial_Servicos_Atributos"],
	/** insert data into the table: "comercial.Servicos_Oportunidades" */
	insert_comercial_Servicos_Oportunidades?:ModelTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Oportunidades" */
	insert_comercial_Servicos_Oportunidades_one?:ModelTypes["comercial_Servicos_Oportunidades"],
	/** insert data into the table: "comercial.Servicos_Produtos" */
	insert_comercial_Servicos_Produtos?:ModelTypes["comercial_Servicos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Produtos" */
	insert_comercial_Servicos_Produtos_one?:ModelTypes["comercial_Servicos_Produtos"],
	/** insert data into the table: "comercial.Servicos_Servicos" */
	insert_comercial_Servicos_Servicos?:ModelTypes["comercial_Servicos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Servicos" */
	insert_comercial_Servicos_Servicos_one?:ModelTypes["comercial_Servicos_Servicos"],
	/** insert data into the table: "comercial.Servicos_Tarifas" */
	insert_comercial_Servicos_Tarifas?:ModelTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Tarifas" */
	insert_comercial_Servicos_Tarifas_one?:ModelTypes["comercial_Servicos_Tarifas"],
	/** insert data into the table: "comercial.Servicos_Tipos" */
	insert_comercial_Servicos_Tipos?:ModelTypes["comercial_Servicos_Tipos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Tipos" */
	insert_comercial_Servicos_Tipos_one?:ModelTypes["comercial_Servicos_Tipos"],
	/** insert a single row into the table: "comercial.Servicos" */
	insert_comercial_Servicos_one?:ModelTypes["comercial_Servicos"],
	/** insert data into the table: "comercial.Tarifas" */
	insert_comercial_Tarifas?:ModelTypes["comercial_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Tarifas" */
	insert_comercial_Tarifas_one?:ModelTypes["comercial_Tarifas"],
	/** insert data into the table: "contatos.Emails" */
	insert_contatos_Emails?:ModelTypes["contatos_Emails_mutation_response"],
	/** insert a single row into the table: "contatos.Emails" */
	insert_contatos_Emails_one?:ModelTypes["contatos_Emails"],
	/** insert data into the table: "contatos.Enderecos" */
	insert_contatos_Enderecos?:ModelTypes["contatos_Enderecos_mutation_response"],
	/** insert a single row into the table: "contatos.Enderecos" */
	insert_contatos_Enderecos_one?:ModelTypes["contatos_Enderecos"],
	/** insert data into the table: "contatos.Logs" */
	insert_contatos_Logs?:ModelTypes["contatos_Logs_mutation_response"],
	/** insert a single row into the table: "contatos.Logs" */
	insert_contatos_Logs_one?:ModelTypes["contatos_Logs"],
	/** insert data into the table: "contatos.Telefones" */
	insert_contatos_Telefones?:ModelTypes["contatos_Telefones_mutation_response"],
	/** insert a single row into the table: "contatos.Telefones" */
	insert_contatos_Telefones_one?:ModelTypes["contatos_Telefones"],
	/** insert data into the table: "estoque.Enderecamentos" */
	insert_estoque_Enderecamentos?:ModelTypes["estoque_Enderecamentos_mutation_response"],
	/** insert a single row into the table: "estoque.Enderecamentos" */
	insert_estoque_Enderecamentos_one?:ModelTypes["estoque_Enderecamentos"],
	/** insert data into the table: "estoque.Fabricantes" */
	insert_estoque_Fabricantes?:ModelTypes["estoque_Fabricantes_mutation_response"],
	/** insert a single row into the table: "estoque.Fabricantes" */
	insert_estoque_Fabricantes_one?:ModelTypes["estoque_Fabricantes"],
	/** insert data into the table: "estoque.Familias" */
	insert_estoque_Familias?:ModelTypes["estoque_Familias_mutation_response"],
	/** insert a single row into the table: "estoque.Familias" */
	insert_estoque_Familias_one?:ModelTypes["estoque_Familias"],
	/** insert data into the table: "estoque.Grupos" */
	insert_estoque_Grupos?:ModelTypes["estoque_Grupos_mutation_response"],
	/** insert a single row into the table: "estoque.Grupos" */
	insert_estoque_Grupos_one?:ModelTypes["estoque_Grupos"],
	/** insert data into the table: "estoque.Itens" */
	insert_estoque_Itens?:ModelTypes["estoque_Itens_mutation_response"],
	/** insert a single row into the table: "estoque.Itens" */
	insert_estoque_Itens_one?:ModelTypes["estoque_Itens"],
	/** insert data into the table: "estoque.Logs" */
	insert_estoque_Logs?:ModelTypes["estoque_Logs_mutation_response"],
	/** insert a single row into the table: "estoque.Logs" */
	insert_estoque_Logs_one?:ModelTypes["estoque_Logs"],
	/** insert data into the table: "estoque.Modelos" */
	insert_estoque_Modelos?:ModelTypes["estoque_Modelos_mutation_response"],
	/** insert a single row into the table: "estoque.Modelos" */
	insert_estoque_Modelos_one?:ModelTypes["estoque_Modelos"],
	/** insert data into the table: "estoque.TiposDeEnderecamentos" */
	insert_estoque_TiposDeEnderecamentos?:ModelTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** insert a single row into the table: "estoque.TiposDeEnderecamentos" */
	insert_estoque_TiposDeEnderecamentos_one?:ModelTypes["estoque_TiposDeEnderecamentos"],
	/** insert data into the table: "identidades.Clientes" */
	insert_identidades_Clientes?:ModelTypes["identidades_Clientes_mutation_response"],
	/** insert data into the table: "identidades.Clientes_Documentos" */
	insert_identidades_Clientes_Documentos?:ModelTypes["identidades_Clientes_Documentos_mutation_response"],
	/** insert data into the table: "identidades.Clientes_Documentos_Situacoes" */
	insert_identidades_Clientes_Documentos_Situacoes?:ModelTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** insert a single row into the table: "identidades.Clientes_Documentos_Situacoes" */
	insert_identidades_Clientes_Documentos_Situacoes_one?:ModelTypes["identidades_Clientes_Documentos_Situacoes"],
	/** insert a single row into the table: "identidades.Clientes_Documentos" */
	insert_identidades_Clientes_Documentos_one?:ModelTypes["identidades_Clientes_Documentos"],
	/** insert a single row into the table: "identidades.Clientes" */
	insert_identidades_Clientes_one?:ModelTypes["identidades_Clientes"],
	/** insert data into the table: "identidades.Colaboradores" */
	insert_identidades_Colaboradores?:ModelTypes["identidades_Colaboradores_mutation_response"],
	/** insert a single row into the table: "identidades.Colaboradores" */
	insert_identidades_Colaboradores_one?:ModelTypes["identidades_Colaboradores"],
	/** insert data into the table: "identidades.Fornecedores" */
	insert_identidades_Fornecedores?:ModelTypes["identidades_Fornecedores_mutation_response"],
	/** insert a single row into the table: "identidades.Fornecedores" */
	insert_identidades_Fornecedores_one?:ModelTypes["identidades_Fornecedores"],
	/** insert data into the table: "identidades.Logs" */
	insert_identidades_Logs?:ModelTypes["identidades_Logs_mutation_response"],
	/** insert a single row into the table: "identidades.Logs" */
	insert_identidades_Logs_one?:ModelTypes["identidades_Logs"],
	/** insert data into the table: "identidades.Pessoas" */
	insert_identidades_Pessoas?:ModelTypes["identidades_Pessoas_mutation_response"],
	/** insert a single row into the table: "identidades.Pessoas" */
	insert_identidades_Pessoas_one?:ModelTypes["identidades_Pessoas"],
	/** insert data into the table: "identidades.Representantes" */
	insert_identidades_Representantes?:ModelTypes["identidades_Representantes_mutation_response"],
	/** insert a single row into the table: "identidades.Representantes" */
	insert_identidades_Representantes_one?:ModelTypes["identidades_Representantes"],
	/** insert data into the table: "identidades.Vendedores" */
	insert_identidades_Vendedores?:ModelTypes["identidades_Vendedores_mutation_response"],
	/** insert a single row into the table: "identidades.Vendedores" */
	insert_identidades_Vendedores_one?:ModelTypes["identidades_Vendedores"],
	/** insert data into the table: "movimentacoes.Motivos" */
	insert_movimentacoes_Motivos?:ModelTypes["movimentacoes_Motivos_mutation_response"],
	/** insert a single row into the table: "movimentacoes.Motivos" */
	insert_movimentacoes_Motivos_one?:ModelTypes["movimentacoes_Motivos"],
	/** insert data into the table: "movimentacoes.Movimentacoes" */
	insert_movimentacoes_Movimentacoes?:ModelTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** insert a single row into the table: "movimentacoes.Movimentacoes" */
	insert_movimentacoes_Movimentacoes_one?:ModelTypes["movimentacoes_Movimentacoes"],
	/** insert data into the table: "operacional.OrdemDeServico" */
	insert_operacional_OrdemDeServico?:ModelTypes["operacional_OrdemDeServico_mutation_response"],
	/** insert data into the table: "operacional.OrdemDeServico_Atividades" */
	insert_operacional_OrdemDeServico_Atividades?:ModelTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Atividades" */
	insert_operacional_OrdemDeServico_Atividades_one?:ModelTypes["operacional_OrdemDeServico_Atividades"],
	/** insert data into the table: "operacional.OrdemDeServico_Situacoes" */
	insert_operacional_OrdemDeServico_Situacoes?:ModelTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Situacoes" */
	insert_operacional_OrdemDeServico_Situacoes_one?:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	/** insert data into the table: "operacional.OrdemDeServico_Tipo" */
	insert_operacional_OrdemDeServico_Tipo?:ModelTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Tipo" */
	insert_operacional_OrdemDeServico_Tipo_one?:ModelTypes["operacional_OrdemDeServico_Tipo"],
	/** insert a single row into the table: "operacional.OrdemDeServico" */
	insert_operacional_OrdemDeServico_one?:ModelTypes["operacional_OrdemDeServico"],
	/** insert data into the table: "pedidosDeCompra.Logs" */
	insert_pedidosDeCompra_Logs?:ModelTypes["pedidosDeCompra_Logs_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Logs" */
	insert_pedidosDeCompra_Logs_one?:ModelTypes["pedidosDeCompra_Logs"],
	/** insert data into the table: "pedidosDeCompra.Orcamentos" */
	insert_pedidosDeCompra_Orcamentos?:ModelTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** insert data into the table: "pedidosDeCompra.Orcamentos_Produtos" */
	insert_pedidosDeCompra_Orcamentos_Produtos?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Orcamentos_Produtos" */
	insert_pedidosDeCompra_Orcamentos_Produtos_one?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** insert a single row into the table: "pedidosDeCompra.Orcamentos" */
	insert_pedidosDeCompra_Orcamentos_one?:ModelTypes["pedidosDeCompra_Orcamentos"],
	/** insert data into the table: "pedidosDeCompra.Pedidos" */
	insert_pedidosDeCompra_Pedidos?:ModelTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Pedidos" */
	insert_pedidosDeCompra_Pedidos_one?:ModelTypes["pedidosDeCompra_Pedidos"],
	/** insert data into the table: "pedidosDeCompra.Produtos" */
	insert_pedidosDeCompra_Produtos?:ModelTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Produtos" */
	insert_pedidosDeCompra_Produtos_one?:ModelTypes["pedidosDeCompra_Produtos"],
	/** insert data into the table: "pedidosDeCompra.Situacoes" */
	insert_pedidosDeCompra_Situacoes?:ModelTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Situacoes" */
	insert_pedidosDeCompra_Situacoes_one?:ModelTypes["pedidosDeCompra_Situacoes"],
	/** insert data into the table: "pedidosDeSaida.Logs" */
	insert_pedidosDeSaida_Logs?:ModelTypes["pedidosDeSaida_Logs_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Logs" */
	insert_pedidosDeSaida_Logs_one?:ModelTypes["pedidosDeSaida_Logs"],
	/** insert data into the table: "pedidosDeSaida.Pedidos" */
	insert_pedidosDeSaida_Pedidos?:ModelTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Pedidos" */
	insert_pedidosDeSaida_Pedidos_one?:ModelTypes["pedidosDeSaida_Pedidos"],
	/** insert data into the table: "pedidosDeSaida.Produtos" */
	insert_pedidosDeSaida_Produtos?:ModelTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Produtos" */
	insert_pedidosDeSaida_Produtos_one?:ModelTypes["pedidosDeSaida_Produtos"],
	/** insert data into the table: "pedidosDeSaida.Situacoes" */
	insert_pedidosDeSaida_Situacoes?:ModelTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Situacoes" */
	insert_pedidosDeSaida_Situacoes_one?:ModelTypes["pedidosDeSaida_Situacoes"],
	/** insert data into the table: "producao.Chips" */
	insert_producao_Chips?:ModelTypes["producao_Chips_mutation_response"],
	/** insert data into the table: "producao.ChipsSituacoes" */
	insert_producao_ChipsSituacoes?:ModelTypes["producao_ChipsSituacoes_mutation_response"],
	/** insert a single row into the table: "producao.ChipsSituacoes" */
	insert_producao_ChipsSituacoes_one?:ModelTypes["producao_ChipsSituacoes"],
	/** insert a single row into the table: "producao.Chips" */
	insert_producao_Chips_one?:ModelTypes["producao_Chips"],
	/** insert data into the table: "producao.Equipamentos" */
	insert_producao_Equipamentos?:ModelTypes["producao_Equipamentos_mutation_response"],
	/** insert a single row into the table: "producao.Equipamentos" */
	insert_producao_Equipamentos_one?:ModelTypes["producao_Equipamentos"],
	/** insert data into the table: "producao.Identificadores" */
	insert_producao_Identificadores?:ModelTypes["producao_Identificadores_mutation_response"],
	/** insert a single row into the table: "producao.Identificadores" */
	insert_producao_Identificadores_one?:ModelTypes["producao_Identificadores"],
	/** insert data into the table: "producao.KitDeInsumo_Itens" */
	insert_producao_KitDeInsumo_Itens?:ModelTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** insert a single row into the table: "producao.KitDeInsumo_Itens" */
	insert_producao_KitDeInsumo_Itens_one?:ModelTypes["producao_KitDeInsumo_Itens"],
	/** insert data into the table: "producao.KitsDeInstalacao" */
	insert_producao_KitsDeInstalacao?:ModelTypes["producao_KitsDeInstalacao_mutation_response"],
	/** insert a single row into the table: "producao.KitsDeInstalacao" */
	insert_producao_KitsDeInstalacao_one?:ModelTypes["producao_KitsDeInstalacao"],
	/** insert data into the table: "producao.KitsDeInsumo" */
	insert_producao_KitsDeInsumo?:ModelTypes["producao_KitsDeInsumo_mutation_response"],
	/** insert a single row into the table: "producao.KitsDeInsumo" */
	insert_producao_KitsDeInsumo_one?:ModelTypes["producao_KitsDeInsumo"],
	/** insert data into the table: "producao.Logs" */
	insert_producao_Logs?:ModelTypes["producao_Logs_mutation_response"],
	/** insert a single row into the table: "producao.Logs" */
	insert_producao_Logs_one?:ModelTypes["producao_Logs"],
	/** insert data into the table: "producao.Rastreadores" */
	insert_producao_Rastreadores?:ModelTypes["producao_Rastreadores_mutation_response"],
	/** insert a single row into the table: "producao.Rastreadores" */
	insert_producao_Rastreadores_one?:ModelTypes["producao_Rastreadores"],
	/** insert data into the table: "producao.TiposDeKitDeInsumo" */
	insert_producao_TiposDeKitDeInsumo?:ModelTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** insert data into the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	insert_producao_TiposDeKitDeInsumo_estoque_Itens?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** insert a single row into the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	insert_producao_TiposDeKitDeInsumo_estoque_Itens_one?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** insert a single row into the table: "producao.TiposDeKitDeInsumo" */
	insert_producao_TiposDeKitDeInsumo_one?:ModelTypes["producao_TiposDeKitDeInsumo"],
	/** insert data into the table: "vendas.GruposDePerguntas" */
	insert_vendas_GruposDePerguntas?:ModelTypes["vendas_GruposDePerguntas_mutation_response"],
	/** insert data into the table: "vendas.GruposDePerguntas_Perguntas" */
	insert_vendas_GruposDePerguntas_Perguntas?:ModelTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** insert a single row into the table: "vendas.GruposDePerguntas_Perguntas" */
	insert_vendas_GruposDePerguntas_Perguntas_one?:ModelTypes["vendas_GruposDePerguntas_Perguntas"],
	/** insert a single row into the table: "vendas.GruposDePerguntas" */
	insert_vendas_GruposDePerguntas_one?:ModelTypes["vendas_GruposDePerguntas"],
	/** insert data into the table: "vendas.Perguntas" */
	insert_vendas_Perguntas?:ModelTypes["vendas_Perguntas_mutation_response"],
	/** insert a single row into the table: "vendas.Perguntas" */
	insert_vendas_Perguntas_one?:ModelTypes["vendas_Perguntas"],
	/** insert data into the table: "vendas.TiposDePagamento" */
	insert_vendas_TiposDePagamento?:ModelTypes["vendas_TiposDePagamento_mutation_response"],
	/** insert a single row into the table: "vendas.TiposDePagamento" */
	insert_vendas_TiposDePagamento_one?:ModelTypes["vendas_TiposDePagamento"],
	/** insert data into the table: "vendas.TiposDeRecorrencia" */
	insert_vendas_TiposDeRecorrencia?:ModelTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** insert a single row into the table: "vendas.TiposDeRecorrencia" */
	insert_vendas_TiposDeRecorrencia_one?:ModelTypes["vendas_TiposDeRecorrencia"],
	/** update data of the table: "CategoriasDeVeiculos" */
	update_CategoriasDeVeiculos?:ModelTypes["CategoriasDeVeiculos_mutation_response"],
	/** update single row of the table: "CategoriasDeVeiculos" */
	update_CategoriasDeVeiculos_by_pk?:ModelTypes["CategoriasDeVeiculos"],
	/** update data of the table: "Configuracoes" */
	update_Configuracoes?:ModelTypes["Configuracoes_mutation_response"],
	/** update single row of the table: "Configuracoes" */
	update_Configuracoes_by_pk?:ModelTypes["Configuracoes"],
	/** update data of the table: "EstadosEMunicipios" */
	update_EstadosEMunicipios?:ModelTypes["EstadosEMunicipios_mutation_response"],
	/** update single row of the table: "EstadosEMunicipios" */
	update_EstadosEMunicipios_by_pk?:ModelTypes["EstadosEMunicipios"],
	/** update data of the table: "Operadoras" */
	update_Operadoras?:ModelTypes["Operadoras_mutation_response"],
	/** update single row of the table: "Operadoras" */
	update_Operadoras_by_pk?:ModelTypes["Operadoras"],
	/** update data of the table: "Produtos" */
	update_Produtos?:ModelTypes["Produtos_mutation_response"],
	/** update single row of the table: "Produtos" */
	update_Produtos_by_pk?:ModelTypes["Produtos"],
	/** update data of the table: "UnidadesDeMedidas" */
	update_UnidadesDeMedidas?:ModelTypes["UnidadesDeMedidas_mutation_response"],
	/** update single row of the table: "UnidadesDeMedidas" */
	update_UnidadesDeMedidas_by_pk?:ModelTypes["UnidadesDeMedidas"],
	/** update data of the table: "atendimentos.EtapasDosFluxos" */
	update_atendimentos_EtapasDosFluxos?:ModelTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** update single row of the table: "atendimentos.EtapasDosFluxos" */
	update_atendimentos_EtapasDosFluxos_by_pk?:ModelTypes["atendimentos_EtapasDosFluxos"],
	/** update data of the table: "atendimentos.Fluxos" */
	update_atendimentos_Fluxos?:ModelTypes["atendimentos_Fluxos_mutation_response"],
	/** update single row of the table: "atendimentos.Fluxos" */
	update_atendimentos_Fluxos_by_pk?:ModelTypes["atendimentos_Fluxos"],
	/** update data of the table: "atendimentos.Tickets" */
	update_atendimentos_Tickets?:ModelTypes["atendimentos_Tickets_mutation_response"],
	/** update single row of the table: "atendimentos.Tickets" */
	update_atendimentos_Tickets_by_pk?:ModelTypes["atendimentos_Tickets"],
	/** update data of the table: "atendimentos.TiposDeTickets" */
	update_atendimentos_TiposDeTickets?:ModelTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** update single row of the table: "atendimentos.TiposDeTickets" */
	update_atendimentos_TiposDeTickets_by_pk?:ModelTypes["atendimentos_TiposDeTickets"],
	/** update data of the table: "autenticacao.Atendentes" */
	update_autenticacao_Atendentes?:ModelTypes["autenticacao_Atendentes_mutation_response"],
	/** update single row of the table: "autenticacao.Atendentes" */
	update_autenticacao_Atendentes_by_pk?:ModelTypes["autenticacao_Atendentes"],
	/** update data of the table: "autenticacao.Usuarios" */
	update_autenticacao_Usuarios?:ModelTypes["autenticacao_Usuarios_mutation_response"],
	/** update single row of the table: "autenticacao.Usuarios" */
	update_autenticacao_Usuarios_by_pk?:ModelTypes["autenticacao_Usuarios"],
	/** update data of the table: "clientes.Leads" */
	update_clientes_Leads?:ModelTypes["clientes_Leads_mutation_response"],
	/** update single row of the table: "clientes.Leads" */
	update_clientes_Leads_by_pk?:ModelTypes["clientes_Leads"],
	/** update data of the table: "clientes.PerfisComerciais" */
	update_clientes_PerfisComerciais?:ModelTypes["clientes_PerfisComerciais_mutation_response"],
	/** update single row of the table: "clientes.PerfisComerciais" */
	update_clientes_PerfisComerciais_by_pk?:ModelTypes["clientes_PerfisComerciais"],
	/** update data of the table: "clientes.Veiculos" */
	update_clientes_Veiculos?:ModelTypes["clientes_Veiculos_mutation_response"],
	/** update single row of the table: "clientes.Veiculos" */
	update_clientes_Veiculos_by_pk?:ModelTypes["clientes_Veiculos"],
	/** update data of the table: "comercial.Acoes" */
	update_comercial_Acoes?:ModelTypes["comercial_Acoes_mutation_response"],
	/** update single row of the table: "comercial.Acoes" */
	update_comercial_Acoes_by_pk?:ModelTypes["comercial_Acoes"],
	/** update data of the table: "comercial.Atributos" */
	update_comercial_Atributos?:ModelTypes["comercial_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Atributos" */
	update_comercial_Atributos_by_pk?:ModelTypes["comercial_Atributos"],
	/** update data of the table: "comercial.Coberturas" */
	update_comercial_Coberturas?:ModelTypes["comercial_Coberturas_mutation_response"],
	/** update single row of the table: "comercial.Coberturas" */
	update_comercial_Coberturas_by_pk?:ModelTypes["comercial_Coberturas"],
	/** update data of the table: "comercial.Combos" */
	update_comercial_Combos?:ModelTypes["comercial_Combos_mutation_response"],
	/** update data of the table: "comercial.Combos_Combos" */
	update_comercial_Combos_Combos?:ModelTypes["comercial_Combos_Combos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Combos" */
	update_comercial_Combos_Combos_by_pk?:ModelTypes["comercial_Combos_Combos"],
	/** update data of the table: "comercial.Combos_Planos" */
	update_comercial_Combos_Planos?:ModelTypes["comercial_Combos_Planos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Planos" */
	update_comercial_Combos_Planos_by_pk?:ModelTypes["comercial_Combos_Planos"],
	/** update data of the table: "comercial.Combos_Precos" */
	update_comercial_Combos_Precos?:ModelTypes["comercial_Combos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Precos" */
	update_comercial_Combos_Precos_by_pk?:ModelTypes["comercial_Combos_Precos"],
	/** update data of the table: "comercial.Combos_Produtos" */
	update_comercial_Combos_Produtos?:ModelTypes["comercial_Combos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Produtos" */
	update_comercial_Combos_Produtos_by_pk?:ModelTypes["comercial_Combos_Produtos"],
	/** update data of the table: "comercial.Combos_Servicos" */
	update_comercial_Combos_Servicos?:ModelTypes["comercial_Combos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Servicos" */
	update_comercial_Combos_Servicos_by_pk?:ModelTypes["comercial_Combos_Servicos"],
	/** update single row of the table: "comercial.Combos" */
	update_comercial_Combos_by_pk?:ModelTypes["comercial_Combos"],
	/** update data of the table: "comercial.Condicionais" */
	update_comercial_Condicionais?:ModelTypes["comercial_Condicionais_mutation_response"],
	/** update data of the table: "comercial.CondicionaisSituacoes" */
	update_comercial_CondicionaisSituacoes?:ModelTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** update single row of the table: "comercial.CondicionaisSituacoes" */
	update_comercial_CondicionaisSituacoes_by_pk?:ModelTypes["comercial_CondicionaisSituacoes"],
	/** update single row of the table: "comercial.Condicionais" */
	update_comercial_Condicionais_by_pk?:ModelTypes["comercial_Condicionais"],
	/** update data of the table: "comercial.ContratosBase" */
	update_comercial_ContratosBase?:ModelTypes["comercial_ContratosBase_mutation_response"],
	/** update data of the table: "comercial.ContratosBase_Versoes" */
	update_comercial_ContratosBase_Versoes?:ModelTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** update single row of the table: "comercial.ContratosBase_Versoes" */
	update_comercial_ContratosBase_Versoes_by_pk?:ModelTypes["comercial_ContratosBase_Versoes"],
	/** update single row of the table: "comercial.ContratosBase" */
	update_comercial_ContratosBase_by_pk?:ModelTypes["comercial_ContratosBase"],
	/** update data of the table: "comercial.Fornecedores" */
	update_comercial_Fornecedores?:ModelTypes["comercial_Fornecedores_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Produtos" */
	update_comercial_Fornecedores_Produtos?:ModelTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Produtos_Precos" */
	update_comercial_Fornecedores_Produtos_Precos?:ModelTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Produtos_Precos" */
	update_comercial_Fornecedores_Produtos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	/** update single row of the table: "comercial.Fornecedores_Produtos" */
	update_comercial_Fornecedores_Produtos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos"],
	/** update data of the table: "comercial.Fornecedores_Servicos" */
	update_comercial_Fornecedores_Servicos?:ModelTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Servicos_Precos" */
	update_comercial_Fornecedores_Servicos_Precos?:ModelTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Servicos_Precos" */
	update_comercial_Fornecedores_Servicos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	/** update data of the table: "comercial.Fornecedores_Servicos_Tarifas" */
	update_comercial_Fornecedores_Servicos_Tarifas?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Servicos_Tarifas" */
	update_comercial_Fornecedores_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** update single row of the table: "comercial.Fornecedores_Servicos" */
	update_comercial_Fornecedores_Servicos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos"],
	/** update single row of the table: "comercial.Fornecedores" */
	update_comercial_Fornecedores_by_pk?:ModelTypes["comercial_Fornecedores"],
	/** update data of the table: "comercial.Planos" */
	update_comercial_Planos?:ModelTypes["comercial_Planos_mutation_response"],
	/** update data of the table: "comercial.Planos_Condicionais" */
	update_comercial_Planos_Condicionais?:ModelTypes["comercial_Planos_Condicionais_mutation_response"],
	/** update single row of the table: "comercial.Planos_Condicionais" */
	update_comercial_Planos_Condicionais_by_pk?:ModelTypes["comercial_Planos_Condicionais"],
	/** update data of the table: "comercial.Planos_Precos" */
	update_comercial_Planos_Precos?:ModelTypes["comercial_Planos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Planos_Precos" */
	update_comercial_Planos_Precos_by_pk?:ModelTypes["comercial_Planos_Precos"],
	/** update single row of the table: "comercial.Planos" */
	update_comercial_Planos_by_pk?:ModelTypes["comercial_Planos"],
	/** update data of the table: "comercial.PrestadorDeServicos_Servicos" */
	update_comercial_PrestadorDeServicos_Servicos?:ModelTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.PrestadorDeServicos_Servicos" */
	update_comercial_PrestadorDeServicos_Servicos_by_pk?:ModelTypes["comercial_PrestadorDeServicos_Servicos"],
	/** update data of the table: "comercial.Produtos" */
	update_comercial_Produtos?:ModelTypes["comercial_Produtos_mutation_response"],
	/** update data of the table: "comercial.Produtos_Atributos" */
	update_comercial_Produtos_Atributos?:ModelTypes["comercial_Produtos_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Atributos" */
	update_comercial_Produtos_Atributos_by_pk?:ModelTypes["comercial_Produtos_Atributos"],
	/** update data of the table: "comercial.Produtos_Oportunidades" */
	update_comercial_Produtos_Oportunidades?:ModelTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Oportunidades" */
	update_comercial_Produtos_Oportunidades_by_pk?:ModelTypes["comercial_Produtos_Oportunidades"],
	/** update data of the table: "comercial.Produtos_Produtos" */
	update_comercial_Produtos_Produtos?:ModelTypes["comercial_Produtos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Produtos" */
	update_comercial_Produtos_Produtos_by_pk?:ModelTypes["comercial_Produtos_Produtos"],
	/** update data of the table: "comercial.Produtos_Servicos" */
	update_comercial_Produtos_Servicos?:ModelTypes["comercial_Produtos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Servicos" */
	update_comercial_Produtos_Servicos_by_pk?:ModelTypes["comercial_Produtos_Servicos"],
	/** update data of the table: "comercial.Produtos_Tipos" */
	update_comercial_Produtos_Tipos?:ModelTypes["comercial_Produtos_Tipos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Tipos" */
	update_comercial_Produtos_Tipos_by_pk?:ModelTypes["comercial_Produtos_Tipos"],
	/** update single row of the table: "comercial.Produtos" */
	update_comercial_Produtos_by_pk?:ModelTypes["comercial_Produtos"],
	/** update data of the table: "comercial.Propostas" */
	update_comercial_Propostas?:ModelTypes["comercial_Propostas_mutation_response"],
	/** update data of the table: "comercial.Propostas_Combos" */
	update_comercial_Propostas_Combos?:ModelTypes["comercial_Propostas_Combos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Combos" */
	update_comercial_Propostas_Combos_by_pk?:ModelTypes["comercial_Propostas_Combos"],
	/** update data of the table: "comercial.Propostas_Instalacoes" */
	update_comercial_Propostas_Instalacoes?:ModelTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Instalacoes" */
	update_comercial_Propostas_Instalacoes_by_pk?:ModelTypes["comercial_Propostas_Instalacoes"],
	/** update data of the table: "comercial.Propostas_Oportunidades" */
	update_comercial_Propostas_Oportunidades?:ModelTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Oportunidades" */
	update_comercial_Propostas_Oportunidades_by_pk?:ModelTypes["comercial_Propostas_Oportunidades"],
	/** update data of the table: "comercial.Propostas_Planos" */
	update_comercial_Propostas_Planos?:ModelTypes["comercial_Propostas_Planos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Planos" */
	update_comercial_Propostas_Planos_by_pk?:ModelTypes["comercial_Propostas_Planos"],
	/** update data of the table: "comercial.Propostas_Produtos" */
	update_comercial_Propostas_Produtos?:ModelTypes["comercial_Propostas_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Produtos" */
	update_comercial_Propostas_Produtos_by_pk?:ModelTypes["comercial_Propostas_Produtos"],
	/** update data of the table: "comercial.Propostas_Servicos" */
	update_comercial_Propostas_Servicos?:ModelTypes["comercial_Propostas_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Servicos" */
	update_comercial_Propostas_Servicos_by_pk?:ModelTypes["comercial_Propostas_Servicos"],
	/** update data of the table: "comercial.Propostas_Situacoes" */
	update_comercial_Propostas_Situacoes?:ModelTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Situacoes" */
	update_comercial_Propostas_Situacoes_by_pk?:ModelTypes["comercial_Propostas_Situacoes"],
	/** update single row of the table: "comercial.Propostas" */
	update_comercial_Propostas_by_pk?:ModelTypes["comercial_Propostas"],
	/** update data of the table: "comercial.Servicos" */
	update_comercial_Servicos?:ModelTypes["comercial_Servicos_mutation_response"],
	/** update data of the table: "comercial.Servicos_Atributos" */
	update_comercial_Servicos_Atributos?:ModelTypes["comercial_Servicos_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Atributos" */
	update_comercial_Servicos_Atributos_by_pk?:ModelTypes["comercial_Servicos_Atributos"],
	/** update data of the table: "comercial.Servicos_Oportunidades" */
	update_comercial_Servicos_Oportunidades?:ModelTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Oportunidades" */
	update_comercial_Servicos_Oportunidades_by_pk?:ModelTypes["comercial_Servicos_Oportunidades"],
	/** update data of the table: "comercial.Servicos_Produtos" */
	update_comercial_Servicos_Produtos?:ModelTypes["comercial_Servicos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Produtos" */
	update_comercial_Servicos_Produtos_by_pk?:ModelTypes["comercial_Servicos_Produtos"],
	/** update data of the table: "comercial.Servicos_Servicos" */
	update_comercial_Servicos_Servicos?:ModelTypes["comercial_Servicos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Servicos" */
	update_comercial_Servicos_Servicos_by_pk?:ModelTypes["comercial_Servicos_Servicos"],
	/** update data of the table: "comercial.Servicos_Tarifas" */
	update_comercial_Servicos_Tarifas?:ModelTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Tarifas" */
	update_comercial_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Servicos_Tarifas"],
	/** update data of the table: "comercial.Servicos_Tipos" */
	update_comercial_Servicos_Tipos?:ModelTypes["comercial_Servicos_Tipos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Tipos" */
	update_comercial_Servicos_Tipos_by_pk?:ModelTypes["comercial_Servicos_Tipos"],
	/** update single row of the table: "comercial.Servicos" */
	update_comercial_Servicos_by_pk?:ModelTypes["comercial_Servicos"],
	/** update data of the table: "comercial.Tarifas" */
	update_comercial_Tarifas?:ModelTypes["comercial_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Tarifas" */
	update_comercial_Tarifas_by_pk?:ModelTypes["comercial_Tarifas"],
	/** update data of the table: "contatos.Emails" */
	update_contatos_Emails?:ModelTypes["contatos_Emails_mutation_response"],
	/** update single row of the table: "contatos.Emails" */
	update_contatos_Emails_by_pk?:ModelTypes["contatos_Emails"],
	/** update data of the table: "contatos.Enderecos" */
	update_contatos_Enderecos?:ModelTypes["contatos_Enderecos_mutation_response"],
	/** update single row of the table: "contatos.Enderecos" */
	update_contatos_Enderecos_by_pk?:ModelTypes["contatos_Enderecos"],
	/** update data of the table: "contatos.Logs" */
	update_contatos_Logs?:ModelTypes["contatos_Logs_mutation_response"],
	/** update single row of the table: "contatos.Logs" */
	update_contatos_Logs_by_pk?:ModelTypes["contatos_Logs"],
	/** update data of the table: "contatos.Telefones" */
	update_contatos_Telefones?:ModelTypes["contatos_Telefones_mutation_response"],
	/** update single row of the table: "contatos.Telefones" */
	update_contatos_Telefones_by_pk?:ModelTypes["contatos_Telefones"],
	/** update data of the table: "estoque.Enderecamentos" */
	update_estoque_Enderecamentos?:ModelTypes["estoque_Enderecamentos_mutation_response"],
	/** update single row of the table: "estoque.Enderecamentos" */
	update_estoque_Enderecamentos_by_pk?:ModelTypes["estoque_Enderecamentos"],
	/** update data of the table: "estoque.Fabricantes" */
	update_estoque_Fabricantes?:ModelTypes["estoque_Fabricantes_mutation_response"],
	/** update single row of the table: "estoque.Fabricantes" */
	update_estoque_Fabricantes_by_pk?:ModelTypes["estoque_Fabricantes"],
	/** update data of the table: "estoque.Familias" */
	update_estoque_Familias?:ModelTypes["estoque_Familias_mutation_response"],
	/** update single row of the table: "estoque.Familias" */
	update_estoque_Familias_by_pk?:ModelTypes["estoque_Familias"],
	/** update data of the table: "estoque.Grupos" */
	update_estoque_Grupos?:ModelTypes["estoque_Grupos_mutation_response"],
	/** update single row of the table: "estoque.Grupos" */
	update_estoque_Grupos_by_pk?:ModelTypes["estoque_Grupos"],
	/** update data of the table: "estoque.Itens" */
	update_estoque_Itens?:ModelTypes["estoque_Itens_mutation_response"],
	/** update single row of the table: "estoque.Itens" */
	update_estoque_Itens_by_pk?:ModelTypes["estoque_Itens"],
	/** update data of the table: "estoque.Logs" */
	update_estoque_Logs?:ModelTypes["estoque_Logs_mutation_response"],
	/** update single row of the table: "estoque.Logs" */
	update_estoque_Logs_by_pk?:ModelTypes["estoque_Logs"],
	/** update data of the table: "estoque.Modelos" */
	update_estoque_Modelos?:ModelTypes["estoque_Modelos_mutation_response"],
	/** update single row of the table: "estoque.Modelos" */
	update_estoque_Modelos_by_pk?:ModelTypes["estoque_Modelos"],
	/** update data of the table: "estoque.TiposDeEnderecamentos" */
	update_estoque_TiposDeEnderecamentos?:ModelTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** update single row of the table: "estoque.TiposDeEnderecamentos" */
	update_estoque_TiposDeEnderecamentos_by_pk?:ModelTypes["estoque_TiposDeEnderecamentos"],
	/** update data of the table: "identidades.Clientes" */
	update_identidades_Clientes?:ModelTypes["identidades_Clientes_mutation_response"],
	/** update data of the table: "identidades.Clientes_Documentos" */
	update_identidades_Clientes_Documentos?:ModelTypes["identidades_Clientes_Documentos_mutation_response"],
	/** update data of the table: "identidades.Clientes_Documentos_Situacoes" */
	update_identidades_Clientes_Documentos_Situacoes?:ModelTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** update single row of the table: "identidades.Clientes_Documentos_Situacoes" */
	update_identidades_Clientes_Documentos_Situacoes_by_pk?:ModelTypes["identidades_Clientes_Documentos_Situacoes"],
	/** update single row of the table: "identidades.Clientes_Documentos" */
	update_identidades_Clientes_Documentos_by_pk?:ModelTypes["identidades_Clientes_Documentos"],
	/** update single row of the table: "identidades.Clientes" */
	update_identidades_Clientes_by_pk?:ModelTypes["identidades_Clientes"],
	/** update data of the table: "identidades.Colaboradores" */
	update_identidades_Colaboradores?:ModelTypes["identidades_Colaboradores_mutation_response"],
	/** update single row of the table: "identidades.Colaboradores" */
	update_identidades_Colaboradores_by_pk?:ModelTypes["identidades_Colaboradores"],
	/** update data of the table: "identidades.Fornecedores" */
	update_identidades_Fornecedores?:ModelTypes["identidades_Fornecedores_mutation_response"],
	/** update single row of the table: "identidades.Fornecedores" */
	update_identidades_Fornecedores_by_pk?:ModelTypes["identidades_Fornecedores"],
	/** update data of the table: "identidades.Logs" */
	update_identidades_Logs?:ModelTypes["identidades_Logs_mutation_response"],
	/** update single row of the table: "identidades.Logs" */
	update_identidades_Logs_by_pk?:ModelTypes["identidades_Logs"],
	/** update data of the table: "identidades.Pessoas" */
	update_identidades_Pessoas?:ModelTypes["identidades_Pessoas_mutation_response"],
	/** update single row of the table: "identidades.Pessoas" */
	update_identidades_Pessoas_by_pk?:ModelTypes["identidades_Pessoas"],
	/** update data of the table: "identidades.Representantes" */
	update_identidades_Representantes?:ModelTypes["identidades_Representantes_mutation_response"],
	/** update single row of the table: "identidades.Representantes" */
	update_identidades_Representantes_by_pk?:ModelTypes["identidades_Representantes"],
	/** update data of the table: "identidades.Vendedores" */
	update_identidades_Vendedores?:ModelTypes["identidades_Vendedores_mutation_response"],
	/** update single row of the table: "identidades.Vendedores" */
	update_identidades_Vendedores_by_pk?:ModelTypes["identidades_Vendedores"],
	/** update data of the table: "movimentacoes.Motivos" */
	update_movimentacoes_Motivos?:ModelTypes["movimentacoes_Motivos_mutation_response"],
	/** update single row of the table: "movimentacoes.Motivos" */
	update_movimentacoes_Motivos_by_pk?:ModelTypes["movimentacoes_Motivos"],
	/** update data of the table: "movimentacoes.Movimentacoes" */
	update_movimentacoes_Movimentacoes?:ModelTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** update single row of the table: "movimentacoes.Movimentacoes" */
	update_movimentacoes_Movimentacoes_by_pk?:ModelTypes["movimentacoes_Movimentacoes"],
	/** update data of the table: "operacional.OrdemDeServico" */
	update_operacional_OrdemDeServico?:ModelTypes["operacional_OrdemDeServico_mutation_response"],
	/** update data of the table: "operacional.OrdemDeServico_Atividades" */
	update_operacional_OrdemDeServico_Atividades?:ModelTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Atividades" */
	update_operacional_OrdemDeServico_Atividades_by_pk?:ModelTypes["operacional_OrdemDeServico_Atividades"],
	/** update data of the table: "operacional.OrdemDeServico_Situacoes" */
	update_operacional_OrdemDeServico_Situacoes?:ModelTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Situacoes" */
	update_operacional_OrdemDeServico_Situacoes_by_pk?:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	/** update data of the table: "operacional.OrdemDeServico_Tipo" */
	update_operacional_OrdemDeServico_Tipo?:ModelTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Tipo" */
	update_operacional_OrdemDeServico_Tipo_by_pk?:ModelTypes["operacional_OrdemDeServico_Tipo"],
	/** update single row of the table: "operacional.OrdemDeServico" */
	update_operacional_OrdemDeServico_by_pk?:ModelTypes["operacional_OrdemDeServico"],
	/** update data of the table: "pedidosDeCompra.Logs" */
	update_pedidosDeCompra_Logs?:ModelTypes["pedidosDeCompra_Logs_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Logs" */
	update_pedidosDeCompra_Logs_by_pk?:ModelTypes["pedidosDeCompra_Logs"],
	/** update data of the table: "pedidosDeCompra.Orcamentos" */
	update_pedidosDeCompra_Orcamentos?:ModelTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** update data of the table: "pedidosDeCompra.Orcamentos_Produtos" */
	update_pedidosDeCompra_Orcamentos_Produtos?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Orcamentos_Produtos" */
	update_pedidosDeCompra_Orcamentos_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** update single row of the table: "pedidosDeCompra.Orcamentos" */
	update_pedidosDeCompra_Orcamentos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos"],
	/** update data of the table: "pedidosDeCompra.Pedidos" */
	update_pedidosDeCompra_Pedidos?:ModelTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Pedidos" */
	update_pedidosDeCompra_Pedidos_by_pk?:ModelTypes["pedidosDeCompra_Pedidos"],
	/** update data of the table: "pedidosDeCompra.Produtos" */
	update_pedidosDeCompra_Produtos?:ModelTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Produtos" */
	update_pedidosDeCompra_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Produtos"],
	/** update data of the table: "pedidosDeCompra.Situacoes" */
	update_pedidosDeCompra_Situacoes?:ModelTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Situacoes" */
	update_pedidosDeCompra_Situacoes_by_pk?:ModelTypes["pedidosDeCompra_Situacoes"],
	/** update data of the table: "pedidosDeSaida.Logs" */
	update_pedidosDeSaida_Logs?:ModelTypes["pedidosDeSaida_Logs_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Logs" */
	update_pedidosDeSaida_Logs_by_pk?:ModelTypes["pedidosDeSaida_Logs"],
	/** update data of the table: "pedidosDeSaida.Pedidos" */
	update_pedidosDeSaida_Pedidos?:ModelTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Pedidos" */
	update_pedidosDeSaida_Pedidos_by_pk?:ModelTypes["pedidosDeSaida_Pedidos"],
	/** update data of the table: "pedidosDeSaida.Produtos" */
	update_pedidosDeSaida_Produtos?:ModelTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Produtos" */
	update_pedidosDeSaida_Produtos_by_pk?:ModelTypes["pedidosDeSaida_Produtos"],
	/** update data of the table: "pedidosDeSaida.Situacoes" */
	update_pedidosDeSaida_Situacoes?:ModelTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Situacoes" */
	update_pedidosDeSaida_Situacoes_by_pk?:ModelTypes["pedidosDeSaida_Situacoes"],
	/** update data of the table: "producao.Chips" */
	update_producao_Chips?:ModelTypes["producao_Chips_mutation_response"],
	/** update data of the table: "producao.ChipsSituacoes" */
	update_producao_ChipsSituacoes?:ModelTypes["producao_ChipsSituacoes_mutation_response"],
	/** update single row of the table: "producao.ChipsSituacoes" */
	update_producao_ChipsSituacoes_by_pk?:ModelTypes["producao_ChipsSituacoes"],
	/** update single row of the table: "producao.Chips" */
	update_producao_Chips_by_pk?:ModelTypes["producao_Chips"],
	/** update data of the table: "producao.Equipamentos" */
	update_producao_Equipamentos?:ModelTypes["producao_Equipamentos_mutation_response"],
	/** update single row of the table: "producao.Equipamentos" */
	update_producao_Equipamentos_by_pk?:ModelTypes["producao_Equipamentos"],
	/** update data of the table: "producao.Identificadores" */
	update_producao_Identificadores?:ModelTypes["producao_Identificadores_mutation_response"],
	/** update single row of the table: "producao.Identificadores" */
	update_producao_Identificadores_by_pk?:ModelTypes["producao_Identificadores"],
	/** update data of the table: "producao.KitDeInsumo_Itens" */
	update_producao_KitDeInsumo_Itens?:ModelTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** update single row of the table: "producao.KitDeInsumo_Itens" */
	update_producao_KitDeInsumo_Itens_by_pk?:ModelTypes["producao_KitDeInsumo_Itens"],
	/** update data of the table: "producao.KitsDeInstalacao" */
	update_producao_KitsDeInstalacao?:ModelTypes["producao_KitsDeInstalacao_mutation_response"],
	/** update single row of the table: "producao.KitsDeInstalacao" */
	update_producao_KitsDeInstalacao_by_pk?:ModelTypes["producao_KitsDeInstalacao"],
	/** update data of the table: "producao.KitsDeInsumo" */
	update_producao_KitsDeInsumo?:ModelTypes["producao_KitsDeInsumo_mutation_response"],
	/** update single row of the table: "producao.KitsDeInsumo" */
	update_producao_KitsDeInsumo_by_pk?:ModelTypes["producao_KitsDeInsumo"],
	/** update data of the table: "producao.Logs" */
	update_producao_Logs?:ModelTypes["producao_Logs_mutation_response"],
	/** update single row of the table: "producao.Logs" */
	update_producao_Logs_by_pk?:ModelTypes["producao_Logs"],
	/** update data of the table: "producao.Rastreadores" */
	update_producao_Rastreadores?:ModelTypes["producao_Rastreadores_mutation_response"],
	/** update single row of the table: "producao.Rastreadores" */
	update_producao_Rastreadores_by_pk?:ModelTypes["producao_Rastreadores"],
	/** update data of the table: "producao.TiposDeKitDeInsumo" */
	update_producao_TiposDeKitDeInsumo?:ModelTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** update single row of the table: "producao.TiposDeKitDeInsumo" */
	update_producao_TiposDeKitDeInsumo_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo"],
	/** update data of the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	update_producao_TiposDeKitDeInsumo_estoque_Itens?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** update single row of the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	update_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** update data of the table: "vendas.GruposDePerguntas" */
	update_vendas_GruposDePerguntas?:ModelTypes["vendas_GruposDePerguntas_mutation_response"],
	/** update data of the table: "vendas.GruposDePerguntas_Perguntas" */
	update_vendas_GruposDePerguntas_Perguntas?:ModelTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** update single row of the table: "vendas.GruposDePerguntas_Perguntas" */
	update_vendas_GruposDePerguntas_Perguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas_Perguntas"],
	/** update single row of the table: "vendas.GruposDePerguntas" */
	update_vendas_GruposDePerguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas"],
	/** update data of the table: "vendas.Perguntas" */
	update_vendas_Perguntas?:ModelTypes["vendas_Perguntas_mutation_response"],
	/** update single row of the table: "vendas.Perguntas" */
	update_vendas_Perguntas_by_pk?:ModelTypes["vendas_Perguntas"],
	/** update data of the table: "vendas.TiposDePagamento" */
	update_vendas_TiposDePagamento?:ModelTypes["vendas_TiposDePagamento_mutation_response"],
	/** update single row of the table: "vendas.TiposDePagamento" */
	update_vendas_TiposDePagamento_by_pk?:ModelTypes["vendas_TiposDePagamento"],
	/** update data of the table: "vendas.TiposDeRecorrencia" */
	update_vendas_TiposDeRecorrencia?:ModelTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** update single row of the table: "vendas.TiposDeRecorrencia" */
	update_vendas_TiposDeRecorrencia_by_pk?:ModelTypes["vendas_TiposDeRecorrencia"]
};
	/** columns and relationships of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico"]: {
		/** An array relationship */
	Atividades:ModelTypes["operacional_OrdemDeServico_Atividades"][],
	/** An aggregate relationship */
	Atividades_aggregate:ModelTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	CodigoIdentificador:number,
	DataAgendamento?:ModelTypes["timestamptz"],
	DataConcluida?:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	Proposta_Id:ModelTypes["uuid"],
	/** An object relationship */
	Situacao:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id:ModelTypes["operacional_OrdemDeServico_Situacoes_enum"],
	/** An object relationship */
	Tipo:ModelTypes["operacional_OrdemDeServico_Tipo"],
	Tipo_Id:ModelTypes["operacional_OrdemDeServico_Tipo_enum"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades"]: {
		Id:ModelTypes["uuid"],
	MotivoRecusado?:string,
	/** An object relationship */
	OrdemDeServico:ModelTypes["operacional_OrdemDeServico"],
	OrdemDeServico_Id:ModelTypes["uuid"],
	/** An object relationship */
	Situacao:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id:ModelTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Usuario_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate"]: {
		aggregate?:ModelTypes["operacional_OrdemDeServico_Atividades_aggregate_fields"],
	nodes:ModelTypes["operacional_OrdemDeServico_Atividades"][]
};
	/** aggregate fields of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["operacional_OrdemDeServico_Atividades_max_fields"],
	min?:ModelTypes["operacional_OrdemDeServico_Atividades_min_fields"]
};
	/** order by aggregate values of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate_order_by"];
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Atividades". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Atividades_bool_exp"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"];
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_constraint"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_constraint"];
	/** input type for inserting data into table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_insert_input"];
	/** aggregate max on columns */
["operacional_OrdemDeServico_Atividades_max_fields"]: {
		Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	OrdemDeServico_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_max_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_max_order_by"];
	/** aggregate min on columns */
["operacional_OrdemDeServico_Atividades_min_fields"]: {
		Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	OrdemDeServico_Id?:ModelTypes["uuid"],
	Usuario_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_min_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_min_order_by"];
	/** response of any mutation on the table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["operacional_OrdemDeServico_Atividades"][]
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_on_conflict"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_on_conflict"];
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Atividades". */
["operacional_OrdemDeServico_Atividades_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_order_by"];
	/** primary key columns input for table: operacional_OrdemDeServico_Atividades */
["operacional_OrdemDeServico_Atividades_pk_columns_input"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_pk_columns_input"];
	/** select columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_select_column"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_select_column"];
	/** input type for updating data in table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_set_input"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_set_input"];
	/** update columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_update_column"]: GraphQLTypes["operacional_OrdemDeServico_Atividades_update_column"];
	/** columns and relationships of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes"]: {
		Comentario:string,
	/** An array relationship */
	OrdemDeServico_Atividades:ModelTypes["operacional_OrdemDeServico_Atividades"][],
	/** An aggregate relationship */
	OrdemDeServico_Atividades_aggregate:ModelTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** An array relationship */
	OrdemDeServicos:ModelTypes["operacional_OrdemDeServico"][],
	/** An aggregate relationship */
	OrdemDeServicos_aggregate:ModelTypes["operacional_OrdemDeServico_aggregate"],
	Valor:string
};
	/** aggregated selection of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate"]: {
		aggregate?:ModelTypes["operacional_OrdemDeServico_Situacoes_aggregate_fields"],
	nodes:ModelTypes["operacional_OrdemDeServico_Situacoes"][]
};
	/** aggregate fields of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["operacional_OrdemDeServico_Situacoes_max_fields"],
	min?:ModelTypes["operacional_OrdemDeServico_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Situacoes". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_bool_exp"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"];
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_constraint"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_constraint"];
	["operacional_OrdemDeServico_Situacoes_enum"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"];
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Situacoes_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"];
	/** input type for inserting data into table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_insert_input"];
	/** aggregate max on columns */
["operacional_OrdemDeServico_Situacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Situacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["operacional_OrdemDeServico_Situacoes"][]
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_on_conflict"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_on_conflict"];
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Situacoes". */
["operacional_OrdemDeServico_Situacoes_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_order_by"];
	/** primary key columns input for table: operacional_OrdemDeServico_Situacoes */
["operacional_OrdemDeServico_Situacoes_pk_columns_input"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_pk_columns_input"];
	/** select columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_select_column"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_select_column"];
	/** input type for updating data in table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_set_input"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_set_input"];
	/** update columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_update_column"]: GraphQLTypes["operacional_OrdemDeServico_Situacoes_update_column"];
	/** columns and relationships of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo"]: {
		Comentario:string,
	/** An array relationship */
	OrdemDeServicos:ModelTypes["operacional_OrdemDeServico"][],
	/** An aggregate relationship */
	OrdemDeServicos_aggregate:ModelTypes["operacional_OrdemDeServico_aggregate"],
	Valor:string
};
	/** aggregated selection of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate"]: {
		aggregate?:ModelTypes["operacional_OrdemDeServico_Tipo_aggregate_fields"],
	nodes:ModelTypes["operacional_OrdemDeServico_Tipo"][]
};
	/** aggregate fields of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["operacional_OrdemDeServico_Tipo_max_fields"],
	min?:ModelTypes["operacional_OrdemDeServico_Tipo_min_fields"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Tipo". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Tipo_bool_exp"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"];
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_constraint"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_constraint"];
	["operacional_OrdemDeServico_Tipo_enum"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"];
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Tipo_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Tipo_enum_comparison_exp"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum_comparison_exp"];
	/** input type for inserting data into table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_insert_input"];
	/** aggregate max on columns */
["operacional_OrdemDeServico_Tipo_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Tipo_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["operacional_OrdemDeServico_Tipo"][]
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"];
	/** on conflict condition type for table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_on_conflict"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_on_conflict"];
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Tipo". */
["operacional_OrdemDeServico_Tipo_order_by"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_order_by"];
	/** primary key columns input for table: operacional_OrdemDeServico_Tipo */
["operacional_OrdemDeServico_Tipo_pk_columns_input"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_pk_columns_input"];
	/** select columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_select_column"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_select_column"];
	/** input type for updating data in table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_set_input"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_set_input"];
	/** update columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_update_column"]: GraphQLTypes["operacional_OrdemDeServico_Tipo_update_column"];
	/** aggregated selection of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate"]: {
		aggregate?:ModelTypes["operacional_OrdemDeServico_aggregate_fields"],
	nodes:ModelTypes["operacional_OrdemDeServico"][]
};
	/** aggregate fields of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_fields"]: {
		avg?:ModelTypes["operacional_OrdemDeServico_avg_fields"],
	count:number,
	max?:ModelTypes["operacional_OrdemDeServico_max_fields"],
	min?:ModelTypes["operacional_OrdemDeServico_min_fields"],
	stddev?:ModelTypes["operacional_OrdemDeServico_stddev_fields"],
	stddev_pop?:ModelTypes["operacional_OrdemDeServico_stddev_pop_fields"],
	stddev_samp?:ModelTypes["operacional_OrdemDeServico_stddev_samp_fields"],
	sum?:ModelTypes["operacional_OrdemDeServico_sum_fields"],
	var_pop?:ModelTypes["operacional_OrdemDeServico_var_pop_fields"],
	var_samp?:ModelTypes["operacional_OrdemDeServico_var_samp_fields"],
	variance?:ModelTypes["operacional_OrdemDeServico_variance_fields"]
};
	/** order by aggregate values of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_order_by"]: GraphQLTypes["operacional_OrdemDeServico_aggregate_order_by"];
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_arr_rel_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_arr_rel_insert_input"];
	/** aggregate avg on columns */
["operacional_OrdemDeServico_avg_fields"]: {
		CodigoIdentificador?:number
};
	/** order by avg() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_avg_order_by"]: GraphQLTypes["operacional_OrdemDeServico_avg_order_by"];
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_bool_exp"]: GraphQLTypes["operacional_OrdemDeServico_bool_exp"];
	/** unique or primary key constraints on table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_constraint"]: GraphQLTypes["operacional_OrdemDeServico_constraint"];
	/** input type for incrementing numeric columns in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_inc_input"]: GraphQLTypes["operacional_OrdemDeServico_inc_input"];
	/** input type for inserting data into table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_insert_input"];
	/** aggregate max on columns */
["operacional_OrdemDeServico_max_fields"]: {
		CodigoIdentificador?:number,
	DataAgendamento?:ModelTypes["timestamptz"],
	DataConcluida?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_max_order_by"]: GraphQLTypes["operacional_OrdemDeServico_max_order_by"];
	/** aggregate min on columns */
["operacional_OrdemDeServico_min_fields"]: {
		CodigoIdentificador?:number,
	DataAgendamento?:ModelTypes["timestamptz"],
	DataConcluida?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	Proposta_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_min_order_by"]: GraphQLTypes["operacional_OrdemDeServico_min_order_by"];
	/** response of any mutation on the table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["operacional_OrdemDeServico"][]
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_obj_rel_insert_input"]: GraphQLTypes["operacional_OrdemDeServico_obj_rel_insert_input"];
	/** on conflict condition type for table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_on_conflict"]: GraphQLTypes["operacional_OrdemDeServico_on_conflict"];
	/** Ordering options when selecting data from "operacional.OrdemDeServico". */
["operacional_OrdemDeServico_order_by"]: GraphQLTypes["operacional_OrdemDeServico_order_by"];
	/** primary key columns input for table: operacional_OrdemDeServico */
["operacional_OrdemDeServico_pk_columns_input"]: GraphQLTypes["operacional_OrdemDeServico_pk_columns_input"];
	/** select columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_select_column"]: GraphQLTypes["operacional_OrdemDeServico_select_column"];
	/** input type for updating data in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_set_input"]: GraphQLTypes["operacional_OrdemDeServico_set_input"];
	/** aggregate stddev on columns */
["operacional_OrdemDeServico_stddev_fields"]: {
		CodigoIdentificador?:number
};
	/** order by stddev() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_order_by"]: GraphQLTypes["operacional_OrdemDeServico_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["operacional_OrdemDeServico_stddev_pop_fields"]: {
		CodigoIdentificador?:number
};
	/** order by stddev_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_pop_order_by"]: GraphQLTypes["operacional_OrdemDeServico_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["operacional_OrdemDeServico_stddev_samp_fields"]: {
		CodigoIdentificador?:number
};
	/** order by stddev_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_samp_order_by"]: GraphQLTypes["operacional_OrdemDeServico_stddev_samp_order_by"];
	/** aggregate sum on columns */
["operacional_OrdemDeServico_sum_fields"]: {
		CodigoIdentificador?:number
};
	/** order by sum() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_sum_order_by"]: GraphQLTypes["operacional_OrdemDeServico_sum_order_by"];
	/** update columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_update_column"]: GraphQLTypes["operacional_OrdemDeServico_update_column"];
	/** aggregate var_pop on columns */
["operacional_OrdemDeServico_var_pop_fields"]: {
		CodigoIdentificador?:number
};
	/** order by var_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_pop_order_by"]: GraphQLTypes["operacional_OrdemDeServico_var_pop_order_by"];
	/** aggregate var_samp on columns */
["operacional_OrdemDeServico_var_samp_fields"]: {
		CodigoIdentificador?:number
};
	/** order by var_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_samp_order_by"]: GraphQLTypes["operacional_OrdemDeServico_var_samp_order_by"];
	/** aggregate variance on columns */
["operacional_OrdemDeServico_variance_fields"]: {
		CodigoIdentificador?:number
};
	/** order by variance() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_variance_order_by"]: GraphQLTypes["operacional_OrdemDeServico_variance_order_by"];
	/** column ordering options */
["order_by"]: GraphQLTypes["order_by"];
	/** columns and relationships of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Logs_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Logs"][]
};
	/** aggregate fields of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeCompra_Logs_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_append_input"]: GraphQLTypes["pedidosDeCompra_Logs_append_input"];
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Logs_bool_exp"]: GraphQLTypes["pedidosDeCompra_Logs_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_constraint"]: GraphQLTypes["pedidosDeCompra_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeCompra_Logs_delete_at_path_input"]: GraphQLTypes["pedidosDeCompra_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeCompra_Logs_delete_elem_input"]: GraphQLTypes["pedidosDeCompra_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeCompra_Logs_delete_key_input"]: GraphQLTypes["pedidosDeCompra_Logs_delete_key_input"];
	/** input type for inserting data into table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_insert_input"]: GraphQLTypes["pedidosDeCompra_Logs_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Logs"][]
};
	/** on conflict condition type for table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_on_conflict"]: GraphQLTypes["pedidosDeCompra_Logs_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Logs". */
["pedidosDeCompra_Logs_order_by"]: GraphQLTypes["pedidosDeCompra_Logs_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Logs */
["pedidosDeCompra_Logs_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_prepend_input"]: GraphQLTypes["pedidosDeCompra_Logs_prepend_input"];
	/** select columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_select_column"]: GraphQLTypes["pedidosDeCompra_Logs_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_set_input"]: GraphQLTypes["pedidosDeCompra_Logs_set_input"];
	/** update columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_update_column"]: GraphQLTypes["pedidosDeCompra_Logs_update_column"];
	/** columns and relationships of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos"]: {
		Aprovado:boolean,
	Fornecedor_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Orcamentos_Produtos:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][],
	/** An aggregate relationship */
	Orcamentos_Produtos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** An object relationship */
	Pedido:ModelTypes["pedidosDeCompra_Pedidos"],
	Pedido_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos"]: {
		Descricao?:string,
	/** An object relationship */
	Fabricante?:ModelTypes["estoque_Fabricantes"],
	Fabricante_Id?:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Orcamento:ModelTypes["pedidosDeCompra_Orcamentos"],
	Orcamento_Id:ModelTypes["uuid"],
	/** An object relationship */
	PedidosDeCompra_Produto:ModelTypes["pedidosDeCompra_Produtos"],
	PedidosDeCompra_Produto_Id:ModelTypes["uuid"],
	Quantidade:number,
	ValorUnitario:ModelTypes["float8"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][]
};
	/** aggregate fields of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"]: {
		avg?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_min_fields"],
	stddev?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"],
	sum?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_sum_fields"],
	var_pop?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"],
	var_samp?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"],
	variance?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["pedidosDeCompra_Orcamentos_Produtos_avg_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by avg() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"];
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos_Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_constraint"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_constraint"];
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_inc_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_inc_input"];
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_insert_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_Produtos_max_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Orcamento_Id?:ModelTypes["uuid"],
	PedidosDeCompra_Produto_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	ValorUnitario?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_max_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_Produtos_min_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Orcamento_Id?:ModelTypes["uuid"],
	PedidosDeCompra_Produto_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	ValorUnitario?:ModelTypes["float8"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_min_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_min_order_by"];
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][]
};
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_on_conflict"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos_Produtos". */
["pedidosDeCompra_Orcamentos_Produtos_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Orcamentos_Produtos */
["pedidosDeCompra_Orcamentos_Produtos_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_pk_columns_input"];
	/** select columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_select_column"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_set_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_set_input"];
	/** aggregate stddev on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by stddev() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["pedidosDeCompra_Orcamentos_Produtos_sum_fields"]: {
		Quantidade?:number,
	ValorUnitario?:ModelTypes["float8"]
};
	/** order by sum() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"];
	/** update columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_update_column"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_update_column"];
	/** aggregate var_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by var_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by var_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"];
	/** aggregate variance on columns */
["pedidosDeCompra_Orcamentos_Produtos_variance_fields"]: {
		Quantidade?:number,
	ValorUnitario?:number
};
	/** order by variance() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"];
	/** aggregated selection of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Orcamentos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Orcamentos"][]
};
	/** aggregate fields of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeCompra_Orcamentos_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Orcamentos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_bool_exp"]: GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_constraint"]: GraphQLTypes["pedidosDeCompra_Orcamentos_constraint"];
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_insert_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_max_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pedido_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_max_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_min_fields"]: {
		Fornecedor_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pedido_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_min_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_min_order_by"];
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Orcamentos"][]
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_obj_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_on_conflict"]: GraphQLTypes["pedidosDeCompra_Orcamentos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos". */
["pedidosDeCompra_Orcamentos_order_by"]: GraphQLTypes["pedidosDeCompra_Orcamentos_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Orcamentos */
["pedidosDeCompra_Orcamentos_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_pk_columns_input"];
	/** select columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_select_column"]: GraphQLTypes["pedidosDeCompra_Orcamentos_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_set_input"]: GraphQLTypes["pedidosDeCompra_Orcamentos_set_input"];
	/** update columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_update_column"]: GraphQLTypes["pedidosDeCompra_Orcamentos_update_column"];
	/** columns and relationships of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos"]: {
		DataAbertura:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataCompra?:ModelTypes["timestamptz"],
	DataEntrada?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataOrcamento?:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	MotivoRecusado?:string,
	/** An array relationship */
	Orcamentos:ModelTypes["pedidosDeCompra_Orcamentos"][],
	/** An aggregate relationship */
	Orcamentos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** An array relationship */
	Produtos:ModelTypes["pedidosDeCompra_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["pedidosDeCompra_Produtos_aggregate"],
	/** An object relationship */
	Situacao:ModelTypes["pedidosDeCompra_Situacoes"],
	Situacao_Id:ModelTypes["pedidosDeCompra_Situacoes_enum"],
	Solicitante_Id:ModelTypes["uuid"],
	TipoPagamento?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Pedidos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Pedidos"][]
};
	/** aggregate fields of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeCompra_Pedidos_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Pedidos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_order_by"]: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Pedidos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Pedidos_bool_exp"]: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_constraint"]: GraphQLTypes["pedidosDeCompra_Pedidos_constraint"];
	/** input type for inserting data into table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_insert_input"]: GraphQLTypes["pedidosDeCompra_Pedidos_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Pedidos_max_fields"]: {
		DataAbertura?:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataCompra?:ModelTypes["timestamptz"],
	DataEntrada?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataOrcamento?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	Solicitante_Id?:ModelTypes["uuid"],
	TipoPagamento?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_max_order_by"]: GraphQLTypes["pedidosDeCompra_Pedidos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeCompra_Pedidos_min_fields"]: {
		DataAbertura?:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataCompra?:ModelTypes["timestamptz"],
	DataEntrada?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataOrcamento?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	Solicitante_Id?:ModelTypes["uuid"],
	TipoPagamento?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_min_order_by"]: GraphQLTypes["pedidosDeCompra_Pedidos_min_order_by"];
	/** response of any mutation on the table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Pedidos"][]
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_obj_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Pedidos_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_on_conflict"]: GraphQLTypes["pedidosDeCompra_Pedidos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Pedidos". */
["pedidosDeCompra_Pedidos_order_by"]: GraphQLTypes["pedidosDeCompra_Pedidos_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Pedidos */
["pedidosDeCompra_Pedidos_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Pedidos_pk_columns_input"];
	/** select columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_select_column"]: GraphQLTypes["pedidosDeCompra_Pedidos_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_set_input"]: GraphQLTypes["pedidosDeCompra_Pedidos_set_input"];
	/** update columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_update_column"]: GraphQLTypes["pedidosDeCompra_Pedidos_update_column"];
	/** columns and relationships of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos"]: {
		Autorizado:boolean,
	Descricao:string,
	/** An object relationship */
	Fabricante?:ModelTypes["estoque_Fabricantes"],
	Fabricante_Id?:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An array relationship */
	Orcamentos_Produtos:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][],
	/** An aggregate relationship */
	Orcamentos_Produtos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** An object relationship */
	Pedido:ModelTypes["pedidosDeCompra_Pedidos"],
	PedidoDeCompra_Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["Produtos"],
	Produto_Id:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida:number,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Produtos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Produtos"][]
};
	/** aggregate fields of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_fields"]: {
		avg?:ModelTypes["pedidosDeCompra_Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["pedidosDeCompra_Produtos_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Produtos_min_fields"],
	stddev?:ModelTypes["pedidosDeCompra_Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["pedidosDeCompra_Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["pedidosDeCompra_Produtos_stddev_samp_fields"],
	sum?:ModelTypes["pedidosDeCompra_Produtos_sum_fields"],
	var_pop?:ModelTypes["pedidosDeCompra_Produtos_var_pop_fields"],
	var_samp?:ModelTypes["pedidosDeCompra_Produtos_var_samp_fields"],
	variance?:ModelTypes["pedidosDeCompra_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Produtos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["pedidosDeCompra_Produtos_avg_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by avg() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_avg_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_avg_order_by"];
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Produtos_bool_exp"]: GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_constraint"]: GraphQLTypes["pedidosDeCompra_Produtos_constraint"];
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_inc_input"]: GraphQLTypes["pedidosDeCompra_Produtos_inc_input"];
	/** input type for inserting data into table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_insert_input"]: GraphQLTypes["pedidosDeCompra_Produtos_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Produtos_max_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	PedidoDeCompra_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_max_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeCompra_Produtos_min_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	PedidoDeCompra_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_min_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_min_order_by"];
	/** response of any mutation on the table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Produtos"][]
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_obj_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Produtos_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_on_conflict"]: GraphQLTypes["pedidosDeCompra_Produtos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Produtos". */
["pedidosDeCompra_Produtos_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Produtos */
["pedidosDeCompra_Produtos_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Produtos_pk_columns_input"];
	/** select columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_select_column"]: GraphQLTypes["pedidosDeCompra_Produtos_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_set_input"]: GraphQLTypes["pedidosDeCompra_Produtos_set_input"];
	/** aggregate stddev on columns */
["pedidosDeCompra_Produtos_stddev_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by stddev() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Produtos_stddev_pop_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_pop_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Produtos_stddev_samp_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_samp_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["pedidosDeCompra_Produtos_sum_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by sum() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_sum_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_sum_order_by"];
	/** update columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_update_column"]: GraphQLTypes["pedidosDeCompra_Produtos_update_column"];
	/** aggregate var_pop on columns */
["pedidosDeCompra_Produtos_var_pop_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by var_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_pop_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["pedidosDeCompra_Produtos_var_samp_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by var_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_samp_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_var_samp_order_by"];
	/** aggregate variance on columns */
["pedidosDeCompra_Produtos_variance_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeComprada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number
};
	/** order by variance() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_variance_order_by"]: GraphQLTypes["pedidosDeCompra_Produtos_variance_order_by"];
	/** columns and relationships of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes"]: {
		Comentario:string,
	/** An array relationship */
	Pedidos:ModelTypes["pedidosDeCompra_Pedidos"][],
	/** An aggregate relationship */
	Pedidos_aggregate:ModelTypes["pedidosDeCompra_Pedidos_aggregate"],
	Valor:string
};
	/** aggregated selection of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeCompra_Situacoes_aggregate_fields"],
	nodes:ModelTypes["pedidosDeCompra_Situacoes"][]
};
	/** aggregate fields of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeCompra_Situacoes_max_fields"],
	min?:ModelTypes["pedidosDeCompra_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Situacoes_bool_exp"]: GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_constraint"]: GraphQLTypes["pedidosDeCompra_Situacoes_constraint"];
	["pedidosDeCompra_Situacoes_enum"]: GraphQLTypes["pedidosDeCompra_Situacoes_enum"];
	/** Boolean expression to compare columns of type "pedidosDeCompra_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeCompra_Situacoes_enum_comparison_exp"]: GraphQLTypes["pedidosDeCompra_Situacoes_enum_comparison_exp"];
	/** input type for inserting data into table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_insert_input"]: GraphQLTypes["pedidosDeCompra_Situacoes_insert_input"];
	/** aggregate max on columns */
["pedidosDeCompra_Situacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["pedidosDeCompra_Situacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeCompra_Situacoes"][]
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_obj_rel_insert_input"]: GraphQLTypes["pedidosDeCompra_Situacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_on_conflict"]: GraphQLTypes["pedidosDeCompra_Situacoes_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeCompra.Situacoes". */
["pedidosDeCompra_Situacoes_order_by"]: GraphQLTypes["pedidosDeCompra_Situacoes_order_by"];
	/** primary key columns input for table: pedidosDeCompra_Situacoes */
["pedidosDeCompra_Situacoes_pk_columns_input"]: GraphQLTypes["pedidosDeCompra_Situacoes_pk_columns_input"];
	/** select columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_select_column"]: GraphQLTypes["pedidosDeCompra_Situacoes_select_column"];
	/** input type for updating data in table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_set_input"]: GraphQLTypes["pedidosDeCompra_Situacoes_set_input"];
	/** update columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_update_column"]: GraphQLTypes["pedidosDeCompra_Situacoes_update_column"];
	/** columns and relationships of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeSaida_Logs_aggregate_fields"],
	nodes:ModelTypes["pedidosDeSaida_Logs"][]
};
	/** aggregate fields of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeSaida_Logs_max_fields"],
	min?:ModelTypes["pedidosDeSaida_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_append_input"]: GraphQLTypes["pedidosDeSaida_Logs_append_input"];
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Logs_bool_exp"]: GraphQLTypes["pedidosDeSaida_Logs_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_constraint"]: GraphQLTypes["pedidosDeSaida_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeSaida_Logs_delete_at_path_input"]: GraphQLTypes["pedidosDeSaida_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeSaida_Logs_delete_elem_input"]: GraphQLTypes["pedidosDeSaida_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeSaida_Logs_delete_key_input"]: GraphQLTypes["pedidosDeSaida_Logs_delete_key_input"];
	/** input type for inserting data into table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_insert_input"]: GraphQLTypes["pedidosDeSaida_Logs_insert_input"];
	/** aggregate max on columns */
["pedidosDeSaida_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["pedidosDeSaida_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeSaida_Logs"][]
};
	/** on conflict condition type for table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_on_conflict"]: GraphQLTypes["pedidosDeSaida_Logs_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeSaida.Logs". */
["pedidosDeSaida_Logs_order_by"]: GraphQLTypes["pedidosDeSaida_Logs_order_by"];
	/** primary key columns input for table: pedidosDeSaida_Logs */
["pedidosDeSaida_Logs_pk_columns_input"]: GraphQLTypes["pedidosDeSaida_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_prepend_input"]: GraphQLTypes["pedidosDeSaida_Logs_prepend_input"];
	/** select columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_select_column"]: GraphQLTypes["pedidosDeSaida_Logs_select_column"];
	/** input type for updating data in table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_set_input"]: GraphQLTypes["pedidosDeSaida_Logs_set_input"];
	/** update columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_update_column"]: GraphQLTypes["pedidosDeSaida_Logs_update_column"];
	/** columns and relationships of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos"]: {
		DataAbertura:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataRecebido?:ModelTypes["timestamptz"],
	Id:ModelTypes["uuid"],
	MotivoRecusado?:string,
	/** An array relationship */
	Produtos:ModelTypes["pedidosDeSaida_Produtos"][],
	/** An aggregate relationship */
	Produtos_aggregate:ModelTypes["pedidosDeSaida_Produtos_aggregate"],
	/** An object relationship */
	Situacao:ModelTypes["pedidosDeSaida_Situacoes"],
	Situacao_Id:ModelTypes["pedidosDeSaida_Situacoes_enum"],
	Solicitante_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeSaida_Pedidos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeSaida_Pedidos"][]
};
	/** aggregate fields of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeSaida_Pedidos_max_fields"],
	min?:ModelTypes["pedidosDeSaida_Pedidos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_order_by"]: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeSaida_Pedidos_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Pedidos_bool_exp"]: GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_constraint"]: GraphQLTypes["pedidosDeSaida_Pedidos_constraint"];
	/** input type for inserting data into table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_insert_input"]: GraphQLTypes["pedidosDeSaida_Pedidos_insert_input"];
	/** aggregate max on columns */
["pedidosDeSaida_Pedidos_max_fields"]: {
		DataAbertura?:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataRecebido?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	Solicitante_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_max_order_by"]: GraphQLTypes["pedidosDeSaida_Pedidos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeSaida_Pedidos_min_fields"]: {
		DataAbertura?:ModelTypes["timestamptz"],
	DataAutorizacao?:ModelTypes["timestamptz"],
	DataEntregue?:ModelTypes["timestamptz"],
	DataRecebido?:ModelTypes["timestamptz"],
	Id?:ModelTypes["uuid"],
	MotivoRecusado?:string,
	Solicitante_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_min_order_by"]: GraphQLTypes["pedidosDeSaida_Pedidos_min_order_by"];
	/** response of any mutation on the table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeSaida_Pedidos"][]
};
	/** input type for inserting object relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_obj_rel_insert_input"]: GraphQLTypes["pedidosDeSaida_Pedidos_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_on_conflict"]: GraphQLTypes["pedidosDeSaida_Pedidos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeSaida.Pedidos". */
["pedidosDeSaida_Pedidos_order_by"]: GraphQLTypes["pedidosDeSaida_Pedidos_order_by"];
	/** primary key columns input for table: pedidosDeSaida_Pedidos */
["pedidosDeSaida_Pedidos_pk_columns_input"]: GraphQLTypes["pedidosDeSaida_Pedidos_pk_columns_input"];
	/** select columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_select_column"]: GraphQLTypes["pedidosDeSaida_Pedidos_select_column"];
	/** input type for updating data in table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_set_input"]: GraphQLTypes["pedidosDeSaida_Pedidos_set_input"];
	/** update columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_update_column"]: GraphQLTypes["pedidosDeSaida_Pedidos_update_column"];
	/** columns and relationships of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos"]: {
		Autorizado:boolean,
	Descricao:string,
	/** An object relationship */
	Fabricante?:ModelTypes["estoque_Fabricantes"],
	Fabricante_Id?:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Pedido:ModelTypes["pedidosDeSaida_Pedidos"],
	Pedido_Id:ModelTypes["uuid"],
	/** An object relationship */
	Produto:ModelTypes["Produtos"],
	Produto_Id:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida:number,
	QuantidadeRecebida?:number,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeSaida_Produtos_aggregate_fields"],
	nodes:ModelTypes["pedidosDeSaida_Produtos"][]
};
	/** aggregate fields of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_fields"]: {
		avg?:ModelTypes["pedidosDeSaida_Produtos_avg_fields"],
	count:number,
	max?:ModelTypes["pedidosDeSaida_Produtos_max_fields"],
	min?:ModelTypes["pedidosDeSaida_Produtos_min_fields"],
	stddev?:ModelTypes["pedidosDeSaida_Produtos_stddev_fields"],
	stddev_pop?:ModelTypes["pedidosDeSaida_Produtos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["pedidosDeSaida_Produtos_stddev_samp_fields"],
	sum?:ModelTypes["pedidosDeSaida_Produtos_sum_fields"],
	var_pop?:ModelTypes["pedidosDeSaida_Produtos_var_pop_fields"],
	var_samp?:ModelTypes["pedidosDeSaida_Produtos_var_samp_fields"],
	variance?:ModelTypes["pedidosDeSaida_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_aggregate_order_by"];
	/** input type for inserting array relation for remote table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_arr_rel_insert_input"]: GraphQLTypes["pedidosDeSaida_Produtos_arr_rel_insert_input"];
	/** aggregate avg on columns */
["pedidosDeSaida_Produtos_avg_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by avg() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_avg_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_avg_order_by"];
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Produtos_bool_exp"]: GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_constraint"]: GraphQLTypes["pedidosDeSaida_Produtos_constraint"];
	/** input type for incrementing numeric columns in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_inc_input"]: GraphQLTypes["pedidosDeSaida_Produtos_inc_input"];
	/** input type for inserting data into table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_insert_input"]: GraphQLTypes["pedidosDeSaida_Produtos_insert_input"];
	/** aggregate max on columns */
["pedidosDeSaida_Produtos_max_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pedido_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_max_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_max_order_by"];
	/** aggregate min on columns */
["pedidosDeSaida_Produtos_min_fields"]: {
		Descricao?:string,
	Fabricante_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pedido_Id?:ModelTypes["uuid"],
	Produto_Id?:ModelTypes["uuid"],
	QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_min_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_min_order_by"];
	/** response of any mutation on the table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeSaida_Produtos"][]
};
	/** on conflict condition type for table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_on_conflict"]: GraphQLTypes["pedidosDeSaida_Produtos_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeSaida.Produtos". */
["pedidosDeSaida_Produtos_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_order_by"];
	/** primary key columns input for table: pedidosDeSaida_Produtos */
["pedidosDeSaida_Produtos_pk_columns_input"]: GraphQLTypes["pedidosDeSaida_Produtos_pk_columns_input"];
	/** select columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_select_column"]: GraphQLTypes["pedidosDeSaida_Produtos_select_column"];
	/** input type for updating data in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_set_input"]: GraphQLTypes["pedidosDeSaida_Produtos_set_input"];
	/** aggregate stddev on columns */
["pedidosDeSaida_Produtos_stddev_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by stddev() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["pedidosDeSaida_Produtos_stddev_pop_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by stddev_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_pop_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["pedidosDeSaida_Produtos_stddev_samp_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by stddev_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_samp_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_stddev_samp_order_by"];
	/** aggregate sum on columns */
["pedidosDeSaida_Produtos_sum_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by sum() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_sum_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_sum_order_by"];
	/** update columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_update_column"]: GraphQLTypes["pedidosDeSaida_Produtos_update_column"];
	/** aggregate var_pop on columns */
["pedidosDeSaida_Produtos_var_pop_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by var_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_pop_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_var_pop_order_by"];
	/** aggregate var_samp on columns */
["pedidosDeSaida_Produtos_var_samp_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by var_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_samp_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_var_samp_order_by"];
	/** aggregate variance on columns */
["pedidosDeSaida_Produtos_variance_fields"]: {
		QuantidadeAutorizada?:number,
	QuantidadeEntregue?:number,
	QuantidadePedida?:number,
	QuantidadeRecebida?:number
};
	/** order by variance() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_variance_order_by"]: GraphQLTypes["pedidosDeSaida_Produtos_variance_order_by"];
	/** columns and relationships of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes"]: {
		Comentario:string,
	/** An array relationship */
	Pedidos:ModelTypes["pedidosDeSaida_Pedidos"][],
	/** An aggregate relationship */
	Pedidos_aggregate:ModelTypes["pedidosDeSaida_Pedidos_aggregate"],
	Valor:string
};
	/** aggregated selection of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate"]: {
		aggregate?:ModelTypes["pedidosDeSaida_Situacoes_aggregate_fields"],
	nodes:ModelTypes["pedidosDeSaida_Situacoes"][]
};
	/** aggregate fields of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["pedidosDeSaida_Situacoes_max_fields"],
	min?:ModelTypes["pedidosDeSaida_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Situacoes_bool_exp"]: GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"];
	/** unique or primary key constraints on table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_constraint"]: GraphQLTypes["pedidosDeSaida_Situacoes_constraint"];
	["pedidosDeSaida_Situacoes_enum"]: GraphQLTypes["pedidosDeSaida_Situacoes_enum"];
	/** Boolean expression to compare columns of type "pedidosDeSaida_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeSaida_Situacoes_enum_comparison_exp"]: GraphQLTypes["pedidosDeSaida_Situacoes_enum_comparison_exp"];
	/** input type for inserting data into table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_insert_input"]: GraphQLTypes["pedidosDeSaida_Situacoes_insert_input"];
	/** aggregate max on columns */
["pedidosDeSaida_Situacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["pedidosDeSaida_Situacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["pedidosDeSaida_Situacoes"][]
};
	/** input type for inserting object relation for remote table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_obj_rel_insert_input"]: GraphQLTypes["pedidosDeSaida_Situacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_on_conflict"]: GraphQLTypes["pedidosDeSaida_Situacoes_on_conflict"];
	/** Ordering options when selecting data from "pedidosDeSaida.Situacoes". */
["pedidosDeSaida_Situacoes_order_by"]: GraphQLTypes["pedidosDeSaida_Situacoes_order_by"];
	/** primary key columns input for table: pedidosDeSaida_Situacoes */
["pedidosDeSaida_Situacoes_pk_columns_input"]: GraphQLTypes["pedidosDeSaida_Situacoes_pk_columns_input"];
	/** select columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_select_column"]: GraphQLTypes["pedidosDeSaida_Situacoes_select_column"];
	/** input type for updating data in table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_set_input"]: GraphQLTypes["pedidosDeSaida_Situacoes_set_input"];
	/** update columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_update_column"]: GraphQLTypes["pedidosDeSaida_Situacoes_update_column"];
	/** columns and relationships of "producao.Chips" */
["producao_Chips"]: {
		DataSuspensao?:ModelTypes["timestamptz"],
	Iccid:string,
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	NumeroDaLinha:ModelTypes["bigint"],
	/** An object relationship */
	Operadora:ModelTypes["Operadoras"],
	Operadora_Id:ModelTypes["uuid"],
	/** An object relationship */
	Rastreador?:ModelTypes["producao_Rastreadores"],
	/** An array relationship */
	Rastreadores:ModelTypes["producao_Rastreadores"][],
	/** An aggregate relationship */
	Rastreadores_aggregate:ModelTypes["producao_Rastreadores_aggregate"],
	/** An object relationship */
	Situacao:ModelTypes["producao_ChipsSituacoes"],
	Situacao_Id:ModelTypes["producao_ChipsSituacoes_enum"],
	TempoDaSuspensao?:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes"]: {
		/** An array relationship */
	Chips:ModelTypes["producao_Chips"][],
	/** An aggregate relationship */
	Chips_aggregate:ModelTypes["producao_Chips_aggregate"],
	Comentario:string,
	Valor:string
};
	/** aggregated selection of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate"]: {
		aggregate?:ModelTypes["producao_ChipsSituacoes_aggregate_fields"],
	nodes:ModelTypes["producao_ChipsSituacoes"][]
};
	/** aggregate fields of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["producao_ChipsSituacoes_max_fields"],
	min?:ModelTypes["producao_ChipsSituacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "producao.ChipsSituacoes". All fields are combined with a logical 'AND'. */
["producao_ChipsSituacoes_bool_exp"]: GraphQLTypes["producao_ChipsSituacoes_bool_exp"];
	/** unique or primary key constraints on table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_constraint"]: GraphQLTypes["producao_ChipsSituacoes_constraint"];
	["producao_ChipsSituacoes_enum"]: GraphQLTypes["producao_ChipsSituacoes_enum"];
	/** Boolean expression to compare columns of type "producao_ChipsSituacoes_enum". All fields are combined with logical 'AND'. */
["producao_ChipsSituacoes_enum_comparison_exp"]: GraphQLTypes["producao_ChipsSituacoes_enum_comparison_exp"];
	/** input type for inserting data into table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_insert_input"]: GraphQLTypes["producao_ChipsSituacoes_insert_input"];
	/** aggregate max on columns */
["producao_ChipsSituacoes_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["producao_ChipsSituacoes_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_ChipsSituacoes"][]
};
	/** input type for inserting object relation for remote table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_obj_rel_insert_input"]: GraphQLTypes["producao_ChipsSituacoes_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_on_conflict"]: GraphQLTypes["producao_ChipsSituacoes_on_conflict"];
	/** Ordering options when selecting data from "producao.ChipsSituacoes". */
["producao_ChipsSituacoes_order_by"]: GraphQLTypes["producao_ChipsSituacoes_order_by"];
	/** primary key columns input for table: producao_ChipsSituacoes */
["producao_ChipsSituacoes_pk_columns_input"]: GraphQLTypes["producao_ChipsSituacoes_pk_columns_input"];
	/** select columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_select_column"]: GraphQLTypes["producao_ChipsSituacoes_select_column"];
	/** input type for updating data in table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_set_input"]: GraphQLTypes["producao_ChipsSituacoes_set_input"];
	/** update columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_update_column"]: GraphQLTypes["producao_ChipsSituacoes_update_column"];
	/** aggregated selection of "producao.Chips" */
["producao_Chips_aggregate"]: {
		aggregate?:ModelTypes["producao_Chips_aggregate_fields"],
	nodes:ModelTypes["producao_Chips"][]
};
	/** aggregate fields of "producao.Chips" */
["producao_Chips_aggregate_fields"]: {
		avg?:ModelTypes["producao_Chips_avg_fields"],
	count:number,
	max?:ModelTypes["producao_Chips_max_fields"],
	min?:ModelTypes["producao_Chips_min_fields"],
	stddev?:ModelTypes["producao_Chips_stddev_fields"],
	stddev_pop?:ModelTypes["producao_Chips_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_Chips_stddev_samp_fields"],
	sum?:ModelTypes["producao_Chips_sum_fields"],
	var_pop?:ModelTypes["producao_Chips_var_pop_fields"],
	var_samp?:ModelTypes["producao_Chips_var_samp_fields"],
	variance?:ModelTypes["producao_Chips_variance_fields"]
};
	/** order by aggregate values of table "producao.Chips" */
["producao_Chips_aggregate_order_by"]: GraphQLTypes["producao_Chips_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.Chips" */
["producao_Chips_arr_rel_insert_input"]: GraphQLTypes["producao_Chips_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_Chips_avg_fields"]: {
		NumeroDaLinha?:number
};
	/** order by avg() on columns of table "producao.Chips" */
["producao_Chips_avg_order_by"]: GraphQLTypes["producao_Chips_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.Chips". All fields are combined with a logical 'AND'. */
["producao_Chips_bool_exp"]: GraphQLTypes["producao_Chips_bool_exp"];
	/** unique or primary key constraints on table "producao.Chips" */
["producao_Chips_constraint"]: GraphQLTypes["producao_Chips_constraint"];
	/** input type for incrementing numeric columns in table "producao.Chips" */
["producao_Chips_inc_input"]: GraphQLTypes["producao_Chips_inc_input"];
	/** input type for inserting data into table "producao.Chips" */
["producao_Chips_insert_input"]: GraphQLTypes["producao_Chips_insert_input"];
	/** aggregate max on columns */
["producao_Chips_max_fields"]: {
		DataSuspensao?:ModelTypes["timestamptz"],
	Iccid?:string,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	NumeroDaLinha?:ModelTypes["bigint"],
	Operadora_Id?:ModelTypes["uuid"],
	TempoDaSuspensao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.Chips" */
["producao_Chips_max_order_by"]: GraphQLTypes["producao_Chips_max_order_by"];
	/** aggregate min on columns */
["producao_Chips_min_fields"]: {
		DataSuspensao?:ModelTypes["timestamptz"],
	Iccid?:string,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	NumeroDaLinha?:ModelTypes["bigint"],
	Operadora_Id?:ModelTypes["uuid"],
	TempoDaSuspensao?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.Chips" */
["producao_Chips_min_order_by"]: GraphQLTypes["producao_Chips_min_order_by"];
	/** response of any mutation on the table "producao.Chips" */
["producao_Chips_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_Chips"][]
};
	/** input type for inserting object relation for remote table "producao.Chips" */
["producao_Chips_obj_rel_insert_input"]: GraphQLTypes["producao_Chips_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.Chips" */
["producao_Chips_on_conflict"]: GraphQLTypes["producao_Chips_on_conflict"];
	/** Ordering options when selecting data from "producao.Chips". */
["producao_Chips_order_by"]: GraphQLTypes["producao_Chips_order_by"];
	/** primary key columns input for table: producao_Chips */
["producao_Chips_pk_columns_input"]: GraphQLTypes["producao_Chips_pk_columns_input"];
	/** select columns of table "producao.Chips" */
["producao_Chips_select_column"]: GraphQLTypes["producao_Chips_select_column"];
	/** input type for updating data in table "producao.Chips" */
["producao_Chips_set_input"]: GraphQLTypes["producao_Chips_set_input"];
	/** aggregate stddev on columns */
["producao_Chips_stddev_fields"]: {
		NumeroDaLinha?:number
};
	/** order by stddev() on columns of table "producao.Chips" */
["producao_Chips_stddev_order_by"]: GraphQLTypes["producao_Chips_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_Chips_stddev_pop_fields"]: {
		NumeroDaLinha?:number
};
	/** order by stddev_pop() on columns of table "producao.Chips" */
["producao_Chips_stddev_pop_order_by"]: GraphQLTypes["producao_Chips_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_Chips_stddev_samp_fields"]: {
		NumeroDaLinha?:number
};
	/** order by stddev_samp() on columns of table "producao.Chips" */
["producao_Chips_stddev_samp_order_by"]: GraphQLTypes["producao_Chips_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_Chips_sum_fields"]: {
		NumeroDaLinha?:ModelTypes["bigint"]
};
	/** order by sum() on columns of table "producao.Chips" */
["producao_Chips_sum_order_by"]: GraphQLTypes["producao_Chips_sum_order_by"];
	/** update columns of table "producao.Chips" */
["producao_Chips_update_column"]: GraphQLTypes["producao_Chips_update_column"];
	/** aggregate var_pop on columns */
["producao_Chips_var_pop_fields"]: {
		NumeroDaLinha?:number
};
	/** order by var_pop() on columns of table "producao.Chips" */
["producao_Chips_var_pop_order_by"]: GraphQLTypes["producao_Chips_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_Chips_var_samp_fields"]: {
		NumeroDaLinha?:number
};
	/** order by var_samp() on columns of table "producao.Chips" */
["producao_Chips_var_samp_order_by"]: GraphQLTypes["producao_Chips_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_Chips_variance_fields"]: {
		NumeroDaLinha?:number
};
	/** order by variance() on columns of table "producao.Chips" */
["producao_Chips_variance_order_by"]: GraphQLTypes["producao_Chips_variance_order_by"];
	/** columns and relationships of "producao.Equipamentos" */
["producao_Equipamentos"]: {
		Id:ModelTypes["uuid"],
	Identificador:ModelTypes["bigint"],
	Imei:ModelTypes["bigint"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An object relationship */
	Rastreador?:ModelTypes["producao_Rastreadores"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.Equipamentos" */
["producao_Equipamentos_aggregate"]: {
		aggregate?:ModelTypes["producao_Equipamentos_aggregate_fields"],
	nodes:ModelTypes["producao_Equipamentos"][]
};
	/** aggregate fields of "producao.Equipamentos" */
["producao_Equipamentos_aggregate_fields"]: {
		avg?:ModelTypes["producao_Equipamentos_avg_fields"],
	count:number,
	max?:ModelTypes["producao_Equipamentos_max_fields"],
	min?:ModelTypes["producao_Equipamentos_min_fields"],
	stddev?:ModelTypes["producao_Equipamentos_stddev_fields"],
	stddev_pop?:ModelTypes["producao_Equipamentos_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_Equipamentos_stddev_samp_fields"],
	sum?:ModelTypes["producao_Equipamentos_sum_fields"],
	var_pop?:ModelTypes["producao_Equipamentos_var_pop_fields"],
	var_samp?:ModelTypes["producao_Equipamentos_var_samp_fields"],
	variance?:ModelTypes["producao_Equipamentos_variance_fields"]
};
	/** aggregate avg on columns */
["producao_Equipamentos_avg_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** Boolean expression to filter rows from the table "producao.Equipamentos". All fields are combined with a logical 'AND'. */
["producao_Equipamentos_bool_exp"]: GraphQLTypes["producao_Equipamentos_bool_exp"];
	/** unique or primary key constraints on table "producao.Equipamentos" */
["producao_Equipamentos_constraint"]: GraphQLTypes["producao_Equipamentos_constraint"];
	/** input type for incrementing numeric columns in table "producao.Equipamentos" */
["producao_Equipamentos_inc_input"]: GraphQLTypes["producao_Equipamentos_inc_input"];
	/** input type for inserting data into table "producao.Equipamentos" */
["producao_Equipamentos_insert_input"]: GraphQLTypes["producao_Equipamentos_insert_input"];
	/** aggregate max on columns */
["producao_Equipamentos_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Identificador?:ModelTypes["bigint"],
	Imei?:ModelTypes["bigint"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Equipamentos_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Identificador?:ModelTypes["bigint"],
	Imei?:ModelTypes["bigint"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Equipamentos" */
["producao_Equipamentos_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_Equipamentos"][]
};
	/** input type for inserting object relation for remote table "producao.Equipamentos" */
["producao_Equipamentos_obj_rel_insert_input"]: GraphQLTypes["producao_Equipamentos_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.Equipamentos" */
["producao_Equipamentos_on_conflict"]: GraphQLTypes["producao_Equipamentos_on_conflict"];
	/** Ordering options when selecting data from "producao.Equipamentos". */
["producao_Equipamentos_order_by"]: GraphQLTypes["producao_Equipamentos_order_by"];
	/** primary key columns input for table: producao_Equipamentos */
["producao_Equipamentos_pk_columns_input"]: GraphQLTypes["producao_Equipamentos_pk_columns_input"];
	/** select columns of table "producao.Equipamentos" */
["producao_Equipamentos_select_column"]: GraphQLTypes["producao_Equipamentos_select_column"];
	/** input type for updating data in table "producao.Equipamentos" */
["producao_Equipamentos_set_input"]: GraphQLTypes["producao_Equipamentos_set_input"];
	/** aggregate stddev on columns */
["producao_Equipamentos_stddev_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** aggregate stddev_pop on columns */
["producao_Equipamentos_stddev_pop_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** aggregate stddev_samp on columns */
["producao_Equipamentos_stddev_samp_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** aggregate sum on columns */
["producao_Equipamentos_sum_fields"]: {
		Identificador?:ModelTypes["bigint"],
	Imei?:ModelTypes["bigint"]
};
	/** update columns of table "producao.Equipamentos" */
["producao_Equipamentos_update_column"]: GraphQLTypes["producao_Equipamentos_update_column"];
	/** aggregate var_pop on columns */
["producao_Equipamentos_var_pop_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** aggregate var_samp on columns */
["producao_Equipamentos_var_samp_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** aggregate variance on columns */
["producao_Equipamentos_variance_fields"]: {
		Identificador?:number,
	Imei?:number
};
	/** columns and relationships of "producao.Identificadores" */
["producao_Identificadores"]: {
		CodigoIdentificador:number,
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.Identificadores" */
["producao_Identificadores_aggregate"]: {
		aggregate?:ModelTypes["producao_Identificadores_aggregate_fields"],
	nodes:ModelTypes["producao_Identificadores"][]
};
	/** aggregate fields of "producao.Identificadores" */
["producao_Identificadores_aggregate_fields"]: {
		avg?:ModelTypes["producao_Identificadores_avg_fields"],
	count:number,
	max?:ModelTypes["producao_Identificadores_max_fields"],
	min?:ModelTypes["producao_Identificadores_min_fields"],
	stddev?:ModelTypes["producao_Identificadores_stddev_fields"],
	stddev_pop?:ModelTypes["producao_Identificadores_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_Identificadores_stddev_samp_fields"],
	sum?:ModelTypes["producao_Identificadores_sum_fields"],
	var_pop?:ModelTypes["producao_Identificadores_var_pop_fields"],
	var_samp?:ModelTypes["producao_Identificadores_var_samp_fields"],
	variance?:ModelTypes["producao_Identificadores_variance_fields"]
};
	/** aggregate avg on columns */
["producao_Identificadores_avg_fields"]: {
		CodigoIdentificador?:number
};
	/** Boolean expression to filter rows from the table "producao.Identificadores". All fields are combined with a logical 'AND'. */
["producao_Identificadores_bool_exp"]: GraphQLTypes["producao_Identificadores_bool_exp"];
	/** unique or primary key constraints on table "producao.Identificadores" */
["producao_Identificadores_constraint"]: GraphQLTypes["producao_Identificadores_constraint"];
	/** input type for incrementing numeric columns in table "producao.Identificadores" */
["producao_Identificadores_inc_input"]: GraphQLTypes["producao_Identificadores_inc_input"];
	/** input type for inserting data into table "producao.Identificadores" */
["producao_Identificadores_insert_input"]: GraphQLTypes["producao_Identificadores_insert_input"];
	/** aggregate max on columns */
["producao_Identificadores_max_fields"]: {
		CodigoIdentificador?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Identificadores_min_fields"]: {
		CodigoIdentificador?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Identificadores" */
["producao_Identificadores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_Identificadores"][]
};
	/** on conflict condition type for table "producao.Identificadores" */
["producao_Identificadores_on_conflict"]: GraphQLTypes["producao_Identificadores_on_conflict"];
	/** Ordering options when selecting data from "producao.Identificadores". */
["producao_Identificadores_order_by"]: GraphQLTypes["producao_Identificadores_order_by"];
	/** primary key columns input for table: producao_Identificadores */
["producao_Identificadores_pk_columns_input"]: GraphQLTypes["producao_Identificadores_pk_columns_input"];
	/** select columns of table "producao.Identificadores" */
["producao_Identificadores_select_column"]: GraphQLTypes["producao_Identificadores_select_column"];
	/** input type for updating data in table "producao.Identificadores" */
["producao_Identificadores_set_input"]: GraphQLTypes["producao_Identificadores_set_input"];
	/** aggregate stddev on columns */
["producao_Identificadores_stddev_fields"]: {
		CodigoIdentificador?:number
};
	/** aggregate stddev_pop on columns */
["producao_Identificadores_stddev_pop_fields"]: {
		CodigoIdentificador?:number
};
	/** aggregate stddev_samp on columns */
["producao_Identificadores_stddev_samp_fields"]: {
		CodigoIdentificador?:number
};
	/** aggregate sum on columns */
["producao_Identificadores_sum_fields"]: {
		CodigoIdentificador?:number
};
	/** update columns of table "producao.Identificadores" */
["producao_Identificadores_update_column"]: GraphQLTypes["producao_Identificadores_update_column"];
	/** aggregate var_pop on columns */
["producao_Identificadores_var_pop_fields"]: {
		CodigoIdentificador?:number
};
	/** aggregate var_samp on columns */
["producao_Identificadores_var_samp_fields"]: {
		CodigoIdentificador?:number
};
	/** aggregate variance on columns */
["producao_Identificadores_variance_fields"]: {
		CodigoIdentificador?:number
};
	/** columns and relationships of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An object relationship */
	KitDeInsumo:ModelTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id:ModelTypes["uuid"],
	Lote:string,
	Quantidade:number,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate"]: {
		aggregate?:ModelTypes["producao_KitDeInsumo_Itens_aggregate_fields"],
	nodes:ModelTypes["producao_KitDeInsumo_Itens"][]
};
	/** aggregate fields of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_fields"]: {
		avg?:ModelTypes["producao_KitDeInsumo_Itens_avg_fields"],
	count:number,
	max?:ModelTypes["producao_KitDeInsumo_Itens_max_fields"],
	min?:ModelTypes["producao_KitDeInsumo_Itens_min_fields"],
	stddev?:ModelTypes["producao_KitDeInsumo_Itens_stddev_fields"],
	stddev_pop?:ModelTypes["producao_KitDeInsumo_Itens_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_KitDeInsumo_Itens_stddev_samp_fields"],
	sum?:ModelTypes["producao_KitDeInsumo_Itens_sum_fields"],
	var_pop?:ModelTypes["producao_KitDeInsumo_Itens_var_pop_fields"],
	var_samp?:ModelTypes["producao_KitDeInsumo_Itens_var_samp_fields"],
	variance?:ModelTypes["producao_KitDeInsumo_Itens_variance_fields"]
};
	/** order by aggregate values of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_arr_rel_insert_input"]: GraphQLTypes["producao_KitDeInsumo_Itens_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_KitDeInsumo_Itens_avg_fields"]: {
		Quantidade?:number
};
	/** order by avg() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_avg_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.KitDeInsumo_Itens". All fields are combined with a logical 'AND'. */
["producao_KitDeInsumo_Itens_bool_exp"]: GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"];
	/** unique or primary key constraints on table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_constraint"]: GraphQLTypes["producao_KitDeInsumo_Itens_constraint"];
	/** input type for incrementing numeric columns in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_inc_input"]: GraphQLTypes["producao_KitDeInsumo_Itens_inc_input"];
	/** input type for inserting data into table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_insert_input"]: GraphQLTypes["producao_KitDeInsumo_Itens_insert_input"];
	/** aggregate max on columns */
["producao_KitDeInsumo_Itens_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	KitDeInsumo_Id?:ModelTypes["uuid"],
	Lote?:string,
	Quantidade?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_max_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_max_order_by"];
	/** aggregate min on columns */
["producao_KitDeInsumo_Itens_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	KitDeInsumo_Id?:ModelTypes["uuid"],
	Lote?:string,
	Quantidade?:number,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_min_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_min_order_by"];
	/** response of any mutation on the table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_KitDeInsumo_Itens"][]
};
	/** on conflict condition type for table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_on_conflict"]: GraphQLTypes["producao_KitDeInsumo_Itens_on_conflict"];
	/** Ordering options when selecting data from "producao.KitDeInsumo_Itens". */
["producao_KitDeInsumo_Itens_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_order_by"];
	/** primary key columns input for table: producao_KitDeInsumo_Itens */
["producao_KitDeInsumo_Itens_pk_columns_input"]: GraphQLTypes["producao_KitDeInsumo_Itens_pk_columns_input"];
	/** select columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_select_column"]: GraphQLTypes["producao_KitDeInsumo_Itens_select_column"];
	/** input type for updating data in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_set_input"]: GraphQLTypes["producao_KitDeInsumo_Itens_set_input"];
	/** aggregate stddev on columns */
["producao_KitDeInsumo_Itens_stddev_fields"]: {
		Quantidade?:number
};
	/** order by stddev() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_KitDeInsumo_Itens_stddev_pop_fields"]: {
		Quantidade?:number
};
	/** order by stddev_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_pop_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_KitDeInsumo_Itens_stddev_samp_fields"]: {
		Quantidade?:number
};
	/** order by stddev_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_samp_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_KitDeInsumo_Itens_sum_fields"]: {
		Quantidade?:number
};
	/** order by sum() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_sum_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_sum_order_by"];
	/** update columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_update_column"]: GraphQLTypes["producao_KitDeInsumo_Itens_update_column"];
	/** aggregate var_pop on columns */
["producao_KitDeInsumo_Itens_var_pop_fields"]: {
		Quantidade?:number
};
	/** order by var_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_pop_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_KitDeInsumo_Itens_var_samp_fields"]: {
		Quantidade?:number
};
	/** order by var_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_samp_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_KitDeInsumo_Itens_variance_fields"]: {
		Quantidade?:number
};
	/** order by variance() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_variance_order_by"]: GraphQLTypes["producao_KitDeInsumo_Itens_variance_order_by"];
	/** columns and relationships of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao"]: {
		CodigoReferencia:number,
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An object relationship */
	KitDeInsumo:ModelTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id:ModelTypes["uuid"],
	/** An object relationship */
	Rastreador:ModelTypes["producao_Rastreadores"],
	Rastreador_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate"]: {
		aggregate?:ModelTypes["producao_KitsDeInstalacao_aggregate_fields"],
	nodes:ModelTypes["producao_KitsDeInstalacao"][]
};
	/** aggregate fields of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_fields"]: {
		avg?:ModelTypes["producao_KitsDeInstalacao_avg_fields"],
	count:number,
	max?:ModelTypes["producao_KitsDeInstalacao_max_fields"],
	min?:ModelTypes["producao_KitsDeInstalacao_min_fields"],
	stddev?:ModelTypes["producao_KitsDeInstalacao_stddev_fields"],
	stddev_pop?:ModelTypes["producao_KitsDeInstalacao_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_KitsDeInstalacao_stddev_samp_fields"],
	sum?:ModelTypes["producao_KitsDeInstalacao_sum_fields"],
	var_pop?:ModelTypes["producao_KitsDeInstalacao_var_pop_fields"],
	var_samp?:ModelTypes["producao_KitsDeInstalacao_var_samp_fields"],
	variance?:ModelTypes["producao_KitsDeInstalacao_variance_fields"]
};
	/** order by aggregate values of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_arr_rel_insert_input"]: GraphQLTypes["producao_KitsDeInstalacao_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_KitsDeInstalacao_avg_fields"]: {
		CodigoReferencia?:number
};
	/** order by avg() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_avg_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.KitsDeInstalacao". All fields are combined with a logical 'AND'. */
["producao_KitsDeInstalacao_bool_exp"]: GraphQLTypes["producao_KitsDeInstalacao_bool_exp"];
	/** unique or primary key constraints on table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_constraint"]: GraphQLTypes["producao_KitsDeInstalacao_constraint"];
	/** input type for incrementing numeric columns in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_inc_input"]: GraphQLTypes["producao_KitsDeInstalacao_inc_input"];
	/** input type for inserting data into table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_insert_input"]: GraphQLTypes["producao_KitsDeInstalacao_insert_input"];
	/** aggregate max on columns */
["producao_KitsDeInstalacao_max_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	KitDeInsumo_Id?:ModelTypes["uuid"],
	Rastreador_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_max_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_max_order_by"];
	/** aggregate min on columns */
["producao_KitsDeInstalacao_min_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	KitDeInsumo_Id?:ModelTypes["uuid"],
	Rastreador_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_min_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_min_order_by"];
	/** response of any mutation on the table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_KitsDeInstalacao"][]
};
	/** on conflict condition type for table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_on_conflict"]: GraphQLTypes["producao_KitsDeInstalacao_on_conflict"];
	/** Ordering options when selecting data from "producao.KitsDeInstalacao". */
["producao_KitsDeInstalacao_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_order_by"];
	/** primary key columns input for table: producao_KitsDeInstalacao */
["producao_KitsDeInstalacao_pk_columns_input"]: GraphQLTypes["producao_KitsDeInstalacao_pk_columns_input"];
	/** select columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_select_column"]: GraphQLTypes["producao_KitsDeInstalacao_select_column"];
	/** input type for updating data in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_set_input"]: GraphQLTypes["producao_KitsDeInstalacao_set_input"];
	/** aggregate stddev on columns */
["producao_KitsDeInstalacao_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_KitsDeInstalacao_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_pop_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_KitsDeInstalacao_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_samp_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_KitsDeInstalacao_sum_fields"]: {
		CodigoReferencia?:number
};
	/** order by sum() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_sum_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_sum_order_by"];
	/** update columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_update_column"]: GraphQLTypes["producao_KitsDeInstalacao_update_column"];
	/** aggregate var_pop on columns */
["producao_KitsDeInstalacao_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_pop_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_KitsDeInstalacao_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_samp_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_KitsDeInstalacao_variance_fields"]: {
		CodigoReferencia?:number
};
	/** order by variance() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_variance_order_by"]: GraphQLTypes["producao_KitsDeInstalacao_variance_order_by"];
	/** columns and relationships of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo"]: {
		CodigoReferencia:number,
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["producao_KitDeInsumo_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** An array relationship */
	KitsDeInstalacao:ModelTypes["producao_KitsDeInstalacao"][],
	/** An aggregate relationship */
	KitsDeInstalacao_aggregate:ModelTypes["producao_KitsDeInstalacao_aggregate"],
	Tipo_Id:ModelTypes["uuid"],
	/** An object relationship */
	TiposDeKitDeInsumo:ModelTypes["producao_TiposDeKitDeInsumo"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate"]: {
		aggregate?:ModelTypes["producao_KitsDeInsumo_aggregate_fields"],
	nodes:ModelTypes["producao_KitsDeInsumo"][]
};
	/** aggregate fields of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_fields"]: {
		avg?:ModelTypes["producao_KitsDeInsumo_avg_fields"],
	count:number,
	max?:ModelTypes["producao_KitsDeInsumo_max_fields"],
	min?:ModelTypes["producao_KitsDeInsumo_min_fields"],
	stddev?:ModelTypes["producao_KitsDeInsumo_stddev_fields"],
	stddev_pop?:ModelTypes["producao_KitsDeInsumo_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_KitsDeInsumo_stddev_samp_fields"],
	sum?:ModelTypes["producao_KitsDeInsumo_sum_fields"],
	var_pop?:ModelTypes["producao_KitsDeInsumo_var_pop_fields"],
	var_samp?:ModelTypes["producao_KitsDeInsumo_var_samp_fields"],
	variance?:ModelTypes["producao_KitsDeInsumo_variance_fields"]
};
	/** order by aggregate values of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_order_by"]: GraphQLTypes["producao_KitsDeInsumo_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_arr_rel_insert_input"]: GraphQLTypes["producao_KitsDeInsumo_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_KitsDeInsumo_avg_fields"]: {
		CodigoReferencia?:number
};
	/** order by avg() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_avg_order_by"]: GraphQLTypes["producao_KitsDeInsumo_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.KitsDeInsumo". All fields are combined with a logical 'AND'. */
["producao_KitsDeInsumo_bool_exp"]: GraphQLTypes["producao_KitsDeInsumo_bool_exp"];
	/** unique or primary key constraints on table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_constraint"]: GraphQLTypes["producao_KitsDeInsumo_constraint"];
	/** input type for incrementing numeric columns in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_inc_input"]: GraphQLTypes["producao_KitsDeInsumo_inc_input"];
	/** input type for inserting data into table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_insert_input"]: GraphQLTypes["producao_KitsDeInsumo_insert_input"];
	/** aggregate max on columns */
["producao_KitsDeInsumo_max_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_max_order_by"]: GraphQLTypes["producao_KitsDeInsumo_max_order_by"];
	/** aggregate min on columns */
["producao_KitsDeInsumo_min_fields"]: {
		CodigoReferencia?:number,
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_min_order_by"]: GraphQLTypes["producao_KitsDeInsumo_min_order_by"];
	/** response of any mutation on the table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_KitsDeInsumo"][]
};
	/** input type for inserting object relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_obj_rel_insert_input"]: GraphQLTypes["producao_KitsDeInsumo_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_on_conflict"]: GraphQLTypes["producao_KitsDeInsumo_on_conflict"];
	/** Ordering options when selecting data from "producao.KitsDeInsumo". */
["producao_KitsDeInsumo_order_by"]: GraphQLTypes["producao_KitsDeInsumo_order_by"];
	/** primary key columns input for table: producao_KitsDeInsumo */
["producao_KitsDeInsumo_pk_columns_input"]: GraphQLTypes["producao_KitsDeInsumo_pk_columns_input"];
	/** select columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_select_column"]: GraphQLTypes["producao_KitsDeInsumo_select_column"];
	/** input type for updating data in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_set_input"]: GraphQLTypes["producao_KitsDeInsumo_set_input"];
	/** aggregate stddev on columns */
["producao_KitsDeInsumo_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_order_by"]: GraphQLTypes["producao_KitsDeInsumo_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_KitsDeInsumo_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_pop_order_by"]: GraphQLTypes["producao_KitsDeInsumo_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_KitsDeInsumo_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_samp_order_by"]: GraphQLTypes["producao_KitsDeInsumo_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_KitsDeInsumo_sum_fields"]: {
		CodigoReferencia?:number
};
	/** order by sum() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_sum_order_by"]: GraphQLTypes["producao_KitsDeInsumo_sum_order_by"];
	/** update columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_update_column"]: GraphQLTypes["producao_KitsDeInsumo_update_column"];
	/** aggregate var_pop on columns */
["producao_KitsDeInsumo_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_pop_order_by"]: GraphQLTypes["producao_KitsDeInsumo_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_KitsDeInsumo_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_samp_order_by"]: GraphQLTypes["producao_KitsDeInsumo_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_KitsDeInsumo_variance_fields"]: {
		CodigoReferencia?:number
};
	/** order by variance() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_variance_order_by"]: GraphQLTypes["producao_KitsDeInsumo_variance_order_by"];
	/** columns and relationships of "producao.Logs" */
["producao_Logs"]: {
		DadosAntigos:ModelTypes["jsonb"],
	DadosNovos:ModelTypes["jsonb"],
	Id:ModelTypes["uuid"],
	Operacao:string,
	Tipo:string,
	Tipo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.Logs" */
["producao_Logs_aggregate"]: {
		aggregate?:ModelTypes["producao_Logs_aggregate_fields"],
	nodes:ModelTypes["producao_Logs"][]
};
	/** aggregate fields of "producao.Logs" */
["producao_Logs_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["producao_Logs_max_fields"],
	min?:ModelTypes["producao_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_append_input"]: GraphQLTypes["producao_Logs_append_input"];
	/** Boolean expression to filter rows from the table "producao.Logs". All fields are combined with a logical 'AND'. */
["producao_Logs_bool_exp"]: GraphQLTypes["producao_Logs_bool_exp"];
	/** unique or primary key constraints on table "producao.Logs" */
["producao_Logs_constraint"]: GraphQLTypes["producao_Logs_constraint"];
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["producao_Logs_delete_at_path_input"]: GraphQLTypes["producao_Logs_delete_at_path_input"];
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["producao_Logs_delete_elem_input"]: GraphQLTypes["producao_Logs_delete_elem_input"];
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["producao_Logs_delete_key_input"]: GraphQLTypes["producao_Logs_delete_key_input"];
	/** input type for inserting data into table "producao.Logs" */
["producao_Logs_insert_input"]: GraphQLTypes["producao_Logs_insert_input"];
	/** aggregate max on columns */
["producao_Logs_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Logs_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Operacao?:string,
	Tipo?:string,
	Tipo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Logs" */
["producao_Logs_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_Logs"][]
};
	/** on conflict condition type for table "producao.Logs" */
["producao_Logs_on_conflict"]: GraphQLTypes["producao_Logs_on_conflict"];
	/** Ordering options when selecting data from "producao.Logs". */
["producao_Logs_order_by"]: GraphQLTypes["producao_Logs_order_by"];
	/** primary key columns input for table: producao_Logs */
["producao_Logs_pk_columns_input"]: GraphQLTypes["producao_Logs_pk_columns_input"];
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_prepend_input"]: GraphQLTypes["producao_Logs_prepend_input"];
	/** select columns of table "producao.Logs" */
["producao_Logs_select_column"]: GraphQLTypes["producao_Logs_select_column"];
	/** input type for updating data in table "producao.Logs" */
["producao_Logs_set_input"]: GraphQLTypes["producao_Logs_set_input"];
	/** update columns of table "producao.Logs" */
["producao_Logs_update_column"]: GraphQLTypes["producao_Logs_update_column"];
	/** columns and relationships of "producao.Rastreadores" */
["producao_Rastreadores"]: {
		/** An object relationship */
	Chip:ModelTypes["producao_Chips"],
	Chip_Id:ModelTypes["uuid"],
	CodigoReferencia:number,
	/** An object relationship */
	Equipamento:ModelTypes["producao_Equipamentos"],
	Equipamento_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	/** An array relationship */
	KitsDeInstalacao:ModelTypes["producao_KitsDeInstalacao"][],
	/** An aggregate relationship */
	KitsDeInstalacao_aggregate:ModelTypes["producao_KitsDeInstalacao_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.Rastreadores" */
["producao_Rastreadores_aggregate"]: {
		aggregate?:ModelTypes["producao_Rastreadores_aggregate_fields"],
	nodes:ModelTypes["producao_Rastreadores"][]
};
	/** aggregate fields of "producao.Rastreadores" */
["producao_Rastreadores_aggregate_fields"]: {
		avg?:ModelTypes["producao_Rastreadores_avg_fields"],
	count:number,
	max?:ModelTypes["producao_Rastreadores_max_fields"],
	min?:ModelTypes["producao_Rastreadores_min_fields"],
	stddev?:ModelTypes["producao_Rastreadores_stddev_fields"],
	stddev_pop?:ModelTypes["producao_Rastreadores_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_Rastreadores_stddev_samp_fields"],
	sum?:ModelTypes["producao_Rastreadores_sum_fields"],
	var_pop?:ModelTypes["producao_Rastreadores_var_pop_fields"],
	var_samp?:ModelTypes["producao_Rastreadores_var_samp_fields"],
	variance?:ModelTypes["producao_Rastreadores_variance_fields"]
};
	/** order by aggregate values of table "producao.Rastreadores" */
["producao_Rastreadores_aggregate_order_by"]: GraphQLTypes["producao_Rastreadores_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_arr_rel_insert_input"]: GraphQLTypes["producao_Rastreadores_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_Rastreadores_avg_fields"]: {
		CodigoReferencia?:number
};
	/** order by avg() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_avg_order_by"]: GraphQLTypes["producao_Rastreadores_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.Rastreadores". All fields are combined with a logical 'AND'. */
["producao_Rastreadores_bool_exp"]: GraphQLTypes["producao_Rastreadores_bool_exp"];
	/** unique or primary key constraints on table "producao.Rastreadores" */
["producao_Rastreadores_constraint"]: GraphQLTypes["producao_Rastreadores_constraint"];
	/** input type for incrementing numeric columns in table "producao.Rastreadores" */
["producao_Rastreadores_inc_input"]: GraphQLTypes["producao_Rastreadores_inc_input"];
	/** input type for inserting data into table "producao.Rastreadores" */
["producao_Rastreadores_insert_input"]: GraphQLTypes["producao_Rastreadores_insert_input"];
	/** aggregate max on columns */
["producao_Rastreadores_max_fields"]: {
		Chip_Id?:ModelTypes["uuid"],
	CodigoReferencia?:number,
	Equipamento_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_max_order_by"]: GraphQLTypes["producao_Rastreadores_max_order_by"];
	/** aggregate min on columns */
["producao_Rastreadores_min_fields"]: {
		Chip_Id?:ModelTypes["uuid"],
	CodigoReferencia?:number,
	Equipamento_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_min_order_by"]: GraphQLTypes["producao_Rastreadores_min_order_by"];
	/** response of any mutation on the table "producao.Rastreadores" */
["producao_Rastreadores_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_Rastreadores"][]
};
	/** input type for inserting object relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_obj_rel_insert_input"]: GraphQLTypes["producao_Rastreadores_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.Rastreadores" */
["producao_Rastreadores_on_conflict"]: GraphQLTypes["producao_Rastreadores_on_conflict"];
	/** Ordering options when selecting data from "producao.Rastreadores". */
["producao_Rastreadores_order_by"]: GraphQLTypes["producao_Rastreadores_order_by"];
	/** primary key columns input for table: producao_Rastreadores */
["producao_Rastreadores_pk_columns_input"]: GraphQLTypes["producao_Rastreadores_pk_columns_input"];
	/** select columns of table "producao.Rastreadores" */
["producao_Rastreadores_select_column"]: GraphQLTypes["producao_Rastreadores_select_column"];
	/** input type for updating data in table "producao.Rastreadores" */
["producao_Rastreadores_set_input"]: GraphQLTypes["producao_Rastreadores_set_input"];
	/** aggregate stddev on columns */
["producao_Rastreadores_stddev_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_order_by"]: GraphQLTypes["producao_Rastreadores_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_Rastreadores_stddev_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_pop_order_by"]: GraphQLTypes["producao_Rastreadores_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_Rastreadores_stddev_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by stddev_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_samp_order_by"]: GraphQLTypes["producao_Rastreadores_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_Rastreadores_sum_fields"]: {
		CodigoReferencia?:number
};
	/** order by sum() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_sum_order_by"]: GraphQLTypes["producao_Rastreadores_sum_order_by"];
	/** update columns of table "producao.Rastreadores" */
["producao_Rastreadores_update_column"]: GraphQLTypes["producao_Rastreadores_update_column"];
	/** aggregate var_pop on columns */
["producao_Rastreadores_var_pop_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_pop_order_by"]: GraphQLTypes["producao_Rastreadores_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_Rastreadores_var_samp_fields"]: {
		CodigoReferencia?:number
};
	/** order by var_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_samp_order_by"]: GraphQLTypes["producao_Rastreadores_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_Rastreadores_variance_fields"]: {
		CodigoReferencia?:number
};
	/** order by variance() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_variance_order_by"]: GraphQLTypes["producao_Rastreadores_variance_order_by"];
	/** columns and relationships of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo"]: {
		Id:ModelTypes["uuid"],
	/** An array relationship */
	Itens:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"][],
	/** An aggregate relationship */
	Itens_aggregate:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** An array relationship */
	KitsDeInsumo:ModelTypes["producao_KitsDeInsumo"][],
	/** An aggregate relationship */
	KitsDeInsumo_aggregate:ModelTypes["producao_KitsDeInsumo_aggregate"],
	Nome:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate"]: {
		aggregate?:ModelTypes["producao_TiposDeKitDeInsumo_aggregate_fields"],
	nodes:ModelTypes["producao_TiposDeKitDeInsumo"][]
};
	/** aggregate fields of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["producao_TiposDeKitDeInsumo_max_fields"],
	min?:ModelTypes["producao_TiposDeKitDeInsumo_min_fields"]
};
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_bool_exp"]: GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"];
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_constraint"]: GraphQLTypes["producao_TiposDeKitDeInsumo_constraint"];
	/** columns and relationships of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens"]: {
		Id:ModelTypes["uuid"],
	/** An object relationship */
	Item:ModelTypes["estoque_Itens"],
	Item_Id:ModelTypes["uuid"],
	Quantidade:number,
	/** An object relationship */
	TipoDeKitDeInsumo:ModelTypes["producao_TiposDeKitDeInsumo"],
	TiposDeKitDeInsumo_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]: {
		aggregate?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"],
	nodes:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"][]
};
	/** aggregate fields of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"]: {
		avg?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"],
	count:number,
	max?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"],
	min?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"],
	stddev?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"],
	stddev_pop?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"],
	stddev_samp?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"],
	sum?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"],
	var_pop?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"],
	var_samp?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"],
	variance?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"]
};
	/** order by aggregate values of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"];
	/** input type for inserting array relation for remote table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"];
	/** aggregate avg on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"]: {
		Quantidade?:number
};
	/** order by avg() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"];
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo_estoque_Itens". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"];
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"];
	/** input type for incrementing numeric columns in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"];
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"];
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	TiposDeKitDeInsumo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"];
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Item_Id?:ModelTypes["uuid"],
	Quantidade?:number,
	TiposDeKitDeInsumo_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"];
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"][]
};
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"];
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo_estoque_Itens". */
["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"];
	/** primary key columns input for table: producao_TiposDeKitDeInsumo_estoque_Itens */
["producao_TiposDeKitDeInsumo_estoque_Itens_pk_columns_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_pk_columns_input"];
	/** select columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"];
	/** input type for updating data in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"];
	/** aggregate stddev on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"]: {
		Quantidade?:number
};
	/** order by stddev() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"];
	/** aggregate stddev_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"]: {
		Quantidade?:number
};
	/** order by stddev_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"];
	/** aggregate stddev_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"]: {
		Quantidade?:number
};
	/** order by stddev_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"];
	/** aggregate sum on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"]: {
		Quantidade?:number
};
	/** order by sum() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"];
	/** update columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"];
	/** aggregate var_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"]: {
		Quantidade?:number
};
	/** order by var_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"];
	/** aggregate var_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"]: {
		Quantidade?:number
};
	/** order by var_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"];
	/** aggregate variance on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"]: {
		Quantidade?:number
};
	/** order by variance() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"];
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_insert_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_insert_input"];
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["producao_TiposDeKitDeInsumo"][]
};
	/** input type for inserting object relation for remote table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_obj_rel_insert_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_obj_rel_insert_input"];
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_on_conflict"]: GraphQLTypes["producao_TiposDeKitDeInsumo_on_conflict"];
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo". */
["producao_TiposDeKitDeInsumo_order_by"]: GraphQLTypes["producao_TiposDeKitDeInsumo_order_by"];
	/** primary key columns input for table: producao_TiposDeKitDeInsumo */
["producao_TiposDeKitDeInsumo_pk_columns_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_pk_columns_input"];
	/** select columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_select_column"]: GraphQLTypes["producao_TiposDeKitDeInsumo_select_column"];
	/** input type for updating data in table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_set_input"]: GraphQLTypes["producao_TiposDeKitDeInsumo_set_input"];
	/** update columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_update_column"]: GraphQLTypes["producao_TiposDeKitDeInsumo_update_column"];
	["query_root"]: {
		/** fetch data from the table: "CategoriasDeVeiculos" */
	CategoriasDeVeiculos:ModelTypes["CategoriasDeVeiculos"][],
	/** fetch aggregated fields from the table: "CategoriasDeVeiculos" */
	CategoriasDeVeiculos_aggregate:ModelTypes["CategoriasDeVeiculos_aggregate"],
	/** fetch data from the table: "CategoriasDeVeiculos" using primary key columns */
	CategoriasDeVeiculos_by_pk?:ModelTypes["CategoriasDeVeiculos"],
	/** fetch data from the table: "Configuracoes" */
	Configuracoes:ModelTypes["Configuracoes"][],
	/** fetch aggregated fields from the table: "Configuracoes" */
	Configuracoes_aggregate:ModelTypes["Configuracoes_aggregate"],
	/** fetch data from the table: "Configuracoes" using primary key columns */
	Configuracoes_by_pk?:ModelTypes["Configuracoes"],
	/** fetch data from the table: "EstadosEMunicipios" */
	EstadosEMunicipios:ModelTypes["EstadosEMunicipios"][],
	/** fetch aggregated fields from the table: "EstadosEMunicipios" */
	EstadosEMunicipios_aggregate:ModelTypes["EstadosEMunicipios_aggregate"],
	/** fetch data from the table: "EstadosEMunicipios" using primary key columns */
	EstadosEMunicipios_by_pk?:ModelTypes["EstadosEMunicipios"],
	/** fetch data from the table: "Operadoras" */
	Operadoras:ModelTypes["Operadoras"][],
	/** fetch aggregated fields from the table: "Operadoras" */
	Operadoras_aggregate:ModelTypes["Operadoras_aggregate"],
	/** fetch data from the table: "Operadoras" using primary key columns */
	Operadoras_by_pk?:ModelTypes["Operadoras"],
	/** fetch data from the table: "Produtos" */
	Produtos:ModelTypes["Produtos"][],
	/** fetch aggregated fields from the table: "Produtos" */
	Produtos_aggregate:ModelTypes["Produtos_aggregate"],
	/** fetch data from the table: "Produtos" using primary key columns */
	Produtos_by_pk?:ModelTypes["Produtos"],
	/** fetch data from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas:ModelTypes["UnidadesDeMedidas"][],
	/** fetch aggregated fields from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas_aggregate:ModelTypes["UnidadesDeMedidas_aggregate"],
	/** fetch data from the table: "UnidadesDeMedidas" using primary key columns */
	UnidadesDeMedidas_by_pk?:ModelTypes["UnidadesDeMedidas"],
	/** fetch data from the table: "atendimentos.EtapasDosFluxos" */
	atendimentos_EtapasDosFluxos:ModelTypes["atendimentos_EtapasDosFluxos"][],
	/** fetch aggregated fields from the table: "atendimentos.EtapasDosFluxos" */
	atendimentos_EtapasDosFluxos_aggregate:ModelTypes["atendimentos_EtapasDosFluxos_aggregate"],
	/** fetch data from the table: "atendimentos.EtapasDosFluxos" using primary key columns */
	atendimentos_EtapasDosFluxos_by_pk?:ModelTypes["atendimentos_EtapasDosFluxos"],
	/** fetch data from the table: "atendimentos.Fluxos" */
	atendimentos_Fluxos:ModelTypes["atendimentos_Fluxos"][],
	/** fetch aggregated fields from the table: "atendimentos.Fluxos" */
	atendimentos_Fluxos_aggregate:ModelTypes["atendimentos_Fluxos_aggregate"],
	/** fetch data from the table: "atendimentos.Fluxos" using primary key columns */
	atendimentos_Fluxos_by_pk?:ModelTypes["atendimentos_Fluxos"],
	/** fetch data from the table: "atendimentos.Tickets" */
	atendimentos_Tickets:ModelTypes["atendimentos_Tickets"][],
	/** fetch aggregated fields from the table: "atendimentos.Tickets" */
	atendimentos_Tickets_aggregate:ModelTypes["atendimentos_Tickets_aggregate"],
	/** fetch data from the table: "atendimentos.Tickets" using primary key columns */
	atendimentos_Tickets_by_pk?:ModelTypes["atendimentos_Tickets"],
	/** fetch data from the table: "atendimentos.TiposDeTickets" */
	atendimentos_TiposDeTickets:ModelTypes["atendimentos_TiposDeTickets"][],
	/** fetch aggregated fields from the table: "atendimentos.TiposDeTickets" */
	atendimentos_TiposDeTickets_aggregate:ModelTypes["atendimentos_TiposDeTickets_aggregate"],
	/** fetch data from the table: "atendimentos.TiposDeTickets" using primary key columns */
	atendimentos_TiposDeTickets_by_pk?:ModelTypes["atendimentos_TiposDeTickets"],
	/** fetch data from the table: "autenticacao.Atendentes" */
	autenticacao_Atendentes:ModelTypes["autenticacao_Atendentes"][],
	/** fetch aggregated fields from the table: "autenticacao.Atendentes" */
	autenticacao_Atendentes_aggregate:ModelTypes["autenticacao_Atendentes_aggregate"],
	/** fetch data from the table: "autenticacao.Atendentes" using primary key columns */
	autenticacao_Atendentes_by_pk?:ModelTypes["autenticacao_Atendentes"],
	/** fetch data from the table: "autenticacao.Usuarios" */
	autenticacao_Usuarios:ModelTypes["autenticacao_Usuarios"][],
	/** fetch aggregated fields from the table: "autenticacao.Usuarios" */
	autenticacao_Usuarios_aggregate:ModelTypes["autenticacao_Usuarios_aggregate"],
	/** fetch data from the table: "autenticacao.Usuarios" using primary key columns */
	autenticacao_Usuarios_by_pk?:ModelTypes["autenticacao_Usuarios"],
	/** fetch data from the table: "clientes.Leads" */
	clientes_Leads:ModelTypes["clientes_Leads"][],
	/** fetch aggregated fields from the table: "clientes.Leads" */
	clientes_Leads_aggregate:ModelTypes["clientes_Leads_aggregate"],
	/** fetch data from the table: "clientes.Leads" using primary key columns */
	clientes_Leads_by_pk?:ModelTypes["clientes_Leads"],
	/** fetch data from the table: "clientes.PerfisComerciais" */
	clientes_PerfisComerciais:ModelTypes["clientes_PerfisComerciais"][],
	/** fetch aggregated fields from the table: "clientes.PerfisComerciais" */
	clientes_PerfisComerciais_aggregate:ModelTypes["clientes_PerfisComerciais_aggregate"],
	/** fetch data from the table: "clientes.PerfisComerciais" using primary key columns */
	clientes_PerfisComerciais_by_pk?:ModelTypes["clientes_PerfisComerciais"],
	/** fetch data from the table: "clientes.Veiculos" */
	clientes_Veiculos:ModelTypes["clientes_Veiculos"][],
	/** fetch aggregated fields from the table: "clientes.Veiculos" */
	clientes_Veiculos_aggregate:ModelTypes["clientes_Veiculos_aggregate"],
	/** fetch data from the table: "clientes.Veiculos" using primary key columns */
	clientes_Veiculos_by_pk?:ModelTypes["clientes_Veiculos"],
	/** fetch data from the table: "comercial.Acoes" */
	comercial_Acoes:ModelTypes["comercial_Acoes"][],
	/** fetch aggregated fields from the table: "comercial.Acoes" */
	comercial_Acoes_aggregate:ModelTypes["comercial_Acoes_aggregate"],
	/** fetch data from the table: "comercial.Acoes" using primary key columns */
	comercial_Acoes_by_pk?:ModelTypes["comercial_Acoes"],
	/** fetch data from the table: "comercial.Atributos" */
	comercial_Atributos:ModelTypes["comercial_Atributos"][],
	/** fetch aggregated fields from the table: "comercial.Atributos" */
	comercial_Atributos_aggregate:ModelTypes["comercial_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Atributos" using primary key columns */
	comercial_Atributos_by_pk?:ModelTypes["comercial_Atributos"],
	/** fetch data from the table: "comercial.Coberturas" */
	comercial_Coberturas:ModelTypes["comercial_Coberturas"][],
	/** fetch aggregated fields from the table: "comercial.Coberturas" */
	comercial_Coberturas_aggregate:ModelTypes["comercial_Coberturas_aggregate"],
	/** fetch data from the table: "comercial.Coberturas" using primary key columns */
	comercial_Coberturas_by_pk?:ModelTypes["comercial_Coberturas"],
	/** fetch data from the table: "comercial.Combos" */
	comercial_Combos:ModelTypes["comercial_Combos"][],
	/** fetch data from the table: "comercial.Combos_Combos" */
	comercial_Combos_Combos:ModelTypes["comercial_Combos_Combos"][],
	/** fetch aggregated fields from the table: "comercial.Combos_Combos" */
	comercial_Combos_Combos_aggregate:ModelTypes["comercial_Combos_Combos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Combos" using primary key columns */
	comercial_Combos_Combos_by_pk?:ModelTypes["comercial_Combos_Combos"],
	/** fetch data from the table: "comercial.Combos_Planos" */
	comercial_Combos_Planos:ModelTypes["comercial_Combos_Planos"][],
	/** fetch aggregated fields from the table: "comercial.Combos_Planos" */
	comercial_Combos_Planos_aggregate:ModelTypes["comercial_Combos_Planos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Planos" using primary key columns */
	comercial_Combos_Planos_by_pk?:ModelTypes["comercial_Combos_Planos"],
	/** fetch data from the table: "comercial.Combos_Precos" */
	comercial_Combos_Precos:ModelTypes["comercial_Combos_Precos"][],
	/** fetch aggregated fields from the table: "comercial.Combos_Precos" */
	comercial_Combos_Precos_aggregate:ModelTypes["comercial_Combos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Precos" using primary key columns */
	comercial_Combos_Precos_by_pk?:ModelTypes["comercial_Combos_Precos"],
	/** fetch data from the table: "comercial.Combos_Produtos" */
	comercial_Combos_Produtos:ModelTypes["comercial_Combos_Produtos"][],
	/** fetch aggregated fields from the table: "comercial.Combos_Produtos" */
	comercial_Combos_Produtos_aggregate:ModelTypes["comercial_Combos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Produtos" using primary key columns */
	comercial_Combos_Produtos_by_pk?:ModelTypes["comercial_Combos_Produtos"],
	/** fetch data from the table: "comercial.Combos_Servicos" */
	comercial_Combos_Servicos:ModelTypes["comercial_Combos_Servicos"][],
	/** fetch aggregated fields from the table: "comercial.Combos_Servicos" */
	comercial_Combos_Servicos_aggregate:ModelTypes["comercial_Combos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Servicos" using primary key columns */
	comercial_Combos_Servicos_by_pk?:ModelTypes["comercial_Combos_Servicos"],
	/** fetch aggregated fields from the table: "comercial.Combos" */
	comercial_Combos_aggregate:ModelTypes["comercial_Combos_aggregate"],
	/** fetch data from the table: "comercial.Combos" using primary key columns */
	comercial_Combos_by_pk?:ModelTypes["comercial_Combos"],
	/** fetch data from the table: "comercial.Condicionais" */
	comercial_Condicionais:ModelTypes["comercial_Condicionais"][],
	/** fetch data from the table: "comercial.CondicionaisSituacoes" */
	comercial_CondicionaisSituacoes:ModelTypes["comercial_CondicionaisSituacoes"][],
	/** fetch aggregated fields from the table: "comercial.CondicionaisSituacoes" */
	comercial_CondicionaisSituacoes_aggregate:ModelTypes["comercial_CondicionaisSituacoes_aggregate"],
	/** fetch data from the table: "comercial.CondicionaisSituacoes" using primary key columns */
	comercial_CondicionaisSituacoes_by_pk?:ModelTypes["comercial_CondicionaisSituacoes"],
	/** fetch aggregated fields from the table: "comercial.Condicionais" */
	comercial_Condicionais_aggregate:ModelTypes["comercial_Condicionais_aggregate"],
	/** fetch data from the table: "comercial.Condicionais" using primary key columns */
	comercial_Condicionais_by_pk?:ModelTypes["comercial_Condicionais"],
	/** fetch data from the table: "comercial.ContratosBase" */
	comercial_ContratosBase:ModelTypes["comercial_ContratosBase"][],
	/** fetch data from the table: "comercial.ContratosBase_Versoes" */
	comercial_ContratosBase_Versoes:ModelTypes["comercial_ContratosBase_Versoes"][],
	/** fetch aggregated fields from the table: "comercial.ContratosBase_Versoes" */
	comercial_ContratosBase_Versoes_aggregate:ModelTypes["comercial_ContratosBase_Versoes_aggregate"],
	/** fetch data from the table: "comercial.ContratosBase_Versoes" using primary key columns */
	comercial_ContratosBase_Versoes_by_pk?:ModelTypes["comercial_ContratosBase_Versoes"],
	/** fetch aggregated fields from the table: "comercial.ContratosBase" */
	comercial_ContratosBase_aggregate:ModelTypes["comercial_ContratosBase_aggregate"],
	/** fetch data from the table: "comercial.ContratosBase" using primary key columns */
	comercial_ContratosBase_by_pk?:ModelTypes["comercial_ContratosBase"],
	/** fetch data from the table: "comercial.Fornecedores" */
	comercial_Fornecedores:ModelTypes["comercial_Fornecedores"][],
	/** fetch data from the table: "comercial.Fornecedores_Produtos" */
	comercial_Fornecedores_Produtos:ModelTypes["comercial_Fornecedores_Produtos"][],
	/** fetch data from the table: "comercial.Fornecedores_Produtos_Precos" */
	comercial_Fornecedores_Produtos_Precos:ModelTypes["comercial_Fornecedores_Produtos_Precos"][],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Produtos_Precos" */
	comercial_Fornecedores_Produtos_Precos_aggregate:ModelTypes["comercial_Fornecedores_Produtos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Produtos_Precos" using primary key columns */
	comercial_Fornecedores_Produtos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos_Precos"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Produtos" */
	comercial_Fornecedores_Produtos_aggregate:ModelTypes["comercial_Fornecedores_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Produtos" using primary key columns */
	comercial_Fornecedores_Produtos_by_pk?:ModelTypes["comercial_Fornecedores_Produtos"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos" */
	comercial_Fornecedores_Servicos:ModelTypes["comercial_Fornecedores_Servicos"][],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Precos" */
	comercial_Fornecedores_Servicos_Precos:ModelTypes["comercial_Fornecedores_Servicos_Precos"][],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos_Precos" */
	comercial_Fornecedores_Servicos_Precos_aggregate:ModelTypes["comercial_Fornecedores_Servicos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Precos" using primary key columns */
	comercial_Fornecedores_Servicos_Precos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Precos"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	comercial_Fornecedores_Servicos_Tarifas:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"][],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	comercial_Fornecedores_Servicos_Tarifas_aggregate:ModelTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Tarifas" using primary key columns */
	comercial_Fornecedores_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos" */
	comercial_Fornecedores_Servicos_aggregate:ModelTypes["comercial_Fornecedores_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos" using primary key columns */
	comercial_Fornecedores_Servicos_by_pk?:ModelTypes["comercial_Fornecedores_Servicos"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores" */
	comercial_Fornecedores_aggregate:ModelTypes["comercial_Fornecedores_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores" using primary key columns */
	comercial_Fornecedores_by_pk?:ModelTypes["comercial_Fornecedores"],
	/** fetch data from the table: "comercial.Planos" */
	comercial_Planos:ModelTypes["comercial_Planos"][],
	/** fetch data from the table: "comercial.Planos_Condicionais" */
	comercial_Planos_Condicionais:ModelTypes["comercial_Planos_Condicionais"][],
	/** fetch aggregated fields from the table: "comercial.Planos_Condicionais" */
	comercial_Planos_Condicionais_aggregate:ModelTypes["comercial_Planos_Condicionais_aggregate"],
	/** fetch data from the table: "comercial.Planos_Condicionais" using primary key columns */
	comercial_Planos_Condicionais_by_pk?:ModelTypes["comercial_Planos_Condicionais"],
	/** fetch data from the table: "comercial.Planos_Precos" */
	comercial_Planos_Precos:ModelTypes["comercial_Planos_Precos"][],
	/** fetch aggregated fields from the table: "comercial.Planos_Precos" */
	comercial_Planos_Precos_aggregate:ModelTypes["comercial_Planos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Planos_Precos" using primary key columns */
	comercial_Planos_Precos_by_pk?:ModelTypes["comercial_Planos_Precos"],
	/** fetch aggregated fields from the table: "comercial.Planos" */
	comercial_Planos_aggregate:ModelTypes["comercial_Planos_aggregate"],
	/** fetch data from the table: "comercial.Planos" using primary key columns */
	comercial_Planos_by_pk?:ModelTypes["comercial_Planos"],
	/** fetch data from the table: "comercial.PrestadorDeServicos_Servicos" */
	comercial_PrestadorDeServicos_Servicos:ModelTypes["comercial_PrestadorDeServicos_Servicos"][],
	/** fetch aggregated fields from the table: "comercial.PrestadorDeServicos_Servicos" */
	comercial_PrestadorDeServicos_Servicos_aggregate:ModelTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.PrestadorDeServicos_Servicos" using primary key columns */
	comercial_PrestadorDeServicos_Servicos_by_pk?:ModelTypes["comercial_PrestadorDeServicos_Servicos"],
	/** fetch data from the table: "comercial.Produtos" */
	comercial_Produtos:ModelTypes["comercial_Produtos"][],
	/** fetch data from the table: "comercial.Produtos_Atributos" */
	comercial_Produtos_Atributos:ModelTypes["comercial_Produtos_Atributos"][],
	/** fetch aggregated fields from the table: "comercial.Produtos_Atributos" */
	comercial_Produtos_Atributos_aggregate:ModelTypes["comercial_Produtos_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Atributos" using primary key columns */
	comercial_Produtos_Atributos_by_pk?:ModelTypes["comercial_Produtos_Atributos"],
	/** fetch data from the table: "comercial.Produtos_Oportunidades" */
	comercial_Produtos_Oportunidades:ModelTypes["comercial_Produtos_Oportunidades"][],
	/** fetch aggregated fields from the table: "comercial.Produtos_Oportunidades" */
	comercial_Produtos_Oportunidades_aggregate:ModelTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Oportunidades" using primary key columns */
	comercial_Produtos_Oportunidades_by_pk?:ModelTypes["comercial_Produtos_Oportunidades"],
	/** fetch data from the table: "comercial.Produtos_Produtos" */
	comercial_Produtos_Produtos:ModelTypes["comercial_Produtos_Produtos"][],
	/** fetch aggregated fields from the table: "comercial.Produtos_Produtos" */
	comercial_Produtos_Produtos_aggregate:ModelTypes["comercial_Produtos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Produtos" using primary key columns */
	comercial_Produtos_Produtos_by_pk?:ModelTypes["comercial_Produtos_Produtos"],
	/** fetch data from the table: "comercial.Produtos_Servicos" */
	comercial_Produtos_Servicos:ModelTypes["comercial_Produtos_Servicos"][],
	/** fetch aggregated fields from the table: "comercial.Produtos_Servicos" */
	comercial_Produtos_Servicos_aggregate:ModelTypes["comercial_Produtos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Servicos" using primary key columns */
	comercial_Produtos_Servicos_by_pk?:ModelTypes["comercial_Produtos_Servicos"],
	/** fetch data from the table: "comercial.Produtos_Tipos" */
	comercial_Produtos_Tipos:ModelTypes["comercial_Produtos_Tipos"][],
	/** fetch aggregated fields from the table: "comercial.Produtos_Tipos" */
	comercial_Produtos_Tipos_aggregate:ModelTypes["comercial_Produtos_Tipos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Tipos" using primary key columns */
	comercial_Produtos_Tipos_by_pk?:ModelTypes["comercial_Produtos_Tipos"],
	/** fetch aggregated fields from the table: "comercial.Produtos" */
	comercial_Produtos_aggregate:ModelTypes["comercial_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Produtos" using primary key columns */
	comercial_Produtos_by_pk?:ModelTypes["comercial_Produtos"],
	/** fetch data from the table: "comercial.Propostas" */
	comercial_Propostas:ModelTypes["comercial_Propostas"][],
	/** fetch data from the table: "comercial.Propostas_Combos" */
	comercial_Propostas_Combos:ModelTypes["comercial_Propostas_Combos"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Combos" */
	comercial_Propostas_Combos_aggregate:ModelTypes["comercial_Propostas_Combos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Combos" using primary key columns */
	comercial_Propostas_Combos_by_pk?:ModelTypes["comercial_Propostas_Combos"],
	/** fetch data from the table: "comercial.Propostas_Instalacoes" */
	comercial_Propostas_Instalacoes:ModelTypes["comercial_Propostas_Instalacoes"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Instalacoes" */
	comercial_Propostas_Instalacoes_aggregate:ModelTypes["comercial_Propostas_Instalacoes_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Instalacoes" using primary key columns */
	comercial_Propostas_Instalacoes_by_pk?:ModelTypes["comercial_Propostas_Instalacoes"],
	/** fetch data from the table: "comercial.Propostas_Oportunidades" */
	comercial_Propostas_Oportunidades:ModelTypes["comercial_Propostas_Oportunidades"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Oportunidades" */
	comercial_Propostas_Oportunidades_aggregate:ModelTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Oportunidades" using primary key columns */
	comercial_Propostas_Oportunidades_by_pk?:ModelTypes["comercial_Propostas_Oportunidades"],
	/** fetch data from the table: "comercial.Propostas_Planos" */
	comercial_Propostas_Planos:ModelTypes["comercial_Propostas_Planos"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Planos" */
	comercial_Propostas_Planos_aggregate:ModelTypes["comercial_Propostas_Planos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Planos" using primary key columns */
	comercial_Propostas_Planos_by_pk?:ModelTypes["comercial_Propostas_Planos"],
	/** fetch data from the table: "comercial.Propostas_Produtos" */
	comercial_Propostas_Produtos:ModelTypes["comercial_Propostas_Produtos"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Produtos" */
	comercial_Propostas_Produtos_aggregate:ModelTypes["comercial_Propostas_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Produtos" using primary key columns */
	comercial_Propostas_Produtos_by_pk?:ModelTypes["comercial_Propostas_Produtos"],
	/** fetch data from the table: "comercial.Propostas_Servicos" */
	comercial_Propostas_Servicos:ModelTypes["comercial_Propostas_Servicos"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Servicos" */
	comercial_Propostas_Servicos_aggregate:ModelTypes["comercial_Propostas_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Servicos" using primary key columns */
	comercial_Propostas_Servicos_by_pk?:ModelTypes["comercial_Propostas_Servicos"],
	/** fetch data from the table: "comercial.Propostas_Situacoes" */
	comercial_Propostas_Situacoes:ModelTypes["comercial_Propostas_Situacoes"][],
	/** fetch aggregated fields from the table: "comercial.Propostas_Situacoes" */
	comercial_Propostas_Situacoes_aggregate:ModelTypes["comercial_Propostas_Situacoes_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Situacoes" using primary key columns */
	comercial_Propostas_Situacoes_by_pk?:ModelTypes["comercial_Propostas_Situacoes"],
	/** fetch aggregated fields from the table: "comercial.Propostas" */
	comercial_Propostas_aggregate:ModelTypes["comercial_Propostas_aggregate"],
	/** fetch data from the table: "comercial.Propostas" using primary key columns */
	comercial_Propostas_by_pk?:ModelTypes["comercial_Propostas"],
	/** fetch data from the table: "comercial.Servicos" */
	comercial_Servicos:ModelTypes["comercial_Servicos"][],
	/** fetch data from the table: "comercial.Servicos_Atributos" */
	comercial_Servicos_Atributos:ModelTypes["comercial_Servicos_Atributos"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Atributos" */
	comercial_Servicos_Atributos_aggregate:ModelTypes["comercial_Servicos_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Atributos" using primary key columns */
	comercial_Servicos_Atributos_by_pk?:ModelTypes["comercial_Servicos_Atributos"],
	/** fetch data from the table: "comercial.Servicos_Oportunidades" */
	comercial_Servicos_Oportunidades:ModelTypes["comercial_Servicos_Oportunidades"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Oportunidades" */
	comercial_Servicos_Oportunidades_aggregate:ModelTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Oportunidades" using primary key columns */
	comercial_Servicos_Oportunidades_by_pk?:ModelTypes["comercial_Servicos_Oportunidades"],
	/** fetch data from the table: "comercial.Servicos_Produtos" */
	comercial_Servicos_Produtos:ModelTypes["comercial_Servicos_Produtos"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Produtos" */
	comercial_Servicos_Produtos_aggregate:ModelTypes["comercial_Servicos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Produtos" using primary key columns */
	comercial_Servicos_Produtos_by_pk?:ModelTypes["comercial_Servicos_Produtos"],
	/** fetch data from the table: "comercial.Servicos_Servicos" */
	comercial_Servicos_Servicos:ModelTypes["comercial_Servicos_Servicos"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Servicos" */
	comercial_Servicos_Servicos_aggregate:ModelTypes["comercial_Servicos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Servicos" using primary key columns */
	comercial_Servicos_Servicos_by_pk?:ModelTypes["comercial_Servicos_Servicos"],
	/** fetch data from the table: "comercial.Servicos_Tarifas" */
	comercial_Servicos_Tarifas:ModelTypes["comercial_Servicos_Tarifas"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Tarifas" */
	comercial_Servicos_Tarifas_aggregate:ModelTypes["comercial_Servicos_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Tarifas" using primary key columns */
	comercial_Servicos_Tarifas_by_pk?:ModelTypes["comercial_Servicos_Tarifas"],
	/** fetch data from the table: "comercial.Servicos_Tipos" */
	comercial_Servicos_Tipos:ModelTypes["comercial_Servicos_Tipos"][],
	/** fetch aggregated fields from the table: "comercial.Servicos_Tipos" */
	comercial_Servicos_Tipos_aggregate:ModelTypes["comercial_Servicos_Tipos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Tipos" using primary key columns */
	comercial_Servicos_Tipos_by_pk?:ModelTypes["comercial_Servicos_Tipos"],
	/** fetch aggregated fields from the table: "comercial.Servicos" */
	comercial_Servicos_aggregate:ModelTypes["comercial_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Servicos" using primary key columns */
	comercial_Servicos_by_pk?:ModelTypes["comercial_Servicos"],
	/** fetch data from the table: "comercial.Tarifas" */
	comercial_Tarifas:ModelTypes["comercial_Tarifas"][],
	/** fetch aggregated fields from the table: "comercial.Tarifas" */
	comercial_Tarifas_aggregate:ModelTypes["comercial_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Tarifas" using primary key columns */
	comercial_Tarifas_by_pk?:ModelTypes["comercial_Tarifas"],
	/** fetch data from the table: "contatos.Emails" */
	contatos_Emails:ModelTypes["contatos_Emails"][],
	/** fetch aggregated fields from the table: "contatos.Emails" */
	contatos_Emails_aggregate:ModelTypes["contatos_Emails_aggregate"],
	/** fetch data from the table: "contatos.Emails" using primary key columns */
	contatos_Emails_by_pk?:ModelTypes["contatos_Emails"],
	/** fetch data from the table: "contatos.Enderecos" */
	contatos_Enderecos:ModelTypes["contatos_Enderecos"][],
	/** fetch aggregated fields from the table: "contatos.Enderecos" */
	contatos_Enderecos_aggregate:ModelTypes["contatos_Enderecos_aggregate"],
	/** fetch data from the table: "contatos.Enderecos" using primary key columns */
	contatos_Enderecos_by_pk?:ModelTypes["contatos_Enderecos"],
	/** fetch data from the table: "contatos.Logs" */
	contatos_Logs:ModelTypes["contatos_Logs"][],
	/** fetch aggregated fields from the table: "contatos.Logs" */
	contatos_Logs_aggregate:ModelTypes["contatos_Logs_aggregate"],
	/** fetch data from the table: "contatos.Logs" using primary key columns */
	contatos_Logs_by_pk?:ModelTypes["contatos_Logs"],
	/** fetch data from the table: "contatos.Telefones" */
	contatos_Telefones:ModelTypes["contatos_Telefones"][],
	/** fetch aggregated fields from the table: "contatos.Telefones" */
	contatos_Telefones_aggregate:ModelTypes["contatos_Telefones_aggregate"],
	/** fetch data from the table: "contatos.Telefones" using primary key columns */
	contatos_Telefones_by_pk?:ModelTypes["contatos_Telefones"],
	/** fetch data from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos:ModelTypes["estoque_Enderecamentos"][],
	/** fetch aggregated fields from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos_aggregate:ModelTypes["estoque_Enderecamentos_aggregate"],
	/** fetch data from the table: "estoque.Enderecamentos" using primary key columns */
	estoque_Enderecamentos_by_pk?:ModelTypes["estoque_Enderecamentos"],
	/** fetch data from the table: "estoque.Fabricantes" */
	estoque_Fabricantes:ModelTypes["estoque_Fabricantes"][],
	/** fetch aggregated fields from the table: "estoque.Fabricantes" */
	estoque_Fabricantes_aggregate:ModelTypes["estoque_Fabricantes_aggregate"],
	/** fetch data from the table: "estoque.Fabricantes" using primary key columns */
	estoque_Fabricantes_by_pk?:ModelTypes["estoque_Fabricantes"],
	/** fetch data from the table: "estoque.Familias" */
	estoque_Familias:ModelTypes["estoque_Familias"][],
	/** fetch aggregated fields from the table: "estoque.Familias" */
	estoque_Familias_aggregate:ModelTypes["estoque_Familias_aggregate"],
	/** fetch data from the table: "estoque.Familias" using primary key columns */
	estoque_Familias_by_pk?:ModelTypes["estoque_Familias"],
	/** fetch data from the table: "estoque.Grupos" */
	estoque_Grupos:ModelTypes["estoque_Grupos"][],
	/** fetch aggregated fields from the table: "estoque.Grupos" */
	estoque_Grupos_aggregate:ModelTypes["estoque_Grupos_aggregate"],
	/** fetch data from the table: "estoque.Grupos" using primary key columns */
	estoque_Grupos_by_pk?:ModelTypes["estoque_Grupos"],
	/** fetch data from the table: "estoque.Itens" */
	estoque_Itens:ModelTypes["estoque_Itens"][],
	/** fetch aggregated fields from the table: "estoque.Itens" */
	estoque_Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	/** fetch data from the table: "estoque.Itens" using primary key columns */
	estoque_Itens_by_pk?:ModelTypes["estoque_Itens"],
	/** fetch data from the table: "estoque.Logs" */
	estoque_Logs:ModelTypes["estoque_Logs"][],
	/** fetch aggregated fields from the table: "estoque.Logs" */
	estoque_Logs_aggregate:ModelTypes["estoque_Logs_aggregate"],
	/** fetch data from the table: "estoque.Logs" using primary key columns */
	estoque_Logs_by_pk?:ModelTypes["estoque_Logs"],
	/** fetch data from the table: "estoque.Modelos" */
	estoque_Modelos:ModelTypes["estoque_Modelos"][],
	/** fetch aggregated fields from the table: "estoque.Modelos" */
	estoque_Modelos_aggregate:ModelTypes["estoque_Modelos_aggregate"],
	/** fetch data from the table: "estoque.Modelos" using primary key columns */
	estoque_Modelos_by_pk?:ModelTypes["estoque_Modelos"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos:ModelTypes["estoque_TiposDeEnderecamentos"][],
	/** fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos_aggregate:ModelTypes["estoque_TiposDeEnderecamentos_aggregate"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns */
	estoque_TiposDeEnderecamentos_by_pk?:ModelTypes["estoque_TiposDeEnderecamentos"],
	/** fetch data from the table: "identidades.Clientes" */
	identidades_Clientes:ModelTypes["identidades_Clientes"][],
	/** fetch data from the table: "identidades.Clientes_Documentos" */
	identidades_Clientes_Documentos:ModelTypes["identidades_Clientes_Documentos"][],
	/** fetch data from the table: "identidades.Clientes_Documentos_Situacoes" */
	identidades_Clientes_Documentos_Situacoes:ModelTypes["identidades_Clientes_Documentos_Situacoes"][],
	/** fetch aggregated fields from the table: "identidades.Clientes_Documentos_Situacoes" */
	identidades_Clientes_Documentos_Situacoes_aggregate:ModelTypes["identidades_Clientes_Documentos_Situacoes_aggregate"],
	/** fetch data from the table: "identidades.Clientes_Documentos_Situacoes" using primary key columns */
	identidades_Clientes_Documentos_Situacoes_by_pk?:ModelTypes["identidades_Clientes_Documentos_Situacoes"],
	/** fetch aggregated fields from the table: "identidades.Clientes_Documentos" */
	identidades_Clientes_Documentos_aggregate:ModelTypes["identidades_Clientes_Documentos_aggregate"],
	/** fetch data from the table: "identidades.Clientes_Documentos" using primary key columns */
	identidades_Clientes_Documentos_by_pk?:ModelTypes["identidades_Clientes_Documentos"],
	/** fetch aggregated fields from the table: "identidades.Clientes" */
	identidades_Clientes_aggregate:ModelTypes["identidades_Clientes_aggregate"],
	/** fetch data from the table: "identidades.Clientes" using primary key columns */
	identidades_Clientes_by_pk?:ModelTypes["identidades_Clientes"],
	/** fetch data from the table: "identidades.Colaboradores" */
	identidades_Colaboradores:ModelTypes["identidades_Colaboradores"][],
	/** fetch aggregated fields from the table: "identidades.Colaboradores" */
	identidades_Colaboradores_aggregate:ModelTypes["identidades_Colaboradores_aggregate"],
	/** fetch data from the table: "identidades.Colaboradores" using primary key columns */
	identidades_Colaboradores_by_pk?:ModelTypes["identidades_Colaboradores"],
	/** fetch data from the table: "identidades.Fornecedores" */
	identidades_Fornecedores:ModelTypes["identidades_Fornecedores"][],
	/** fetch aggregated fields from the table: "identidades.Fornecedores" */
	identidades_Fornecedores_aggregate:ModelTypes["identidades_Fornecedores_aggregate"],
	/** fetch data from the table: "identidades.Fornecedores" using primary key columns */
	identidades_Fornecedores_by_pk?:ModelTypes["identidades_Fornecedores"],
	/** fetch data from the table: "identidades.Logs" */
	identidades_Logs:ModelTypes["identidades_Logs"][],
	/** fetch aggregated fields from the table: "identidades.Logs" */
	identidades_Logs_aggregate:ModelTypes["identidades_Logs_aggregate"],
	/** fetch data from the table: "identidades.Logs" using primary key columns */
	identidades_Logs_by_pk?:ModelTypes["identidades_Logs"],
	/** fetch data from the table: "identidades.Pessoas" */
	identidades_Pessoas:ModelTypes["identidades_Pessoas"][],
	/** fetch aggregated fields from the table: "identidades.Pessoas" */
	identidades_Pessoas_aggregate:ModelTypes["identidades_Pessoas_aggregate"],
	/** fetch data from the table: "identidades.Pessoas" using primary key columns */
	identidades_Pessoas_by_pk?:ModelTypes["identidades_Pessoas"],
	/** fetch data from the table: "identidades.Representantes" */
	identidades_Representantes:ModelTypes["identidades_Representantes"][],
	/** fetch aggregated fields from the table: "identidades.Representantes" */
	identidades_Representantes_aggregate:ModelTypes["identidades_Representantes_aggregate"],
	/** fetch data from the table: "identidades.Representantes" using primary key columns */
	identidades_Representantes_by_pk?:ModelTypes["identidades_Representantes"],
	/** fetch data from the table: "identidades.Vendedores" */
	identidades_Vendedores:ModelTypes["identidades_Vendedores"][],
	/** fetch aggregated fields from the table: "identidades.Vendedores" */
	identidades_Vendedores_aggregate:ModelTypes["identidades_Vendedores_aggregate"],
	/** fetch data from the table: "identidades.Vendedores" using primary key columns */
	identidades_Vendedores_by_pk?:ModelTypes["identidades_Vendedores"],
	/** fetch data from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos:ModelTypes["movimentacoes_Motivos"][],
	/** fetch aggregated fields from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos_aggregate:ModelTypes["movimentacoes_Motivos_aggregate"],
	/** fetch data from the table: "movimentacoes.Motivos" using primary key columns */
	movimentacoes_Motivos_by_pk?:ModelTypes["movimentacoes_Motivos"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes:ModelTypes["movimentacoes_Movimentacoes"][],
	/** fetch aggregated fields from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes_aggregate:ModelTypes["movimentacoes_Movimentacoes_aggregate"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" using primary key columns */
	movimentacoes_Movimentacoes_by_pk?:ModelTypes["movimentacoes_Movimentacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico:ModelTypes["operacional_OrdemDeServico"][],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades:ModelTypes["operacional_OrdemDeServico_Atividades"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades_aggregate:ModelTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" using primary key columns */
	operacional_OrdemDeServico_Atividades_by_pk?:ModelTypes["operacional_OrdemDeServico_Atividades"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes:ModelTypes["operacional_OrdemDeServico_Situacoes"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes_aggregate:ModelTypes["operacional_OrdemDeServico_Situacoes_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" using primary key columns */
	operacional_OrdemDeServico_Situacoes_by_pk?:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo:ModelTypes["operacional_OrdemDeServico_Tipo"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo_aggregate:ModelTypes["operacional_OrdemDeServico_Tipo_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" using primary key columns */
	operacional_OrdemDeServico_Tipo_by_pk?:ModelTypes["operacional_OrdemDeServico_Tipo"],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico_aggregate:ModelTypes["operacional_OrdemDeServico_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico" using primary key columns */
	operacional_OrdemDeServico_by_pk?:ModelTypes["operacional_OrdemDeServico"],
	/** fetch data from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs:ModelTypes["pedidosDeCompra_Logs"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs_aggregate:ModelTypes["pedidosDeCompra_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Logs" using primary key columns */
	pedidosDeCompra_Logs_by_pk?:ModelTypes["pedidosDeCompra_Logs"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos:ModelTypes["pedidosDeCompra_Orcamentos"][],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" using primary key columns */
	pedidosDeCompra_Orcamentos_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" using primary key columns */
	pedidosDeCompra_Orcamentos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos:ModelTypes["pedidosDeCompra_Pedidos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos_aggregate:ModelTypes["pedidosDeCompra_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" using primary key columns */
	pedidosDeCompra_Pedidos_by_pk?:ModelTypes["pedidosDeCompra_Pedidos"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos:ModelTypes["pedidosDeCompra_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos_aggregate:ModelTypes["pedidosDeCompra_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" using primary key columns */
	pedidosDeCompra_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Produtos"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes:ModelTypes["pedidosDeCompra_Situacoes"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes_aggregate:ModelTypes["pedidosDeCompra_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" using primary key columns */
	pedidosDeCompra_Situacoes_by_pk?:ModelTypes["pedidosDeCompra_Situacoes"],
	/** fetch data from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs:ModelTypes["pedidosDeSaida_Logs"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs_aggregate:ModelTypes["pedidosDeSaida_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Logs" using primary key columns */
	pedidosDeSaida_Logs_by_pk?:ModelTypes["pedidosDeSaida_Logs"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos:ModelTypes["pedidosDeSaida_Pedidos"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos_aggregate:ModelTypes["pedidosDeSaida_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" using primary key columns */
	pedidosDeSaida_Pedidos_by_pk?:ModelTypes["pedidosDeSaida_Pedidos"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos:ModelTypes["pedidosDeSaida_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos_aggregate:ModelTypes["pedidosDeSaida_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" using primary key columns */
	pedidosDeSaida_Produtos_by_pk?:ModelTypes["pedidosDeSaida_Produtos"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes:ModelTypes["pedidosDeSaida_Situacoes"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes_aggregate:ModelTypes["pedidosDeSaida_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" using primary key columns */
	pedidosDeSaida_Situacoes_by_pk?:ModelTypes["pedidosDeSaida_Situacoes"],
	/** fetch data from the table: "producao.Chips" */
	producao_Chips:ModelTypes["producao_Chips"][],
	/** fetch data from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes:ModelTypes["producao_ChipsSituacoes"][],
	/** fetch aggregated fields from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes_aggregate:ModelTypes["producao_ChipsSituacoes_aggregate"],
	/** fetch data from the table: "producao.ChipsSituacoes" using primary key columns */
	producao_ChipsSituacoes_by_pk?:ModelTypes["producao_ChipsSituacoes"],
	/** fetch aggregated fields from the table: "producao.Chips" */
	producao_Chips_aggregate:ModelTypes["producao_Chips_aggregate"],
	/** fetch data from the table: "producao.Chips" using primary key columns */
	producao_Chips_by_pk?:ModelTypes["producao_Chips"],
	/** fetch data from the table: "producao.Equipamentos" */
	producao_Equipamentos:ModelTypes["producao_Equipamentos"][],
	/** fetch aggregated fields from the table: "producao.Equipamentos" */
	producao_Equipamentos_aggregate:ModelTypes["producao_Equipamentos_aggregate"],
	/** fetch data from the table: "producao.Equipamentos" using primary key columns */
	producao_Equipamentos_by_pk?:ModelTypes["producao_Equipamentos"],
	/** fetch data from the table: "producao.Identificadores" */
	producao_Identificadores:ModelTypes["producao_Identificadores"][],
	/** fetch aggregated fields from the table: "producao.Identificadores" */
	producao_Identificadores_aggregate:ModelTypes["producao_Identificadores_aggregate"],
	/** fetch data from the table: "producao.Identificadores" using primary key columns */
	producao_Identificadores_by_pk?:ModelTypes["producao_Identificadores"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens:ModelTypes["producao_KitDeInsumo_Itens"][],
	/** fetch aggregated fields from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens_aggregate:ModelTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" using primary key columns */
	producao_KitDeInsumo_Itens_by_pk?:ModelTypes["producao_KitDeInsumo_Itens"],
	/** fetch data from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao:ModelTypes["producao_KitsDeInstalacao"][],
	/** fetch aggregated fields from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao_aggregate:ModelTypes["producao_KitsDeInstalacao_aggregate"],
	/** fetch data from the table: "producao.KitsDeInstalacao" using primary key columns */
	producao_KitsDeInstalacao_by_pk?:ModelTypes["producao_KitsDeInstalacao"],
	/** fetch data from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo:ModelTypes["producao_KitsDeInsumo"][],
	/** fetch aggregated fields from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo_aggregate:ModelTypes["producao_KitsDeInsumo_aggregate"],
	/** fetch data from the table: "producao.KitsDeInsumo" using primary key columns */
	producao_KitsDeInsumo_by_pk?:ModelTypes["producao_KitsDeInsumo"],
	/** fetch data from the table: "producao.Logs" */
	producao_Logs:ModelTypes["producao_Logs"][],
	/** fetch aggregated fields from the table: "producao.Logs" */
	producao_Logs_aggregate:ModelTypes["producao_Logs_aggregate"],
	/** fetch data from the table: "producao.Logs" using primary key columns */
	producao_Logs_by_pk?:ModelTypes["producao_Logs"],
	/** fetch data from the table: "producao.Rastreadores" */
	producao_Rastreadores:ModelTypes["producao_Rastreadores"][],
	/** fetch aggregated fields from the table: "producao.Rastreadores" */
	producao_Rastreadores_aggregate:ModelTypes["producao_Rastreadores_aggregate"],
	/** fetch data from the table: "producao.Rastreadores" using primary key columns */
	producao_Rastreadores_by_pk?:ModelTypes["producao_Rastreadores"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo:ModelTypes["producao_TiposDeKitDeInsumo"][],
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo_aggregate:ModelTypes["producao_TiposDeKitDeInsumo_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" using primary key columns */
	producao_TiposDeKitDeInsumo_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"][],
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens_aggregate:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" using primary key columns */
	producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** fetch data from the table: "vendas.GruposDePerguntas" */
	vendas_GruposDePerguntas:ModelTypes["vendas_GruposDePerguntas"][],
	/** fetch data from the table: "vendas.GruposDePerguntas_Perguntas" */
	vendas_GruposDePerguntas_Perguntas:ModelTypes["vendas_GruposDePerguntas_Perguntas"][],
	/** fetch aggregated fields from the table: "vendas.GruposDePerguntas_Perguntas" */
	vendas_GruposDePerguntas_Perguntas_aggregate:ModelTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	/** fetch data from the table: "vendas.GruposDePerguntas_Perguntas" using primary key columns */
	vendas_GruposDePerguntas_Perguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas_Perguntas"],
	/** fetch aggregated fields from the table: "vendas.GruposDePerguntas" */
	vendas_GruposDePerguntas_aggregate:ModelTypes["vendas_GruposDePerguntas_aggregate"],
	/** fetch data from the table: "vendas.GruposDePerguntas" using primary key columns */
	vendas_GruposDePerguntas_by_pk?:ModelTypes["vendas_GruposDePerguntas"],
	/** fetch data from the table: "vendas.Perguntas" */
	vendas_Perguntas:ModelTypes["vendas_Perguntas"][],
	/** fetch aggregated fields from the table: "vendas.Perguntas" */
	vendas_Perguntas_aggregate:ModelTypes["vendas_Perguntas_aggregate"],
	/** fetch data from the table: "vendas.Perguntas" using primary key columns */
	vendas_Perguntas_by_pk?:ModelTypes["vendas_Perguntas"],
	/** fetch data from the table: "vendas.TiposDePagamento" */
	vendas_TiposDePagamento:ModelTypes["vendas_TiposDePagamento"][],
	/** fetch aggregated fields from the table: "vendas.TiposDePagamento" */
	vendas_TiposDePagamento_aggregate:ModelTypes["vendas_TiposDePagamento_aggregate"],
	/** fetch data from the table: "vendas.TiposDePagamento" using primary key columns */
	vendas_TiposDePagamento_by_pk?:ModelTypes["vendas_TiposDePagamento"],
	/** fetch data from the table: "vendas.TiposDeRecorrencia" */
	vendas_TiposDeRecorrencia:ModelTypes["vendas_TiposDeRecorrencia"][],
	/** fetch aggregated fields from the table: "vendas.TiposDeRecorrencia" */
	vendas_TiposDeRecorrencia_aggregate:ModelTypes["vendas_TiposDeRecorrencia_aggregate"],
	/** fetch data from the table: "vendas.TiposDeRecorrencia" using primary key columns */
	vendas_TiposDeRecorrencia_by_pk?:ModelTypes["vendas_TiposDeRecorrencia"]
};
	["subscription_root"]: {
		/** fetch data from the table: "Configuracoes" */
	Configuracoes:ModelTypes["Configuracoes"][],
	/** fetch aggregated fields from the table: "Configuracoes" */
	Configuracoes_aggregate:ModelTypes["Configuracoes_aggregate"],
	/** fetch data from the table: "Configuracoes" using primary key columns */
	Configuracoes_by_pk?:ModelTypes["Configuracoes"],
	/** fetch data from the table: "Operadoras" */
	Operadoras:ModelTypes["Operadoras"][],
	/** fetch aggregated fields from the table: "Operadoras" */
	Operadoras_aggregate:ModelTypes["Operadoras_aggregate"],
	/** fetch data from the table: "Operadoras" using primary key columns */
	Operadoras_by_pk?:ModelTypes["Operadoras"],
	/** fetch data from the table: "Produtos" */
	Produtos:ModelTypes["Produtos"][],
	/** fetch aggregated fields from the table: "Produtos" */
	Produtos_aggregate:ModelTypes["Produtos_aggregate"],
	/** fetch data from the table: "Produtos" using primary key columns */
	Produtos_by_pk?:ModelTypes["Produtos"],
	/** fetch data from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas:ModelTypes["UnidadesDeMedidas"][],
	/** fetch aggregated fields from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas_aggregate:ModelTypes["UnidadesDeMedidas_aggregate"],
	/** fetch data from the table: "UnidadesDeMedidas" using primary key columns */
	UnidadesDeMedidas_by_pk?:ModelTypes["UnidadesDeMedidas"],
	/** fetch data from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos:ModelTypes["estoque_Enderecamentos"][],
	/** fetch aggregated fields from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos_aggregate:ModelTypes["estoque_Enderecamentos_aggregate"],
	/** fetch data from the table: "estoque.Enderecamentos" using primary key columns */
	estoque_Enderecamentos_by_pk?:ModelTypes["estoque_Enderecamentos"],
	/** fetch data from the table: "estoque.Fabricantes" */
	estoque_Fabricantes:ModelTypes["estoque_Fabricantes"][],
	/** fetch aggregated fields from the table: "estoque.Fabricantes" */
	estoque_Fabricantes_aggregate:ModelTypes["estoque_Fabricantes_aggregate"],
	/** fetch data from the table: "estoque.Fabricantes" using primary key columns */
	estoque_Fabricantes_by_pk?:ModelTypes["estoque_Fabricantes"],
	/** fetch data from the table: "estoque.Familias" */
	estoque_Familias:ModelTypes["estoque_Familias"][],
	/** fetch aggregated fields from the table: "estoque.Familias" */
	estoque_Familias_aggregate:ModelTypes["estoque_Familias_aggregate"],
	/** fetch data from the table: "estoque.Familias" using primary key columns */
	estoque_Familias_by_pk?:ModelTypes["estoque_Familias"],
	/** fetch data from the table: "estoque.Grupos" */
	estoque_Grupos:ModelTypes["estoque_Grupos"][],
	/** fetch aggregated fields from the table: "estoque.Grupos" */
	estoque_Grupos_aggregate:ModelTypes["estoque_Grupos_aggregate"],
	/** fetch data from the table: "estoque.Grupos" using primary key columns */
	estoque_Grupos_by_pk?:ModelTypes["estoque_Grupos"],
	/** fetch data from the table: "estoque.Itens" */
	estoque_Itens:ModelTypes["estoque_Itens"][],
	/** fetch aggregated fields from the table: "estoque.Itens" */
	estoque_Itens_aggregate:ModelTypes["estoque_Itens_aggregate"],
	/** fetch data from the table: "estoque.Itens" using primary key columns */
	estoque_Itens_by_pk?:ModelTypes["estoque_Itens"],
	/** fetch data from the table: "estoque.Logs" */
	estoque_Logs:ModelTypes["estoque_Logs"][],
	/** fetch aggregated fields from the table: "estoque.Logs" */
	estoque_Logs_aggregate:ModelTypes["estoque_Logs_aggregate"],
	/** fetch data from the table: "estoque.Logs" using primary key columns */
	estoque_Logs_by_pk?:ModelTypes["estoque_Logs"],
	/** fetch data from the table: "estoque.Modelos" */
	estoque_Modelos:ModelTypes["estoque_Modelos"][],
	/** fetch aggregated fields from the table: "estoque.Modelos" */
	estoque_Modelos_aggregate:ModelTypes["estoque_Modelos_aggregate"],
	/** fetch data from the table: "estoque.Modelos" using primary key columns */
	estoque_Modelos_by_pk?:ModelTypes["estoque_Modelos"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos:ModelTypes["estoque_TiposDeEnderecamentos"][],
	/** fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos_aggregate:ModelTypes["estoque_TiposDeEnderecamentos_aggregate"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns */
	estoque_TiposDeEnderecamentos_by_pk?:ModelTypes["estoque_TiposDeEnderecamentos"],
	/** fetch data from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos:ModelTypes["movimentacoes_Motivos"][],
	/** fetch aggregated fields from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos_aggregate:ModelTypes["movimentacoes_Motivos_aggregate"],
	/** fetch data from the table: "movimentacoes.Motivos" using primary key columns */
	movimentacoes_Motivos_by_pk?:ModelTypes["movimentacoes_Motivos"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes:ModelTypes["movimentacoes_Movimentacoes"][],
	/** fetch aggregated fields from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes_aggregate:ModelTypes["movimentacoes_Movimentacoes_aggregate"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" using primary key columns */
	movimentacoes_Movimentacoes_by_pk?:ModelTypes["movimentacoes_Movimentacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico:ModelTypes["operacional_OrdemDeServico"][],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades:ModelTypes["operacional_OrdemDeServico_Atividades"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades_aggregate:ModelTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" using primary key columns */
	operacional_OrdemDeServico_Atividades_by_pk?:ModelTypes["operacional_OrdemDeServico_Atividades"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes:ModelTypes["operacional_OrdemDeServico_Situacoes"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes_aggregate:ModelTypes["operacional_OrdemDeServico_Situacoes_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" using primary key columns */
	operacional_OrdemDeServico_Situacoes_by_pk?:ModelTypes["operacional_OrdemDeServico_Situacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo:ModelTypes["operacional_OrdemDeServico_Tipo"][],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo_aggregate:ModelTypes["operacional_OrdemDeServico_Tipo_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" using primary key columns */
	operacional_OrdemDeServico_Tipo_by_pk?:ModelTypes["operacional_OrdemDeServico_Tipo"],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico_aggregate:ModelTypes["operacional_OrdemDeServico_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico" using primary key columns */
	operacional_OrdemDeServico_by_pk?:ModelTypes["operacional_OrdemDeServico"],
	/** fetch data from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs:ModelTypes["pedidosDeCompra_Logs"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs_aggregate:ModelTypes["pedidosDeCompra_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Logs" using primary key columns */
	pedidosDeCompra_Logs_by_pk?:ModelTypes["pedidosDeCompra_Logs"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos:ModelTypes["pedidosDeCompra_Orcamentos"][],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" using primary key columns */
	pedidosDeCompra_Orcamentos_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos_aggregate:ModelTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" using primary key columns */
	pedidosDeCompra_Orcamentos_by_pk?:ModelTypes["pedidosDeCompra_Orcamentos"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos:ModelTypes["pedidosDeCompra_Pedidos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos_aggregate:ModelTypes["pedidosDeCompra_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" using primary key columns */
	pedidosDeCompra_Pedidos_by_pk?:ModelTypes["pedidosDeCompra_Pedidos"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos:ModelTypes["pedidosDeCompra_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos_aggregate:ModelTypes["pedidosDeCompra_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" using primary key columns */
	pedidosDeCompra_Produtos_by_pk?:ModelTypes["pedidosDeCompra_Produtos"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes:ModelTypes["pedidosDeCompra_Situacoes"][],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes_aggregate:ModelTypes["pedidosDeCompra_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" using primary key columns */
	pedidosDeCompra_Situacoes_by_pk?:ModelTypes["pedidosDeCompra_Situacoes"],
	/** fetch data from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs:ModelTypes["pedidosDeSaida_Logs"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs_aggregate:ModelTypes["pedidosDeSaida_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Logs" using primary key columns */
	pedidosDeSaida_Logs_by_pk?:ModelTypes["pedidosDeSaida_Logs"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos:ModelTypes["pedidosDeSaida_Pedidos"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos_aggregate:ModelTypes["pedidosDeSaida_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" using primary key columns */
	pedidosDeSaida_Pedidos_by_pk?:ModelTypes["pedidosDeSaida_Pedidos"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos:ModelTypes["pedidosDeSaida_Produtos"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos_aggregate:ModelTypes["pedidosDeSaida_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" using primary key columns */
	pedidosDeSaida_Produtos_by_pk?:ModelTypes["pedidosDeSaida_Produtos"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes:ModelTypes["pedidosDeSaida_Situacoes"][],
	/** fetch aggregated fields from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes_aggregate:ModelTypes["pedidosDeSaida_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" using primary key columns */
	pedidosDeSaida_Situacoes_by_pk?:ModelTypes["pedidosDeSaida_Situacoes"],
	/** fetch data from the table: "producao.Chips" */
	producao_Chips:ModelTypes["producao_Chips"][],
	/** fetch data from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes:ModelTypes["producao_ChipsSituacoes"][],
	/** fetch aggregated fields from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes_aggregate:ModelTypes["producao_ChipsSituacoes_aggregate"],
	/** fetch data from the table: "producao.ChipsSituacoes" using primary key columns */
	producao_ChipsSituacoes_by_pk?:ModelTypes["producao_ChipsSituacoes"],
	/** fetch aggregated fields from the table: "producao.Chips" */
	producao_Chips_aggregate:ModelTypes["producao_Chips_aggregate"],
	/** fetch data from the table: "producao.Chips" using primary key columns */
	producao_Chips_by_pk?:ModelTypes["producao_Chips"],
	/** fetch data from the table: "producao.Equipamentos" */
	producao_Equipamentos:ModelTypes["producao_Equipamentos"][],
	/** fetch aggregated fields from the table: "producao.Equipamentos" */
	producao_Equipamentos_aggregate:ModelTypes["producao_Equipamentos_aggregate"],
	/** fetch data from the table: "producao.Equipamentos" using primary key columns */
	producao_Equipamentos_by_pk?:ModelTypes["producao_Equipamentos"],
	/** fetch data from the table: "producao.Identificadores" */
	producao_Identificadores:ModelTypes["producao_Identificadores"][],
	/** fetch aggregated fields from the table: "producao.Identificadores" */
	producao_Identificadores_aggregate:ModelTypes["producao_Identificadores_aggregate"],
	/** fetch data from the table: "producao.Identificadores" using primary key columns */
	producao_Identificadores_by_pk?:ModelTypes["producao_Identificadores"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens:ModelTypes["producao_KitDeInsumo_Itens"][],
	/** fetch aggregated fields from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens_aggregate:ModelTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" using primary key columns */
	producao_KitDeInsumo_Itens_by_pk?:ModelTypes["producao_KitDeInsumo_Itens"],
	/** fetch data from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao:ModelTypes["producao_KitsDeInstalacao"][],
	/** fetch aggregated fields from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao_aggregate:ModelTypes["producao_KitsDeInstalacao_aggregate"],
	/** fetch data from the table: "producao.KitsDeInstalacao" using primary key columns */
	producao_KitsDeInstalacao_by_pk?:ModelTypes["producao_KitsDeInstalacao"],
	/** fetch data from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo:ModelTypes["producao_KitsDeInsumo"][],
	/** fetch aggregated fields from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo_aggregate:ModelTypes["producao_KitsDeInsumo_aggregate"],
	/** fetch data from the table: "producao.KitsDeInsumo" using primary key columns */
	producao_KitsDeInsumo_by_pk?:ModelTypes["producao_KitsDeInsumo"],
	/** fetch data from the table: "producao.Logs" */
	producao_Logs:ModelTypes["producao_Logs"][],
	/** fetch aggregated fields from the table: "producao.Logs" */
	producao_Logs_aggregate:ModelTypes["producao_Logs_aggregate"],
	/** fetch data from the table: "producao.Logs" using primary key columns */
	producao_Logs_by_pk?:ModelTypes["producao_Logs"],
	/** fetch data from the table: "producao.Rastreadores" */
	producao_Rastreadores:ModelTypes["producao_Rastreadores"][],
	/** fetch aggregated fields from the table: "producao.Rastreadores" */
	producao_Rastreadores_aggregate:ModelTypes["producao_Rastreadores_aggregate"],
	/** fetch data from the table: "producao.Rastreadores" using primary key columns */
	producao_Rastreadores_by_pk?:ModelTypes["producao_Rastreadores"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo:ModelTypes["producao_TiposDeKitDeInsumo"][],
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo_aggregate:ModelTypes["producao_TiposDeKitDeInsumo_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" using primary key columns */
	producao_TiposDeKitDeInsumo_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"][],
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens_aggregate:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" using primary key columns */
	producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?:ModelTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]
};
	["timestamptz"]:any;
	/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
["timestamptz_comparison_exp"]: GraphQLTypes["timestamptz_comparison_exp"];
	["uuid"]:any;
	/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
["uuid_comparison_exp"]: GraphQLTypes["uuid_comparison_exp"];
	/** columns and relationships of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas"]: {
		Id:ModelTypes["uuid"],
	Nome:string,
	/** An array relationship */
	Perguntas:ModelTypes["vendas_GruposDePerguntas_Perguntas"][],
	/** An aggregate relationship */
	Perguntas_aggregate:ModelTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** columns and relationships of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas"]: {
		/** An object relationship */
	Grupo:ModelTypes["vendas_GruposDePerguntas"],
	Grupo_Id:ModelTypes["uuid"],
	Id:ModelTypes["uuid"],
	/** An object relationship */
	Pergunta:ModelTypes["vendas_Perguntas"],
	Pergunta_Id:ModelTypes["uuid"],
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate"]: {
		aggregate?:ModelTypes["vendas_GruposDePerguntas_Perguntas_aggregate_fields"],
	nodes:ModelTypes["vendas_GruposDePerguntas_Perguntas"][]
};
	/** aggregate fields of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["vendas_GruposDePerguntas_Perguntas_max_fields"],
	min?:ModelTypes["vendas_GruposDePerguntas_Perguntas_min_fields"]
};
	/** order by aggregate values of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"];
	/** input type for inserting array relation for remote table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"];
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas_Perguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_Perguntas_bool_exp"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"];
	/** unique or primary key constraints on table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_constraint"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_constraint"];
	/** input type for inserting data into table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_insert_input"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_insert_input"];
	/** aggregate max on columns */
["vendas_GruposDePerguntas_Perguntas_max_fields"]: {
		Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pergunta_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by max() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_max_order_by"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_max_order_by"];
	/** aggregate min on columns */
["vendas_GruposDePerguntas_Perguntas_min_fields"]: {
		Grupo_Id?:ModelTypes["uuid"],
	Id?:ModelTypes["uuid"],
	Pergunta_Id?:ModelTypes["uuid"],
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** order by min() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_min_order_by"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_min_order_by"];
	/** response of any mutation on the table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["vendas_GruposDePerguntas_Perguntas"][]
};
	/** on conflict condition type for table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_on_conflict"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_on_conflict"];
	/** Ordering options when selecting data from "vendas.GruposDePerguntas_Perguntas". */
["vendas_GruposDePerguntas_Perguntas_order_by"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_order_by"];
	/** primary key columns input for table: vendas_GruposDePerguntas_Perguntas */
["vendas_GruposDePerguntas_Perguntas_pk_columns_input"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_pk_columns_input"];
	/** select columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_select_column"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_select_column"];
	/** input type for updating data in table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_set_input"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_set_input"];
	/** update columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_update_column"]: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_update_column"];
	/** aggregated selection of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate"]: {
		aggregate?:ModelTypes["vendas_GruposDePerguntas_aggregate_fields"],
	nodes:ModelTypes["vendas_GruposDePerguntas"][]
};
	/** aggregate fields of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["vendas_GruposDePerguntas_max_fields"],
	min?:ModelTypes["vendas_GruposDePerguntas_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_bool_exp"]: GraphQLTypes["vendas_GruposDePerguntas_bool_exp"];
	/** unique or primary key constraints on table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_constraint"]: GraphQLTypes["vendas_GruposDePerguntas_constraint"];
	/** input type for inserting data into table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_insert_input"]: GraphQLTypes["vendas_GruposDePerguntas_insert_input"];
	/** aggregate max on columns */
["vendas_GruposDePerguntas_max_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["vendas_GruposDePerguntas_min_fields"]: {
		Id?:ModelTypes["uuid"],
	Nome?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["vendas_GruposDePerguntas"][]
};
	/** input type for inserting object relation for remote table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_obj_rel_insert_input"]: GraphQLTypes["vendas_GruposDePerguntas_obj_rel_insert_input"];
	/** on conflict condition type for table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_on_conflict"]: GraphQLTypes["vendas_GruposDePerguntas_on_conflict"];
	/** Ordering options when selecting data from "vendas.GruposDePerguntas". */
["vendas_GruposDePerguntas_order_by"]: GraphQLTypes["vendas_GruposDePerguntas_order_by"];
	/** primary key columns input for table: vendas_GruposDePerguntas */
["vendas_GruposDePerguntas_pk_columns_input"]: GraphQLTypes["vendas_GruposDePerguntas_pk_columns_input"];
	/** select columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_select_column"]: GraphQLTypes["vendas_GruposDePerguntas_select_column"];
	/** input type for updating data in table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_set_input"]: GraphQLTypes["vendas_GruposDePerguntas_set_input"];
	/** update columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_update_column"]: GraphQLTypes["vendas_GruposDePerguntas_update_column"];
	/** columns and relationships of "vendas.Perguntas" */
["vendas_Perguntas"]: {
		Descricao:string,
	/** An array relationship */
	Grupos:ModelTypes["vendas_GruposDePerguntas_Perguntas"][],
	/** An aggregate relationship */
	Grupos_aggregate:ModelTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	Id:ModelTypes["uuid"],
	Titulo:string,
	created_at:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at:ModelTypes["timestamptz"]
};
	/** aggregated selection of "vendas.Perguntas" */
["vendas_Perguntas_aggregate"]: {
		aggregate?:ModelTypes["vendas_Perguntas_aggregate_fields"],
	nodes:ModelTypes["vendas_Perguntas"][]
};
	/** aggregate fields of "vendas.Perguntas" */
["vendas_Perguntas_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["vendas_Perguntas_max_fields"],
	min?:ModelTypes["vendas_Perguntas_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.Perguntas". All fields are combined with a logical 'AND'. */
["vendas_Perguntas_bool_exp"]: GraphQLTypes["vendas_Perguntas_bool_exp"];
	/** unique or primary key constraints on table "vendas.Perguntas" */
["vendas_Perguntas_constraint"]: GraphQLTypes["vendas_Perguntas_constraint"];
	/** input type for inserting data into table "vendas.Perguntas" */
["vendas_Perguntas_insert_input"]: GraphQLTypes["vendas_Perguntas_insert_input"];
	/** aggregate max on columns */
["vendas_Perguntas_max_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Titulo?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** aggregate min on columns */
["vendas_Perguntas_min_fields"]: {
		Descricao?:string,
	Id?:ModelTypes["uuid"],
	Titulo?:string,
	created_at?:ModelTypes["timestamptz"],
	deleted_at?:ModelTypes["timestamptz"],
	updated_at?:ModelTypes["timestamptz"]
};
	/** response of any mutation on the table "vendas.Perguntas" */
["vendas_Perguntas_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["vendas_Perguntas"][]
};
	/** input type for inserting object relation for remote table "vendas.Perguntas" */
["vendas_Perguntas_obj_rel_insert_input"]: GraphQLTypes["vendas_Perguntas_obj_rel_insert_input"];
	/** on conflict condition type for table "vendas.Perguntas" */
["vendas_Perguntas_on_conflict"]: GraphQLTypes["vendas_Perguntas_on_conflict"];
	/** Ordering options when selecting data from "vendas.Perguntas". */
["vendas_Perguntas_order_by"]: GraphQLTypes["vendas_Perguntas_order_by"];
	/** primary key columns input for table: vendas_Perguntas */
["vendas_Perguntas_pk_columns_input"]: GraphQLTypes["vendas_Perguntas_pk_columns_input"];
	/** select columns of table "vendas.Perguntas" */
["vendas_Perguntas_select_column"]: GraphQLTypes["vendas_Perguntas_select_column"];
	/** input type for updating data in table "vendas.Perguntas" */
["vendas_Perguntas_set_input"]: GraphQLTypes["vendas_Perguntas_set_input"];
	/** update columns of table "vendas.Perguntas" */
["vendas_Perguntas_update_column"]: GraphQLTypes["vendas_Perguntas_update_column"];
	/** columns and relationships of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento"]: {
		Comentario:string,
	Valor:string
};
	/** aggregated selection of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate"]: {
		aggregate?:ModelTypes["vendas_TiposDePagamento_aggregate_fields"],
	nodes:ModelTypes["vendas_TiposDePagamento"][]
};
	/** aggregate fields of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["vendas_TiposDePagamento_max_fields"],
	min?:ModelTypes["vendas_TiposDePagamento_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.TiposDePagamento". All fields are combined with a logical 'AND'. */
["vendas_TiposDePagamento_bool_exp"]: GraphQLTypes["vendas_TiposDePagamento_bool_exp"];
	/** unique or primary key constraints on table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_constraint"]: GraphQLTypes["vendas_TiposDePagamento_constraint"];
	["vendas_TiposDePagamento_enum"]: GraphQLTypes["vendas_TiposDePagamento_enum"];
	/** Boolean expression to compare columns of type "vendas_TiposDePagamento_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDePagamento_enum_comparison_exp"]: GraphQLTypes["vendas_TiposDePagamento_enum_comparison_exp"];
	/** input type for inserting data into table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_insert_input"]: GraphQLTypes["vendas_TiposDePagamento_insert_input"];
	/** aggregate max on columns */
["vendas_TiposDePagamento_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["vendas_TiposDePagamento_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["vendas_TiposDePagamento"][]
};
	/** input type for inserting object relation for remote table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_obj_rel_insert_input"]: GraphQLTypes["vendas_TiposDePagamento_obj_rel_insert_input"];
	/** on conflict condition type for table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_on_conflict"]: GraphQLTypes["vendas_TiposDePagamento_on_conflict"];
	/** Ordering options when selecting data from "vendas.TiposDePagamento". */
["vendas_TiposDePagamento_order_by"]: GraphQLTypes["vendas_TiposDePagamento_order_by"];
	/** primary key columns input for table: vendas_TiposDePagamento */
["vendas_TiposDePagamento_pk_columns_input"]: GraphQLTypes["vendas_TiposDePagamento_pk_columns_input"];
	/** select columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_select_column"]: GraphQLTypes["vendas_TiposDePagamento_select_column"];
	/** input type for updating data in table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_set_input"]: GraphQLTypes["vendas_TiposDePagamento_set_input"];
	/** update columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_update_column"]: GraphQLTypes["vendas_TiposDePagamento_update_column"];
	/** columns and relationships of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia"]: {
		Comentario:string,
	Valor:string
};
	/** aggregated selection of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate"]: {
		aggregate?:ModelTypes["vendas_TiposDeRecorrencia_aggregate_fields"],
	nodes:ModelTypes["vendas_TiposDeRecorrencia"][]
};
	/** aggregate fields of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate_fields"]: {
		count:number,
	max?:ModelTypes["vendas_TiposDeRecorrencia_max_fields"],
	min?:ModelTypes["vendas_TiposDeRecorrencia_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.TiposDeRecorrencia". All fields are combined with a logical 'AND'. */
["vendas_TiposDeRecorrencia_bool_exp"]: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"];
	/** unique or primary key constraints on table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_constraint"]: GraphQLTypes["vendas_TiposDeRecorrencia_constraint"];
	["vendas_TiposDeRecorrencia_enum"]: GraphQLTypes["vendas_TiposDeRecorrencia_enum"];
	/** Boolean expression to compare columns of type "vendas_TiposDeRecorrencia_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDeRecorrencia_enum_comparison_exp"]: GraphQLTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"];
	/** input type for inserting data into table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_insert_input"]: GraphQLTypes["vendas_TiposDeRecorrencia_insert_input"];
	/** aggregate max on columns */
["vendas_TiposDeRecorrencia_max_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** aggregate min on columns */
["vendas_TiposDeRecorrencia_min_fields"]: {
		Comentario?:string,
	Valor?:string
};
	/** response of any mutation on the table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_mutation_response"]: {
		/** number of rows affected by the mutation */
	affected_rows:number,
	/** data from the rows affected by the mutation */
	returning:ModelTypes["vendas_TiposDeRecorrencia"][]
};
	/** input type for inserting object relation for remote table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_obj_rel_insert_input"]: GraphQLTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"];
	/** on conflict condition type for table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_on_conflict"]: GraphQLTypes["vendas_TiposDeRecorrencia_on_conflict"];
	/** Ordering options when selecting data from "vendas.TiposDeRecorrencia". */
["vendas_TiposDeRecorrencia_order_by"]: GraphQLTypes["vendas_TiposDeRecorrencia_order_by"];
	/** primary key columns input for table: vendas_TiposDeRecorrencia */
["vendas_TiposDeRecorrencia_pk_columns_input"]: GraphQLTypes["vendas_TiposDeRecorrencia_pk_columns_input"];
	/** select columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_select_column"]: GraphQLTypes["vendas_TiposDeRecorrencia_select_column"];
	/** input type for updating data in table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_set_input"]: GraphQLTypes["vendas_TiposDeRecorrencia_set_input"];
	/** update columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_update_column"]: GraphQLTypes["vendas_TiposDeRecorrencia_update_column"]
    }

export type GraphQLTypes = {
    /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
["Boolean_comparison_exp"]: {
		_eq?: boolean,
	_gt?: boolean,
	_gte?: boolean,
	_in?: Array<boolean>,
	_is_null?: boolean,
	_lt?: boolean,
	_lte?: boolean,
	_neq?: boolean,
	_nin?: Array<boolean>
};
	["CadastrarClienteOutput"]: {
	__typename: "CadastrarClienteOutput",
	Id: GraphQLTypes["uuid"]
};
	["CadastrarColaboradorOutput"]: {
	__typename: "CadastrarColaboradorOutput",
	Id: GraphQLTypes["uuid"]
};
	["CadastrarFornecedorOutput"]: {
	__typename: "CadastrarFornecedorOutput",
	Id: GraphQLTypes["uuid"]
};
	["CadastrarRepresentanteOutput"]: {
	__typename: "CadastrarRepresentanteOutput",
	Id: GraphQLTypes["uuid"]
};
	/** columns and relationships of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos"]: {
	__typename: "CategoriasDeVeiculos",
	Id: GraphQLTypes["uuid"],
	Nome: string
};
	/** aggregated selection of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate"]: {
	__typename: "CategoriasDeVeiculos_aggregate",
	aggregate?: GraphQLTypes["CategoriasDeVeiculos_aggregate_fields"],
	nodes: Array<GraphQLTypes["CategoriasDeVeiculos"]>
};
	/** aggregate fields of "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_aggregate_fields"]: {
	__typename: "CategoriasDeVeiculos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["CategoriasDeVeiculos_max_fields"],
	min?: GraphQLTypes["CategoriasDeVeiculos_min_fields"]
};
	/** Boolean expression to filter rows from the table "CategoriasDeVeiculos". All fields are combined with a logical 'AND'. */
["CategoriasDeVeiculos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["CategoriasDeVeiculos_bool_exp"]>,
	_not?: GraphQLTypes["CategoriasDeVeiculos_bool_exp"],
	_or?: Array<GraphQLTypes["CategoriasDeVeiculos_bool_exp"]>
};
	/** unique or primary key constraints on table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_constraint"]: CategoriasDeVeiculos_constraint;
	/** input type for inserting data into table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string
};
	/** aggregate max on columns */
["CategoriasDeVeiculos_max_fields"]: {
	__typename: "CategoriasDeVeiculos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string
};
	/** aggregate min on columns */
["CategoriasDeVeiculos_min_fields"]: {
	__typename: "CategoriasDeVeiculos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string
};
	/** response of any mutation on the table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_mutation_response"]: {
	__typename: "CategoriasDeVeiculos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["CategoriasDeVeiculos"]>
};
	/** input type for inserting object relation for remote table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_obj_rel_insert_input"]: {
		data: GraphQLTypes["CategoriasDeVeiculos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["CategoriasDeVeiculos_on_conflict"]
};
	/** on conflict condition type for table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_on_conflict"]: {
		constraint: GraphQLTypes["CategoriasDeVeiculos_constraint"],
	update_columns: Array<GraphQLTypes["CategoriasDeVeiculos_update_column"]>,
	where?: GraphQLTypes["CategoriasDeVeiculos_bool_exp"]
};
	/** Ordering options when selecting data from "CategoriasDeVeiculos". */
["CategoriasDeVeiculos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: CategoriasDeVeiculos */
["CategoriasDeVeiculos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_select_column"]: CategoriasDeVeiculos_select_column;
	/** input type for updating data in table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string
};
	/** update columns of table "CategoriasDeVeiculos" */
["CategoriasDeVeiculos_update_column"]: CategoriasDeVeiculos_update_column;
	/** columns and relationships of "Configuracoes" */
["Configuracoes"]: {
	__typename: "Configuracoes",
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Slug: string,
	Valor: GraphQLTypes["jsonb"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "Configuracoes" */
["Configuracoes_aggregate"]: {
	__typename: "Configuracoes_aggregate",
	aggregate?: GraphQLTypes["Configuracoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["Configuracoes"]>
};
	/** aggregate fields of "Configuracoes" */
["Configuracoes_aggregate_fields"]: {
	__typename: "Configuracoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["Configuracoes_max_fields"],
	min?: GraphQLTypes["Configuracoes_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_append_input"]: {
		Valor?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "Configuracoes". All fields are combined with a logical 'AND'. */
["Configuracoes_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Slug?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["jsonb_comparison_exp"],
	_and?: Array<GraphQLTypes["Configuracoes_bool_exp"]>,
	_not?: GraphQLTypes["Configuracoes_bool_exp"],
	_or?: Array<GraphQLTypes["Configuracoes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "Configuracoes" */
["Configuracoes_constraint"]: Configuracoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["Configuracoes_delete_at_path_input"]: {
		Valor?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["Configuracoes_delete_elem_input"]: {
		Valor?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["Configuracoes_delete_key_input"]: {
		Valor?: string
};
	/** input type for inserting data into table "Configuracoes" */
["Configuracoes_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	Valor?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["Configuracoes_max_fields"]: {
	__typename: "Configuracoes_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["Configuracoes_min_fields"]: {
	__typename: "Configuracoes_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "Configuracoes" */
["Configuracoes_mutation_response"]: {
	__typename: "Configuracoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["Configuracoes"]>
};
	/** on conflict condition type for table "Configuracoes" */
["Configuracoes_on_conflict"]: {
		constraint: GraphQLTypes["Configuracoes_constraint"],
	update_columns: Array<GraphQLTypes["Configuracoes_update_column"]>,
	where?: GraphQLTypes["Configuracoes_bool_exp"]
};
	/** Ordering options when selecting data from "Configuracoes". */
["Configuracoes_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Slug?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: Configuracoes */
["Configuracoes_pk_columns_input"]: {
		Slug: string
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["Configuracoes_prepend_input"]: {
		Valor?: GraphQLTypes["jsonb"]
};
	/** select columns of table "Configuracoes" */
["Configuracoes_select_column"]: Configuracoes_select_column;
	/** input type for updating data in table "Configuracoes" */
["Configuracoes_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	Valor?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "Configuracoes" */
["Configuracoes_update_column"]: Configuracoes_update_column;
	/** columns and relationships of "EstadosEMunicipios" */
["EstadosEMunicipios"]: {
	__typename: "EstadosEMunicipios",
	/** An array relationship */
	Cidades: Array<GraphQLTypes["EstadosEMunicipios"]>,
	/** An aggregate relationship */
	Cidades_aggregate: GraphQLTypes["EstadosEMunicipios_aggregate"],
	CodigoIbge?: GraphQLTypes["bigint"],
	/** An object relationship */
	Estado?: GraphQLTypes["EstadosEMunicipios"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Sigla?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate"]: {
	__typename: "EstadosEMunicipios_aggregate",
	aggregate?: GraphQLTypes["EstadosEMunicipios_aggregate_fields"],
	nodes: Array<GraphQLTypes["EstadosEMunicipios"]>
};
	/** aggregate fields of "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_fields"]: {
	__typename: "EstadosEMunicipios_aggregate_fields",
	avg?: GraphQLTypes["EstadosEMunicipios_avg_fields"],
	count: number,
	max?: GraphQLTypes["EstadosEMunicipios_max_fields"],
	min?: GraphQLTypes["EstadosEMunicipios_min_fields"],
	stddev?: GraphQLTypes["EstadosEMunicipios_stddev_fields"],
	stddev_pop?: GraphQLTypes["EstadosEMunicipios_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["EstadosEMunicipios_stddev_samp_fields"],
	sum?: GraphQLTypes["EstadosEMunicipios_sum_fields"],
	var_pop?: GraphQLTypes["EstadosEMunicipios_var_pop_fields"],
	var_samp?: GraphQLTypes["EstadosEMunicipios_var_samp_fields"],
	variance?: GraphQLTypes["EstadosEMunicipios_variance_fields"]
};
	/** order by aggregate values of table "EstadosEMunicipios" */
["EstadosEMunicipios_aggregate_order_by"]: {
		avg?: GraphQLTypes["EstadosEMunicipios_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["EstadosEMunicipios_max_order_by"],
	min?: GraphQLTypes["EstadosEMunicipios_min_order_by"],
	stddev?: GraphQLTypes["EstadosEMunicipios_stddev_order_by"],
	stddev_pop?: GraphQLTypes["EstadosEMunicipios_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["EstadosEMunicipios_stddev_samp_order_by"],
	sum?: GraphQLTypes["EstadosEMunicipios_sum_order_by"],
	var_pop?: GraphQLTypes["EstadosEMunicipios_var_pop_order_by"],
	var_samp?: GraphQLTypes["EstadosEMunicipios_var_samp_order_by"],
	variance?: GraphQLTypes["EstadosEMunicipios_variance_order_by"]
};
	/** input type for inserting array relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["EstadosEMunicipios_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["EstadosEMunicipios_on_conflict"]
};
	/** aggregate avg on columns */
["EstadosEMunicipios_avg_fields"]: {
	__typename: "EstadosEMunicipios_avg_fields",
	CodigoIbge?: number
};
	/** order by avg() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_avg_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "EstadosEMunicipios". All fields are combined with a logical 'AND'. */
["EstadosEMunicipios_bool_exp"]: {
		Cidades?: GraphQLTypes["EstadosEMunicipios_bool_exp"],
	CodigoIbge?: GraphQLTypes["bigint_comparison_exp"],
	Estado?: GraphQLTypes["EstadosEMunicipios_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Pai_Id?: GraphQLTypes["uuid_comparison_exp"],
	Sigla?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["EstadosEMunicipios_bool_exp"]>,
	_not?: GraphQLTypes["EstadosEMunicipios_bool_exp"],
	_or?: Array<GraphQLTypes["EstadosEMunicipios_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "EstadosEMunicipios" */
["EstadosEMunicipios_constraint"]: EstadosEMunicipios_constraint;
	/** input type for incrementing numeric columns in table "EstadosEMunicipios" */
["EstadosEMunicipios_inc_input"]: {
		CodigoIbge?: GraphQLTypes["bigint"]
};
	/** input type for inserting data into table "EstadosEMunicipios" */
["EstadosEMunicipios_insert_input"]: {
		Cidades?: GraphQLTypes["EstadosEMunicipios_arr_rel_insert_input"],
	CodigoIbge?: GraphQLTypes["bigint"],
	Estado?: GraphQLTypes["EstadosEMunicipios_obj_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Sigla?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["EstadosEMunicipios_max_fields"]: {
	__typename: "EstadosEMunicipios_max_fields",
	CodigoIbge?: GraphQLTypes["bigint"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Sigla?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_max_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Sigla?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["EstadosEMunicipios_min_fields"]: {
	__typename: "EstadosEMunicipios_min_fields",
	CodigoIbge?: GraphQLTypes["bigint"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Sigla?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_min_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Sigla?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "EstadosEMunicipios" */
["EstadosEMunicipios_mutation_response"]: {
	__typename: "EstadosEMunicipios_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["EstadosEMunicipios"]>
};
	/** input type for inserting object relation for remote table "EstadosEMunicipios" */
["EstadosEMunicipios_obj_rel_insert_input"]: {
		data: GraphQLTypes["EstadosEMunicipios_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["EstadosEMunicipios_on_conflict"]
};
	/** on conflict condition type for table "EstadosEMunicipios" */
["EstadosEMunicipios_on_conflict"]: {
		constraint: GraphQLTypes["EstadosEMunicipios_constraint"],
	update_columns: Array<GraphQLTypes["EstadosEMunicipios_update_column"]>,
	where?: GraphQLTypes["EstadosEMunicipios_bool_exp"]
};
	/** Ordering options when selecting data from "EstadosEMunicipios". */
["EstadosEMunicipios_order_by"]: {
		Cidades_aggregate?: GraphQLTypes["EstadosEMunicipios_aggregate_order_by"],
	CodigoIbge?: GraphQLTypes["order_by"],
	Estado?: GraphQLTypes["EstadosEMunicipios_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Sigla?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: EstadosEMunicipios */
["EstadosEMunicipios_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_select_column"]: EstadosEMunicipios_select_column;
	/** input type for updating data in table "EstadosEMunicipios" */
["EstadosEMunicipios_set_input"]: {
		CodigoIbge?: GraphQLTypes["bigint"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Sigla?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["EstadosEMunicipios_stddev_fields"]: {
	__typename: "EstadosEMunicipios_stddev_fields",
	CodigoIbge?: number
};
	/** order by stddev() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["EstadosEMunicipios_stddev_pop_fields"]: {
	__typename: "EstadosEMunicipios_stddev_pop_fields",
	CodigoIbge?: number
};
	/** order by stddev_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_pop_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["EstadosEMunicipios_stddev_samp_fields"]: {
	__typename: "EstadosEMunicipios_stddev_samp_fields",
	CodigoIbge?: number
};
	/** order by stddev_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_stddev_samp_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["EstadosEMunicipios_sum_fields"]: {
	__typename: "EstadosEMunicipios_sum_fields",
	CodigoIbge?: GraphQLTypes["bigint"]
};
	/** order by sum() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_sum_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** update columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_update_column"]: EstadosEMunicipios_update_column;
	/** aggregate var_pop on columns */
["EstadosEMunicipios_var_pop_fields"]: {
	__typename: "EstadosEMunicipios_var_pop_fields",
	CodigoIbge?: number
};
	/** order by var_pop() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_pop_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["EstadosEMunicipios_var_samp_fields"]: {
	__typename: "EstadosEMunicipios_var_samp_fields",
	CodigoIbge?: number
};
	/** order by var_samp() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_var_samp_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["EstadosEMunicipios_variance_fields"]: {
	__typename: "EstadosEMunicipios_variance_fields",
	CodigoIbge?: number
};
	/** order by variance() on columns of table "EstadosEMunicipios" */
["EstadosEMunicipios_variance_order_by"]: {
		CodigoIbge?: GraphQLTypes["order_by"]
};
	/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
["Int_comparison_exp"]: {
		_eq?: number,
	_gt?: number,
	_gte?: number,
	_in?: Array<number>,
	_is_null?: boolean,
	_lt?: number,
	_lte?: number,
	_neq?: number,
	_nin?: Array<number>
};
	/** columns and relationships of "Operadoras" */
["Operadoras"]: {
	__typename: "Operadoras",
	Apn: string,
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Senha: string,
	Usuario: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "Operadoras" */
["Operadoras_aggregate"]: {
	__typename: "Operadoras_aggregate",
	aggregate?: GraphQLTypes["Operadoras_aggregate_fields"],
	nodes: Array<GraphQLTypes["Operadoras"]>
};
	/** aggregate fields of "Operadoras" */
["Operadoras_aggregate_fields"]: {
	__typename: "Operadoras_aggregate_fields",
	count: number,
	max?: GraphQLTypes["Operadoras_max_fields"],
	min?: GraphQLTypes["Operadoras_min_fields"]
};
	/** Boolean expression to filter rows from the table "Operadoras". All fields are combined with a logical 'AND'. */
["Operadoras_bool_exp"]: {
		Apn?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Senha?: GraphQLTypes["String_comparison_exp"],
	Usuario?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["Operadoras_bool_exp"]>,
	_not?: GraphQLTypes["Operadoras_bool_exp"],
	_or?: Array<GraphQLTypes["Operadoras_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "Operadoras" */
["Operadoras_constraint"]: Operadoras_constraint;
	/** input type for inserting data into table "Operadoras" */
["Operadoras_insert_input"]: {
		Apn?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Senha?: string,
	Usuario?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["Operadoras_max_fields"]: {
	__typename: "Operadoras_max_fields",
	Apn?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Senha?: string,
	Usuario?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["Operadoras_min_fields"]: {
	__typename: "Operadoras_min_fields",
	Apn?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Senha?: string,
	Usuario?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "Operadoras" */
["Operadoras_mutation_response"]: {
	__typename: "Operadoras_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["Operadoras"]>
};
	/** input type for inserting object relation for remote table "Operadoras" */
["Operadoras_obj_rel_insert_input"]: {
		data: GraphQLTypes["Operadoras_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["Operadoras_on_conflict"]
};
	/** on conflict condition type for table "Operadoras" */
["Operadoras_on_conflict"]: {
		constraint: GraphQLTypes["Operadoras_constraint"],
	update_columns: Array<GraphQLTypes["Operadoras_update_column"]>,
	where?: GraphQLTypes["Operadoras_bool_exp"]
};
	/** Ordering options when selecting data from "Operadoras". */
["Operadoras_order_by"]: {
		Apn?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Senha?: GraphQLTypes["order_by"],
	Usuario?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: Operadoras */
["Operadoras_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "Operadoras" */
["Operadoras_select_column"]: Operadoras_select_column;
	/** input type for updating data in table "Operadoras" */
["Operadoras_set_input"]: {
		Apn?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Senha?: string,
	Usuario?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "Operadoras" */
["Operadoras_update_column"]: Operadoras_update_column;
	/** columns and relationships of "Produtos" */
["Produtos"]: {
	__typename: "Produtos",
	Descricao?: string,
	Id: GraphQLTypes["uuid"],
	NCM: number,
	Nome: string,
	UnidadeDeMedida_Id: string,
	Utilizacao: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "Produtos" */
["Produtos_aggregate"]: {
	__typename: "Produtos_aggregate",
	aggregate?: GraphQLTypes["Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["Produtos"]>
};
	/** aggregate fields of "Produtos" */
["Produtos_aggregate_fields"]: {
	__typename: "Produtos_aggregate_fields",
	avg?: GraphQLTypes["Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["Produtos_max_fields"],
	min?: GraphQLTypes["Produtos_min_fields"],
	stddev?: GraphQLTypes["Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["Produtos_sum_fields"],
	var_pop?: GraphQLTypes["Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["Produtos_var_samp_fields"],
	variance?: GraphQLTypes["Produtos_variance_fields"]
};
	/** aggregate avg on columns */
["Produtos_avg_fields"]: {
	__typename: "Produtos_avg_fields",
	NCM?: number
};
	/** Boolean expression to filter rows from the table "Produtos". All fields are combined with a logical 'AND'. */
["Produtos_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	NCM?: GraphQLTypes["Int_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	UnidadeDeMedida_Id?: GraphQLTypes["String_comparison_exp"],
	Utilizacao?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["Produtos_bool_exp"]>,
	_not?: GraphQLTypes["Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "Produtos" */
["Produtos_constraint"]: Produtos_constraint;
	/** input type for incrementing numeric columns in table "Produtos" */
["Produtos_inc_input"]: {
		NCM?: number
};
	/** input type for inserting data into table "Produtos" */
["Produtos_insert_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	NCM?: number,
	Nome?: string,
	UnidadeDeMedida_Id?: string,
	Utilizacao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["Produtos_max_fields"]: {
	__typename: "Produtos_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	NCM?: number,
	Nome?: string,
	UnidadeDeMedida_Id?: string,
	Utilizacao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["Produtos_min_fields"]: {
	__typename: "Produtos_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	NCM?: number,
	Nome?: string,
	UnidadeDeMedida_Id?: string,
	Utilizacao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "Produtos" */
["Produtos_mutation_response"]: {
	__typename: "Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["Produtos"]>
};
	/** input type for inserting object relation for remote table "Produtos" */
["Produtos_obj_rel_insert_input"]: {
		data: GraphQLTypes["Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["Produtos_on_conflict"]
};
	/** on conflict condition type for table "Produtos" */
["Produtos_on_conflict"]: {
		constraint: GraphQLTypes["Produtos_constraint"],
	update_columns: Array<GraphQLTypes["Produtos_update_column"]>,
	where?: GraphQLTypes["Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "Produtos". */
["Produtos_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	NCM?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	UnidadeDeMedida_Id?: GraphQLTypes["order_by"],
	Utilizacao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: Produtos */
["Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "Produtos" */
["Produtos_select_column"]: Produtos_select_column;
	/** input type for updating data in table "Produtos" */
["Produtos_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	NCM?: number,
	Nome?: string,
	UnidadeDeMedida_Id?: string,
	Utilizacao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["Produtos_stddev_fields"]: {
	__typename: "Produtos_stddev_fields",
	NCM?: number
};
	/** aggregate stddev_pop on columns */
["Produtos_stddev_pop_fields"]: {
	__typename: "Produtos_stddev_pop_fields",
	NCM?: number
};
	/** aggregate stddev_samp on columns */
["Produtos_stddev_samp_fields"]: {
	__typename: "Produtos_stddev_samp_fields",
	NCM?: number
};
	/** aggregate sum on columns */
["Produtos_sum_fields"]: {
	__typename: "Produtos_sum_fields",
	NCM?: number
};
	/** update columns of table "Produtos" */
["Produtos_update_column"]: Produtos_update_column;
	/** aggregate var_pop on columns */
["Produtos_var_pop_fields"]: {
	__typename: "Produtos_var_pop_fields",
	NCM?: number
};
	/** aggregate var_samp on columns */
["Produtos_var_samp_fields"]: {
	__typename: "Produtos_var_samp_fields",
	NCM?: number
};
	/** aggregate variance on columns */
["Produtos_variance_fields"]: {
	__typename: "Produtos_variance_fields",
	NCM?: number
};
	/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
["String_comparison_exp"]: {
		_eq?: string,
	_gt?: string,
	_gte?: string,
	/** does the column match the given case-insensitive pattern */
	_ilike?: string,
	_in?: Array<string>,
	/** does the column match the given POSIX regular expression, case insensitive */
	_iregex?: string,
	_is_null?: boolean,
	/** does the column match the given pattern */
	_like?: string,
	_lt?: string,
	_lte?: string,
	_neq?: string,
	/** does the column NOT match the given case-insensitive pattern */
	_nilike?: string,
	_nin?: Array<string>,
	/** does the column NOT match the given POSIX regular expression, case insensitive */
	_niregex?: string,
	/** does the column NOT match the given pattern */
	_nlike?: string,
	/** does the column NOT match the given POSIX regular expression, case sensitive */
	_nregex?: string,
	/** does the column NOT match the given SQL regular expression */
	_nsimilar?: string,
	/** does the column match the given POSIX regular expression, case sensitive */
	_regex?: string,
	/** does the column match the given SQL regular expression */
	_similar?: string
};
	/** columns and relationships of "UnidadesDeMedidas" */
["UnidadesDeMedidas"]: {
	__typename: "UnidadesDeMedidas",
	Comentario: string,
	Valor: string
};
	/** aggregated selection of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate"]: {
	__typename: "UnidadesDeMedidas_aggregate",
	aggregate?: GraphQLTypes["UnidadesDeMedidas_aggregate_fields"],
	nodes: Array<GraphQLTypes["UnidadesDeMedidas"]>
};
	/** aggregate fields of "UnidadesDeMedidas" */
["UnidadesDeMedidas_aggregate_fields"]: {
	__typename: "UnidadesDeMedidas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["UnidadesDeMedidas_max_fields"],
	min?: GraphQLTypes["UnidadesDeMedidas_min_fields"]
};
	/** Boolean expression to filter rows from the table "UnidadesDeMedidas". All fields are combined with a logical 'AND'. */
["UnidadesDeMedidas_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["UnidadesDeMedidas_bool_exp"]>,
	_not?: GraphQLTypes["UnidadesDeMedidas_bool_exp"],
	_or?: Array<GraphQLTypes["UnidadesDeMedidas_bool_exp"]>
};
	/** unique or primary key constraints on table "UnidadesDeMedidas" */
["UnidadesDeMedidas_constraint"]: UnidadesDeMedidas_constraint;
	/** input type for inserting data into table "UnidadesDeMedidas" */
["UnidadesDeMedidas_insert_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** aggregate max on columns */
["UnidadesDeMedidas_max_fields"]: {
	__typename: "UnidadesDeMedidas_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["UnidadesDeMedidas_min_fields"]: {
	__typename: "UnidadesDeMedidas_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "UnidadesDeMedidas" */
["UnidadesDeMedidas_mutation_response"]: {
	__typename: "UnidadesDeMedidas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["UnidadesDeMedidas"]>
};
	/** on conflict condition type for table "UnidadesDeMedidas" */
["UnidadesDeMedidas_on_conflict"]: {
		constraint: GraphQLTypes["UnidadesDeMedidas_constraint"],
	update_columns: Array<GraphQLTypes["UnidadesDeMedidas_update_column"]>,
	where?: GraphQLTypes["UnidadesDeMedidas_bool_exp"]
};
	/** Ordering options when selecting data from "UnidadesDeMedidas". */
["UnidadesDeMedidas_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: UnidadesDeMedidas */
["UnidadesDeMedidas_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_select_column"]: UnidadesDeMedidas_select_column;
	/** input type for updating data in table "UnidadesDeMedidas" */
["UnidadesDeMedidas_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "UnidadesDeMedidas" */
["UnidadesDeMedidas_update_column"]: UnidadesDeMedidas_update_column;
	/** columns and relationships of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos"]: {
	__typename: "atendimentos_EtapasDosFluxos",
	/** An object relationship */
	Fluxo: GraphQLTypes["atendimentos_Fluxos"],
	Fluxo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Posicao: number,
	/** An array relationship */
	Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** An aggregate relationship */
	Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate"]: {
	__typename: "atendimentos_EtapasDosFluxos_aggregate",
	aggregate?: GraphQLTypes["atendimentos_EtapasDosFluxos_aggregate_fields"],
	nodes: Array<GraphQLTypes["atendimentos_EtapasDosFluxos"]>
};
	/** aggregate fields of "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_aggregate_fields",
	avg?: GraphQLTypes["atendimentos_EtapasDosFluxos_avg_fields"],
	count: number,
	max?: GraphQLTypes["atendimentos_EtapasDosFluxos_max_fields"],
	min?: GraphQLTypes["atendimentos_EtapasDosFluxos_min_fields"],
	stddev?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_fields"],
	stddev_pop?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_samp_fields"],
	sum?: GraphQLTypes["atendimentos_EtapasDosFluxos_sum_fields"],
	var_pop?: GraphQLTypes["atendimentos_EtapasDosFluxos_var_pop_fields"],
	var_samp?: GraphQLTypes["atendimentos_EtapasDosFluxos_var_samp_fields"],
	variance?: GraphQLTypes["atendimentos_EtapasDosFluxos_variance_fields"]
};
	/** order by aggregate values of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_aggregate_order_by"]: {
		avg?: GraphQLTypes["atendimentos_EtapasDosFluxos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["atendimentos_EtapasDosFluxos_max_order_by"],
	min?: GraphQLTypes["atendimentos_EtapasDosFluxos_min_order_by"],
	stddev?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["atendimentos_EtapasDosFluxos_stddev_samp_order_by"],
	sum?: GraphQLTypes["atendimentos_EtapasDosFluxos_sum_order_by"],
	var_pop?: GraphQLTypes["atendimentos_EtapasDosFluxos_var_pop_order_by"],
	var_samp?: GraphQLTypes["atendimentos_EtapasDosFluxos_var_samp_order_by"],
	variance?: GraphQLTypes["atendimentos_EtapasDosFluxos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["atendimentos_EtapasDosFluxos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_EtapasDosFluxos_on_conflict"]
};
	/** aggregate avg on columns */
["atendimentos_EtapasDosFluxos_avg_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_avg_fields",
	Posicao?: number
};
	/** order by avg() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_avg_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "atendimentos.EtapasDosFluxos". All fields are combined with a logical 'AND'. */
["atendimentos_EtapasDosFluxos_bool_exp"]: {
		Fluxo?: GraphQLTypes["atendimentos_Fluxos_bool_exp"],
	Fluxo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Posicao?: GraphQLTypes["Int_comparison_exp"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	_and?: Array<GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"]>,
	_not?: GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"],
	_or?: Array<GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_constraint"]: atendimentos_EtapasDosFluxos_constraint;
	/** input type for incrementing numeric columns in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_inc_input"]: {
		Posicao?: number
};
	/** input type for inserting data into table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_insert_input"]: {
		Fluxo?: GraphQLTypes["atendimentos_Fluxos_obj_rel_insert_input"],
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Posicao?: number,
	Tickets?: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["atendimentos_EtapasDosFluxos_max_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_max_fields",
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Posicao?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_max_order_by"]: {
		Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Posicao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["atendimentos_EtapasDosFluxos_min_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_min_fields",
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Posicao?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_min_order_by"]: {
		Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Posicao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_mutation_response"]: {
	__typename: "atendimentos_EtapasDosFluxos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["atendimentos_EtapasDosFluxos"]>
};
	/** input type for inserting object relation for remote table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_obj_rel_insert_input"]: {
		data: GraphQLTypes["atendimentos_EtapasDosFluxos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_EtapasDosFluxos_on_conflict"]
};
	/** on conflict condition type for table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_on_conflict"]: {
		constraint: GraphQLTypes["atendimentos_EtapasDosFluxos_constraint"],
	update_columns: Array<GraphQLTypes["atendimentos_EtapasDosFluxos_update_column"]>,
	where?: GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"]
};
	/** Ordering options when selecting data from "atendimentos.EtapasDosFluxos". */
["atendimentos_EtapasDosFluxos_order_by"]: {
		Fluxo?: GraphQLTypes["atendimentos_Fluxos_order_by"],
	Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Posicao?: GraphQLTypes["order_by"],
	Tickets_aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: atendimentos_EtapasDosFluxos */
["atendimentos_EtapasDosFluxos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_select_column"]: atendimentos_EtapasDosFluxos_select_column;
	/** input type for updating data in table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_set_input"]: {
		Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Posicao?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["atendimentos_EtapasDosFluxos_stddev_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_stddev_fields",
	Posicao?: number
};
	/** order by stddev() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["atendimentos_EtapasDosFluxos_stddev_pop_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_stddev_pop_fields",
	Posicao?: number
};
	/** order by stddev_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_pop_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["atendimentos_EtapasDosFluxos_stddev_samp_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_stddev_samp_fields",
	Posicao?: number
};
	/** order by stddev_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_stddev_samp_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["atendimentos_EtapasDosFluxos_sum_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_sum_fields",
	Posicao?: number
};
	/** order by sum() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_sum_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** update columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_update_column"]: atendimentos_EtapasDosFluxos_update_column;
	/** aggregate var_pop on columns */
["atendimentos_EtapasDosFluxos_var_pop_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_var_pop_fields",
	Posicao?: number
};
	/** order by var_pop() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_pop_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["atendimentos_EtapasDosFluxos_var_samp_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_var_samp_fields",
	Posicao?: number
};
	/** order by var_samp() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_var_samp_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["atendimentos_EtapasDosFluxos_variance_fields"]: {
	__typename: "atendimentos_EtapasDosFluxos_variance_fields",
	Posicao?: number
};
	/** order by variance() on columns of table "atendimentos.EtapasDosFluxos" */
["atendimentos_EtapasDosFluxos_variance_order_by"]: {
		Posicao?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "atendimentos.Fluxos" */
["atendimentos_Fluxos"]: {
	__typename: "atendimentos_Fluxos",
	/** An array relationship */
	Etapas: Array<GraphQLTypes["atendimentos_EtapasDosFluxos"]>,
	/** An aggregate relationship */
	Etapas_aggregate: GraphQLTypes["atendimentos_EtapasDosFluxos_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** An aggregate relationship */
	Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate"]: {
	__typename: "atendimentos_Fluxos_aggregate",
	aggregate?: GraphQLTypes["atendimentos_Fluxos_aggregate_fields"],
	nodes: Array<GraphQLTypes["atendimentos_Fluxos"]>
};
	/** aggregate fields of "atendimentos.Fluxos" */
["atendimentos_Fluxos_aggregate_fields"]: {
	__typename: "atendimentos_Fluxos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["atendimentos_Fluxos_max_fields"],
	min?: GraphQLTypes["atendimentos_Fluxos_min_fields"]
};
	/** Boolean expression to filter rows from the table "atendimentos.Fluxos". All fields are combined with a logical 'AND'. */
["atendimentos_Fluxos_bool_exp"]: {
		Etapas?: GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	_and?: Array<GraphQLTypes["atendimentos_Fluxos_bool_exp"]>,
	_not?: GraphQLTypes["atendimentos_Fluxos_bool_exp"],
	_or?: Array<GraphQLTypes["atendimentos_Fluxos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "atendimentos.Fluxos" */
["atendimentos_Fluxos_constraint"]: atendimentos_Fluxos_constraint;
	/** input type for inserting data into table "atendimentos.Fluxos" */
["atendimentos_Fluxos_insert_input"]: {
		Etapas?: GraphQLTypes["atendimentos_EtapasDosFluxos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Tickets?: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["atendimentos_Fluxos_max_fields"]: {
	__typename: "atendimentos_Fluxos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["atendimentos_Fluxos_min_fields"]: {
	__typename: "atendimentos_Fluxos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "atendimentos.Fluxos" */
["atendimentos_Fluxos_mutation_response"]: {
	__typename: "atendimentos_Fluxos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["atendimentos_Fluxos"]>
};
	/** input type for inserting object relation for remote table "atendimentos.Fluxos" */
["atendimentos_Fluxos_obj_rel_insert_input"]: {
		data: GraphQLTypes["atendimentos_Fluxos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_Fluxos_on_conflict"]
};
	/** on conflict condition type for table "atendimentos.Fluxos" */
["atendimentos_Fluxos_on_conflict"]: {
		constraint: GraphQLTypes["atendimentos_Fluxos_constraint"],
	update_columns: Array<GraphQLTypes["atendimentos_Fluxos_update_column"]>,
	where?: GraphQLTypes["atendimentos_Fluxos_bool_exp"]
};
	/** Ordering options when selecting data from "atendimentos.Fluxos". */
["atendimentos_Fluxos_order_by"]: {
		Etapas_aggregate?: GraphQLTypes["atendimentos_EtapasDosFluxos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Tickets_aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: atendimentos_Fluxos */
["atendimentos_Fluxos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_select_column"]: atendimentos_Fluxos_select_column;
	/** input type for updating data in table "atendimentos.Fluxos" */
["atendimentos_Fluxos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "atendimentos.Fluxos" */
["atendimentos_Fluxos_update_column"]: atendimentos_Fluxos_update_column;
	/** columns and relationships of "atendimentos.Tickets" */
["atendimentos_Tickets"]: {
	__typename: "atendimentos_Tickets",
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	Cliente_Id?: GraphQLTypes["uuid"],
	CodigoReferencia: number,
	/** An object relationship */
	Etapa: GraphQLTypes["atendimentos_EtapasDosFluxos"],
	Etapa_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Fluxo: GraphQLTypes["atendimentos_Fluxos"],
	Fluxo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Lead?: GraphQLTypes["clientes_Leads"],
	Lead_Id?: GraphQLTypes["uuid"],
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_aggregate"],
	/** An object relationship */
	Tipo: GraphQLTypes["atendimentos_TiposDeTickets"],
	Tipo_Id: GraphQLTypes["atendimentos_TiposDeTickets_enum"],
	/** An object relationship */
	Usuario: GraphQLTypes["autenticacao_Usuarios"],
	Usuario_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate"]: {
	__typename: "atendimentos_Tickets_aggregate",
	aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_fields"],
	nodes: Array<GraphQLTypes["atendimentos_Tickets"]>
};
	/** aggregate fields of "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_fields"]: {
	__typename: "atendimentos_Tickets_aggregate_fields",
	avg?: GraphQLTypes["atendimentos_Tickets_avg_fields"],
	count: number,
	max?: GraphQLTypes["atendimentos_Tickets_max_fields"],
	min?: GraphQLTypes["atendimentos_Tickets_min_fields"],
	stddev?: GraphQLTypes["atendimentos_Tickets_stddev_fields"],
	stddev_pop?: GraphQLTypes["atendimentos_Tickets_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["atendimentos_Tickets_stddev_samp_fields"],
	sum?: GraphQLTypes["atendimentos_Tickets_sum_fields"],
	var_pop?: GraphQLTypes["atendimentos_Tickets_var_pop_fields"],
	var_samp?: GraphQLTypes["atendimentos_Tickets_var_samp_fields"],
	variance?: GraphQLTypes["atendimentos_Tickets_variance_fields"]
};
	/** order by aggregate values of table "atendimentos.Tickets" */
["atendimentos_Tickets_aggregate_order_by"]: {
		avg?: GraphQLTypes["atendimentos_Tickets_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["atendimentos_Tickets_max_order_by"],
	min?: GraphQLTypes["atendimentos_Tickets_min_order_by"],
	stddev?: GraphQLTypes["atendimentos_Tickets_stddev_order_by"],
	stddev_pop?: GraphQLTypes["atendimentos_Tickets_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["atendimentos_Tickets_stddev_samp_order_by"],
	sum?: GraphQLTypes["atendimentos_Tickets_sum_order_by"],
	var_pop?: GraphQLTypes["atendimentos_Tickets_var_pop_order_by"],
	var_samp?: GraphQLTypes["atendimentos_Tickets_var_samp_order_by"],
	variance?: GraphQLTypes["atendimentos_Tickets_variance_order_by"]
};
	/** input type for inserting array relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["atendimentos_Tickets_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_Tickets_on_conflict"]
};
	/** aggregate avg on columns */
["atendimentos_Tickets_avg_fields"]: {
	__typename: "atendimentos_Tickets_avg_fields",
	CodigoReferencia?: number
};
	/** order by avg() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_avg_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "atendimentos.Tickets". All fields are combined with a logical 'AND'. */
["atendimentos_Tickets_bool_exp"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Cliente_Id?: GraphQLTypes["uuid_comparison_exp"],
	CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Etapa?: GraphQLTypes["atendimentos_EtapasDosFluxos_bool_exp"],
	Etapa_Id?: GraphQLTypes["uuid_comparison_exp"],
	Fluxo?: GraphQLTypes["atendimentos_Fluxos_bool_exp"],
	Fluxo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Lead?: GraphQLTypes["clientes_Leads_bool_exp"],
	Lead_Id?: GraphQLTypes["uuid_comparison_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Tipo?: GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"],
	Tipo_Id?: GraphQLTypes["atendimentos_TiposDeTickets_enum_comparison_exp"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_bool_exp"],
	Usuario_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["atendimentos_Tickets_bool_exp"]>,
	_not?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	_or?: Array<GraphQLTypes["atendimentos_Tickets_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "atendimentos.Tickets" */
["atendimentos_Tickets_constraint"]: atendimentos_Tickets_constraint;
	/** input type for incrementing numeric columns in table "atendimentos.Tickets" */
["atendimentos_Tickets_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "atendimentos.Tickets" */
["atendimentos_Tickets_insert_input"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Cliente_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Etapa?: GraphQLTypes["atendimentos_EtapasDosFluxos_obj_rel_insert_input"],
	Etapa_Id?: GraphQLTypes["uuid"],
	Fluxo?: GraphQLTypes["atendimentos_Fluxos_obj_rel_insert_input"],
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead?: GraphQLTypes["clientes_Leads_obj_rel_insert_input"],
	Lead_Id?: GraphQLTypes["uuid"],
	Propostas?: GraphQLTypes["comercial_Propostas_arr_rel_insert_input"],
	Tipo?: GraphQLTypes["atendimentos_TiposDeTickets_obj_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["atendimentos_TiposDeTickets_enum"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_obj_rel_insert_input"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["atendimentos_Tickets_max_fields"]: {
	__typename: "atendimentos_Tickets_max_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Etapa_Id?: GraphQLTypes["uuid"],
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_max_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Etapa_Id?: GraphQLTypes["order_by"],
	Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["atendimentos_Tickets_min_fields"]: {
	__typename: "atendimentos_Tickets_min_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Etapa_Id?: GraphQLTypes["uuid"],
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_min_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Etapa_Id?: GraphQLTypes["order_by"],
	Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "atendimentos.Tickets" */
["atendimentos_Tickets_mutation_response"]: {
	__typename: "atendimentos_Tickets_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["atendimentos_Tickets"]>
};
	/** input type for inserting object relation for remote table "atendimentos.Tickets" */
["atendimentos_Tickets_obj_rel_insert_input"]: {
		data: GraphQLTypes["atendimentos_Tickets_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_Tickets_on_conflict"]
};
	/** on conflict condition type for table "atendimentos.Tickets" */
["atendimentos_Tickets_on_conflict"]: {
		constraint: GraphQLTypes["atendimentos_Tickets_constraint"],
	update_columns: Array<GraphQLTypes["atendimentos_Tickets_update_column"]>,
	where?: GraphQLTypes["atendimentos_Tickets_bool_exp"]
};
	/** Ordering options when selecting data from "atendimentos.Tickets". */
["atendimentos_Tickets_order_by"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Cliente_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Etapa?: GraphQLTypes["atendimentos_EtapasDosFluxos_order_by"],
	Etapa_Id?: GraphQLTypes["order_by"],
	Fluxo?: GraphQLTypes["atendimentos_Fluxos_order_by"],
	Fluxo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead?: GraphQLTypes["clientes_Leads_order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_aggregate_order_by"],
	Tipo?: GraphQLTypes["atendimentos_TiposDeTickets_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: atendimentos_Tickets */
["atendimentos_Tickets_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_select_column"]: atendimentos_Tickets_select_column;
	/** input type for updating data in table "atendimentos.Tickets" */
["atendimentos_Tickets_set_input"]: {
		Cliente_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Etapa_Id?: GraphQLTypes["uuid"],
	Fluxo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["atendimentos_TiposDeTickets_enum"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["atendimentos_Tickets_stddev_fields"]: {
	__typename: "atendimentos_Tickets_stddev_fields",
	CodigoReferencia?: number
};
	/** order by stddev() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["atendimentos_Tickets_stddev_pop_fields"]: {
	__typename: "atendimentos_Tickets_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** order by stddev_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["atendimentos_Tickets_stddev_samp_fields"]: {
	__typename: "atendimentos_Tickets_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** order by stddev_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_stddev_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["atendimentos_Tickets_sum_fields"]: {
	__typename: "atendimentos_Tickets_sum_fields",
	CodigoReferencia?: number
};
	/** order by sum() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_sum_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** update columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_update_column"]: atendimentos_Tickets_update_column;
	/** aggregate var_pop on columns */
["atendimentos_Tickets_var_pop_fields"]: {
	__typename: "atendimentos_Tickets_var_pop_fields",
	CodigoReferencia?: number
};
	/** order by var_pop() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["atendimentos_Tickets_var_samp_fields"]: {
	__typename: "atendimentos_Tickets_var_samp_fields",
	CodigoReferencia?: number
};
	/** order by var_samp() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_var_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["atendimentos_Tickets_variance_fields"]: {
	__typename: "atendimentos_Tickets_variance_fields",
	CodigoReferencia?: number
};
	/** order by variance() on columns of table "atendimentos.Tickets" */
["atendimentos_Tickets_variance_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets"]: {
	__typename: "atendimentos_TiposDeTickets",
	Comentario: string,
	/** An array relationship */
	Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** An aggregate relationship */
	Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	Valor: string
};
	/** aggregated selection of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate"]: {
	__typename: "atendimentos_TiposDeTickets_aggregate",
	aggregate?: GraphQLTypes["atendimentos_TiposDeTickets_aggregate_fields"],
	nodes: Array<GraphQLTypes["atendimentos_TiposDeTickets"]>
};
	/** aggregate fields of "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_aggregate_fields"]: {
	__typename: "atendimentos_TiposDeTickets_aggregate_fields",
	count: number,
	max?: GraphQLTypes["atendimentos_TiposDeTickets_max_fields"],
	min?: GraphQLTypes["atendimentos_TiposDeTickets_min_fields"]
};
	/** Boolean expression to filter rows from the table "atendimentos.TiposDeTickets". All fields are combined with a logical 'AND'. */
["atendimentos_TiposDeTickets_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"]>,
	_not?: GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"],
	_or?: Array<GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"]>
};
	/** unique or primary key constraints on table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_constraint"]: atendimentos_TiposDeTickets_constraint;
	["atendimentos_TiposDeTickets_enum"]: atendimentos_TiposDeTickets_enum;
	/** Boolean expression to compare columns of type "atendimentos_TiposDeTickets_enum". All fields are combined with logical 'AND'. */
["atendimentos_TiposDeTickets_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["atendimentos_TiposDeTickets_enum"],
	_in?: Array<GraphQLTypes["atendimentos_TiposDeTickets_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["atendimentos_TiposDeTickets_enum"],
	_nin?: Array<GraphQLTypes["atendimentos_TiposDeTickets_enum"]>
};
	/** input type for inserting data into table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_insert_input"]: {
		Comentario?: string,
	Tickets?: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["atendimentos_TiposDeTickets_max_fields"]: {
	__typename: "atendimentos_TiposDeTickets_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["atendimentos_TiposDeTickets_min_fields"]: {
	__typename: "atendimentos_TiposDeTickets_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_mutation_response"]: {
	__typename: "atendimentos_TiposDeTickets_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["atendimentos_TiposDeTickets"]>
};
	/** input type for inserting object relation for remote table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_obj_rel_insert_input"]: {
		data: GraphQLTypes["atendimentos_TiposDeTickets_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["atendimentos_TiposDeTickets_on_conflict"]
};
	/** on conflict condition type for table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_on_conflict"]: {
		constraint: GraphQLTypes["atendimentos_TiposDeTickets_constraint"],
	update_columns: Array<GraphQLTypes["atendimentos_TiposDeTickets_update_column"]>,
	where?: GraphQLTypes["atendimentos_TiposDeTickets_bool_exp"]
};
	/** Ordering options when selecting data from "atendimentos.TiposDeTickets". */
["atendimentos_TiposDeTickets_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Tickets_aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: atendimentos_TiposDeTickets */
["atendimentos_TiposDeTickets_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_select_column"]: atendimentos_TiposDeTickets_select_column;
	/** input type for updating data in table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "atendimentos.TiposDeTickets" */
["atendimentos_TiposDeTickets_update_column"]: atendimentos_TiposDeTickets_update_column;
	/** columns and relationships of "autenticacao.Atendentes" */
["autenticacao_Atendentes"]: {
	__typename: "autenticacao_Atendentes",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Usuario: GraphQLTypes["autenticacao_Usuarios"],
	Usuario_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate"]: {
	__typename: "autenticacao_Atendentes_aggregate",
	aggregate?: GraphQLTypes["autenticacao_Atendentes_aggregate_fields"],
	nodes: Array<GraphQLTypes["autenticacao_Atendentes"]>
};
	/** aggregate fields of "autenticacao.Atendentes" */
["autenticacao_Atendentes_aggregate_fields"]: {
	__typename: "autenticacao_Atendentes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["autenticacao_Atendentes_max_fields"],
	min?: GraphQLTypes["autenticacao_Atendentes_min_fields"]
};
	/** Boolean expression to filter rows from the table "autenticacao.Atendentes". All fields are combined with a logical 'AND'. */
["autenticacao_Atendentes_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_bool_exp"],
	Usuario_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["autenticacao_Atendentes_bool_exp"]>,
	_not?: GraphQLTypes["autenticacao_Atendentes_bool_exp"],
	_or?: Array<GraphQLTypes["autenticacao_Atendentes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "autenticacao.Atendentes" */
["autenticacao_Atendentes_constraint"]: autenticacao_Atendentes_constraint;
	/** input type for inserting data into table "autenticacao.Atendentes" */
["autenticacao_Atendentes_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_obj_rel_insert_input"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["autenticacao_Atendentes_max_fields"]: {
	__typename: "autenticacao_Atendentes_max_fields",
	Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["autenticacao_Atendentes_min_fields"]: {
	__typename: "autenticacao_Atendentes_min_fields",
	Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "autenticacao.Atendentes" */
["autenticacao_Atendentes_mutation_response"]: {
	__typename: "autenticacao_Atendentes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["autenticacao_Atendentes"]>
};
	/** input type for inserting object relation for remote table "autenticacao.Atendentes" */
["autenticacao_Atendentes_obj_rel_insert_input"]: {
		data: GraphQLTypes["autenticacao_Atendentes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["autenticacao_Atendentes_on_conflict"]
};
	/** on conflict condition type for table "autenticacao.Atendentes" */
["autenticacao_Atendentes_on_conflict"]: {
		constraint: GraphQLTypes["autenticacao_Atendentes_constraint"],
	update_columns: Array<GraphQLTypes["autenticacao_Atendentes_update_column"]>,
	where?: GraphQLTypes["autenticacao_Atendentes_bool_exp"]
};
	/** Ordering options when selecting data from "autenticacao.Atendentes". */
["autenticacao_Atendentes_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: autenticacao_Atendentes */
["autenticacao_Atendentes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_select_column"]: autenticacao_Atendentes_select_column;
	/** input type for updating data in table "autenticacao.Atendentes" */
["autenticacao_Atendentes_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "autenticacao.Atendentes" */
["autenticacao_Atendentes_update_column"]: autenticacao_Atendentes_update_column;
	/** columns and relationships of "autenticacao.Usuarios" */
["autenticacao_Usuarios"]: {
	__typename: "autenticacao_Usuarios",
	/** An object relationship */
	Atendente?: GraphQLTypes["autenticacao_Atendentes"],
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	Cliente_Id?: GraphQLTypes["uuid"],
	/** An object relationship */
	Colaborador?: GraphQLTypes["identidades_Colaboradores"],
	Colaborador_Id?: GraphQLTypes["uuid"],
	Email: string,
	Id: GraphQLTypes["uuid"],
	Senha: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate"]: {
	__typename: "autenticacao_Usuarios_aggregate",
	aggregate?: GraphQLTypes["autenticacao_Usuarios_aggregate_fields"],
	nodes: Array<GraphQLTypes["autenticacao_Usuarios"]>
};
	/** aggregate fields of "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_fields"]: {
	__typename: "autenticacao_Usuarios_aggregate_fields",
	count: number,
	max?: GraphQLTypes["autenticacao_Usuarios_max_fields"],
	min?: GraphQLTypes["autenticacao_Usuarios_min_fields"]
};
	/** order by aggregate values of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["autenticacao_Usuarios_max_order_by"],
	min?: GraphQLTypes["autenticacao_Usuarios_min_order_by"]
};
	/** input type for inserting array relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["autenticacao_Usuarios_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["autenticacao_Usuarios_on_conflict"]
};
	/** Boolean expression to filter rows from the table "autenticacao.Usuarios". All fields are combined with a logical 'AND'. */
["autenticacao_Usuarios_bool_exp"]: {
		Atendente?: GraphQLTypes["autenticacao_Atendentes_bool_exp"],
	Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Cliente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Colaborador?: GraphQLTypes["identidades_Colaboradores_bool_exp"],
	Colaborador_Id?: GraphQLTypes["uuid_comparison_exp"],
	Email?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Senha?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["autenticacao_Usuarios_bool_exp"]>,
	_not?: GraphQLTypes["autenticacao_Usuarios_bool_exp"],
	_or?: Array<GraphQLTypes["autenticacao_Usuarios_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "autenticacao.Usuarios" */
["autenticacao_Usuarios_constraint"]: autenticacao_Usuarios_constraint;
	/** input type for inserting data into table "autenticacao.Usuarios" */
["autenticacao_Usuarios_insert_input"]: {
		Atendente?: GraphQLTypes["autenticacao_Atendentes_obj_rel_insert_input"],
	Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Colaborador?: GraphQLTypes["identidades_Colaboradores_obj_rel_insert_input"],
	Colaborador_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Senha?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["autenticacao_Usuarios_max_fields"]: {
	__typename: "autenticacao_Usuarios_max_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	Colaborador_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Senha?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_max_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	Colaborador_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Senha?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["autenticacao_Usuarios_min_fields"]: {
	__typename: "autenticacao_Usuarios_min_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	Colaborador_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Senha?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_min_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	Colaborador_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Senha?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "autenticacao.Usuarios" */
["autenticacao_Usuarios_mutation_response"]: {
	__typename: "autenticacao_Usuarios_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["autenticacao_Usuarios"]>
};
	/** input type for inserting object relation for remote table "autenticacao.Usuarios" */
["autenticacao_Usuarios_obj_rel_insert_input"]: {
		data: GraphQLTypes["autenticacao_Usuarios_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["autenticacao_Usuarios_on_conflict"]
};
	/** on conflict condition type for table "autenticacao.Usuarios" */
["autenticacao_Usuarios_on_conflict"]: {
		constraint: GraphQLTypes["autenticacao_Usuarios_constraint"],
	update_columns: Array<GraphQLTypes["autenticacao_Usuarios_update_column"]>,
	where?: GraphQLTypes["autenticacao_Usuarios_bool_exp"]
};
	/** Ordering options when selecting data from "autenticacao.Usuarios". */
["autenticacao_Usuarios_order_by"]: {
		Atendente?: GraphQLTypes["autenticacao_Atendentes_order_by"],
	Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Cliente_Id?: GraphQLTypes["order_by"],
	Colaborador?: GraphQLTypes["identidades_Colaboradores_order_by"],
	Colaborador_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Senha?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: autenticacao_Usuarios */
["autenticacao_Usuarios_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_select_column"]: autenticacao_Usuarios_select_column;
	/** input type for updating data in table "autenticacao.Usuarios" */
["autenticacao_Usuarios_set_input"]: {
		Cliente_Id?: GraphQLTypes["uuid"],
	Colaborador_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Senha?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "autenticacao.Usuarios" */
["autenticacao_Usuarios_update_column"]: autenticacao_Usuarios_update_column;
	["bigint"]:any;
	/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
["bigint_comparison_exp"]: {
		_eq?: GraphQLTypes["bigint"],
	_gt?: GraphQLTypes["bigint"],
	_gte?: GraphQLTypes["bigint"],
	_in?: Array<GraphQLTypes["bigint"]>,
	_is_null?: boolean,
	_lt?: GraphQLTypes["bigint"],
	_lte?: GraphQLTypes["bigint"],
	_neq?: GraphQLTypes["bigint"],
	_nin?: Array<GraphQLTypes["bigint"]>
};
	/** columns and relationships of "clientes.Leads" */
["clientes_Leads"]: {
	__typename: "clientes_Leads",
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Email: string,
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	PerfisComerciais: Array<GraphQLTypes["clientes_PerfisComerciais"]>,
	/** An aggregate relationship */
	PerfisComerciais_aggregate: GraphQLTypes["clientes_PerfisComerciais_aggregate"],
	Telefone: string,
	/** An array relationship */
	Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** An aggregate relationship */
	Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "clientes.Leads" */
["clientes_Leads_aggregate"]: {
	__typename: "clientes_Leads_aggregate",
	aggregate?: GraphQLTypes["clientes_Leads_aggregate_fields"],
	nodes: Array<GraphQLTypes["clientes_Leads"]>
};
	/** aggregate fields of "clientes.Leads" */
["clientes_Leads_aggregate_fields"]: {
	__typename: "clientes_Leads_aggregate_fields",
	count: number,
	max?: GraphQLTypes["clientes_Leads_max_fields"],
	min?: GraphQLTypes["clientes_Leads_min_fields"]
};
	/** order by aggregate values of table "clientes.Leads" */
["clientes_Leads_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["clientes_Leads_max_order_by"],
	min?: GraphQLTypes["clientes_Leads_min_order_by"]
};
	/** input type for inserting array relation for remote table "clientes.Leads" */
["clientes_Leads_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["clientes_Leads_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["clientes_Leads_on_conflict"]
};
	/** Boolean expression to filter rows from the table "clientes.Leads". All fields are combined with a logical 'AND'. */
["clientes_Leads_bool_exp"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Cliente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Email?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	PerfisComerciais?: GraphQLTypes["clientes_PerfisComerciais_bool_exp"],
	Telefone?: GraphQLTypes["String_comparison_exp"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	_and?: Array<GraphQLTypes["clientes_Leads_bool_exp"]>,
	_not?: GraphQLTypes["clientes_Leads_bool_exp"],
	_or?: Array<GraphQLTypes["clientes_Leads_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "clientes.Leads" */
["clientes_Leads_constraint"]: clientes_Leads_constraint;
	/** input type for inserting data into table "clientes.Leads" */
["clientes_Leads_insert_input"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	PerfisComerciais?: GraphQLTypes["clientes_PerfisComerciais_arr_rel_insert_input"],
	Telefone?: string,
	Tickets?: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["clientes_Leads_max_fields"]: {
	__typename: "clientes_Leads_max_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Telefone?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "clientes.Leads" */
["clientes_Leads_max_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Telefone?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["clientes_Leads_min_fields"]: {
	__typename: "clientes_Leads_min_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Telefone?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "clientes.Leads" */
["clientes_Leads_min_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Telefone?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "clientes.Leads" */
["clientes_Leads_mutation_response"]: {
	__typename: "clientes_Leads_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["clientes_Leads"]>
};
	/** input type for inserting object relation for remote table "clientes.Leads" */
["clientes_Leads_obj_rel_insert_input"]: {
		data: GraphQLTypes["clientes_Leads_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["clientes_Leads_on_conflict"]
};
	/** on conflict condition type for table "clientes.Leads" */
["clientes_Leads_on_conflict"]: {
		constraint: GraphQLTypes["clientes_Leads_constraint"],
	update_columns: Array<GraphQLTypes["clientes_Leads_update_column"]>,
	where?: GraphQLTypes["clientes_Leads_bool_exp"]
};
	/** Ordering options when selecting data from "clientes.Leads". */
["clientes_Leads_order_by"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Cliente_Id?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	PerfisComerciais_aggregate?: GraphQLTypes["clientes_PerfisComerciais_aggregate_order_by"],
	Telefone?: GraphQLTypes["order_by"],
	Tickets_aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: clientes_Leads */
["clientes_Leads_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "clientes.Leads" */
["clientes_Leads_select_column"]: clientes_Leads_select_column;
	/** input type for updating data in table "clientes.Leads" */
["clientes_Leads_set_input"]: {
		Cliente_Id?: GraphQLTypes["uuid"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Telefone?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "clientes.Leads" */
["clientes_Leads_update_column"]: clientes_Leads_update_column;
	/** columns and relationships of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais"]: {
	__typename: "clientes_PerfisComerciais",
	/** An object relationship */
	GrupoDePergunta: GraphQLTypes["vendas_GruposDePerguntas"],
	Grupo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Lead: GraphQLTypes["clientes_Leads"],
	Lead_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pergunta: GraphQLTypes["vendas_Perguntas"],
	Pergunta_Id: GraphQLTypes["uuid"],
	Resposta: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate"]: {
	__typename: "clientes_PerfisComerciais_aggregate",
	aggregate?: GraphQLTypes["clientes_PerfisComerciais_aggregate_fields"],
	nodes: Array<GraphQLTypes["clientes_PerfisComerciais"]>
};
	/** aggregate fields of "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_fields"]: {
	__typename: "clientes_PerfisComerciais_aggregate_fields",
	count: number,
	max?: GraphQLTypes["clientes_PerfisComerciais_max_fields"],
	min?: GraphQLTypes["clientes_PerfisComerciais_min_fields"]
};
	/** order by aggregate values of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["clientes_PerfisComerciais_max_order_by"],
	min?: GraphQLTypes["clientes_PerfisComerciais_min_order_by"]
};
	/** input type for inserting array relation for remote table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["clientes_PerfisComerciais_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["clientes_PerfisComerciais_on_conflict"]
};
	/** Boolean expression to filter rows from the table "clientes.PerfisComerciais". All fields are combined with a logical 'AND'. */
["clientes_PerfisComerciais_bool_exp"]: {
		GrupoDePergunta?: GraphQLTypes["vendas_GruposDePerguntas_bool_exp"],
	Grupo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Lead?: GraphQLTypes["clientes_Leads_bool_exp"],
	Lead_Id?: GraphQLTypes["uuid_comparison_exp"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_bool_exp"],
	Pergunta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Resposta?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["clientes_PerfisComerciais_bool_exp"]>,
	_not?: GraphQLTypes["clientes_PerfisComerciais_bool_exp"],
	_or?: Array<GraphQLTypes["clientes_PerfisComerciais_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_constraint"]: clientes_PerfisComerciais_constraint;
	/** input type for inserting data into table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_insert_input"]: {
		GrupoDePergunta?: GraphQLTypes["vendas_GruposDePerguntas_obj_rel_insert_input"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead?: GraphQLTypes["clientes_Leads_obj_rel_insert_input"],
	Lead_Id?: GraphQLTypes["uuid"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_obj_rel_insert_input"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	Resposta?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["clientes_PerfisComerciais_max_fields"]: {
	__typename: "clientes_PerfisComerciais_max_fields",
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	Resposta?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_max_order_by"]: {
		Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	Resposta?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["clientes_PerfisComerciais_min_fields"]: {
	__typename: "clientes_PerfisComerciais_min_fields",
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	Resposta?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_min_order_by"]: {
		Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	Resposta?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_mutation_response"]: {
	__typename: "clientes_PerfisComerciais_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["clientes_PerfisComerciais"]>
};
	/** on conflict condition type for table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_on_conflict"]: {
		constraint: GraphQLTypes["clientes_PerfisComerciais_constraint"],
	update_columns: Array<GraphQLTypes["clientes_PerfisComerciais_update_column"]>,
	where?: GraphQLTypes["clientes_PerfisComerciais_bool_exp"]
};
	/** Ordering options when selecting data from "clientes.PerfisComerciais". */
["clientes_PerfisComerciais_order_by"]: {
		GrupoDePergunta?: GraphQLTypes["vendas_GruposDePerguntas_order_by"],
	Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead?: GraphQLTypes["clientes_Leads_order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	Resposta?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: clientes_PerfisComerciais */
["clientes_PerfisComerciais_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_select_column"]: clientes_PerfisComerciais_select_column;
	/** input type for updating data in table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_set_input"]: {
		Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	Resposta?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "clientes.PerfisComerciais" */
["clientes_PerfisComerciais_update_column"]: clientes_PerfisComerciais_update_column;
	/** columns and relationships of "clientes.Veiculos" */
["clientes_Veiculos"]: {
	__typename: "clientes_Veiculos",
	Apelido?: string,
	/** An object relationship */
	Categoria: GraphQLTypes["CategoriasDeVeiculos"],
	Categoria_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	Cliente_Id?: GraphQLTypes["uuid"],
	DadosDaApi?: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	NumeroDoChassi?: string,
	Placa?: string,
	/** An array relationship */
	PropostasInstalacoes: Array<GraphQLTypes["comercial_Propostas_Instalacoes"]>,
	/** An aggregate relationship */
	PropostasInstalacoes_aggregate: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "clientes.Veiculos" */
["clientes_Veiculos_aggregate"]: {
	__typename: "clientes_Veiculos_aggregate",
	aggregate?: GraphQLTypes["clientes_Veiculos_aggregate_fields"],
	nodes: Array<GraphQLTypes["clientes_Veiculos"]>
};
	/** aggregate fields of "clientes.Veiculos" */
["clientes_Veiculos_aggregate_fields"]: {
	__typename: "clientes_Veiculos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["clientes_Veiculos_max_fields"],
	min?: GraphQLTypes["clientes_Veiculos_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_append_input"]: {
		DadosDaApi?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "clientes.Veiculos". All fields are combined with a logical 'AND'. */
["clientes_Veiculos_bool_exp"]: {
		Apelido?: GraphQLTypes["String_comparison_exp"],
	Categoria?: GraphQLTypes["CategoriasDeVeiculos_bool_exp"],
	Categoria_Id?: GraphQLTypes["uuid_comparison_exp"],
	Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Cliente_Id?: GraphQLTypes["uuid_comparison_exp"],
	DadosDaApi?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	NumeroDoChassi?: GraphQLTypes["String_comparison_exp"],
	Placa?: GraphQLTypes["String_comparison_exp"],
	PropostasInstalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"],
	_and?: Array<GraphQLTypes["clientes_Veiculos_bool_exp"]>,
	_not?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	_or?: Array<GraphQLTypes["clientes_Veiculos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "clientes.Veiculos" */
["clientes_Veiculos_constraint"]: clientes_Veiculos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["clientes_Veiculos_delete_at_path_input"]: {
		DadosDaApi?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["clientes_Veiculos_delete_elem_input"]: {
		DadosDaApi?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["clientes_Veiculos_delete_key_input"]: {
		DadosDaApi?: string
};
	/** input type for inserting data into table "clientes.Veiculos" */
["clientes_Veiculos_insert_input"]: {
		Apelido?: string,
	Categoria?: GraphQLTypes["CategoriasDeVeiculos_obj_rel_insert_input"],
	Categoria_Id?: GraphQLTypes["uuid"],
	Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Cliente_Id?: GraphQLTypes["uuid"],
	DadosDaApi?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	NumeroDoChassi?: string,
	Placa?: string,
	PropostasInstalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["clientes_Veiculos_max_fields"]: {
	__typename: "clientes_Veiculos_max_fields",
	Apelido?: string,
	Categoria_Id?: GraphQLTypes["uuid"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	NumeroDoChassi?: string,
	Placa?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["clientes_Veiculos_min_fields"]: {
	__typename: "clientes_Veiculos_min_fields",
	Apelido?: string,
	Categoria_Id?: GraphQLTypes["uuid"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	NumeroDoChassi?: string,
	Placa?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "clientes.Veiculos" */
["clientes_Veiculos_mutation_response"]: {
	__typename: "clientes_Veiculos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["clientes_Veiculos"]>
};
	/** input type for inserting object relation for remote table "clientes.Veiculos" */
["clientes_Veiculos_obj_rel_insert_input"]: {
		data: GraphQLTypes["clientes_Veiculos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["clientes_Veiculos_on_conflict"]
};
	/** on conflict condition type for table "clientes.Veiculos" */
["clientes_Veiculos_on_conflict"]: {
		constraint: GraphQLTypes["clientes_Veiculos_constraint"],
	update_columns: Array<GraphQLTypes["clientes_Veiculos_update_column"]>,
	where?: GraphQLTypes["clientes_Veiculos_bool_exp"]
};
	/** Ordering options when selecting data from "clientes.Veiculos". */
["clientes_Veiculos_order_by"]: {
		Apelido?: GraphQLTypes["order_by"],
	Categoria?: GraphQLTypes["CategoriasDeVeiculos_order_by"],
	Categoria_Id?: GraphQLTypes["order_by"],
	Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Cliente_Id?: GraphQLTypes["order_by"],
	DadosDaApi?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	NumeroDoChassi?: GraphQLTypes["order_by"],
	Placa?: GraphQLTypes["order_by"],
	PropostasInstalacoes_aggregate?: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: clientes_Veiculos */
["clientes_Veiculos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["clientes_Veiculos_prepend_input"]: {
		DadosDaApi?: GraphQLTypes["jsonb"]
};
	/** select columns of table "clientes.Veiculos" */
["clientes_Veiculos_select_column"]: clientes_Veiculos_select_column;
	/** input type for updating data in table "clientes.Veiculos" */
["clientes_Veiculos_set_input"]: {
		Apelido?: string,
	Categoria_Id?: GraphQLTypes["uuid"],
	Cliente_Id?: GraphQLTypes["uuid"],
	DadosDaApi?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	NumeroDoChassi?: string,
	Placa?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "clientes.Veiculos" */
["clientes_Veiculos_update_column"]: clientes_Veiculos_update_column;
	/** columns and relationships of "comercial.Acoes" */
["comercial_Acoes"]: {
	__typename: "comercial_Acoes",
	Etapas_Id: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Titulo: string,
	Url: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Acoes" */
["comercial_Acoes_aggregate"]: {
	__typename: "comercial_Acoes_aggregate",
	aggregate?: GraphQLTypes["comercial_Acoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Acoes"]>
};
	/** aggregate fields of "comercial.Acoes" */
["comercial_Acoes_aggregate_fields"]: {
	__typename: "comercial_Acoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Acoes_max_fields"],
	min?: GraphQLTypes["comercial_Acoes_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_append_input"]: {
		Etapas_Id?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "comercial.Acoes". All fields are combined with a logical 'AND'. */
["comercial_Acoes_bool_exp"]: {
		Etapas_Id?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Titulo?: GraphQLTypes["String_comparison_exp"],
	Url?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Acoes_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Acoes_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Acoes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Acoes" */
["comercial_Acoes_constraint"]: comercial_Acoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Acoes_delete_at_path_input"]: {
		Etapas_Id?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Acoes_delete_elem_input"]: {
		Etapas_Id?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Acoes_delete_key_input"]: {
		Etapas_Id?: string
};
	/** input type for inserting data into table "comercial.Acoes" */
["comercial_Acoes_insert_input"]: {
		Etapas_Id?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	Url?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Acoes_max_fields"]: {
	__typename: "comercial_Acoes_max_fields",
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	Url?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Acoes_min_fields"]: {
	__typename: "comercial_Acoes_min_fields",
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	Url?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Acoes" */
["comercial_Acoes_mutation_response"]: {
	__typename: "comercial_Acoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Acoes"]>
};
	/** on conflict condition type for table "comercial.Acoes" */
["comercial_Acoes_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Acoes_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Acoes_update_column"]>,
	where?: GraphQLTypes["comercial_Acoes_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Acoes". */
["comercial_Acoes_order_by"]: {
		Etapas_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Titulo?: GraphQLTypes["order_by"],
	Url?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Acoes */
["comercial_Acoes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Acoes_prepend_input"]: {
		Etapas_Id?: GraphQLTypes["jsonb"]
};
	/** select columns of table "comercial.Acoes" */
["comercial_Acoes_select_column"]: comercial_Acoes_select_column;
	/** input type for updating data in table "comercial.Acoes" */
["comercial_Acoes_set_input"]: {
		Etapas_Id?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	Url?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Acoes" */
["comercial_Acoes_update_column"]: comercial_Acoes_update_column;
	/** columns and relationships of "comercial.Atributos" */
["comercial_Atributos"]: {
	__typename: "comercial_Atributos",
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Produtos: Array<GraphQLTypes["comercial_Produtos_Atributos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["comercial_Produtos_Atributos_aggregate"],
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Servicos_Atributos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Servicos_Atributos_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Atributos" */
["comercial_Atributos_aggregate"]: {
	__typename: "comercial_Atributos_aggregate",
	aggregate?: GraphQLTypes["comercial_Atributos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Atributos"]>
};
	/** aggregate fields of "comercial.Atributos" */
["comercial_Atributos_aggregate_fields"]: {
	__typename: "comercial_Atributos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Atributos_max_fields"],
	min?: GraphQLTypes["comercial_Atributos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Atributos". All fields are combined with a logical 'AND'. */
["comercial_Atributos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Produtos?: GraphQLTypes["comercial_Produtos_Atributos_bool_exp"],
	Servicos?: GraphQLTypes["comercial_Servicos_Atributos_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_Atributos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Atributos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Atributos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Atributos" */
["comercial_Atributos_constraint"]: comercial_Atributos_constraint;
	/** input type for inserting data into table "comercial.Atributos" */
["comercial_Atributos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produtos?: GraphQLTypes["comercial_Produtos_Atributos_arr_rel_insert_input"],
	Servicos?: GraphQLTypes["comercial_Servicos_Atributos_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Atributos_max_fields"]: {
	__typename: "comercial_Atributos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Atributos_min_fields"]: {
	__typename: "comercial_Atributos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Atributos" */
["comercial_Atributos_mutation_response"]: {
	__typename: "comercial_Atributos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Atributos"]>
};
	/** input type for inserting object relation for remote table "comercial.Atributos" */
["comercial_Atributos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Atributos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Atributos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Atributos" */
["comercial_Atributos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Atributos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Atributos_update_column"]>,
	where?: GraphQLTypes["comercial_Atributos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Atributos". */
["comercial_Atributos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produtos_aggregate?: GraphQLTypes["comercial_Produtos_Atributos_aggregate_order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Servicos_Atributos_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Atributos */
["comercial_Atributos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Atributos" */
["comercial_Atributos_select_column"]: comercial_Atributos_select_column;
	/** input type for updating data in table "comercial.Atributos" */
["comercial_Atributos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Atributos" */
["comercial_Atributos_update_column"]: comercial_Atributos_update_column;
	/** columns and relationships of "comercial.Coberturas" */
["comercial_Coberturas"]: {
	__typename: "comercial_Coberturas",
	Id: GraphQLTypes["uuid"],
	Nome: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Coberturas" */
["comercial_Coberturas_aggregate"]: {
	__typename: "comercial_Coberturas_aggregate",
	aggregate?: GraphQLTypes["comercial_Coberturas_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Coberturas"]>
};
	/** aggregate fields of "comercial.Coberturas" */
["comercial_Coberturas_aggregate_fields"]: {
	__typename: "comercial_Coberturas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Coberturas_max_fields"],
	min?: GraphQLTypes["comercial_Coberturas_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Coberturas". All fields are combined with a logical 'AND'. */
["comercial_Coberturas_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Coberturas_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Coberturas_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Coberturas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Coberturas" */
["comercial_Coberturas_constraint"]: comercial_Coberturas_constraint;
	/** input type for inserting data into table "comercial.Coberturas" */
["comercial_Coberturas_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Coberturas_max_fields"]: {
	__typename: "comercial_Coberturas_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Coberturas_min_fields"]: {
	__typename: "comercial_Coberturas_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Coberturas" */
["comercial_Coberturas_mutation_response"]: {
	__typename: "comercial_Coberturas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Coberturas"]>
};
	/** on conflict condition type for table "comercial.Coberturas" */
["comercial_Coberturas_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Coberturas_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Coberturas_update_column"]>,
	where?: GraphQLTypes["comercial_Coberturas_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Coberturas". */
["comercial_Coberturas_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Coberturas */
["comercial_Coberturas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Coberturas" */
["comercial_Coberturas_select_column"]: comercial_Coberturas_select_column;
	/** input type for updating data in table "comercial.Coberturas" */
["comercial_Coberturas_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Coberturas" */
["comercial_Coberturas_update_column"]: comercial_Coberturas_update_column;
	/** columns and relationships of "comercial.Combos" */
["comercial_Combos"]: {
	__typename: "comercial_Combos",
	/** An array relationship */
	ComboPai: Array<GraphQLTypes["comercial_Combos_Combos"]>,
	/** An aggregate relationship */
	ComboPai_aggregate: GraphQLTypes["comercial_Combos_Combos_aggregate"],
	/** An array relationship */
	Combos: Array<GraphQLTypes["comercial_Combos_Combos"]>,
	/** An aggregate relationship */
	Combos_aggregate: GraphQLTypes["comercial_Combos_Combos_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	OportunidadesDeProdutos: Array<GraphQLTypes["comercial_Produtos_Oportunidades"]>,
	/** An aggregate relationship */
	OportunidadesDeProdutos_aggregate: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** An array relationship */
	OportunidadesDeServicos: Array<GraphQLTypes["comercial_Servicos_Oportunidades"]>,
	/** An aggregate relationship */
	OportunidadesDeServicos_aggregate: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** An array relationship */
	Planos: Array<GraphQLTypes["comercial_Combos_Planos"]>,
	/** An aggregate relationship */
	Planos_aggregate: GraphQLTypes["comercial_Combos_Planos_aggregate"],
	/** An array relationship */
	Precos: Array<GraphQLTypes["comercial_Combos_Precos"]>,
	/** An aggregate relationship */
	Precos_aggregate: GraphQLTypes["comercial_Combos_Precos_aggregate"],
	/** An array relationship */
	Produtos: Array<GraphQLTypes["comercial_Combos_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["comercial_Combos_Produtos_aggregate"],
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas_Combos"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_Combos_aggregate"],
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Combos_Servicos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Combos_Servicos_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Combos_Combos" */
["comercial_Combos_Combos"]: {
	__typename: "comercial_Combos_Combos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	/** An object relationship */
	ComboPertencente: GraphQLTypes["comercial_Combos"],
	ComboPertencente_Id: GraphQLTypes["uuid"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate"]: {
	__typename: "comercial_Combos_Combos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_Combos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos_Combos"]>
};
	/** aggregate fields of "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_fields"]: {
	__typename: "comercial_Combos_Combos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Combos_Combos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Combos_Combos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_Combos_min_fields"],
	stddev?: GraphQLTypes["comercial_Combos_Combos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Combos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Combos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Combos_Combos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Combos_Combos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Combos_Combos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Combos_Combos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Combos_Combos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Combos_Combos_max_order_by"],
	min?: GraphQLTypes["comercial_Combos_Combos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Combos_Combos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Combos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Combos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Combos_Combos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Combos_Combos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Combos_Combos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Combos_Combos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Combos_Combos" */
["comercial_Combos_Combos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Combos_Combos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Combos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Combos_Combos_avg_fields"]: {
	__typename: "comercial_Combos_Combos_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Combos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	ComboPertencente?: GraphQLTypes["comercial_Combos_bool_exp"],
	ComboPertencente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_Combos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_Combos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_Combos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos_Combos" */
["comercial_Combos_Combos_constraint"]: comercial_Combos_Combos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Combos_Combos" */
["comercial_Combos_Combos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	ComboPertencente?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	ComboPertencente_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_Combos_max_fields"]: {
	__typename: "comercial_Combos_Combos_max_fields",
	ComboPertencente_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_max_order_by"]: {
		ComboPertencente_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Combos_Combos_min_fields"]: {
	__typename: "comercial_Combos_Combos_min_fields",
	ComboPertencente_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_min_order_by"]: {
		ComboPertencente_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Combos_Combos" */
["comercial_Combos_Combos_mutation_response"]: {
	__typename: "comercial_Combos_Combos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos_Combos"]>
};
	/** on conflict condition type for table "comercial.Combos_Combos" */
["comercial_Combos_Combos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_Combos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_Combos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_Combos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos_Combos". */
["comercial_Combos_Combos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	ComboPertencente?: GraphQLTypes["comercial_Combos_order_by"],
	ComboPertencente_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos_Combos */
["comercial_Combos_Combos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_select_column"]: comercial_Combos_Combos_select_column;
	/** input type for updating data in table "comercial.Combos_Combos" */
["comercial_Combos_Combos_set_input"]: {
		ComboPertencente_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Combos_Combos_stddev_fields"]: {
	__typename: "comercial_Combos_Combos_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Combos_stddev_pop_fields"]: {
	__typename: "comercial_Combos_Combos_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Combos_stddev_samp_fields"]: {
	__typename: "comercial_Combos_Combos_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Combos_Combos_sum_fields"]: {
	__typename: "comercial_Combos_Combos_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_update_column"]: comercial_Combos_Combos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Combos_var_pop_fields"]: {
	__typename: "comercial_Combos_Combos_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Combos_Combos_var_samp_fields"]: {
	__typename: "comercial_Combos_Combos_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Combos_Combos_variance_fields"]: {
	__typename: "comercial_Combos_Combos_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Combos_Combos" */
["comercial_Combos_Combos_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Combos_Planos" */
["comercial_Combos_Planos"]: {
	__typename: "comercial_Combos_Planos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Plano: GraphQLTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco: GraphQLTypes["comercial_Planos_Precos"],
	PlanoPreco_Id: GraphQLTypes["uuid"],
	Plano_Id: GraphQLTypes["uuid"],
	ValorPraticado: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate"]: {
	__typename: "comercial_Combos_Planos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_Planos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos_Planos"]>
};
	/** aggregate fields of "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_fields"]: {
	__typename: "comercial_Combos_Planos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Combos_Planos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Combos_Planos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_Planos_min_fields"],
	stddev?: GraphQLTypes["comercial_Combos_Planos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Planos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Planos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Combos_Planos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Combos_Planos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Combos_Planos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Combos_Planos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Combos_Planos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Combos_Planos_max_order_by"],
	min?: GraphQLTypes["comercial_Combos_Planos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Combos_Planos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Planos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Planos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Combos_Planos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Combos_Planos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Combos_Planos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Combos_Planos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Combos_Planos" */
["comercial_Combos_Planos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Combos_Planos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Planos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Combos_Planos_avg_fields"]: {
	__typename: "comercial_Combos_Planos_avg_fields",
	ValorPraticado?: number
};
	/** order by avg() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_avg_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Planos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Planos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano?: GraphQLTypes["comercial_Planos_bool_exp"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_bool_exp"],
	PlanoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano_Id?: GraphQLTypes["uuid_comparison_exp"],
	ValorPraticado?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_Planos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_Planos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_Planos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos_Planos" */
["comercial_Combos_Planos_constraint"]: comercial_Combos_Planos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_inc_input"]: {
		ValorPraticado?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Combos_Planos" */
["comercial_Combos_Planos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Plano?: GraphQLTypes["comercial_Planos_obj_rel_insert_input"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_obj_rel_insert_input"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_Planos_max_fields"]: {
	__typename: "comercial_Combos_Planos_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Combos_Planos_min_fields"]: {
	__typename: "comercial_Combos_Planos_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Combos_Planos" */
["comercial_Combos_Planos_mutation_response"]: {
	__typename: "comercial_Combos_Planos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos_Planos"]>
};
	/** on conflict condition type for table "comercial.Combos_Planos" */
["comercial_Combos_Planos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_Planos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_Planos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_Planos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos_Planos". */
["comercial_Combos_Planos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Plano?: GraphQLTypes["comercial_Planos_order_by"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos_Planos */
["comercial_Combos_Planos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_select_column"]: comercial_Combos_Planos_select_column;
	/** input type for updating data in table "comercial.Combos_Planos" */
["comercial_Combos_Planos_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Combos_Planos_stddev_fields"]: {
	__typename: "comercial_Combos_Planos_stddev_fields",
	ValorPraticado?: number
};
	/** order by stddev() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Planos_stddev_pop_fields"]: {
	__typename: "comercial_Combos_Planos_stddev_pop_fields",
	ValorPraticado?: number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Planos_stddev_samp_fields"]: {
	__typename: "comercial_Combos_Planos_stddev_samp_fields",
	ValorPraticado?: number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_stddev_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Combos_Planos_sum_fields"]: {
	__typename: "comercial_Combos_Planos_sum_fields",
	ValorPraticado?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_sum_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_update_column"]: comercial_Combos_Planos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Planos_var_pop_fields"]: {
	__typename: "comercial_Combos_Planos_var_pop_fields",
	ValorPraticado?: number
};
	/** order by var_pop() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Combos_Planos_var_samp_fields"]: {
	__typename: "comercial_Combos_Planos_var_samp_fields",
	ValorPraticado?: number
};
	/** order by var_samp() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_var_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Combos_Planos_variance_fields"]: {
	__typename: "comercial_Combos_Planos_variance_fields",
	ValorPraticado?: number
};
	/** order by variance() on columns of table "comercial.Combos_Planos" */
["comercial_Combos_Planos_variance_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Combos_Precos" */
["comercial_Combos_Precos"]: {
	__typename: "comercial_Combos_Precos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	PropostasCombos: Array<GraphQLTypes["comercial_Propostas_Combos"]>,
	/** An aggregate relationship */
	PropostasCombos_aggregate: GraphQLTypes["comercial_Propostas_Combos_aggregate"],
	ValorBase: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate"]: {
	__typename: "comercial_Combos_Precos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_Precos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos_Precos"]>
};
	/** aggregate fields of "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_fields"]: {
	__typename: "comercial_Combos_Precos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Combos_Precos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Combos_Precos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_Precos_min_fields"],
	stddev?: GraphQLTypes["comercial_Combos_Precos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Precos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Precos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Combos_Precos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Combos_Precos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Combos_Precos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Combos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Combos_Precos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Combos_Precos_max_order_by"],
	min?: GraphQLTypes["comercial_Combos_Precos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Combos_Precos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Precos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Precos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Combos_Precos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Combos_Precos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Combos_Precos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Combos_Precos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Combos_Precos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Precos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Combos_Precos_avg_fields"]: {
	__typename: "comercial_Combos_Precos_avg_fields",
	ValorBase?: number
};
	/** order by avg() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_avg_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Precos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	PropostasCombos?: GraphQLTypes["comercial_Propostas_Combos_bool_exp"],
	ValorBase?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_Precos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_Precos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_Precos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos_Precos" */
["comercial_Combos_Precos_constraint"]: comercial_Combos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_inc_input"]: {
		ValorBase?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Combos_Precos" */
["comercial_Combos_Precos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PropostasCombos?: GraphQLTypes["comercial_Propostas_Combos_arr_rel_insert_input"],
	ValorBase?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_Precos_max_fields"]: {
	__typename: "comercial_Combos_Precos_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Combos_Precos_min_fields"]: {
	__typename: "comercial_Combos_Precos_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Combos_Precos" */
["comercial_Combos_Precos_mutation_response"]: {
	__typename: "comercial_Combos_Precos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos_Precos"]>
};
	/** input type for inserting object relation for remote table "comercial.Combos_Precos" */
["comercial_Combos_Precos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Combos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Precos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Combos_Precos" */
["comercial_Combos_Precos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_Precos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_Precos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_Precos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos_Precos". */
["comercial_Combos_Precos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	PropostasCombos_aggregate?: GraphQLTypes["comercial_Propostas_Combos_aggregate_order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos_Precos */
["comercial_Combos_Precos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_select_column"]: comercial_Combos_Precos_select_column;
	/** input type for updating data in table "comercial.Combos_Precos" */
["comercial_Combos_Precos_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Combos_Precos_stddev_fields"]: {
	__typename: "comercial_Combos_Precos_stddev_fields",
	ValorBase?: number
};
	/** order by stddev() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Precos_stddev_pop_fields"]: {
	__typename: "comercial_Combos_Precos_stddev_pop_fields",
	ValorBase?: number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_pop_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Precos_stddev_samp_fields"]: {
	__typename: "comercial_Combos_Precos_stddev_samp_fields",
	ValorBase?: number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_stddev_samp_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Combos_Precos_sum_fields"]: {
	__typename: "comercial_Combos_Precos_sum_fields",
	ValorBase?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_sum_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_update_column"]: comercial_Combos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Precos_var_pop_fields"]: {
	__typename: "comercial_Combos_Precos_var_pop_fields",
	ValorBase?: number
};
	/** order by var_pop() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_pop_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Combos_Precos_var_samp_fields"]: {
	__typename: "comercial_Combos_Precos_var_samp_fields",
	ValorBase?: number
};
	/** order by var_samp() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_var_samp_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Combos_Precos_variance_fields"]: {
	__typename: "comercial_Combos_Precos_variance_fields",
	ValorBase?: number
};
	/** order by variance() on columns of table "comercial.Combos_Precos" */
["comercial_Combos_Precos_variance_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos"]: {
	__typename: "comercial_Combos_Produtos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id: GraphQLTypes["uuid"],
	Produto_Id: GraphQLTypes["uuid"],
	ValorPraticado: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate"]: {
	__typename: "comercial_Combos_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos_Produtos"]>
};
	/** aggregate fields of "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_fields"]: {
	__typename: "comercial_Combos_Produtos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Combos_Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Combos_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_Produtos_min_fields"],
	stddev?: GraphQLTypes["comercial_Combos_Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Combos_Produtos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Combos_Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Combos_Produtos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Combos_Produtos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Combos_Produtos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Combos_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Combos_Produtos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Combos_Produtos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Produtos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Produtos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Combos_Produtos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Combos_Produtos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Combos_Produtos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Combos_Produtos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Combos_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Produtos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Combos_Produtos_avg_fields"]: {
	__typename: "comercial_Combos_Produtos_avg_fields",
	ValorPraticado?: number
};
	/** order by avg() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_avg_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Produtos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"],
	ProdutoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	ValorPraticado?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_constraint"]: comercial_Combos_Produtos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_inc_input"]: {
		ValorPraticado?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_Produtos_max_fields"]: {
	__typename: "comercial_Combos_Produtos_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Combos_Produtos_min_fields"]: {
	__typename: "comercial_Combos_Produtos_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_mutation_response"]: {
	__typename: "comercial_Combos_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos_Produtos"]>
};
	/** on conflict condition type for table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos_Produtos". */
["comercial_Combos_Produtos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos_Produtos */
["comercial_Combos_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_select_column"]: comercial_Combos_Produtos_select_column;
	/** input type for updating data in table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Combos_Produtos_stddev_fields"]: {
	__typename: "comercial_Combos_Produtos_stddev_fields",
	ValorPraticado?: number
};
	/** order by stddev() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Produtos_stddev_pop_fields"]: {
	__typename: "comercial_Combos_Produtos_stddev_pop_fields",
	ValorPraticado?: number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Produtos_stddev_samp_fields"]: {
	__typename: "comercial_Combos_Produtos_stddev_samp_fields",
	ValorPraticado?: number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_stddev_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Combos_Produtos_sum_fields"]: {
	__typename: "comercial_Combos_Produtos_sum_fields",
	ValorPraticado?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_sum_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_update_column"]: comercial_Combos_Produtos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Produtos_var_pop_fields"]: {
	__typename: "comercial_Combos_Produtos_var_pop_fields",
	ValorPraticado?: number
};
	/** order by var_pop() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Combos_Produtos_var_samp_fields"]: {
	__typename: "comercial_Combos_Produtos_var_samp_fields",
	ValorPraticado?: number
};
	/** order by var_samp() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_var_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Combos_Produtos_variance_fields"]: {
	__typename: "comercial_Combos_Produtos_variance_fields",
	ValorPraticado?: number
};
	/** order by variance() on columns of table "comercial.Combos_Produtos" */
["comercial_Combos_Produtos_variance_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos"]: {
	__typename: "comercial_Combos_Servicos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	ServicoPreco_Id: GraphQLTypes["uuid"],
	Servico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	ServicosPreco: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	ValorPraticado: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate"]: {
	__typename: "comercial_Combos_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos_Servicos"]>
};
	/** aggregate fields of "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_fields"]: {
	__typename: "comercial_Combos_Servicos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Combos_Servicos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Combos_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_Servicos_min_fields"],
	stddev?: GraphQLTypes["comercial_Combos_Servicos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Servicos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Servicos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Combos_Servicos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Combos_Servicos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Combos_Servicos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Combos_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Combos_Servicos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Combos_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Combos_Servicos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Combos_Servicos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Combos_Servicos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Combos_Servicos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Combos_Servicos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Combos_Servicos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Combos_Servicos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Combos_Servicos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Combos_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_Servicos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Combos_Servicos_avg_fields"]: {
	__typename: "comercial_Combos_Servicos_avg_fields",
	ValorPraticado?: number
};
	/** order by avg() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_avg_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Combos_Servicos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	ServicoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"],
	ValorPraticado?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_constraint"]: comercial_Combos_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_inc_input"]: {
		ValorPraticado?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_Servicos_max_fields"]: {
	__typename: "comercial_Combos_Servicos_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Combos_Servicos_min_fields"]: {
	__typename: "comercial_Combos_Servicos_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_mutation_response"]: {
	__typename: "comercial_Combos_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos_Servicos"]>
};
	/** on conflict condition type for table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos_Servicos". */
["comercial_Combos_Servicos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos_Servicos */
["comercial_Combos_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_select_column"]: comercial_Combos_Servicos_select_column;
	/** input type for updating data in table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Combos_Servicos_stddev_fields"]: {
	__typename: "comercial_Combos_Servicos_stddev_fields",
	ValorPraticado?: number
};
	/** order by stddev() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Combos_Servicos_stddev_pop_fields"]: {
	__typename: "comercial_Combos_Servicos_stddev_pop_fields",
	ValorPraticado?: number
};
	/** order by stddev_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Combos_Servicos_stddev_samp_fields"]: {
	__typename: "comercial_Combos_Servicos_stddev_samp_fields",
	ValorPraticado?: number
};
	/** order by stddev_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_stddev_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Combos_Servicos_sum_fields"]: {
	__typename: "comercial_Combos_Servicos_sum_fields",
	ValorPraticado?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_sum_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_update_column"]: comercial_Combos_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_Combos_Servicos_var_pop_fields"]: {
	__typename: "comercial_Combos_Servicos_var_pop_fields",
	ValorPraticado?: number
};
	/** order by var_pop() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_pop_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Combos_Servicos_var_samp_fields"]: {
	__typename: "comercial_Combos_Servicos_var_samp_fields",
	ValorPraticado?: number
};
	/** order by var_samp() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_var_samp_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Combos_Servicos_variance_fields"]: {
	__typename: "comercial_Combos_Servicos_variance_fields",
	ValorPraticado?: number
};
	/** order by variance() on columns of table "comercial.Combos_Servicos" */
["comercial_Combos_Servicos_variance_order_by"]: {
		ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregated selection of "comercial.Combos" */
["comercial_Combos_aggregate"]: {
	__typename: "comercial_Combos_aggregate",
	aggregate?: GraphQLTypes["comercial_Combos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Combos"]>
};
	/** aggregate fields of "comercial.Combos" */
["comercial_Combos_aggregate_fields"]: {
	__typename: "comercial_Combos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Combos_max_fields"],
	min?: GraphQLTypes["comercial_Combos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Combos". All fields are combined with a logical 'AND'. */
["comercial_Combos_bool_exp"]: {
		ComboPai?: GraphQLTypes["comercial_Combos_Combos_bool_exp"],
	Combos?: GraphQLTypes["comercial_Combos_Combos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	OportunidadesDeProdutos?: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"],
	OportunidadesDeServicos?: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"],
	Planos?: GraphQLTypes["comercial_Combos_Planos_bool_exp"],
	Precos?: GraphQLTypes["comercial_Combos_Precos_bool_exp"],
	Produtos?: GraphQLTypes["comercial_Combos_Produtos_bool_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_Combos_bool_exp"],
	Servicos?: GraphQLTypes["comercial_Combos_Servicos_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_Combos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Combos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Combos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Combos" */
["comercial_Combos_constraint"]: comercial_Combos_constraint;
	/** input type for inserting data into table "comercial.Combos" */
["comercial_Combos_insert_input"]: {
		ComboPai?: GraphQLTypes["comercial_Combos_Combos_arr_rel_insert_input"],
	Combos?: GraphQLTypes["comercial_Combos_Combos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	OportunidadesDeProdutos?: GraphQLTypes["comercial_Produtos_Oportunidades_arr_rel_insert_input"],
	OportunidadesDeServicos?: GraphQLTypes["comercial_Servicos_Oportunidades_arr_rel_insert_input"],
	Planos?: GraphQLTypes["comercial_Combos_Planos_arr_rel_insert_input"],
	Precos?: GraphQLTypes["comercial_Combos_Precos_arr_rel_insert_input"],
	Produtos?: GraphQLTypes["comercial_Combos_Produtos_arr_rel_insert_input"],
	Propostas?: GraphQLTypes["comercial_Propostas_Combos_arr_rel_insert_input"],
	Servicos?: GraphQLTypes["comercial_Combos_Servicos_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Combos_max_fields"]: {
	__typename: "comercial_Combos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Combos_min_fields"]: {
	__typename: "comercial_Combos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Combos" */
["comercial_Combos_mutation_response"]: {
	__typename: "comercial_Combos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Combos"]>
};
	/** input type for inserting object relation for remote table "comercial.Combos" */
["comercial_Combos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Combos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Combos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Combos" */
["comercial_Combos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Combos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Combos_update_column"]>,
	where?: GraphQLTypes["comercial_Combos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Combos". */
["comercial_Combos_order_by"]: {
		ComboPai_aggregate?: GraphQLTypes["comercial_Combos_Combos_aggregate_order_by"],
	Combos_aggregate?: GraphQLTypes["comercial_Combos_Combos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	OportunidadesDeProdutos_aggregate?: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate_order_by"],
	OportunidadesDeServicos_aggregate?: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate_order_by"],
	Planos_aggregate?: GraphQLTypes["comercial_Combos_Planos_aggregate_order_by"],
	Precos_aggregate?: GraphQLTypes["comercial_Combos_Precos_aggregate_order_by"],
	Produtos_aggregate?: GraphQLTypes["comercial_Combos_Produtos_aggregate_order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_Combos_aggregate_order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Combos_Servicos_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Combos */
["comercial_Combos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Combos" */
["comercial_Combos_select_column"]: comercial_Combos_select_column;
	/** input type for updating data in table "comercial.Combos" */
["comercial_Combos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Combos" */
["comercial_Combos_update_column"]: comercial_Combos_update_column;
	/** columns and relationships of "comercial.Condicionais" */
["comercial_Condicionais"]: {
	__typename: "comercial_Condicionais",
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Planos: Array<GraphQLTypes["comercial_Planos_Condicionais"]>,
	/** An aggregate relationship */
	Planos_aggregate: GraphQLTypes["comercial_Planos_Condicionais_aggregate"],
	/** An object relationship */
	Situacao: GraphQLTypes["comercial_CondicionaisSituacoes"],
	Situacao_Id: GraphQLTypes["comercial_CondicionaisSituacoes_enum"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes"]: {
	__typename: "comercial_CondicionaisSituacoes",
	Comentario: string,
	/** An array relationship */
	Condicionais: Array<GraphQLTypes["comercial_Condicionais"]>,
	/** An aggregate relationship */
	Condicionais_aggregate: GraphQLTypes["comercial_Condicionais_aggregate"],
	Valor: string
};
	/** aggregated selection of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate"]: {
	__typename: "comercial_CondicionaisSituacoes_aggregate",
	aggregate?: GraphQLTypes["comercial_CondicionaisSituacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_CondicionaisSituacoes"]>
};
	/** aggregate fields of "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_aggregate_fields"]: {
	__typename: "comercial_CondicionaisSituacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_CondicionaisSituacoes_max_fields"],
	min?: GraphQLTypes["comercial_CondicionaisSituacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.CondicionaisSituacoes". All fields are combined with a logical 'AND'. */
["comercial_CondicionaisSituacoes_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Condicionais?: GraphQLTypes["comercial_Condicionais_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"]>,
	_not?: GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_constraint"]: comercial_CondicionaisSituacoes_constraint;
	["comercial_CondicionaisSituacoes_enum"]: comercial_CondicionaisSituacoes_enum;
	/** Boolean expression to compare columns of type "comercial_CondicionaisSituacoes_enum". All fields are combined with logical 'AND'. */
["comercial_CondicionaisSituacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["comercial_CondicionaisSituacoes_enum"],
	_in?: Array<GraphQLTypes["comercial_CondicionaisSituacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["comercial_CondicionaisSituacoes_enum"],
	_nin?: Array<GraphQLTypes["comercial_CondicionaisSituacoes_enum"]>
};
	/** input type for inserting data into table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_insert_input"]: {
		Comentario?: string,
	Condicionais?: GraphQLTypes["comercial_Condicionais_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["comercial_CondicionaisSituacoes_max_fields"]: {
	__typename: "comercial_CondicionaisSituacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["comercial_CondicionaisSituacoes_min_fields"]: {
	__typename: "comercial_CondicionaisSituacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_mutation_response"]: {
	__typename: "comercial_CondicionaisSituacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_CondicionaisSituacoes"]>
};
	/** input type for inserting object relation for remote table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_CondicionaisSituacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_CondicionaisSituacoes_on_conflict"]
};
	/** on conflict condition type for table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_on_conflict"]: {
		constraint: GraphQLTypes["comercial_CondicionaisSituacoes_constraint"],
	update_columns: Array<GraphQLTypes["comercial_CondicionaisSituacoes_update_column"]>,
	where?: GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.CondicionaisSituacoes". */
["comercial_CondicionaisSituacoes_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Condicionais_aggregate?: GraphQLTypes["comercial_Condicionais_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_CondicionaisSituacoes */
["comercial_CondicionaisSituacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_select_column"]: comercial_CondicionaisSituacoes_select_column;
	/** input type for updating data in table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "comercial.CondicionaisSituacoes" */
["comercial_CondicionaisSituacoes_update_column"]: comercial_CondicionaisSituacoes_update_column;
	/** aggregated selection of "comercial.Condicionais" */
["comercial_Condicionais_aggregate"]: {
	__typename: "comercial_Condicionais_aggregate",
	aggregate?: GraphQLTypes["comercial_Condicionais_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Condicionais"]>
};
	/** aggregate fields of "comercial.Condicionais" */
["comercial_Condicionais_aggregate_fields"]: {
	__typename: "comercial_Condicionais_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Condicionais_max_fields"],
	min?: GraphQLTypes["comercial_Condicionais_min_fields"]
};
	/** order by aggregate values of table "comercial.Condicionais" */
["comercial_Condicionais_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Condicionais_max_order_by"],
	min?: GraphQLTypes["comercial_Condicionais_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Condicionais_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Condicionais_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Condicionais_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Planos?: GraphQLTypes["comercial_Planos_Condicionais_bool_exp"],
	Situacao?: GraphQLTypes["comercial_CondicionaisSituacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["comercial_CondicionaisSituacoes_enum_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Condicionais_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Condicionais_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Condicionais_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Condicionais" */
["comercial_Condicionais_constraint"]: comercial_Condicionais_constraint;
	/** input type for inserting data into table "comercial.Condicionais" */
["comercial_Condicionais_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Planos?: GraphQLTypes["comercial_Planos_Condicionais_arr_rel_insert_input"],
	Situacao?: GraphQLTypes["comercial_CondicionaisSituacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["comercial_CondicionaisSituacoes_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Condicionais_max_fields"]: {
	__typename: "comercial_Condicionais_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Condicionais_min_fields"]: {
	__typename: "comercial_Condicionais_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Condicionais" */
["comercial_Condicionais_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Condicionais" */
["comercial_Condicionais_mutation_response"]: {
	__typename: "comercial_Condicionais_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Condicionais"]>
};
	/** input type for inserting object relation for remote table "comercial.Condicionais" */
["comercial_Condicionais_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Condicionais_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Condicionais_on_conflict"]
};
	/** on conflict condition type for table "comercial.Condicionais" */
["comercial_Condicionais_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Condicionais_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Condicionais_update_column"]>,
	where?: GraphQLTypes["comercial_Condicionais_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Condicionais". */
["comercial_Condicionais_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Planos_aggregate?: GraphQLTypes["comercial_Planos_Condicionais_aggregate_order_by"],
	Situacao?: GraphQLTypes["comercial_CondicionaisSituacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Condicionais */
["comercial_Condicionais_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Condicionais" */
["comercial_Condicionais_select_column"]: comercial_Condicionais_select_column;
	/** input type for updating data in table "comercial.Condicionais" */
["comercial_Condicionais_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Situacao_Id?: GraphQLTypes["comercial_CondicionaisSituacoes_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Condicionais" */
["comercial_Condicionais_update_column"]: comercial_Condicionais_update_column;
	/** columns and relationships of "comercial.ContratosBase" */
["comercial_ContratosBase"]: {
	__typename: "comercial_ContratosBase",
	CodigoReferencia: number,
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An object relationship */
	Parceiro: GraphQLTypes["comercial_Fornecedores"],
	Parceiro_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Versoes: Array<GraphQLTypes["comercial_ContratosBase_Versoes"]>,
	/** An aggregate relationship */
	Versoes_aggregate: GraphQLTypes["comercial_ContratosBase_Versoes_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes"]: {
	__typename: "comercial_ContratosBase_Versoes",
	/** An object relationship */
	ContratoBase: GraphQLTypes["comercial_ContratosBase"],
	ContratoBase_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Versao: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate"]: {
	__typename: "comercial_ContratosBase_Versoes_aggregate",
	aggregate?: GraphQLTypes["comercial_ContratosBase_Versoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_ContratosBase_Versoes"]>
};
	/** aggregate fields of "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_fields"]: {
	__typename: "comercial_ContratosBase_Versoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_ContratosBase_Versoes_max_fields"],
	min?: GraphQLTypes["comercial_ContratosBase_Versoes_min_fields"]
};
	/** order by aggregate values of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_ContratosBase_Versoes_max_order_by"],
	min?: GraphQLTypes["comercial_ContratosBase_Versoes_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_ContratosBase_Versoes_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_ContratosBase_Versoes_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.ContratosBase_Versoes". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_Versoes_bool_exp"]: {
		ContratoBase?: GraphQLTypes["comercial_ContratosBase_bool_exp"],
	ContratoBase_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Versao?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"]>,
	_not?: GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_constraint"]: comercial_ContratosBase_Versoes_constraint;
	/** input type for inserting data into table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_insert_input"]: {
		ContratoBase?: GraphQLTypes["comercial_ContratosBase_obj_rel_insert_input"],
	ContratoBase_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Versao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_ContratosBase_Versoes_max_fields"]: {
	__typename: "comercial_ContratosBase_Versoes_max_fields",
	ContratoBase_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Versao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_max_order_by"]: {
		ContratoBase_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Versao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_ContratosBase_Versoes_min_fields"]: {
	__typename: "comercial_ContratosBase_Versoes_min_fields",
	ContratoBase_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Versao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_min_order_by"]: {
		ContratoBase_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Versao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_mutation_response"]: {
	__typename: "comercial_ContratosBase_Versoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_ContratosBase_Versoes"]>
};
	/** on conflict condition type for table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_on_conflict"]: {
		constraint: GraphQLTypes["comercial_ContratosBase_Versoes_constraint"],
	update_columns: Array<GraphQLTypes["comercial_ContratosBase_Versoes_update_column"]>,
	where?: GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.ContratosBase_Versoes". */
["comercial_ContratosBase_Versoes_order_by"]: {
		ContratoBase?: GraphQLTypes["comercial_ContratosBase_order_by"],
	ContratoBase_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Versao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_ContratosBase_Versoes */
["comercial_ContratosBase_Versoes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_select_column"]: comercial_ContratosBase_Versoes_select_column;
	/** input type for updating data in table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_set_input"]: {
		ContratoBase_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Versao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.ContratosBase_Versoes" */
["comercial_ContratosBase_Versoes_update_column"]: comercial_ContratosBase_Versoes_update_column;
	/** aggregated selection of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate"]: {
	__typename: "comercial_ContratosBase_aggregate",
	aggregate?: GraphQLTypes["comercial_ContratosBase_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_ContratosBase"]>
};
	/** aggregate fields of "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_fields"]: {
	__typename: "comercial_ContratosBase_aggregate_fields",
	avg?: GraphQLTypes["comercial_ContratosBase_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_ContratosBase_max_fields"],
	min?: GraphQLTypes["comercial_ContratosBase_min_fields"],
	stddev?: GraphQLTypes["comercial_ContratosBase_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_ContratosBase_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_ContratosBase_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_ContratosBase_sum_fields"],
	var_pop?: GraphQLTypes["comercial_ContratosBase_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_ContratosBase_var_samp_fields"],
	variance?: GraphQLTypes["comercial_ContratosBase_variance_fields"]
};
	/** order by aggregate values of table "comercial.ContratosBase" */
["comercial_ContratosBase_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_ContratosBase_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_ContratosBase_max_order_by"],
	min?: GraphQLTypes["comercial_ContratosBase_min_order_by"],
	stddev?: GraphQLTypes["comercial_ContratosBase_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_ContratosBase_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_ContratosBase_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_ContratosBase_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_ContratosBase_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_ContratosBase_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_ContratosBase_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_ContratosBase_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_ContratosBase_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_ContratosBase_avg_fields"]: {
	__typename: "comercial_ContratosBase_avg_fields",
	CodigoReferencia?: number
};
	/** order by avg() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_avg_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.ContratosBase". All fields are combined with a logical 'AND'. */
["comercial_ContratosBase_bool_exp"]: {
		CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Parceiro?: GraphQLTypes["comercial_Fornecedores_bool_exp"],
	Parceiro_Id?: GraphQLTypes["uuid_comparison_exp"],
	Versoes?: GraphQLTypes["comercial_ContratosBase_Versoes_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_ContratosBase_bool_exp"]>,
	_not?: GraphQLTypes["comercial_ContratosBase_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_ContratosBase_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.ContratosBase" */
["comercial_ContratosBase_constraint"]: comercial_ContratosBase_constraint;
	/** input type for incrementing numeric columns in table "comercial.ContratosBase" */
["comercial_ContratosBase_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "comercial.ContratosBase" */
["comercial_ContratosBase_insert_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Parceiro?: GraphQLTypes["comercial_Fornecedores_obj_rel_insert_input"],
	Parceiro_Id?: GraphQLTypes["uuid"],
	Versoes?: GraphQLTypes["comercial_ContratosBase_Versoes_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_ContratosBase_max_fields"]: {
	__typename: "comercial_ContratosBase_max_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Parceiro_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_max_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Parceiro_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_ContratosBase_min_fields"]: {
	__typename: "comercial_ContratosBase_min_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Parceiro_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_min_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Parceiro_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.ContratosBase" */
["comercial_ContratosBase_mutation_response"]: {
	__typename: "comercial_ContratosBase_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_ContratosBase"]>
};
	/** input type for inserting object relation for remote table "comercial.ContratosBase" */
["comercial_ContratosBase_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_ContratosBase_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_ContratosBase_on_conflict"]
};
	/** on conflict condition type for table "comercial.ContratosBase" */
["comercial_ContratosBase_on_conflict"]: {
		constraint: GraphQLTypes["comercial_ContratosBase_constraint"],
	update_columns: Array<GraphQLTypes["comercial_ContratosBase_update_column"]>,
	where?: GraphQLTypes["comercial_ContratosBase_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.ContratosBase". */
["comercial_ContratosBase_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Parceiro?: GraphQLTypes["comercial_Fornecedores_order_by"],
	Parceiro_Id?: GraphQLTypes["order_by"],
	Versoes_aggregate?: GraphQLTypes["comercial_ContratosBase_Versoes_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_ContratosBase */
["comercial_ContratosBase_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_select_column"]: comercial_ContratosBase_select_column;
	/** input type for updating data in table "comercial.ContratosBase" */
["comercial_ContratosBase_set_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Parceiro_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_ContratosBase_stddev_fields"]: {
	__typename: "comercial_ContratosBase_stddev_fields",
	CodigoReferencia?: number
};
	/** order by stddev() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_ContratosBase_stddev_pop_fields"]: {
	__typename: "comercial_ContratosBase_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** order by stddev_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_ContratosBase_stddev_samp_fields"]: {
	__typename: "comercial_ContratosBase_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** order by stddev_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_stddev_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_ContratosBase_sum_fields"]: {
	__typename: "comercial_ContratosBase_sum_fields",
	CodigoReferencia?: number
};
	/** order by sum() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_sum_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_update_column"]: comercial_ContratosBase_update_column;
	/** aggregate var_pop on columns */
["comercial_ContratosBase_var_pop_fields"]: {
	__typename: "comercial_ContratosBase_var_pop_fields",
	CodigoReferencia?: number
};
	/** order by var_pop() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_ContratosBase_var_samp_fields"]: {
	__typename: "comercial_ContratosBase_var_samp_fields",
	CodigoReferencia?: number
};
	/** order by var_samp() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_var_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_ContratosBase_variance_fields"]: {
	__typename: "comercial_ContratosBase_variance_fields",
	CodigoReferencia?: number
};
	/** order by variance() on columns of table "comercial.ContratosBase" */
["comercial_ContratosBase_variance_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Fornecedores" */
["comercial_Fornecedores"]: {
	__typename: "comercial_Fornecedores",
	/** An array relationship */
	ContratosBases: Array<GraphQLTypes["comercial_ContratosBase"]>,
	/** An aggregate relationship */
	ContratosBases_aggregate: GraphQLTypes["comercial_ContratosBase_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Produtos: Array<GraphQLTypes["comercial_Fornecedores_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate"],
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Fornecedores_Servicos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos"]: {
	__typename: "comercial_Fornecedores_Produtos",
	/** An object relationship */
	Fornecedor: GraphQLTypes["comercial_Fornecedores"],
	Fornecedor_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Precos: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos"]>,
	/** An aggregate relationship */
	Precos_aggregate: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_aggregate"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos",
	/** An array relationship */
	CombosProdutos: Array<GraphQLTypes["comercial_Combos_Produtos"]>,
	/** An aggregate relationship */
	CombosProdutos_aggregate: GraphQLTypes["comercial_Combos_Produtos_aggregate"],
	Fornecedor_Produto_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Fornecedores_Produto: GraphQLTypes["comercial_Fornecedores_Produtos"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	PropostasProdutos: Array<GraphQLTypes["comercial_Propostas_Produtos"]>,
	/** An aggregate relationship */
	PropostasProdutos_aggregate: GraphQLTypes["comercial_Propostas_Produtos_aggregate"],
	/** An object relationship */
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos"]>
};
	/** aggregate fields of "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_min_fields"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_max_order_by"],
	min?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Produtos_Precos_avg_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_Precos_bool_exp"]: {
		CombosProdutos?: GraphQLTypes["comercial_Combos_Produtos_bool_exp"],
	Fornecedor_Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Fornecedores_Produto?: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	PropostasProdutos?: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_constraint"]: comercial_Fornecedores_Produtos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_insert_input"]: {
		CombosProdutos?: GraphQLTypes["comercial_Combos_Produtos_arr_rel_insert_input"],
	Fornecedor_Produto_Id?: GraphQLTypes["uuid"],
	Fornecedores_Produto?: GraphQLTypes["comercial_Fornecedores_Produtos_obj_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	PropostasProdutos?: GraphQLTypes["comercial_Propostas_Produtos_arr_rel_insert_input"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_Precos_max_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_max_fields",
	Fornecedor_Produto_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_max_order_by"]: {
		Fornecedor_Produto_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_Precos_min_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_min_fields",
	Fornecedor_Produto_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_min_order_by"]: {
		Fornecedor_Produto_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_mutation_response"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos"]>
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos_Precos". */
["comercial_Fornecedores_Produtos_Precos_order_by"]: {
		CombosProdutos_aggregate?: GraphQLTypes["comercial_Combos_Produtos_aggregate_order_by"],
	Fornecedor_Produto_Id?: GraphQLTypes["order_by"],
	Fornecedores_Produto?: GraphQLTypes["comercial_Fornecedores_Produtos_order_by"],
	Id?: GraphQLTypes["order_by"],
	PropostasProdutos_aggregate?: GraphQLTypes["comercial_Propostas_Produtos_aggregate_order_by"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_order_by"],
	TipoDeRecorrencia_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores_Produtos_Precos */
["comercial_Fornecedores_Produtos_Precos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_select_column"]: comercial_Fornecedores_Produtos_Precos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_set_input"]: {
		Fornecedor_Produto_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Produtos_Precos_sum_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_update_column"]: comercial_Fornecedores_Produtos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Produtos_Precos_var_pop_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Produtos_Precos_var_samp_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Produtos_Precos_variance_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_Precos_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Produtos_Precos" */
["comercial_Fornecedores_Produtos_Precos_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregated selection of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate"]: {
	__typename: "comercial_Fornecedores_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores_Produtos"]>
};
	/** aggregate fields of "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Fornecedores_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Fornecedores_Produtos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Fornecedores_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Produtos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Produtos_bool_exp"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_bool_exp"],
	Fornecedor_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Precos?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_constraint"]: comercial_Fornecedores_Produtos_constraint;
	/** input type for inserting data into table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_insert_input"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_obj_rel_insert_input"],
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Precos?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_arr_rel_insert_input"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_Produtos_max_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_max_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_max_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_Produtos_min_fields"]: {
	__typename: "comercial_Fornecedores_Produtos_min_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_min_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_mutation_response"]: {
	__typename: "comercial_Fornecedores_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores_Produtos"]>
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Fornecedores_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Produtos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Produtos". */
["comercial_Fornecedores_Produtos_order_by"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_order_by"],
	Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Precos_aggregate?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_aggregate_order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores_Produtos */
["comercial_Fornecedores_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_select_column"]: comercial_Fornecedores_Produtos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_set_input"]: {
		Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Fornecedores_Produtos" */
["comercial_Fornecedores_Produtos_update_column"]: comercial_Fornecedores_Produtos_update_column;
	/** columns and relationships of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos"]: {
	__typename: "comercial_Fornecedores_Servicos",
	/** An object relationship */
	Fornecedor: GraphQLTypes["comercial_Fornecedores"],
	Fornecedor_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Precos: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos"]>,
	/** An aggregate relationship */
	Precos_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_aggregate"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Tarifas: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"]>,
	/** An aggregate relationship */
	Tarifas_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos",
	/** An array relationship */
	CombosServicos: Array<GraphQLTypes["comercial_Combos_Servicos"]>,
	/** An aggregate relationship */
	CombosServicos_aggregate: GraphQLTypes["comercial_Combos_Servicos_aggregate"],
	Fornecedor_Servico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Fornecedores_Servico: GraphQLTypes["comercial_Fornecedores_Servicos"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	PropostasServicos: Array<GraphQLTypes["comercial_Propostas_Servicos"]>,
	/** An aggregate relationship */
	PropostasServicos_aggregate: GraphQLTypes["comercial_Propostas_Servicos_aggregate"],
	/** An object relationship */
	TipoDeRecorrencia: GraphQLTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos"]>
};
	/** aggregate fields of "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_min_fields"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_max_order_by"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Precos_avg_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Precos_bool_exp"]: {
		CombosServicos?: GraphQLTypes["comercial_Combos_Servicos_bool_exp"],
	Fornecedor_Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	PropostasServicos?: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_constraint"]: comercial_Fornecedores_Servicos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_insert_input"]: {
		CombosServicos?: GraphQLTypes["comercial_Combos_Servicos_arr_rel_insert_input"],
	Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_obj_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	PropostasServicos?: GraphQLTypes["comercial_Propostas_Servicos_arr_rel_insert_input"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Precos_max_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_max_fields",
	Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_max_order_by"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Precos_min_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_min_fields",
	Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_min_order_by"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_mutation_response"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos"]>
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Precos". */
["comercial_Fornecedores_Servicos_Precos_order_by"]: {
		CombosServicos_aggregate?: GraphQLTypes["comercial_Combos_Servicos_aggregate_order_by"],
	Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_order_by"],
	Id?: GraphQLTypes["order_by"],
	PropostasServicos_aggregate?: GraphQLTypes["comercial_Propostas_Servicos_aggregate_order_by"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_order_by"],
	TipoDeRecorrencia_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Precos */
["comercial_Fornecedores_Servicos_Precos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_select_column"]: comercial_Fornecedores_Servicos_Precos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_set_input"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Precos_sum_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_update_column"]: comercial_Fornecedores_Servicos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Precos_var_pop_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Precos_var_samp_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Precos_variance_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Precos_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Precos" */
["comercial_Fornecedores_Servicos_Precos_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas",
	Fornecedor_Servico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Fornecedores_Servico: GraphQLTypes["comercial_Fornecedores_Servicos"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Tarifa: GraphQLTypes["comercial_Tarifas"],
	Tarifa_Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"]>
};
	/** aggregate fields of "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_aggregate_fields",
	avg?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_min_fields"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_variance_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_max_order_by"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_min_order_by"],
	stddev?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Fornecedores_Servicos_Tarifas_avg_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_bool_exp"],
	Tarifa_Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_constraint"]: comercial_Fornecedores_Servicos_Tarifas_constraint;
	/** input type for incrementing numeric columns in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_insert_input"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_obj_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_obj_rel_insert_input"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_Tarifas_max_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_max_fields",
	Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_max_order_by"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_Tarifas_min_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_min_fields",
	Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_min_order_by"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_mutation_response"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"]>
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos_Tarifas". */
["comercial_Fornecedores_Servicos_Tarifas_order_by"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["order_by"],
	Fornecedores_Servico?: GraphQLTypes["comercial_Fornecedores_Servicos_order_by"],
	Id?: GraphQLTypes["order_by"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos_Tarifas */
["comercial_Fornecedores_Servicos_Tarifas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_select_column"]: comercial_Fornecedores_Servicos_Tarifas_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_set_input"]: {
		Fornecedor_Servico_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Fornecedores_Servicos_Tarifas_sum_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_update_column"]: comercial_Fornecedores_Servicos_Tarifas_update_column;
	/** aggregate var_pop on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Fornecedores_Servicos_Tarifas_variance_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_Tarifas_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Fornecedores_Servicos_Tarifas" */
["comercial_Fornecedores_Servicos_Tarifas_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregated selection of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate"]: {
	__typename: "comercial_Fornecedores_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores_Servicos"]>
};
	/** aggregate fields of "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Fornecedores_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Fornecedores_Servicos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Fornecedores_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Servicos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_Servicos_bool_exp"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_bool_exp"],
	Fornecedor_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Precos?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Tarifas?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_constraint"]: comercial_Fornecedores_Servicos_constraint;
	/** input type for inserting data into table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_insert_input"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_obj_rel_insert_input"],
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Precos?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_arr_rel_insert_input"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	Tarifas?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_Servicos_max_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_max_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_max_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_Servicos_min_fields"]: {
	__typename: "comercial_Fornecedores_Servicos_min_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_min_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_mutation_response"]: {
	__typename: "comercial_Fornecedores_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores_Servicos"]>
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Fornecedores_Servicos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_Servicos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores_Servicos". */
["comercial_Fornecedores_Servicos_order_by"]: {
		Fornecedor?: GraphQLTypes["comercial_Fornecedores_order_by"],
	Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Precos_aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_aggregate_order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Tarifas_aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores_Servicos */
["comercial_Fornecedores_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_select_column"]: comercial_Fornecedores_Servicos_select_column;
	/** input type for updating data in table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_set_input"]: {
		Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Fornecedores_Servicos" */
["comercial_Fornecedores_Servicos_update_column"]: comercial_Fornecedores_Servicos_update_column;
	/** aggregated selection of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate"]: {
	__typename: "comercial_Fornecedores_aggregate",
	aggregate?: GraphQLTypes["comercial_Fornecedores_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Fornecedores"]>
};
	/** aggregate fields of "comercial.Fornecedores" */
["comercial_Fornecedores_aggregate_fields"]: {
	__typename: "comercial_Fornecedores_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Fornecedores_max_fields"],
	min?: GraphQLTypes["comercial_Fornecedores_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Fornecedores". All fields are combined with a logical 'AND'. */
["comercial_Fornecedores_bool_exp"]: {
		ContratosBases?: GraphQLTypes["comercial_ContratosBase_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Produtos?: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"],
	Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_Fornecedores_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Fornecedores_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Fornecedores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Fornecedores" */
["comercial_Fornecedores_constraint"]: comercial_Fornecedores_constraint;
	/** input type for inserting data into table "comercial.Fornecedores" */
["comercial_Fornecedores_insert_input"]: {
		ContratosBases?: GraphQLTypes["comercial_ContratosBase_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produtos?: GraphQLTypes["comercial_Fornecedores_Produtos_arr_rel_insert_input"],
	Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Fornecedores_max_fields"]: {
	__typename: "comercial_Fornecedores_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Fornecedores_min_fields"]: {
	__typename: "comercial_Fornecedores_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Fornecedores" */
["comercial_Fornecedores_mutation_response"]: {
	__typename: "comercial_Fornecedores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Fornecedores"]>
};
	/** input type for inserting object relation for remote table "comercial.Fornecedores" */
["comercial_Fornecedores_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Fornecedores_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Fornecedores_on_conflict"]
};
	/** on conflict condition type for table "comercial.Fornecedores" */
["comercial_Fornecedores_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Fornecedores_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Fornecedores_update_column"]>,
	where?: GraphQLTypes["comercial_Fornecedores_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Fornecedores". */
["comercial_Fornecedores_order_by"]: {
		ContratosBases_aggregate?: GraphQLTypes["comercial_ContratosBase_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produtos_aggregate?: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate_order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Fornecedores */
["comercial_Fornecedores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_select_column"]: comercial_Fornecedores_select_column;
	/** input type for updating data in table "comercial.Fornecedores" */
["comercial_Fornecedores_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Fornecedores" */
["comercial_Fornecedores_update_column"]: comercial_Fornecedores_update_column;
	/** columns and relationships of "comercial.Planos" */
["comercial_Planos"]: {
	__typename: "comercial_Planos",
	/** An array relationship */
	Combos: Array<GraphQLTypes["comercial_Combos_Planos"]>,
	/** An aggregate relationship */
	Combos_aggregate: GraphQLTypes["comercial_Combos_Planos_aggregate"],
	/** An array relationship */
	Condicionais: Array<GraphQLTypes["comercial_Planos_Condicionais"]>,
	/** An aggregate relationship */
	Condicionais_aggregate: GraphQLTypes["comercial_Planos_Condicionais_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Precos: Array<GraphQLTypes["comercial_Planos_Precos"]>,
	/** An aggregate relationship */
	Precos_aggregate: GraphQLTypes["comercial_Planos_Precos_aggregate"],
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas_Planos"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_Planos_aggregate"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais"]: {
	__typename: "comercial_Planos_Condicionais",
	/** An object relationship */
	Condicional: GraphQLTypes["comercial_Condicionais"],
	Condicional_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Plano: GraphQLTypes["comercial_Planos"],
	Plano_Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate"]: {
	__typename: "comercial_Planos_Condicionais_aggregate",
	aggregate?: GraphQLTypes["comercial_Planos_Condicionais_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Planos_Condicionais"]>
};
	/** aggregate fields of "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_fields"]: {
	__typename: "comercial_Planos_Condicionais_aggregate_fields",
	avg?: GraphQLTypes["comercial_Planos_Condicionais_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Planos_Condicionais_max_fields"],
	min?: GraphQLTypes["comercial_Planos_Condicionais_min_fields"],
	stddev?: GraphQLTypes["comercial_Planos_Condicionais_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Planos_Condicionais_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Planos_Condicionais_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Planos_Condicionais_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Planos_Condicionais_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Planos_Condicionais_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Planos_Condicionais_variance_fields"]
};
	/** order by aggregate values of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Planos_Condicionais_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Planos_Condicionais_max_order_by"],
	min?: GraphQLTypes["comercial_Planos_Condicionais_min_order_by"],
	stddev?: GraphQLTypes["comercial_Planos_Condicionais_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Planos_Condicionais_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Planos_Condicionais_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Planos_Condicionais_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Planos_Condicionais_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Planos_Condicionais_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Planos_Condicionais_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Planos_Condicionais_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Planos_Condicionais_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Planos_Condicionais_avg_fields"]: {
	__typename: "comercial_Planos_Condicionais_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Planos_Condicionais". All fields are combined with a logical 'AND'. */
["comercial_Planos_Condicionais_bool_exp"]: {
		Condicional?: GraphQLTypes["comercial_Condicionais_bool_exp"],
	Condicional_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano?: GraphQLTypes["comercial_Planos_bool_exp"],
	Plano_Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Planos_Condicionais_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Planos_Condicionais_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Planos_Condicionais_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_constraint"]: comercial_Planos_Condicionais_constraint;
	/** input type for incrementing numeric columns in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_insert_input"]: {
		Condicional?: GraphQLTypes["comercial_Condicionais_obj_rel_insert_input"],
	Condicional_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Plano?: GraphQLTypes["comercial_Planos_obj_rel_insert_input"],
	Plano_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Planos_Condicionais_max_fields"]: {
	__typename: "comercial_Planos_Condicionais_max_fields",
	Condicional_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_max_order_by"]: {
		Condicional_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Planos_Condicionais_min_fields"]: {
	__typename: "comercial_Planos_Condicionais_min_fields",
	Condicional_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_min_order_by"]: {
		Condicional_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_mutation_response"]: {
	__typename: "comercial_Planos_Condicionais_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Planos_Condicionais"]>
};
	/** on conflict condition type for table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Planos_Condicionais_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Planos_Condicionais_update_column"]>,
	where?: GraphQLTypes["comercial_Planos_Condicionais_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Planos_Condicionais". */
["comercial_Planos_Condicionais_order_by"]: {
		Condicional?: GraphQLTypes["comercial_Condicionais_order_by"],
	Condicional_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Plano?: GraphQLTypes["comercial_Planos_order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Planos_Condicionais */
["comercial_Planos_Condicionais_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_select_column"]: comercial_Planos_Condicionais_select_column;
	/** input type for updating data in table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_set_input"]: {
		Condicional_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Planos_Condicionais_stddev_fields"]: {
	__typename: "comercial_Planos_Condicionais_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Planos_Condicionais_stddev_pop_fields"]: {
	__typename: "comercial_Planos_Condicionais_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Planos_Condicionais_stddev_samp_fields"]: {
	__typename: "comercial_Planos_Condicionais_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Planos_Condicionais_sum_fields"]: {
	__typename: "comercial_Planos_Condicionais_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_update_column"]: comercial_Planos_Condicionais_update_column;
	/** aggregate var_pop on columns */
["comercial_Planos_Condicionais_var_pop_fields"]: {
	__typename: "comercial_Planos_Condicionais_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Planos_Condicionais_var_samp_fields"]: {
	__typename: "comercial_Planos_Condicionais_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Planos_Condicionais_variance_fields"]: {
	__typename: "comercial_Planos_Condicionais_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Planos_Condicionais" */
["comercial_Planos_Condicionais_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Planos_Precos" */
["comercial_Planos_Precos"]: {
	__typename: "comercial_Planos_Precos",
	/** An array relationship */
	CombosPlanos: Array<GraphQLTypes["comercial_Combos_Planos"]>,
	/** An aggregate relationship */
	CombosPlanos_aggregate: GraphQLTypes["comercial_Combos_Planos_aggregate"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Plano: GraphQLTypes["comercial_Planos"],
	Plano_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	PropostasPlanos: Array<GraphQLTypes["comercial_Propostas_Planos"]>,
	/** An aggregate relationship */
	PropostasPlanos_aggregate: GraphQLTypes["comercial_Propostas_Planos_aggregate"],
	/** An object relationship */
	ServicoPreco: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicoPreco_Id: GraphQLTypes["uuid"],
	ValorBase: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate"]: {
	__typename: "comercial_Planos_Precos_aggregate",
	aggregate?: GraphQLTypes["comercial_Planos_Precos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Planos_Precos"]>
};
	/** aggregate fields of "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_fields"]: {
	__typename: "comercial_Planos_Precos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Planos_Precos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Planos_Precos_max_fields"],
	min?: GraphQLTypes["comercial_Planos_Precos_min_fields"],
	stddev?: GraphQLTypes["comercial_Planos_Precos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Planos_Precos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Planos_Precos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Planos_Precos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Planos_Precos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Planos_Precos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Planos_Precos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Planos_Precos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Planos_Precos_max_order_by"],
	min?: GraphQLTypes["comercial_Planos_Precos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Planos_Precos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Planos_Precos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Planos_Precos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Planos_Precos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Planos_Precos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Planos_Precos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Planos_Precos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Planos_Precos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Planos_Precos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Planos_Precos_avg_fields"]: {
	__typename: "comercial_Planos_Precos_avg_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by avg() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_avg_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Planos_Precos". All fields are combined with a logical 'AND'. */
["comercial_Planos_Precos_bool_exp"]: {
		CombosPlanos?: GraphQLTypes["comercial_Combos_Planos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano?: GraphQLTypes["comercial_Planos_bool_exp"],
	Plano_Id?: GraphQLTypes["uuid_comparison_exp"],
	PropostasPlanos?: GraphQLTypes["comercial_Propostas_Planos_bool_exp"],
	ServicoPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"],
	ServicoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	ValorBase?: GraphQLTypes["float8_comparison_exp"],
	ValorPraticado?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Planos_Precos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Planos_Precos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Planos_Precos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Planos_Precos" */
["comercial_Planos_Precos_constraint"]: comercial_Planos_Precos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_inc_input"]: {
		ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Planos_Precos" */
["comercial_Planos_Precos_insert_input"]: {
		CombosPlanos?: GraphQLTypes["comercial_Combos_Planos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Plano?: GraphQLTypes["comercial_Planos_obj_rel_insert_input"],
	Plano_Id?: GraphQLTypes["uuid"],
	PropostasPlanos?: GraphQLTypes["comercial_Propostas_Planos_arr_rel_insert_input"],
	ServicoPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Planos_Precos_max_fields"]: {
	__typename: "comercial_Planos_Precos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Planos_Precos_min_fields"]: {
	__typename: "comercial_Planos_Precos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Planos_Precos" */
["comercial_Planos_Precos_mutation_response"]: {
	__typename: "comercial_Planos_Precos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Planos_Precos"]>
};
	/** input type for inserting object relation for remote table "comercial.Planos_Precos" */
["comercial_Planos_Precos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Planos_Precos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Planos_Precos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Planos_Precos" */
["comercial_Planos_Precos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Planos_Precos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Planos_Precos_update_column"]>,
	where?: GraphQLTypes["comercial_Planos_Precos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Planos_Precos". */
["comercial_Planos_Precos_order_by"]: {
		CombosPlanos_aggregate?: GraphQLTypes["comercial_Combos_Planos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Plano?: GraphQLTypes["comercial_Planos_order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	PropostasPlanos_aggregate?: GraphQLTypes["comercial_Propostas_Planos_aggregate_order_by"],
	ServicoPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_order_by"],
	ServicoPreco_Id?: GraphQLTypes["order_by"],
	ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Planos_Precos */
["comercial_Planos_Precos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_select_column"]: comercial_Planos_Precos_select_column;
	/** input type for updating data in table "comercial.Planos_Precos" */
["comercial_Planos_Precos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	ServicoPreco_Id?: GraphQLTypes["uuid"],
	ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Planos_Precos_stddev_fields"]: {
	__typename: "comercial_Planos_Precos_stddev_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by stddev() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Planos_Precos_stddev_pop_fields"]: {
	__typename: "comercial_Planos_Precos_stddev_pop_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by stddev_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_pop_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Planos_Precos_stddev_samp_fields"]: {
	__typename: "comercial_Planos_Precos_stddev_samp_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by stddev_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_stddev_samp_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Planos_Precos_sum_fields"]: {
	__typename: "comercial_Planos_Precos_sum_fields",
	ValorBase?: GraphQLTypes["float8"],
	ValorPraticado?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_sum_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_update_column"]: comercial_Planos_Precos_update_column;
	/** aggregate var_pop on columns */
["comercial_Planos_Precos_var_pop_fields"]: {
	__typename: "comercial_Planos_Precos_var_pop_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by var_pop() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_pop_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Planos_Precos_var_samp_fields"]: {
	__typename: "comercial_Planos_Precos_var_samp_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by var_samp() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_var_samp_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Planos_Precos_variance_fields"]: {
	__typename: "comercial_Planos_Precos_variance_fields",
	ValorBase?: number,
	ValorPraticado?: number
};
	/** order by variance() on columns of table "comercial.Planos_Precos" */
["comercial_Planos_Precos_variance_order_by"]: {
		ValorBase?: GraphQLTypes["order_by"],
	ValorPraticado?: GraphQLTypes["order_by"]
};
	/** aggregated selection of "comercial.Planos" */
["comercial_Planos_aggregate"]: {
	__typename: "comercial_Planos_aggregate",
	aggregate?: GraphQLTypes["comercial_Planos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Planos"]>
};
	/** aggregate fields of "comercial.Planos" */
["comercial_Planos_aggregate_fields"]: {
	__typename: "comercial_Planos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Planos_max_fields"],
	min?: GraphQLTypes["comercial_Planos_min_fields"]
};
	/** order by aggregate values of table "comercial.Planos" */
["comercial_Planos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Planos_max_order_by"],
	min?: GraphQLTypes["comercial_Planos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Planos" */
["comercial_Planos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Planos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Planos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Planos". All fields are combined with a logical 'AND'. */
["comercial_Planos_bool_exp"]: {
		Combos?: GraphQLTypes["comercial_Combos_Planos_bool_exp"],
	Condicionais?: GraphQLTypes["comercial_Planos_Condicionais_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Precos?: GraphQLTypes["comercial_Planos_Precos_bool_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_Planos_bool_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Planos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Planos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Planos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Planos" */
["comercial_Planos_constraint"]: comercial_Planos_constraint;
	/** input type for inserting data into table "comercial.Planos" */
["comercial_Planos_insert_input"]: {
		Combos?: GraphQLTypes["comercial_Combos_Planos_arr_rel_insert_input"],
	Condicionais?: GraphQLTypes["comercial_Planos_Condicionais_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Precos?: GraphQLTypes["comercial_Planos_Precos_arr_rel_insert_input"],
	Propostas?: GraphQLTypes["comercial_Propostas_Planos_arr_rel_insert_input"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Planos_max_fields"]: {
	__typename: "comercial_Planos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Planos" */
["comercial_Planos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Planos_min_fields"]: {
	__typename: "comercial_Planos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Planos" */
["comercial_Planos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Planos" */
["comercial_Planos_mutation_response"]: {
	__typename: "comercial_Planos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Planos"]>
};
	/** input type for inserting object relation for remote table "comercial.Planos" */
["comercial_Planos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Planos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Planos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Planos" */
["comercial_Planos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Planos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Planos_update_column"]>,
	where?: GraphQLTypes["comercial_Planos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Planos". */
["comercial_Planos_order_by"]: {
		Combos_aggregate?: GraphQLTypes["comercial_Combos_Planos_aggregate_order_by"],
	Condicionais_aggregate?: GraphQLTypes["comercial_Planos_Condicionais_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Precos_aggregate?: GraphQLTypes["comercial_Planos_Precos_aggregate_order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_Planos_aggregate_order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Planos */
["comercial_Planos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Planos" */
["comercial_Planos_select_column"]: comercial_Planos_select_column;
	/** input type for updating data in table "comercial.Planos" */
["comercial_Planos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Planos" */
["comercial_Planos_update_column"]: comercial_Planos_update_column;
	/** columns and relationships of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Prestador: GraphQLTypes["identidades_Fornecedores"],
	Prestador_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos"]>
};
	/** aggregate fields of "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_aggregate_fields",
	avg?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_min_fields"],
	stddev?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_min_order_by"],
	stddev?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_PrestadorDeServicos_Servicos_avg_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.PrestadorDeServicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_PrestadorDeServicos_Servicos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Prestador?: GraphQLTypes["identidades_Fornecedores_bool_exp"],
	Prestador_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_constraint"]: comercial_PrestadorDeServicos_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Prestador?: GraphQLTypes["identidades_Fornecedores_obj_rel_insert_input"],
	Prestador_Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_PrestadorDeServicos_Servicos_max_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Prestador_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Prestador_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_PrestadorDeServicos_Servicos_min_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Prestador_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Prestador_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_mutation_response"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos"]>
};
	/** on conflict condition type for table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.PrestadorDeServicos_Servicos". */
["comercial_PrestadorDeServicos_Servicos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Prestador?: GraphQLTypes["identidades_Fornecedores_order_by"],
	Prestador_Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_PrestadorDeServicos_Servicos */
["comercial_PrestadorDeServicos_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_select_column"]: comercial_PrestadorDeServicos_Servicos_select_column;
	/** input type for updating data in table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Prestador_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_PrestadorDeServicos_Servicos_sum_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_update_column"]: comercial_PrestadorDeServicos_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_PrestadorDeServicos_Servicos_var_pop_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_PrestadorDeServicos_Servicos_var_samp_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_PrestadorDeServicos_Servicos_variance_fields"]: {
	__typename: "comercial_PrestadorDeServicos_Servicos_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.PrestadorDeServicos_Servicos" */
["comercial_PrestadorDeServicos_Servicos_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Produtos" */
["comercial_Produtos"]: {
	__typename: "comercial_Produtos",
	/** An array relationship */
	Atributos: Array<GraphQLTypes["comercial_Produtos_Atributos"]>,
	/** An aggregate relationship */
	Atributos_aggregate: GraphQLTypes["comercial_Produtos_Atributos_aggregate"],
	Categorias: GraphQLTypes["jsonb"],
	/** An array relationship */
	Combos: Array<GraphQLTypes["comercial_Combos_Produtos"]>,
	/** An aggregate relationship */
	Combos_aggregate: GraphQLTypes["comercial_Combos_Produtos_aggregate"],
	/** An array relationship */
	Fornecedores: Array<GraphQLTypes["comercial_Fornecedores_Produtos"]>,
	/** An aggregate relationship */
	Fornecedores_aggregate: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Oportunidades: Array<GraphQLTypes["comercial_Produtos_Oportunidades"]>,
	/** An aggregate relationship */
	Oportunidades_aggregate: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** An array relationship */
	ProdutosDependentes: Array<GraphQLTypes["comercial_Produtos_Produtos"]>,
	/** An aggregate relationship */
	ProdutosDependentes_aggregate: GraphQLTypes["comercial_Produtos_Produtos_aggregate"],
	/** An array relationship */
	ProdutosQueDependo: Array<GraphQLTypes["comercial_Produtos_Produtos"]>,
	/** An aggregate relationship */
	ProdutosQueDependo_aggregate: GraphQLTypes["comercial_Produtos_Produtos_aggregate"],
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas_Produtos"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_Produtos_aggregate"],
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Produtos_Servicos"]>,
	/** An array relationship */
	Servicos_Produtos: Array<GraphQLTypes["comercial_Servicos_Produtos"]>,
	/** An aggregate relationship */
	Servicos_Produtos_aggregate: GraphQLTypes["comercial_Servicos_Produtos_aggregate"],
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Produtos_Servicos_aggregate"],
	/** An object relationship */
	Tipo: GraphQLTypes["comercial_Produtos_Tipos"],
	Tipo_Id: GraphQLTypes["comercial_Produtos_Tipos_enum"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos"]: {
	__typename: "comercial_Produtos_Atributos",
	/** An object relationship */
	Atributo: GraphQLTypes["comercial_Atributos"],
	Atributo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate"]: {
	__typename: "comercial_Produtos_Atributos_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_Atributos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos_Atributos"]>
};
	/** aggregate fields of "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_fields"]: {
	__typename: "comercial_Produtos_Atributos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Produtos_Atributos_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_Atributos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Produtos_Atributos_max_order_by"],
	min?: GraphQLTypes["comercial_Produtos_Atributos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Produtos_Atributos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Atributos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Atributos_bool_exp"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_bool_exp"],
	Atributo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_Atributos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_Atributos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_Atributos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_constraint"]: comercial_Produtos_Atributos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_insert_input"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_obj_rel_insert_input"],
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Produtos_Atributos_max_fields"]: {
	__typename: "comercial_Produtos_Atributos_max_fields",
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_max_order_by"]: {
		Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Produtos_Atributos_min_fields"]: {
	__typename: "comercial_Produtos_Atributos_min_fields",
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_min_order_by"]: {
		Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_mutation_response"]: {
	__typename: "comercial_Produtos_Atributos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos_Atributos"]>
};
	/** on conflict condition type for table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_Atributos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_Atributos_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_Atributos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos_Atributos". */
["comercial_Produtos_Atributos_order_by"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_order_by"],
	Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos_Atributos */
["comercial_Produtos_Atributos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_select_column"]: comercial_Produtos_Atributos_select_column;
	/** input type for updating data in table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_set_input"]: {
		Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Produtos_Atributos" */
["comercial_Produtos_Atributos_update_column"]: comercial_Produtos_Atributos_update_column;
	/** columns and relationships of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades"]: {
	__typename: "comercial_Produtos_Oportunidades",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	OportunidadesDePropostas: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>,
	/** An aggregate relationship */
	OportunidadesDePropostas_aggregate: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate"]: {
	__typename: "comercial_Produtos_Oportunidades_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos_Oportunidades"]>
};
	/** aggregate fields of "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_aggregate_fields",
	avg?: GraphQLTypes["comercial_Produtos_Oportunidades_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Produtos_Oportunidades_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_Oportunidades_min_fields"],
	stddev?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Produtos_Oportunidades_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Produtos_Oportunidades_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Produtos_Oportunidades_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Produtos_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Produtos_Oportunidades_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Produtos_Oportunidades_max_order_by"],
	min?: GraphQLTypes["comercial_Produtos_Oportunidades_min_order_by"],
	stddev?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Produtos_Oportunidades_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Produtos_Oportunidades_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Produtos_Oportunidades_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Produtos_Oportunidades_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Produtos_Oportunidades_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Produtos_Oportunidades_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Oportunidades_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Produtos_Oportunidades_avg_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Oportunidades_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	OportunidadesDePropostas?: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_constraint"]: comercial_Produtos_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	OportunidadesDePropostas?: GraphQLTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Produtos_Oportunidades_max_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Produtos_Oportunidades_min_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_mutation_response"]: {
	__typename: "comercial_Produtos_Oportunidades_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos_Oportunidades"]>
};
	/** input type for inserting object relation for remote table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Produtos_Oportunidades_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Oportunidades_on_conflict"]
};
	/** on conflict condition type for table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_Oportunidades_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_Oportunidades_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos_Oportunidades". */
["comercial_Produtos_Oportunidades_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	OportunidadesDePropostas_aggregate?: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate_order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos_Oportunidades */
["comercial_Produtos_Oportunidades_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_select_column"]: comercial_Produtos_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Produtos_Oportunidades_stddev_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Produtos_Oportunidades_stddev_pop_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Produtos_Oportunidades_stddev_samp_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Produtos_Oportunidades_sum_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_update_column"]: comercial_Produtos_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Produtos_Oportunidades_var_pop_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Produtos_Oportunidades_var_samp_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Produtos_Oportunidades_variance_fields"]: {
	__typename: "comercial_Produtos_Oportunidades_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Produtos_Oportunidades" */
["comercial_Produtos_Oportunidades_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos"]: {
	__typename: "comercial_Produtos_Produtos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoDependente: GraphQLTypes["comercial_Produtos"],
	ProdutoDependente_Id: GraphQLTypes["uuid"],
	Produto_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate"]: {
	__typename: "comercial_Produtos_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos_Produtos"]>
};
	/** aggregate fields of "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_fields"]: {
	__typename: "comercial_Produtos_Produtos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Produtos_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Produtos_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Produtos_Produtos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Produtos_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Produtos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Produtos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	ProdutoDependente?: GraphQLTypes["comercial_Produtos_bool_exp"],
	ProdutoDependente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_constraint"]: comercial_Produtos_Produtos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	ProdutoDependente?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	ProdutoDependente_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Produtos_Produtos_max_fields"]: {
	__typename: "comercial_Produtos_Produtos_max_fields",
	Id?: GraphQLTypes["uuid"],
	ProdutoDependente_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ProdutoDependente_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Produtos_Produtos_min_fields"]: {
	__typename: "comercial_Produtos_Produtos_min_fields",
	Id?: GraphQLTypes["uuid"],
	ProdutoDependente_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ProdutoDependente_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_mutation_response"]: {
	__typename: "comercial_Produtos_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos_Produtos"]>
};
	/** on conflict condition type for table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos_Produtos". */
["comercial_Produtos_Produtos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	ProdutoDependente?: GraphQLTypes["comercial_Produtos_order_by"],
	ProdutoDependente_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos_Produtos */
["comercial_Produtos_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_select_column"]: comercial_Produtos_Produtos_select_column;
	/** input type for updating data in table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	ProdutoDependente_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Produtos_Produtos" */
["comercial_Produtos_Produtos_update_column"]: comercial_Produtos_Produtos_update_column;
	/** columns and relationships of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos"]: {
	__typename: "comercial_Produtos_Servicos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate"]: {
	__typename: "comercial_Produtos_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos_Servicos"]>
};
	/** aggregate fields of "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_fields"]: {
	__typename: "comercial_Produtos_Servicos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Produtos_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Produtos_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Produtos_Servicos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Produtos_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Servicos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Servicos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_constraint"]: comercial_Produtos_Servicos_constraint;
	/** input type for inserting data into table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Produtos_Servicos_max_fields"]: {
	__typename: "comercial_Produtos_Servicos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Produtos_Servicos_min_fields"]: {
	__typename: "comercial_Produtos_Servicos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_mutation_response"]: {
	__typename: "comercial_Produtos_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos_Servicos"]>
};
	/** on conflict condition type for table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos_Servicos". */
["comercial_Produtos_Servicos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos_Servicos */
["comercial_Produtos_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_select_column"]: comercial_Produtos_Servicos_select_column;
	/** input type for updating data in table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Produtos_Servicos" */
["comercial_Produtos_Servicos_update_column"]: comercial_Produtos_Servicos_update_column;
	/** columns and relationships of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos"]: {
	__typename: "comercial_Produtos_Tipos",
	Comentario: string,
	/** An array relationship */
	Produtos: Array<GraphQLTypes["comercial_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["comercial_Produtos_aggregate"],
	Valor: string
};
	/** aggregated selection of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate"]: {
	__typename: "comercial_Produtos_Tipos_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_Tipos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos_Tipos"]>
};
	/** aggregate fields of "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_aggregate_fields"]: {
	__typename: "comercial_Produtos_Tipos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Produtos_Tipos_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_Tipos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_Tipos_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Produtos?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_Tipos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_Tipos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_Tipos_bool_exp"]>
};
	/** unique or primary key constraints on table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_constraint"]: comercial_Produtos_Tipos_constraint;
	["comercial_Produtos_Tipos_enum"]: comercial_Produtos_Tipos_enum;
	/** Boolean expression to compare columns of type "comercial_Produtos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Produtos_Tipos_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["comercial_Produtos_Tipos_enum"],
	_in?: Array<GraphQLTypes["comercial_Produtos_Tipos_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["comercial_Produtos_Tipos_enum"],
	_nin?: Array<GraphQLTypes["comercial_Produtos_Tipos_enum"]>
};
	/** input type for inserting data into table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_insert_input"]: {
		Comentario?: string,
	Produtos?: GraphQLTypes["comercial_Produtos_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["comercial_Produtos_Tipos_max_fields"]: {
	__typename: "comercial_Produtos_Tipos_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["comercial_Produtos_Tipos_min_fields"]: {
	__typename: "comercial_Produtos_Tipos_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_mutation_response"]: {
	__typename: "comercial_Produtos_Tipos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos_Tipos"]>
};
	/** input type for inserting object relation for remote table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Produtos_Tipos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_Tipos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_Tipos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_Tipos_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_Tipos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos_Tipos". */
["comercial_Produtos_Tipos_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Produtos_aggregate?: GraphQLTypes["comercial_Produtos_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos_Tipos */
["comercial_Produtos_Tipos_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_select_column"]: comercial_Produtos_Tipos_select_column;
	/** input type for updating data in table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "comercial.Produtos_Tipos" */
["comercial_Produtos_Tipos_update_column"]: comercial_Produtos_Tipos_update_column;
	/** aggregated selection of "comercial.Produtos" */
["comercial_Produtos_aggregate"]: {
	__typename: "comercial_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Produtos"]>
};
	/** aggregate fields of "comercial.Produtos" */
["comercial_Produtos_aggregate_fields"]: {
	__typename: "comercial_Produtos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Produtos" */
["comercial_Produtos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Produtos_min_order_by"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_append_input"]: {
		Categorias?: GraphQLTypes["jsonb"]
};
	/** input type for inserting array relation for remote table "comercial.Produtos" */
["comercial_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Produtos". All fields are combined with a logical 'AND'. */
["comercial_Produtos_bool_exp"]: {
		Atributos?: GraphQLTypes["comercial_Produtos_Atributos_bool_exp"],
	Categorias?: GraphQLTypes["jsonb_comparison_exp"],
	Combos?: GraphQLTypes["comercial_Combos_Produtos_bool_exp"],
	Fornecedores?: GraphQLTypes["comercial_Fornecedores_Produtos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Oportunidades?: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"],
	ProdutosDependentes?: GraphQLTypes["comercial_Produtos_Produtos_bool_exp"],
	ProdutosQueDependo?: GraphQLTypes["comercial_Produtos_Produtos_bool_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"],
	Servicos?: GraphQLTypes["comercial_Produtos_Servicos_bool_exp"],
	Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_bool_exp"],
	Tipo?: GraphQLTypes["comercial_Produtos_Tipos_bool_exp"],
	Tipo_Id?: GraphQLTypes["comercial_Produtos_Tipos_enum_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Produtos" */
["comercial_Produtos_constraint"]: comercial_Produtos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Produtos_delete_at_path_input"]: {
		Categorias?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Produtos_delete_elem_input"]: {
		Categorias?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Produtos_delete_key_input"]: {
		Categorias?: string
};
	/** input type for inserting data into table "comercial.Produtos" */
["comercial_Produtos_insert_input"]: {
		Atributos?: GraphQLTypes["comercial_Produtos_Atributos_arr_rel_insert_input"],
	Categorias?: GraphQLTypes["jsonb"],
	Combos?: GraphQLTypes["comercial_Combos_Produtos_arr_rel_insert_input"],
	Fornecedores?: GraphQLTypes["comercial_Fornecedores_Produtos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Oportunidades?: GraphQLTypes["comercial_Produtos_Oportunidades_arr_rel_insert_input"],
	ProdutosDependentes?: GraphQLTypes["comercial_Produtos_Produtos_arr_rel_insert_input"],
	ProdutosQueDependo?: GraphQLTypes["comercial_Produtos_Produtos_arr_rel_insert_input"],
	Propostas?: GraphQLTypes["comercial_Propostas_Produtos_arr_rel_insert_input"],
	Servicos?: GraphQLTypes["comercial_Produtos_Servicos_arr_rel_insert_input"],
	Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_arr_rel_insert_input"],
	Tipo?: GraphQLTypes["comercial_Produtos_Tipos_obj_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["comercial_Produtos_Tipos_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Produtos_max_fields"]: {
	__typename: "comercial_Produtos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Produtos" */
["comercial_Produtos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Produtos_min_fields"]: {
	__typename: "comercial_Produtos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Produtos" */
["comercial_Produtos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Produtos" */
["comercial_Produtos_mutation_response"]: {
	__typename: "comercial_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Produtos"]>
};
	/** input type for inserting object relation for remote table "comercial.Produtos" */
["comercial_Produtos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Produtos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Produtos" */
["comercial_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Produtos". */
["comercial_Produtos_order_by"]: {
		Atributos_aggregate?: GraphQLTypes["comercial_Produtos_Atributos_aggregate_order_by"],
	Categorias?: GraphQLTypes["order_by"],
	Combos_aggregate?: GraphQLTypes["comercial_Combos_Produtos_aggregate_order_by"],
	Fornecedores_aggregate?: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Oportunidades_aggregate?: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate_order_by"],
	ProdutosDependentes_aggregate?: GraphQLTypes["comercial_Produtos_Produtos_aggregate_order_by"],
	ProdutosQueDependo_aggregate?: GraphQLTypes["comercial_Produtos_Produtos_aggregate_order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_Produtos_aggregate_order_by"],
	Servicos_Produtos_aggregate?: GraphQLTypes["comercial_Servicos_Produtos_aggregate_order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Produtos_Servicos_aggregate_order_by"],
	Tipo?: GraphQLTypes["comercial_Produtos_Tipos_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Produtos */
["comercial_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Produtos_prepend_input"]: {
		Categorias?: GraphQLTypes["jsonb"]
};
	/** select columns of table "comercial.Produtos" */
["comercial_Produtos_select_column"]: comercial_Produtos_select_column;
	/** input type for updating data in table "comercial.Produtos" */
["comercial_Produtos_set_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Tipo_Id?: GraphQLTypes["comercial_Produtos_Tipos_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Produtos" */
["comercial_Produtos_update_column"]: comercial_Produtos_update_column;
	/** columns and relationships of "comercial.Propostas" */
["comercial_Propostas"]: {
	__typename: "comercial_Propostas",
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	Cliente_Id?: GraphQLTypes["uuid"],
	/** An array relationship */
	Combos: Array<GraphQLTypes["comercial_Propostas_Combos"]>,
	/** An aggregate relationship */
	Combos_aggregate: GraphQLTypes["comercial_Propostas_Combos_aggregate"],
	DataAceito?: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Instalacoes: Array<GraphQLTypes["comercial_Propostas_Instalacoes"]>,
	/** An aggregate relationship */
	Instalacoes_aggregate: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate"],
	/** An object relationship */
	Lead?: GraphQLTypes["clientes_Leads"],
	Lead_Id?: GraphQLTypes["uuid"],
	/** An array relationship */
	Oportunidades: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>,
	/** An aggregate relationship */
	Oportunidades_aggregate: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An array relationship */
	Planos: Array<GraphQLTypes["comercial_Propostas_Planos"]>,
	/** An aggregate relationship */
	Planos_aggregate: GraphQLTypes["comercial_Propostas_Planos_aggregate"],
	/** An array relationship */
	Produtos: Array<GraphQLTypes["comercial_Propostas_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["comercial_Propostas_Produtos_aggregate"],
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Propostas_Servicos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Propostas_Servicos_aggregate"],
	/** An object relationship */
	Situacao: GraphQLTypes["comercial_Propostas_Situacoes"],
	Situacao_Id: GraphQLTypes["comercial_Propostas_Situacoes_enum"],
	/** An object relationship */
	Ticket: GraphQLTypes["atendimentos_Tickets"],
	Ticket_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	TipoDePagamento: GraphQLTypes["vendas_TiposDePagamento"],
	TipoDePagamento_Id: GraphQLTypes["vendas_TiposDePagamento_enum"],
	/** An object relationship */
	TipoDeRecorrencia: GraphQLTypes["vendas_TiposDeRecorrencia"],
	TipoDeRecorrencia_Id: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	/** An object relationship */
	Usuario: GraphQLTypes["autenticacao_Usuarios"],
	Usuario_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos"]: {
	__typename: "comercial_Propostas_Combos",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	/** An object relationship */
	ComboPreco: GraphQLTypes["comercial_Combos_Precos"],
	ComboPreco_Id: GraphQLTypes["uuid"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	Veiculo: number,
	/** An object relationship */
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate"]: {
	__typename: "comercial_Propostas_Combos_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Combos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Combos"]>
};
	/** aggregate fields of "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_fields"]: {
	__typename: "comercial_Propostas_Combos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Combos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Combos_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Combos_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Combos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Combos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Combos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Combos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Combos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Combos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Combos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Combos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Combos_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Combos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Combos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Combos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Combos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Combos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Combos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Combos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Combos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Combos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Combos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Combos_avg_fields"]: {
	__typename: "comercial_Propostas_Combos_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Combos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Combos_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	ComboPreco?: GraphQLTypes["comercial_Combos_Precos_bool_exp"],
	ComboPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Combos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Combos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Combos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_constraint"]: comercial_Propostas_Combos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	ComboPreco?: GraphQLTypes["comercial_Combos_Precos_obj_rel_insert_input"],
	ComboPreco_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Combos_max_fields"]: {
	__typename: "comercial_Propostas_Combos_max_fields",
	ComboPreco_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_max_order_by"]: {
		ComboPreco_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Combos_min_fields"]: {
	__typename: "comercial_Propostas_Combos_min_fields",
	ComboPreco_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_min_order_by"]: {
		ComboPreco_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_mutation_response"]: {
	__typename: "comercial_Propostas_Combos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Combos"]>
};
	/** on conflict condition type for table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Combos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Combos_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Combos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Combos". */
["comercial_Propostas_Combos_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	ComboPreco?: GraphQLTypes["comercial_Combos_Precos_order_by"],
	ComboPreco_Id?: GraphQLTypes["order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Combos */
["comercial_Propostas_Combos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_select_column"]: comercial_Propostas_Combos_select_column;
	/** input type for updating data in table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_set_input"]: {
		ComboPreco_Id?: GraphQLTypes["uuid"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Combos_stddev_fields"]: {
	__typename: "comercial_Propostas_Combos_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Combos_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Combos_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Combos_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Combos_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Combos_sum_fields"]: {
	__typename: "comercial_Propostas_Combos_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_update_column"]: comercial_Propostas_Combos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Combos_var_pop_fields"]: {
	__typename: "comercial_Propostas_Combos_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Combos_var_samp_fields"]: {
	__typename: "comercial_Propostas_Combos_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Combos_variance_fields"]: {
	__typename: "comercial_Propostas_Combos_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Combos" */
["comercial_Propostas_Combos_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes"]: {
	__typename: "comercial_Propostas_Instalacoes",
	Endereco: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	Veiculo?: number,
	/** An object relationship */
	VeiculoRelacionamento: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate"]: {
	__typename: "comercial_Propostas_Instalacoes_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Instalacoes"]>
};
	/** aggregate fields of "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Instalacoes_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Instalacoes_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Instalacoes_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Instalacoes_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Instalacoes_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Instalacoes_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Instalacoes_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Instalacoes_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Instalacoes_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Instalacoes_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Instalacoes_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Instalacoes_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Instalacoes_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Instalacoes_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Instalacoes_variance_order_by"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_append_input"]: {
		Endereco?: GraphQLTypes["jsonb"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Instalacoes_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Instalacoes_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Instalacoes_avg_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Instalacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Instalacoes_bool_exp"]: {
		Endereco?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_constraint"]: comercial_Propostas_Instalacoes_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Propostas_Instalacoes_delete_at_path_input"]: {
		Endereco?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Propostas_Instalacoes_delete_elem_input"]: {
		Endereco?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Propostas_Instalacoes_delete_key_input"]: {
		Endereco?: string
};
	/** input type for incrementing numeric columns in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_insert_input"]: {
		Endereco?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Instalacoes_max_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_max_fields",
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Instalacoes_min_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_min_fields",
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_mutation_response"]: {
	__typename: "comercial_Propostas_Instalacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Instalacoes"]>
};
	/** on conflict condition type for table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Instalacoes_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Instalacoes_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Instalacoes". */
["comercial_Propostas_Instalacoes_order_by"]: {
		Endereco?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Instalacoes */
["comercial_Propostas_Instalacoes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Propostas_Instalacoes_prepend_input"]: {
		Endereco?: GraphQLTypes["jsonb"]
};
	/** select columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_select_column"]: comercial_Propostas_Instalacoes_select_column;
	/** input type for updating data in table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_set_input"]: {
		Endereco?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Instalacoes_stddev_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Instalacoes_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Instalacoes_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Instalacoes_sum_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_update_column"]: comercial_Propostas_Instalacoes_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Instalacoes_var_pop_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Instalacoes_var_samp_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Instalacoes_variance_fields"]: {
	__typename: "comercial_Propostas_Instalacoes_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Instalacoes" */
["comercial_Propostas_Instalacoes_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades"]: {
	__typename: "comercial_Propostas_Oportunidades",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	OportunidadeDeProduto?: GraphQLTypes["comercial_Produtos_Oportunidades"],
	/** An object relationship */
	OportunidadeDeServico?: GraphQLTypes["comercial_Servicos_Oportunidades"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid"],
	OportunidadeServico_Id?: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	Veiculo: number,
	/** An object relationship */
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate"]: {
	__typename: "comercial_Propostas_Oportunidades_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>
};
	/** aggregate fields of "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Oportunidades_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Oportunidades_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Oportunidades_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Oportunidades_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Oportunidades_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Oportunidades_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Oportunidades_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Oportunidades_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Oportunidades_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Oportunidades_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Oportunidades_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Oportunidades_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Oportunidades_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Oportunidades_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Oportunidades_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Oportunidades_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Oportunidades_avg_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Oportunidades_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	OportunidadeDeProduto?: GraphQLTypes["comercial_Produtos_Oportunidades_bool_exp"],
	OportunidadeDeServico?: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid_comparison_exp"],
	OportunidadeServico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_constraint"]: comercial_Propostas_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	OportunidadeDeProduto?: GraphQLTypes["comercial_Produtos_Oportunidades_obj_rel_insert_input"],
	OportunidadeDeServico?: GraphQLTypes["comercial_Servicos_Oportunidades_obj_rel_insert_input"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid"],
	OportunidadeServico_Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Oportunidades_max_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_max_fields",
	Id?: GraphQLTypes["uuid"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid"],
	OportunidadeServico_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	OportunidadeProduto_Id?: GraphQLTypes["order_by"],
	OportunidadeServico_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Oportunidades_min_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_min_fields",
	Id?: GraphQLTypes["uuid"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid"],
	OportunidadeServico_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	OportunidadeProduto_Id?: GraphQLTypes["order_by"],
	OportunidadeServico_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_mutation_response"]: {
	__typename: "comercial_Propostas_Oportunidades_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>
};
	/** on conflict condition type for table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Oportunidades_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Oportunidades_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Oportunidades". */
["comercial_Propostas_Oportunidades_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	OportunidadeDeProduto?: GraphQLTypes["comercial_Produtos_Oportunidades_order_by"],
	OportunidadeDeServico?: GraphQLTypes["comercial_Servicos_Oportunidades_order_by"],
	OportunidadeProduto_Id?: GraphQLTypes["order_by"],
	OportunidadeServico_Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Oportunidades */
["comercial_Propostas_Oportunidades_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_select_column"]: comercial_Propostas_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	OportunidadeProduto_Id?: GraphQLTypes["uuid"],
	OportunidadeServico_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Oportunidades_stddev_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Oportunidades_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Oportunidades_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Oportunidades_sum_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_update_column"]: comercial_Propostas_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Oportunidades_var_pop_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Oportunidades_var_samp_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Oportunidades_variance_fields"]: {
	__typename: "comercial_Propostas_Oportunidades_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Oportunidades" */
["comercial_Propostas_Oportunidades_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos"]: {
	__typename: "comercial_Propostas_Planos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Plano: GraphQLTypes["comercial_Planos"],
	/** An object relationship */
	PlanoPreco: GraphQLTypes["comercial_Planos_Precos"],
	PlanoPreco_Id: GraphQLTypes["uuid"],
	Plano_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	Veiculo: number,
	/** An object relationship */
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate"]: {
	__typename: "comercial_Propostas_Planos_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Planos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Planos"]>
};
	/** aggregate fields of "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_fields"]: {
	__typename: "comercial_Propostas_Planos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Planos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Planos_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Planos_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Planos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Planos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Planos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Planos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Planos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Planos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Planos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Planos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Planos_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Planos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Planos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Planos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Planos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Planos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Planos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Planos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Planos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Planos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Planos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Planos_avg_fields"]: {
	__typename: "comercial_Propostas_Planos_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Planos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Planos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano?: GraphQLTypes["comercial_Planos_bool_exp"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_bool_exp"],
	PlanoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Plano_Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Planos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Planos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Planos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_constraint"]: comercial_Propostas_Planos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Plano?: GraphQLTypes["comercial_Planos_obj_rel_insert_input"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_obj_rel_insert_input"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Planos_max_fields"]: {
	__typename: "comercial_Propostas_Planos_max_fields",
	Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Planos_min_fields"]: {
	__typename: "comercial_Propostas_Planos_min_fields",
	Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_mutation_response"]: {
	__typename: "comercial_Propostas_Planos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Planos"]>
};
	/** on conflict condition type for table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Planos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Planos_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Planos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Planos". */
["comercial_Propostas_Planos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Plano?: GraphQLTypes["comercial_Planos_order_by"],
	PlanoPreco?: GraphQLTypes["comercial_Planos_Precos_order_by"],
	PlanoPreco_Id?: GraphQLTypes["order_by"],
	Plano_Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Planos */
["comercial_Propostas_Planos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_select_column"]: comercial_Propostas_Planos_select_column;
	/** input type for updating data in table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	PlanoPreco_Id?: GraphQLTypes["uuid"],
	Plano_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Planos_stddev_fields"]: {
	__typename: "comercial_Propostas_Planos_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Planos_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Planos_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Planos_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Planos_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Planos_sum_fields"]: {
	__typename: "comercial_Propostas_Planos_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_update_column"]: comercial_Propostas_Planos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Planos_var_pop_fields"]: {
	__typename: "comercial_Propostas_Planos_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Planos_var_samp_fields"]: {
	__typename: "comercial_Propostas_Planos_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Planos_variance_fields"]: {
	__typename: "comercial_Propostas_Planos_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Planos" */
["comercial_Propostas_Planos_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos"]: {
	__typename: "comercial_Propostas_Produtos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	/** An object relationship */
	ProdutoPreco: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	ProdutoPreco_Id: GraphQLTypes["uuid"],
	Produto_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	Veiculo: number,
	/** An object relationship */
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate"]: {
	__typename: "comercial_Propostas_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Produtos"]>
};
	/** aggregate fields of "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_fields"]: {
	__typename: "comercial_Propostas_Produtos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Produtos_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Produtos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Produtos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Produtos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Produtos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Produtos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Produtos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Produtos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Produtos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Produtos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Produtos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Produtos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Produtos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Produtos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Produtos_avg_fields"]: {
	__typename: "comercial_Propostas_Produtos_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Produtos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_bool_exp"],
	ProdutoPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_constraint"]: comercial_Propostas_Produtos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_obj_rel_insert_input"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Produtos_max_fields"]: {
	__typename: "comercial_Propostas_Produtos_max_fields",
	Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Produtos_min_fields"]: {
	__typename: "comercial_Propostas_Produtos_min_fields",
	Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_mutation_response"]: {
	__typename: "comercial_Propostas_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Produtos"]>
};
	/** on conflict condition type for table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Produtos". */
["comercial_Propostas_Produtos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	ProdutoPreco?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_order_by"],
	ProdutoPreco_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Produtos */
["comercial_Propostas_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_select_column"]: comercial_Propostas_Produtos_select_column;
	/** input type for updating data in table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	ProdutoPreco_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Produtos_stddev_fields"]: {
	__typename: "comercial_Propostas_Produtos_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Produtos_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Produtos_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Produtos_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Produtos_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Produtos_sum_fields"]: {
	__typename: "comercial_Propostas_Produtos_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_update_column"]: comercial_Propostas_Produtos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Produtos_var_pop_fields"]: {
	__typename: "comercial_Propostas_Produtos_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Produtos_var_samp_fields"]: {
	__typename: "comercial_Propostas_Produtos_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Produtos_variance_fields"]: {
	__typename: "comercial_Propostas_Produtos_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Produtos" */
["comercial_Propostas_Produtos_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos"]: {
	__typename: "comercial_Propostas_Servicos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Proposta: GraphQLTypes["comercial_Propostas"],
	Proposta_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	ServicosPreco: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	ServicosPreco_Id: GraphQLTypes["uuid"],
	Veiculo: number,
	/** An object relationship */
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate"]: {
	__typename: "comercial_Propostas_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Servicos"]>
};
	/** aggregate fields of "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_fields"]: {
	__typename: "comercial_Propostas_Servicos_aggregate_fields",
	avg?: GraphQLTypes["comercial_Propostas_Servicos_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Servicos_min_fields"],
	stddev?: GraphQLTypes["comercial_Propostas_Servicos_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Servicos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Servicos_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Propostas_Servicos_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Propostas_Servicos_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Propostas_Servicos_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Propostas_Servicos_variance_fields"]
};
	/** order by aggregate values of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Propostas_Servicos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_Servicos_min_order_by"],
	stddev?: GraphQLTypes["comercial_Propostas_Servicos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Propostas_Servicos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Propostas_Servicos_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Propostas_Servicos_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Propostas_Servicos_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Propostas_Servicos_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Propostas_Servicos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Servicos_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Propostas_Servicos_avg_fields"]: {
	__typename: "comercial_Propostas_Servicos_avg_fields",
	Veiculo?: number
};
	/** order by avg() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_avg_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Servicos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_bool_exp"],
	ServicosPreco_Id?: GraphQLTypes["uuid_comparison_exp"],
	Veiculo?: GraphQLTypes["Int_comparison_exp"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_bool_exp"],
	Veiculo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_constraint"]: comercial_Propostas_Servicos_constraint;
	/** input type for incrementing numeric columns in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_inc_input"]: {
		Veiculo?: number
};
	/** input type for inserting data into table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Proposta?: GraphQLTypes["comercial_Propostas_obj_rel_insert_input"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_obj_rel_insert_input"],
	ServicosPreco_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_obj_rel_insert_input"],
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_Servicos_max_fields"]: {
	__typename: "comercial_Propostas_Servicos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ServicosPreco_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ServicosPreco_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_Servicos_min_fields"]: {
	__typename: "comercial_Propostas_Servicos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ServicosPreco_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ServicosPreco_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_mutation_response"]: {
	__typename: "comercial_Propostas_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Servicos"]>
};
	/** on conflict condition type for table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Servicos". */
["comercial_Propostas_Servicos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Proposta?: GraphQLTypes["comercial_Propostas_order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	ServicosPreco?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_order_by"],
	ServicosPreco_Id?: GraphQLTypes["order_by"],
	Veiculo?: GraphQLTypes["order_by"],
	VeiculoRelacionamento?: GraphQLTypes["clientes_Veiculos_order_by"],
	Veiculo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Servicos */
["comercial_Propostas_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_select_column"]: comercial_Propostas_Servicos_select_column;
	/** input type for updating data in table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	ServicosPreco_Id?: GraphQLTypes["uuid"],
	Veiculo?: number,
	Veiculo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Propostas_Servicos_stddev_fields"]: {
	__typename: "comercial_Propostas_Servicos_stddev_fields",
	Veiculo?: number
};
	/** order by stddev() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Propostas_Servicos_stddev_pop_fields"]: {
	__typename: "comercial_Propostas_Servicos_stddev_pop_fields",
	Veiculo?: number
};
	/** order by stddev_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Propostas_Servicos_stddev_samp_fields"]: {
	__typename: "comercial_Propostas_Servicos_stddev_samp_fields",
	Veiculo?: number
};
	/** order by stddev_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_stddev_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Propostas_Servicos_sum_fields"]: {
	__typename: "comercial_Propostas_Servicos_sum_fields",
	Veiculo?: number
};
	/** order by sum() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_sum_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_update_column"]: comercial_Propostas_Servicos_update_column;
	/** aggregate var_pop on columns */
["comercial_Propostas_Servicos_var_pop_fields"]: {
	__typename: "comercial_Propostas_Servicos_var_pop_fields",
	Veiculo?: number
};
	/** order by var_pop() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_pop_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Propostas_Servicos_var_samp_fields"]: {
	__typename: "comercial_Propostas_Servicos_var_samp_fields",
	Veiculo?: number
};
	/** order by var_samp() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_var_samp_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Propostas_Servicos_variance_fields"]: {
	__typename: "comercial_Propostas_Servicos_variance_fields",
	Veiculo?: number
};
	/** order by variance() on columns of table "comercial.Propostas_Servicos" */
["comercial_Propostas_Servicos_variance_order_by"]: {
		Veiculo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes"]: {
	__typename: "comercial_Propostas_Situacoes",
	Comentario: string,
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_aggregate"],
	Valor: string
};
	/** aggregated selection of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate"]: {
	__typename: "comercial_Propostas_Situacoes_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_Situacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas_Situacoes"]>
};
	/** aggregate fields of "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_aggregate_fields"]: {
	__typename: "comercial_Propostas_Situacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Propostas_Situacoes_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas_Situacoes". All fields are combined with a logical 'AND'. */
["comercial_Propostas_Situacoes_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_constraint"]: comercial_Propostas_Situacoes_constraint;
	["comercial_Propostas_Situacoes_enum"]: comercial_Propostas_Situacoes_enum;
	/** Boolean expression to compare columns of type "comercial_Propostas_Situacoes_enum". All fields are combined with logical 'AND'. */
["comercial_Propostas_Situacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["comercial_Propostas_Situacoes_enum"],
	_in?: Array<GraphQLTypes["comercial_Propostas_Situacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["comercial_Propostas_Situacoes_enum"],
	_nin?: Array<GraphQLTypes["comercial_Propostas_Situacoes_enum"]>
};
	/** input type for inserting data into table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_insert_input"]: {
		Comentario?: string,
	Propostas?: GraphQLTypes["comercial_Propostas_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["comercial_Propostas_Situacoes_max_fields"]: {
	__typename: "comercial_Propostas_Situacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["comercial_Propostas_Situacoes_min_fields"]: {
	__typename: "comercial_Propostas_Situacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_mutation_response"]: {
	__typename: "comercial_Propostas_Situacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas_Situacoes"]>
};
	/** input type for inserting object relation for remote table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Propostas_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_Situacoes_on_conflict"]
};
	/** on conflict condition type for table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_Situacoes_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_Situacoes_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas_Situacoes". */
["comercial_Propostas_Situacoes_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas_Situacoes */
["comercial_Propostas_Situacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_select_column"]: comercial_Propostas_Situacoes_select_column;
	/** input type for updating data in table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "comercial.Propostas_Situacoes" */
["comercial_Propostas_Situacoes_update_column"]: comercial_Propostas_Situacoes_update_column;
	/** aggregated selection of "comercial.Propostas" */
["comercial_Propostas_aggregate"]: {
	__typename: "comercial_Propostas_aggregate",
	aggregate?: GraphQLTypes["comercial_Propostas_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Propostas"]>
};
	/** aggregate fields of "comercial.Propostas" */
["comercial_Propostas_aggregate_fields"]: {
	__typename: "comercial_Propostas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Propostas_max_fields"],
	min?: GraphQLTypes["comercial_Propostas_min_fields"]
};
	/** order by aggregate values of table "comercial.Propostas" */
["comercial_Propostas_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Propostas_max_order_by"],
	min?: GraphQLTypes["comercial_Propostas_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Propostas" */
["comercial_Propostas_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Propostas_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Propostas". All fields are combined with a logical 'AND'. */
["comercial_Propostas_bool_exp"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Cliente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Combos?: GraphQLTypes["comercial_Propostas_Combos_bool_exp"],
	DataAceito?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Instalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_bool_exp"],
	Lead?: GraphQLTypes["clientes_Leads_bool_exp"],
	Lead_Id?: GraphQLTypes["uuid_comparison_exp"],
	Oportunidades?: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"],
	Planos?: GraphQLTypes["comercial_Propostas_Planos_bool_exp"],
	Produtos?: GraphQLTypes["comercial_Propostas_Produtos_bool_exp"],
	Servicos?: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"],
	Situacao?: GraphQLTypes["comercial_Propostas_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["comercial_Propostas_Situacoes_enum_comparison_exp"],
	Ticket?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	Ticket_Id?: GraphQLTypes["uuid_comparison_exp"],
	TipoDePagamento?: GraphQLTypes["vendas_TiposDePagamento_bool_exp"],
	TipoDePagamento_Id?: GraphQLTypes["vendas_TiposDePagamento_enum_comparison_exp"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum_comparison_exp"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_bool_exp"],
	Usuario_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Propostas_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Propostas_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Propostas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Propostas" */
["comercial_Propostas_constraint"]: comercial_Propostas_constraint;
	/** input type for inserting data into table "comercial.Propostas" */
["comercial_Propostas_insert_input"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Cliente_Id?: GraphQLTypes["uuid"],
	Combos?: GraphQLTypes["comercial_Propostas_Combos_arr_rel_insert_input"],
	DataAceito?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Instalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_arr_rel_insert_input"],
	Lead?: GraphQLTypes["clientes_Leads_obj_rel_insert_input"],
	Lead_Id?: GraphQLTypes["uuid"],
	Oportunidades?: GraphQLTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"],
	Planos?: GraphQLTypes["comercial_Propostas_Planos_arr_rel_insert_input"],
	Produtos?: GraphQLTypes["comercial_Propostas_Produtos_arr_rel_insert_input"],
	Servicos?: GraphQLTypes["comercial_Propostas_Servicos_arr_rel_insert_input"],
	Situacao?: GraphQLTypes["comercial_Propostas_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["comercial_Propostas_Situacoes_enum"],
	Ticket?: GraphQLTypes["atendimentos_Tickets_obj_rel_insert_input"],
	Ticket_Id?: GraphQLTypes["uuid"],
	TipoDePagamento?: GraphQLTypes["vendas_TiposDePagamento_obj_rel_insert_input"],
	TipoDePagamento_Id?: GraphQLTypes["vendas_TiposDePagamento_enum"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_obj_rel_insert_input"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_obj_rel_insert_input"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Propostas_max_fields"]: {
	__typename: "comercial_Propostas_max_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	DataAceito?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Ticket_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Propostas" */
["comercial_Propostas_max_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	DataAceito?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Ticket_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Propostas_min_fields"]: {
	__typename: "comercial_Propostas_min_fields",
	Cliente_Id?: GraphQLTypes["uuid"],
	DataAceito?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Ticket_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Propostas" */
["comercial_Propostas_min_order_by"]: {
		Cliente_Id?: GraphQLTypes["order_by"],
	DataAceito?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Ticket_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Propostas" */
["comercial_Propostas_mutation_response"]: {
	__typename: "comercial_Propostas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Propostas"]>
};
	/** input type for inserting object relation for remote table "comercial.Propostas" */
["comercial_Propostas_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Propostas_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Propostas_on_conflict"]
};
	/** on conflict condition type for table "comercial.Propostas" */
["comercial_Propostas_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Propostas_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Propostas_update_column"]>,
	where?: GraphQLTypes["comercial_Propostas_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Propostas". */
["comercial_Propostas_order_by"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Cliente_Id?: GraphQLTypes["order_by"],
	Combos_aggregate?: GraphQLTypes["comercial_Propostas_Combos_aggregate_order_by"],
	DataAceito?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Instalacoes_aggregate?: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate_order_by"],
	Lead?: GraphQLTypes["clientes_Leads_order_by"],
	Lead_Id?: GraphQLTypes["order_by"],
	Oportunidades_aggregate?: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate_order_by"],
	Planos_aggregate?: GraphQLTypes["comercial_Propostas_Planos_aggregate_order_by"],
	Produtos_aggregate?: GraphQLTypes["comercial_Propostas_Produtos_aggregate_order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Propostas_Servicos_aggregate_order_by"],
	Situacao?: GraphQLTypes["comercial_Propostas_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	Ticket?: GraphQLTypes["atendimentos_Tickets_order_by"],
	Ticket_Id?: GraphQLTypes["order_by"],
	TipoDePagamento?: GraphQLTypes["vendas_TiposDePagamento_order_by"],
	TipoDePagamento_Id?: GraphQLTypes["order_by"],
	TipoDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_order_by"],
	TipoDeRecorrencia_Id?: GraphQLTypes["order_by"],
	Usuario?: GraphQLTypes["autenticacao_Usuarios_order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Propostas */
["comercial_Propostas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Propostas" */
["comercial_Propostas_select_column"]: comercial_Propostas_select_column;
	/** input type for updating data in table "comercial.Propostas" */
["comercial_Propostas_set_input"]: {
		Cliente_Id?: GraphQLTypes["uuid"],
	DataAceito?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Lead_Id?: GraphQLTypes["uuid"],
	Situacao_Id?: GraphQLTypes["comercial_Propostas_Situacoes_enum"],
	Ticket_Id?: GraphQLTypes["uuid"],
	TipoDePagamento_Id?: GraphQLTypes["vendas_TiposDePagamento_enum"],
	TipoDeRecorrencia_Id?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Propostas" */
["comercial_Propostas_update_column"]: comercial_Propostas_update_column;
	/** columns and relationships of "comercial.Servicos" */
["comercial_Servicos"]: {
	__typename: "comercial_Servicos",
	/** An array relationship */
	Atributos: Array<GraphQLTypes["comercial_Servicos_Atributos"]>,
	/** An aggregate relationship */
	Atributos_aggregate: GraphQLTypes["comercial_Servicos_Atributos_aggregate"],
	Categorias: GraphQLTypes["jsonb"],
	/** An array relationship */
	Combos: Array<GraphQLTypes["comercial_Combos_Servicos"]>,
	/** An aggregate relationship */
	Combos_aggregate: GraphQLTypes["comercial_Combos_Servicos_aggregate"],
	/** An array relationship */
	Fornecedores: Array<GraphQLTypes["comercial_Fornecedores_Servicos"]>,
	/** An aggregate relationship */
	Fornecedores_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Oportunidades: Array<GraphQLTypes["comercial_Servicos_Oportunidades"]>,
	/** An aggregate relationship */
	Oportunidades_aggregate: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** An array relationship */
	Planos: Array<GraphQLTypes["comercial_Planos"]>,
	/** An aggregate relationship */
	Planos_aggregate: GraphQLTypes["comercial_Planos_aggregate"],
	/** An array relationship */
	PrestadoresDeServicos: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos"]>,
	/** An aggregate relationship */
	PrestadoresDeServicos_aggregate: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** An array relationship */
	Produtos_Servicos: Array<GraphQLTypes["comercial_Produtos_Servicos"]>,
	/** An aggregate relationship */
	Produtos_Servicos_aggregate: GraphQLTypes["comercial_Produtos_Servicos_aggregate"],
	/** An array relationship */
	Propostas: Array<GraphQLTypes["comercial_Propostas_Servicos"]>,
	/** An aggregate relationship */
	Propostas_aggregate: GraphQLTypes["comercial_Propostas_Servicos_aggregate"],
	/** An array relationship */
	Servicos_Produtos: Array<GraphQLTypes["comercial_Servicos_Produtos"]>,
	/** An aggregate relationship */
	Servicos_Produtos_aggregate: GraphQLTypes["comercial_Servicos_Produtos_aggregate"],
	/** An array relationship */
	Servicos_ServicosDependente: Array<GraphQLTypes["comercial_Servicos_Servicos"]>,
	/** An aggregate relationship */
	Servicos_ServicosDependente_aggregate: GraphQLTypes["comercial_Servicos_Servicos_aggregate"],
	/** An array relationship */
	Tarifas: Array<GraphQLTypes["comercial_Servicos_Tarifas"]>,
	/** An aggregate relationship */
	Tarifas_aggregate: GraphQLTypes["comercial_Servicos_Tarifas_aggregate"],
	/** An object relationship */
	Tipo: GraphQLTypes["comercial_Servicos_Tipos"],
	Tipo_Id: GraphQLTypes["comercial_Servicos_Tipos_enum"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	/** An array relationship */
	servicosServicos: Array<GraphQLTypes["comercial_Servicos_Servicos"]>,
	/** An aggregate relationship */
	servicosServicos_aggregate: GraphQLTypes["comercial_Servicos_Servicos_aggregate"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos"]: {
	__typename: "comercial_Servicos_Atributos",
	/** An object relationship */
	Atributo: GraphQLTypes["comercial_Atributos"],
	Atributo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate"]: {
	__typename: "comercial_Servicos_Atributos_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Atributos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Atributos"]>
};
	/** aggregate fields of "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_fields"]: {
	__typename: "comercial_Servicos_Atributos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Atributos_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Atributos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_Atributos_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_Atributos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_Atributos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Atributos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Atributos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Atributos_bool_exp"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_bool_exp"],
	Atributo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Atributos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Atributos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Atributos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_constraint"]: comercial_Servicos_Atributos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_insert_input"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_obj_rel_insert_input"],
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_Atributos_max_fields"]: {
	__typename: "comercial_Servicos_Atributos_max_fields",
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_max_order_by"]: {
		Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_Atributos_min_fields"]: {
	__typename: "comercial_Servicos_Atributos_min_fields",
	Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_min_order_by"]: {
		Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_mutation_response"]: {
	__typename: "comercial_Servicos_Atributos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Atributos"]>
};
	/** on conflict condition type for table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Atributos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Atributos_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Atributos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Atributos". */
["comercial_Servicos_Atributos_order_by"]: {
		Atributo?: GraphQLTypes["comercial_Atributos_order_by"],
	Atributo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Atributos */
["comercial_Servicos_Atributos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_select_column"]: comercial_Servicos_Atributos_select_column;
	/** input type for updating data in table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_set_input"]: {
		Atributo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Servicos_Atributos" */
["comercial_Servicos_Atributos_update_column"]: comercial_Servicos_Atributos_update_column;
	/** columns and relationships of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades"]: {
	__typename: "comercial_Servicos_Oportunidades",
	/** An object relationship */
	Combo: GraphQLTypes["comercial_Combos"],
	Combo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	OportunidadesDePropostas: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>,
	/** An aggregate relationship */
	OportunidadesDePropostas_aggregate: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate"]: {
	__typename: "comercial_Servicos_Oportunidades_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Oportunidades"]>
};
	/** aggregate fields of "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_aggregate_fields",
	avg?: GraphQLTypes["comercial_Servicos_Oportunidades_avg_fields"],
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Oportunidades_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Oportunidades_min_fields"],
	stddev?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_fields"],
	stddev_pop?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_samp_fields"],
	sum?: GraphQLTypes["comercial_Servicos_Oportunidades_sum_fields"],
	var_pop?: GraphQLTypes["comercial_Servicos_Oportunidades_var_pop_fields"],
	var_samp?: GraphQLTypes["comercial_Servicos_Oportunidades_var_samp_fields"],
	variance?: GraphQLTypes["comercial_Servicos_Oportunidades_variance_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_aggregate_order_by"]: {
		avg?: GraphQLTypes["comercial_Servicos_Oportunidades_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_Oportunidades_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_Oportunidades_min_order_by"],
	stddev?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_order_by"],
	stddev_pop?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["comercial_Servicos_Oportunidades_stddev_samp_order_by"],
	sum?: GraphQLTypes["comercial_Servicos_Oportunidades_sum_order_by"],
	var_pop?: GraphQLTypes["comercial_Servicos_Oportunidades_var_pop_order_by"],
	var_samp?: GraphQLTypes["comercial_Servicos_Oportunidades_var_samp_order_by"],
	variance?: GraphQLTypes["comercial_Servicos_Oportunidades_variance_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_Oportunidades_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Oportunidades_on_conflict"]
};
	/** aggregate avg on columns */
["comercial_Servicos_Oportunidades_avg_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_avg_fields",
	Valor?: number
};
	/** order by avg() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_avg_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Oportunidades". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Oportunidades_bool_exp"]: {
		Combo?: GraphQLTypes["comercial_Combos_bool_exp"],
	Combo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	OportunidadesDePropostas?: GraphQLTypes["comercial_Propostas_Oportunidades_bool_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_constraint"]: comercial_Servicos_Oportunidades_constraint;
	/** input type for incrementing numeric columns in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_inc_input"]: {
		Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_insert_input"]: {
		Combo?: GraphQLTypes["comercial_Combos_obj_rel_insert_input"],
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	OportunidadesDePropostas?: GraphQLTypes["comercial_Propostas_Oportunidades_arr_rel_insert_input"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_Oportunidades_max_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_max_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_max_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_Oportunidades_min_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_min_fields",
	Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_min_order_by"]: {
		Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_mutation_response"]: {
	__typename: "comercial_Servicos_Oportunidades_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Oportunidades"]>
};
	/** input type for inserting object relation for remote table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Servicos_Oportunidades_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Oportunidades_on_conflict"]
};
	/** on conflict condition type for table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Oportunidades_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Oportunidades_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Oportunidades". */
["comercial_Servicos_Oportunidades_order_by"]: {
		Combo?: GraphQLTypes["comercial_Combos_order_by"],
	Combo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	OportunidadesDePropostas_aggregate?: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate_order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Oportunidades */
["comercial_Servicos_Oportunidades_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_select_column"]: comercial_Servicos_Oportunidades_select_column;
	/** input type for updating data in table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_set_input"]: {
		Combo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servico_Id?: GraphQLTypes["uuid"],
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["comercial_Servicos_Oportunidades_stddev_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_stddev_fields",
	Valor?: number
};
	/** order by stddev() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["comercial_Servicos_Oportunidades_stddev_pop_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_stddev_pop_fields",
	Valor?: number
};
	/** order by stddev_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["comercial_Servicos_Oportunidades_stddev_samp_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_stddev_samp_fields",
	Valor?: number
};
	/** order by stddev_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_stddev_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["comercial_Servicos_Oportunidades_sum_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_sum_fields",
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_sum_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_update_column"]: comercial_Servicos_Oportunidades_update_column;
	/** aggregate var_pop on columns */
["comercial_Servicos_Oportunidades_var_pop_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_var_pop_fields",
	Valor?: number
};
	/** order by var_pop() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_pop_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["comercial_Servicos_Oportunidades_var_samp_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_var_samp_fields",
	Valor?: number
};
	/** order by var_samp() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_var_samp_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["comercial_Servicos_Oportunidades_variance_fields"]: {
	__typename: "comercial_Servicos_Oportunidades_variance_fields",
	Valor?: number
};
	/** order by variance() on columns of table "comercial.Servicos_Oportunidades" */
["comercial_Servicos_Oportunidades_variance_order_by"]: {
		Valor?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos"]: {
	__typename: "comercial_Servicos_Produtos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["comercial_Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate"]: {
	__typename: "comercial_Servicos_Produtos_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Produtos"]>
};
	/** aggregate fields of "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_fields"]: {
	__typename: "comercial_Servicos_Produtos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Produtos_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Produtos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_Produtos_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_Produtos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Produtos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Produtos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Produtos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["comercial_Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_constraint"]: comercial_Servicos_Produtos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["comercial_Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_Produtos_max_fields"]: {
	__typename: "comercial_Servicos_Produtos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_Produtos_min_fields"]: {
	__typename: "comercial_Servicos_Produtos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_mutation_response"]: {
	__typename: "comercial_Servicos_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Produtos"]>
};
	/** on conflict condition type for table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Produtos_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Produtos". */
["comercial_Servicos_Produtos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["comercial_Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Produtos */
["comercial_Servicos_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_select_column"]: comercial_Servicos_Produtos_select_column;
	/** input type for updating data in table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Servicos_Produtos" */
["comercial_Servicos_Produtos_update_column"]: comercial_Servicos_Produtos_update_column;
	/** columns and relationships of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos"]: {
	__typename: "comercial_Servicos_Servicos",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	/** An object relationship */
	ServicoDependente: GraphQLTypes["comercial_Servicos"],
	ServicoDependente_Id: GraphQLTypes["uuid"],
	Servico_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate"]: {
	__typename: "comercial_Servicos_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Servicos"]>
};
	/** aggregate fields of "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_fields"]: {
	__typename: "comercial_Servicos_Servicos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_Servicos_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Servicos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Servicos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	ServicoDependente?: GraphQLTypes["comercial_Servicos_bool_exp"],
	ServicoDependente_Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_constraint"]: comercial_Servicos_Servicos_constraint;
	/** input type for inserting data into table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	ServicoDependente?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	ServicoDependente_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_Servicos_max_fields"]: {
	__typename: "comercial_Servicos_Servicos_max_fields",
	Id?: GraphQLTypes["uuid"],
	ServicoDependente_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ServicoDependente_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_Servicos_min_fields"]: {
	__typename: "comercial_Servicos_Servicos_min_fields",
	Id?: GraphQLTypes["uuid"],
	ServicoDependente_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	ServicoDependente_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_mutation_response"]: {
	__typename: "comercial_Servicos_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Servicos"]>
};
	/** on conflict condition type for table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Servicos". */
["comercial_Servicos_Servicos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	ServicoDependente?: GraphQLTypes["comercial_Servicos_order_by"],
	ServicoDependente_Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Servicos */
["comercial_Servicos_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_select_column"]: comercial_Servicos_Servicos_select_column;
	/** input type for updating data in table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	ServicoDependente_Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Servicos_Servicos" */
["comercial_Servicos_Servicos_update_column"]: comercial_Servicos_Servicos_update_column;
	/** columns and relationships of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas"]: {
	__typename: "comercial_Servicos_Tarifas",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Servico: GraphQLTypes["comercial_Servicos"],
	Servico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Tarifa: GraphQLTypes["comercial_Tarifas"],
	Tarifa_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate"]: {
	__typename: "comercial_Servicos_Tarifas_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Tarifas_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Tarifas"]>
};
	/** aggregate fields of "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_fields"]: {
	__typename: "comercial_Servicos_Tarifas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Tarifas_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Tarifas_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_Tarifas_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_Tarifas_min_order_by"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_Tarifas_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Tarifas_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tarifas_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Servico?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Servico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_bool_exp"],
	Tarifa_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_constraint"]: comercial_Servicos_Tarifas_constraint;
	/** input type for inserting data into table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Servico?: GraphQLTypes["comercial_Servicos_obj_rel_insert_input"],
	Servico_Id?: GraphQLTypes["uuid"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_obj_rel_insert_input"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_Tarifas_max_fields"]: {
	__typename: "comercial_Servicos_Tarifas_max_fields",
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_Tarifas_min_fields"]: {
	__typename: "comercial_Servicos_Tarifas_min_fields",
	Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_mutation_response"]: {
	__typename: "comercial_Servicos_Tarifas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Tarifas"]>
};
	/** on conflict condition type for table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Tarifas_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Tarifas_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Tarifas". */
["comercial_Servicos_Tarifas_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Servico?: GraphQLTypes["comercial_Servicos_order_by"],
	Servico_Id?: GraphQLTypes["order_by"],
	Tarifa?: GraphQLTypes["comercial_Tarifas_order_by"],
	Tarifa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Tarifas */
["comercial_Servicos_Tarifas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_select_column"]: comercial_Servicos_Tarifas_select_column;
	/** input type for updating data in table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Servico_Id?: GraphQLTypes["uuid"],
	Tarifa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Servicos_Tarifas" */
["comercial_Servicos_Tarifas_update_column"]: comercial_Servicos_Tarifas_update_column;
	/** columns and relationships of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos"]: {
	__typename: "comercial_Servicos_Tipos",
	Comentario: string,
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Servicos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Servicos_aggregate"],
	Valor: string
};
	/** aggregated selection of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate"]: {
	__typename: "comercial_Servicos_Tipos_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_Tipos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos_Tipos"]>
};
	/** aggregate fields of "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_aggregate_fields"]: {
	__typename: "comercial_Servicos_Tipos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_Tipos_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_Tipos_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos_Tipos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_Tipos_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Servicos?: GraphQLTypes["comercial_Servicos_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_Tipos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_Tipos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_Tipos_bool_exp"]>
};
	/** unique or primary key constraints on table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_constraint"]: comercial_Servicos_Tipos_constraint;
	["comercial_Servicos_Tipos_enum"]: comercial_Servicos_Tipos_enum;
	/** Boolean expression to compare columns of type "comercial_Servicos_Tipos_enum". All fields are combined with logical 'AND'. */
["comercial_Servicos_Tipos_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["comercial_Servicos_Tipos_enum"],
	_in?: Array<GraphQLTypes["comercial_Servicos_Tipos_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["comercial_Servicos_Tipos_enum"],
	_nin?: Array<GraphQLTypes["comercial_Servicos_Tipos_enum"]>
};
	/** input type for inserting data into table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_insert_input"]: {
		Comentario?: string,
	Servicos?: GraphQLTypes["comercial_Servicos_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["comercial_Servicos_Tipos_max_fields"]: {
	__typename: "comercial_Servicos_Tipos_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["comercial_Servicos_Tipos_min_fields"]: {
	__typename: "comercial_Servicos_Tipos_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_mutation_response"]: {
	__typename: "comercial_Servicos_Tipos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos_Tipos"]>
};
	/** input type for inserting object relation for remote table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Servicos_Tipos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_Tipos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_Tipos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_Tipos_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_Tipos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos_Tipos". */
["comercial_Servicos_Tipos_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Servicos_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos_Tipos */
["comercial_Servicos_Tipos_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_select_column"]: comercial_Servicos_Tipos_select_column;
	/** input type for updating data in table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "comercial.Servicos_Tipos" */
["comercial_Servicos_Tipos_update_column"]: comercial_Servicos_Tipos_update_column;
	/** aggregated selection of "comercial.Servicos" */
["comercial_Servicos_aggregate"]: {
	__typename: "comercial_Servicos_aggregate",
	aggregate?: GraphQLTypes["comercial_Servicos_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Servicos"]>
};
	/** aggregate fields of "comercial.Servicos" */
["comercial_Servicos_aggregate_fields"]: {
	__typename: "comercial_Servicos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Servicos_max_fields"],
	min?: GraphQLTypes["comercial_Servicos_min_fields"]
};
	/** order by aggregate values of table "comercial.Servicos" */
["comercial_Servicos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["comercial_Servicos_max_order_by"],
	min?: GraphQLTypes["comercial_Servicos_min_order_by"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_append_input"]: {
		Categorias?: GraphQLTypes["jsonb"]
};
	/** input type for inserting array relation for remote table "comercial.Servicos" */
["comercial_Servicos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["comercial_Servicos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "comercial.Servicos". All fields are combined with a logical 'AND'. */
["comercial_Servicos_bool_exp"]: {
		Atributos?: GraphQLTypes["comercial_Servicos_Atributos_bool_exp"],
	Categorias?: GraphQLTypes["jsonb_comparison_exp"],
	Combos?: GraphQLTypes["comercial_Combos_Servicos_bool_exp"],
	Fornecedores?: GraphQLTypes["comercial_Fornecedores_Servicos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Oportunidades?: GraphQLTypes["comercial_Servicos_Oportunidades_bool_exp"],
	Planos?: GraphQLTypes["comercial_Planos_bool_exp"],
	PrestadoresDeServicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"],
	Produtos_Servicos?: GraphQLTypes["comercial_Produtos_Servicos_bool_exp"],
	Propostas?: GraphQLTypes["comercial_Propostas_Servicos_bool_exp"],
	Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_bool_exp"],
	Servicos_ServicosDependente?: GraphQLTypes["comercial_Servicos_Servicos_bool_exp"],
	Tarifas?: GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"],
	Tipo?: GraphQLTypes["comercial_Servicos_Tipos_bool_exp"],
	Tipo_Id?: GraphQLTypes["comercial_Servicos_Tipos_enum_comparison_exp"],
	_and?: Array<GraphQLTypes["comercial_Servicos_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Servicos_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Servicos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	servicosServicos?: GraphQLTypes["comercial_Servicos_Servicos_bool_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Servicos" */
["comercial_Servicos_constraint"]: comercial_Servicos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["comercial_Servicos_delete_at_path_input"]: {
		Categorias?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["comercial_Servicos_delete_elem_input"]: {
		Categorias?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["comercial_Servicos_delete_key_input"]: {
		Categorias?: string
};
	/** input type for inserting data into table "comercial.Servicos" */
["comercial_Servicos_insert_input"]: {
		Atributos?: GraphQLTypes["comercial_Servicos_Atributos_arr_rel_insert_input"],
	Categorias?: GraphQLTypes["jsonb"],
	Combos?: GraphQLTypes["comercial_Combos_Servicos_arr_rel_insert_input"],
	Fornecedores?: GraphQLTypes["comercial_Fornecedores_Servicos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Oportunidades?: GraphQLTypes["comercial_Servicos_Oportunidades_arr_rel_insert_input"],
	Planos?: GraphQLTypes["comercial_Planos_arr_rel_insert_input"],
	PrestadoresDeServicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"],
	Produtos_Servicos?: GraphQLTypes["comercial_Produtos_Servicos_arr_rel_insert_input"],
	Propostas?: GraphQLTypes["comercial_Propostas_Servicos_arr_rel_insert_input"],
	Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_arr_rel_insert_input"],
	Servicos_ServicosDependente?: GraphQLTypes["comercial_Servicos_Servicos_arr_rel_insert_input"],
	Tarifas?: GraphQLTypes["comercial_Servicos_Tarifas_arr_rel_insert_input"],
	Tipo?: GraphQLTypes["comercial_Servicos_Tipos_obj_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["comercial_Servicos_Tipos_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	servicosServicos?: GraphQLTypes["comercial_Servicos_Servicos_arr_rel_insert_input"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Servicos_max_fields"]: {
	__typename: "comercial_Servicos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "comercial.Servicos" */
["comercial_Servicos_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["comercial_Servicos_min_fields"]: {
	__typename: "comercial_Servicos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "comercial.Servicos" */
["comercial_Servicos_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "comercial.Servicos" */
["comercial_Servicos_mutation_response"]: {
	__typename: "comercial_Servicos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Servicos"]>
};
	/** input type for inserting object relation for remote table "comercial.Servicos" */
["comercial_Servicos_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Servicos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Servicos_on_conflict"]
};
	/** on conflict condition type for table "comercial.Servicos" */
["comercial_Servicos_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Servicos_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Servicos_update_column"]>,
	where?: GraphQLTypes["comercial_Servicos_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Servicos". */
["comercial_Servicos_order_by"]: {
		Atributos_aggregate?: GraphQLTypes["comercial_Servicos_Atributos_aggregate_order_by"],
	Categorias?: GraphQLTypes["order_by"],
	Combos_aggregate?: GraphQLTypes["comercial_Combos_Servicos_aggregate_order_by"],
	Fornecedores_aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Oportunidades_aggregate?: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate_order_by"],
	Planos_aggregate?: GraphQLTypes["comercial_Planos_aggregate_order_by"],
	PrestadoresDeServicos_aggregate?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"],
	Produtos_Servicos_aggregate?: GraphQLTypes["comercial_Produtos_Servicos_aggregate_order_by"],
	Propostas_aggregate?: GraphQLTypes["comercial_Propostas_Servicos_aggregate_order_by"],
	Servicos_Produtos_aggregate?: GraphQLTypes["comercial_Servicos_Produtos_aggregate_order_by"],
	Servicos_ServicosDependente_aggregate?: GraphQLTypes["comercial_Servicos_Servicos_aggregate_order_by"],
	Tarifas_aggregate?: GraphQLTypes["comercial_Servicos_Tarifas_aggregate_order_by"],
	Tipo?: GraphQLTypes["comercial_Servicos_Tipos_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	servicosServicos_aggregate?: GraphQLTypes["comercial_Servicos_Servicos_aggregate_order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Servicos */
["comercial_Servicos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["comercial_Servicos_prepend_input"]: {
		Categorias?: GraphQLTypes["jsonb"]
};
	/** select columns of table "comercial.Servicos" */
["comercial_Servicos_select_column"]: comercial_Servicos_select_column;
	/** input type for updating data in table "comercial.Servicos" */
["comercial_Servicos_set_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Tipo_Id?: GraphQLTypes["comercial_Servicos_Tipos_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Servicos" */
["comercial_Servicos_update_column"]: comercial_Servicos_update_column;
	/** columns and relationships of "comercial.Tarifas" */
["comercial_Tarifas"]: {
	__typename: "comercial_Tarifas",
	/** An array relationship */
	Fornecedores_Servicos: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"]>,
	/** An aggregate relationship */
	Fornecedores_Servicos_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_Servicos_Tarifas"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_Servicos_Tarifas_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "comercial.Tarifas" */
["comercial_Tarifas_aggregate"]: {
	__typename: "comercial_Tarifas_aggregate",
	aggregate?: GraphQLTypes["comercial_Tarifas_aggregate_fields"],
	nodes: Array<GraphQLTypes["comercial_Tarifas"]>
};
	/** aggregate fields of "comercial.Tarifas" */
["comercial_Tarifas_aggregate_fields"]: {
	__typename: "comercial_Tarifas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["comercial_Tarifas_max_fields"],
	min?: GraphQLTypes["comercial_Tarifas_min_fields"]
};
	/** Boolean expression to filter rows from the table "comercial.Tarifas". All fields are combined with a logical 'AND'. */
["comercial_Tarifas_bool_exp"]: {
		Fornecedores_Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Servicos?: GraphQLTypes["comercial_Servicos_Tarifas_bool_exp"],
	_and?: Array<GraphQLTypes["comercial_Tarifas_bool_exp"]>,
	_not?: GraphQLTypes["comercial_Tarifas_bool_exp"],
	_or?: Array<GraphQLTypes["comercial_Tarifas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "comercial.Tarifas" */
["comercial_Tarifas_constraint"]: comercial_Tarifas_constraint;
	/** input type for inserting data into table "comercial.Tarifas" */
["comercial_Tarifas_insert_input"]: {
		Fornecedores_Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Servicos?: GraphQLTypes["comercial_Servicos_Tarifas_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["comercial_Tarifas_max_fields"]: {
	__typename: "comercial_Tarifas_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["comercial_Tarifas_min_fields"]: {
	__typename: "comercial_Tarifas_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "comercial.Tarifas" */
["comercial_Tarifas_mutation_response"]: {
	__typename: "comercial_Tarifas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["comercial_Tarifas"]>
};
	/** input type for inserting object relation for remote table "comercial.Tarifas" */
["comercial_Tarifas_obj_rel_insert_input"]: {
		data: GraphQLTypes["comercial_Tarifas_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["comercial_Tarifas_on_conflict"]
};
	/** on conflict condition type for table "comercial.Tarifas" */
["comercial_Tarifas_on_conflict"]: {
		constraint: GraphQLTypes["comercial_Tarifas_constraint"],
	update_columns: Array<GraphQLTypes["comercial_Tarifas_update_column"]>,
	where?: GraphQLTypes["comercial_Tarifas_bool_exp"]
};
	/** Ordering options when selecting data from "comercial.Tarifas". */
["comercial_Tarifas_order_by"]: {
		Fornecedores_Servicos_aggregate?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_Servicos_Tarifas_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: comercial_Tarifas */
["comercial_Tarifas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "comercial.Tarifas" */
["comercial_Tarifas_select_column"]: comercial_Tarifas_select_column;
	/** input type for updating data in table "comercial.Tarifas" */
["comercial_Tarifas_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "comercial.Tarifas" */
["comercial_Tarifas_update_column"]: comercial_Tarifas_update_column;
	/** columns and relationships of "contatos.Emails" */
["contatos_Emails"]: {
	__typename: "contatos_Emails",
	Categorias: GraphQLTypes["jsonb"],
	Email: string,
	Id: GraphQLTypes["uuid"],
	Identidades: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Emails" */
["contatos_Emails_aggregate"]: {
	__typename: "contatos_Emails_aggregate",
	aggregate?: GraphQLTypes["contatos_Emails_aggregate_fields"],
	nodes: Array<GraphQLTypes["contatos_Emails"]>
};
	/** aggregate fields of "contatos.Emails" */
["contatos_Emails_aggregate_fields"]: {
	__typename: "contatos_Emails_aggregate_fields",
	count: number,
	max?: GraphQLTypes["contatos_Emails_max_fields"],
	min?: GraphQLTypes["contatos_Emails_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_append_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "contatos.Emails". All fields are combined with a logical 'AND'. */
["contatos_Emails_bool_exp"]: {
		Categorias?: GraphQLTypes["jsonb_comparison_exp"],
	Email?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Identidades?: GraphQLTypes["jsonb_comparison_exp"],
	NomeDoResponsavel?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["contatos_Emails_bool_exp"]>,
	_not?: GraphQLTypes["contatos_Emails_bool_exp"],
	_or?: Array<GraphQLTypes["contatos_Emails_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "contatos.Emails" */
["contatos_Emails_constraint"]: contatos_Emails_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Emails_delete_at_path_input"]: {
		Categorias?: Array<string>,
	Identidades?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Emails_delete_elem_input"]: {
		Categorias?: number,
	Identidades?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Emails_delete_key_input"]: {
		Categorias?: string,
	Identidades?: string
};
	/** input type for inserting data into table "contatos.Emails" */
["contatos_Emails_insert_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["contatos_Emails_max_fields"]: {
	__typename: "contatos_Emails_max_fields",
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	NomeDoResponsavel?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Emails_min_fields"]: {
	__typename: "contatos_Emails_min_fields",
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	NomeDoResponsavel?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Emails" */
["contatos_Emails_mutation_response"]: {
	__typename: "contatos_Emails_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["contatos_Emails"]>
};
	/** on conflict condition type for table "contatos.Emails" */
["contatos_Emails_on_conflict"]: {
		constraint: GraphQLTypes["contatos_Emails_constraint"],
	update_columns: Array<GraphQLTypes["contatos_Emails_update_column"]>,
	where?: GraphQLTypes["contatos_Emails_bool_exp"]
};
	/** Ordering options when selecting data from "contatos.Emails". */
["contatos_Emails_order_by"]: {
		Categorias?: GraphQLTypes["order_by"],
	Email?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Identidades?: GraphQLTypes["order_by"],
	NomeDoResponsavel?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: contatos_Emails */
["contatos_Emails_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Emails_prepend_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"]
};
	/** select columns of table "contatos.Emails" */
["contatos_Emails_select_column"]: contatos_Emails_select_column;
	/** input type for updating data in table "contatos.Emails" */
["contatos_Emails_set_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Email?: string,
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "contatos.Emails" */
["contatos_Emails_update_column"]: contatos_Emails_update_column;
	/** columns and relationships of "contatos.Enderecos" */
["contatos_Enderecos"]: {
	__typename: "contatos_Enderecos",
	Bairro: string,
	Categorias: GraphQLTypes["jsonb"],
	Cep?: string,
	/** An object relationship */
	Cidade: GraphQLTypes["EstadosEMunicipios"],
	Cidade_Id: GraphQLTypes["uuid"],
	Complemento?: string,
	/** An object relationship */
	Estado: GraphQLTypes["EstadosEMunicipios"],
	Estado_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Identidades: GraphQLTypes["jsonb"],
	Logradouro: string,
	Numero?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Enderecos" */
["contatos_Enderecos_aggregate"]: {
	__typename: "contatos_Enderecos_aggregate",
	aggregate?: GraphQLTypes["contatos_Enderecos_aggregate_fields"],
	nodes: Array<GraphQLTypes["contatos_Enderecos"]>
};
	/** aggregate fields of "contatos.Enderecos" */
["contatos_Enderecos_aggregate_fields"]: {
	__typename: "contatos_Enderecos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["contatos_Enderecos_max_fields"],
	min?: GraphQLTypes["contatos_Enderecos_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_append_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "contatos.Enderecos". All fields are combined with a logical 'AND'. */
["contatos_Enderecos_bool_exp"]: {
		Bairro?: GraphQLTypes["String_comparison_exp"],
	Categorias?: GraphQLTypes["jsonb_comparison_exp"],
	Cep?: GraphQLTypes["String_comparison_exp"],
	Cidade?: GraphQLTypes["EstadosEMunicipios_bool_exp"],
	Cidade_Id?: GraphQLTypes["uuid_comparison_exp"],
	Complemento?: GraphQLTypes["String_comparison_exp"],
	Estado?: GraphQLTypes["EstadosEMunicipios_bool_exp"],
	Estado_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Identidades?: GraphQLTypes["jsonb_comparison_exp"],
	Logradouro?: GraphQLTypes["String_comparison_exp"],
	Numero?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["contatos_Enderecos_bool_exp"]>,
	_not?: GraphQLTypes["contatos_Enderecos_bool_exp"],
	_or?: Array<GraphQLTypes["contatos_Enderecos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "contatos.Enderecos" */
["contatos_Enderecos_constraint"]: contatos_Enderecos_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Enderecos_delete_at_path_input"]: {
		Categorias?: Array<string>,
	Identidades?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Enderecos_delete_elem_input"]: {
		Categorias?: number,
	Identidades?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Enderecos_delete_key_input"]: {
		Categorias?: string,
	Identidades?: string
};
	/** input type for inserting data into table "contatos.Enderecos" */
["contatos_Enderecos_insert_input"]: {
		Bairro?: string,
	Categorias?: GraphQLTypes["jsonb"],
	Cep?: string,
	Cidade?: GraphQLTypes["EstadosEMunicipios_obj_rel_insert_input"],
	Cidade_Id?: GraphQLTypes["uuid"],
	Complemento?: string,
	Estado?: GraphQLTypes["EstadosEMunicipios_obj_rel_insert_input"],
	Estado_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	Logradouro?: string,
	Numero?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["contatos_Enderecos_max_fields"]: {
	__typename: "contatos_Enderecos_max_fields",
	Bairro?: string,
	Cep?: string,
	Cidade_Id?: GraphQLTypes["uuid"],
	Complemento?: string,
	Estado_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Logradouro?: string,
	Numero?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Enderecos_min_fields"]: {
	__typename: "contatos_Enderecos_min_fields",
	Bairro?: string,
	Cep?: string,
	Cidade_Id?: GraphQLTypes["uuid"],
	Complemento?: string,
	Estado_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Logradouro?: string,
	Numero?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Enderecos" */
["contatos_Enderecos_mutation_response"]: {
	__typename: "contatos_Enderecos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["contatos_Enderecos"]>
};
	/** on conflict condition type for table "contatos.Enderecos" */
["contatos_Enderecos_on_conflict"]: {
		constraint: GraphQLTypes["contatos_Enderecos_constraint"],
	update_columns: Array<GraphQLTypes["contatos_Enderecos_update_column"]>,
	where?: GraphQLTypes["contatos_Enderecos_bool_exp"]
};
	/** Ordering options when selecting data from "contatos.Enderecos". */
["contatos_Enderecos_order_by"]: {
		Bairro?: GraphQLTypes["order_by"],
	Categorias?: GraphQLTypes["order_by"],
	Cep?: GraphQLTypes["order_by"],
	Cidade?: GraphQLTypes["EstadosEMunicipios_order_by"],
	Cidade_Id?: GraphQLTypes["order_by"],
	Complemento?: GraphQLTypes["order_by"],
	Estado?: GraphQLTypes["EstadosEMunicipios_order_by"],
	Estado_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Identidades?: GraphQLTypes["order_by"],
	Logradouro?: GraphQLTypes["order_by"],
	Numero?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: contatos_Enderecos */
["contatos_Enderecos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Enderecos_prepend_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"]
};
	/** select columns of table "contatos.Enderecos" */
["contatos_Enderecos_select_column"]: contatos_Enderecos_select_column;
	/** input type for updating data in table "contatos.Enderecos" */
["contatos_Enderecos_set_input"]: {
		Bairro?: string,
	Categorias?: GraphQLTypes["jsonb"],
	Cep?: string,
	Cidade_Id?: GraphQLTypes["uuid"],
	Complemento?: string,
	Estado_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	Logradouro?: string,
	Numero?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "contatos.Enderecos" */
["contatos_Enderecos_update_column"]: contatos_Enderecos_update_column;
	/** columns and relationships of "contatos.Logs" */
["contatos_Logs"]: {
	__typename: "contatos_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Logs" */
["contatos_Logs_aggregate"]: {
	__typename: "contatos_Logs_aggregate",
	aggregate?: GraphQLTypes["contatos_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["contatos_Logs"]>
};
	/** aggregate fields of "contatos.Logs" */
["contatos_Logs_aggregate_fields"]: {
	__typename: "contatos_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["contatos_Logs_max_fields"],
	min?: GraphQLTypes["contatos_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "contatos.Logs". All fields are combined with a logical 'AND'. */
["contatos_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["contatos_Logs_bool_exp"]>,
	_not?: GraphQLTypes["contatos_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["contatos_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "contatos.Logs" */
["contatos_Logs_constraint"]: contatos_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "contatos.Logs" */
["contatos_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["contatos_Logs_max_fields"]: {
	__typename: "contatos_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Logs_min_fields"]: {
	__typename: "contatos_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Logs" */
["contatos_Logs_mutation_response"]: {
	__typename: "contatos_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["contatos_Logs"]>
};
	/** on conflict condition type for table "contatos.Logs" */
["contatos_Logs_on_conflict"]: {
		constraint: GraphQLTypes["contatos_Logs_constraint"],
	update_columns: Array<GraphQLTypes["contatos_Logs_update_column"]>,
	where?: GraphQLTypes["contatos_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "contatos.Logs". */
["contatos_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: contatos_Logs */
["contatos_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "contatos.Logs" */
["contatos_Logs_select_column"]: contatos_Logs_select_column;
	/** input type for updating data in table "contatos.Logs" */
["contatos_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "contatos.Logs" */
["contatos_Logs_update_column"]: contatos_Logs_update_column;
	/** columns and relationships of "contatos.Telefones" */
["contatos_Telefones"]: {
	__typename: "contatos_Telefones",
	Categorias: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Identidades: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	Telefone: GraphQLTypes["bigint"],
	Tipos: GraphQLTypes["jsonb"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "contatos.Telefones" */
["contatos_Telefones_aggregate"]: {
	__typename: "contatos_Telefones_aggregate",
	aggregate?: GraphQLTypes["contatos_Telefones_aggregate_fields"],
	nodes: Array<GraphQLTypes["contatos_Telefones"]>
};
	/** aggregate fields of "contatos.Telefones" */
["contatos_Telefones_aggregate_fields"]: {
	__typename: "contatos_Telefones_aggregate_fields",
	avg?: GraphQLTypes["contatos_Telefones_avg_fields"],
	count: number,
	max?: GraphQLTypes["contatos_Telefones_max_fields"],
	min?: GraphQLTypes["contatos_Telefones_min_fields"],
	stddev?: GraphQLTypes["contatos_Telefones_stddev_fields"],
	stddev_pop?: GraphQLTypes["contatos_Telefones_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["contatos_Telefones_stddev_samp_fields"],
	sum?: GraphQLTypes["contatos_Telefones_sum_fields"],
	var_pop?: GraphQLTypes["contatos_Telefones_var_pop_fields"],
	var_samp?: GraphQLTypes["contatos_Telefones_var_samp_fields"],
	variance?: GraphQLTypes["contatos_Telefones_variance_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_append_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"],
	Tipos?: GraphQLTypes["jsonb"]
};
	/** aggregate avg on columns */
["contatos_Telefones_avg_fields"]: {
	__typename: "contatos_Telefones_avg_fields",
	Telefone?: number
};
	/** Boolean expression to filter rows from the table "contatos.Telefones". All fields are combined with a logical 'AND'. */
["contatos_Telefones_bool_exp"]: {
		Categorias?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Identidades?: GraphQLTypes["jsonb_comparison_exp"],
	NomeDoResponsavel?: GraphQLTypes["String_comparison_exp"],
	Telefone?: GraphQLTypes["bigint_comparison_exp"],
	Tipos?: GraphQLTypes["jsonb_comparison_exp"],
	_and?: Array<GraphQLTypes["contatos_Telefones_bool_exp"]>,
	_not?: GraphQLTypes["contatos_Telefones_bool_exp"],
	_or?: Array<GraphQLTypes["contatos_Telefones_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "contatos.Telefones" */
["contatos_Telefones_constraint"]: contatos_Telefones_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["contatos_Telefones_delete_at_path_input"]: {
		Categorias?: Array<string>,
	Identidades?: Array<string>,
	Tipos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["contatos_Telefones_delete_elem_input"]: {
		Categorias?: number,
	Identidades?: number,
	Tipos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["contatos_Telefones_delete_key_input"]: {
		Categorias?: string,
	Identidades?: string,
	Tipos?: string
};
	/** input type for incrementing numeric columns in table "contatos.Telefones" */
["contatos_Telefones_inc_input"]: {
		Telefone?: GraphQLTypes["bigint"]
};
	/** input type for inserting data into table "contatos.Telefones" */
["contatos_Telefones_insert_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	Telefone?: GraphQLTypes["bigint"],
	Tipos?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["contatos_Telefones_max_fields"]: {
	__typename: "contatos_Telefones_max_fields",
	Id?: GraphQLTypes["uuid"],
	NomeDoResponsavel?: string,
	Telefone?: GraphQLTypes["bigint"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["contatos_Telefones_min_fields"]: {
	__typename: "contatos_Telefones_min_fields",
	Id?: GraphQLTypes["uuid"],
	NomeDoResponsavel?: string,
	Telefone?: GraphQLTypes["bigint"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "contatos.Telefones" */
["contatos_Telefones_mutation_response"]: {
	__typename: "contatos_Telefones_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["contatos_Telefones"]>
};
	/** on conflict condition type for table "contatos.Telefones" */
["contatos_Telefones_on_conflict"]: {
		constraint: GraphQLTypes["contatos_Telefones_constraint"],
	update_columns: Array<GraphQLTypes["contatos_Telefones_update_column"]>,
	where?: GraphQLTypes["contatos_Telefones_bool_exp"]
};
	/** Ordering options when selecting data from "contatos.Telefones". */
["contatos_Telefones_order_by"]: {
		Categorias?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Identidades?: GraphQLTypes["order_by"],
	NomeDoResponsavel?: GraphQLTypes["order_by"],
	Telefone?: GraphQLTypes["order_by"],
	Tipos?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: contatos_Telefones */
["contatos_Telefones_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["contatos_Telefones_prepend_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Identidades?: GraphQLTypes["jsonb"],
	Tipos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "contatos.Telefones" */
["contatos_Telefones_select_column"]: contatos_Telefones_select_column;
	/** input type for updating data in table "contatos.Telefones" */
["contatos_Telefones_set_input"]: {
		Categorias?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Identidades?: GraphQLTypes["jsonb"],
	NomeDoResponsavel?: string,
	Telefone?: GraphQLTypes["bigint"],
	Tipos?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["contatos_Telefones_stddev_fields"]: {
	__typename: "contatos_Telefones_stddev_fields",
	Telefone?: number
};
	/** aggregate stddev_pop on columns */
["contatos_Telefones_stddev_pop_fields"]: {
	__typename: "contatos_Telefones_stddev_pop_fields",
	Telefone?: number
};
	/** aggregate stddev_samp on columns */
["contatos_Telefones_stddev_samp_fields"]: {
	__typename: "contatos_Telefones_stddev_samp_fields",
	Telefone?: number
};
	/** aggregate sum on columns */
["contatos_Telefones_sum_fields"]: {
	__typename: "contatos_Telefones_sum_fields",
	Telefone?: GraphQLTypes["bigint"]
};
	/** update columns of table "contatos.Telefones" */
["contatos_Telefones_update_column"]: contatos_Telefones_update_column;
	/** aggregate var_pop on columns */
["contatos_Telefones_var_pop_fields"]: {
	__typename: "contatos_Telefones_var_pop_fields",
	Telefone?: number
};
	/** aggregate var_samp on columns */
["contatos_Telefones_var_samp_fields"]: {
	__typename: "contatos_Telefones_var_samp_fields",
	Telefone?: number
};
	/** aggregate variance on columns */
["contatos_Telefones_variance_fields"]: {
	__typename: "contatos_Telefones_variance_fields",
	Telefone?: number
};
	/** columns and relationships of "estoque.Enderecamentos" */
["estoque_Enderecamentos"]: {
	__typename: "estoque_Enderecamentos",
	Descricao: string,
	/** An array relationship */
	Filhos: Array<GraphQLTypes["estoque_Enderecamentos"]>,
	/** An aggregate relationship */
	Filhos_aggregate: GraphQLTypes["estoque_Enderecamentos_aggregate"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	Nome: string,
	/** An object relationship */
	Pai?: GraphQLTypes["estoque_Enderecamentos"],
	Pai_Id?: GraphQLTypes["uuid"],
	/** An object relationship */
	Tipo: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate"]: {
	__typename: "estoque_Enderecamentos_aggregate",
	aggregate?: GraphQLTypes["estoque_Enderecamentos_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Enderecamentos"]>
};
	/** aggregate fields of "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_fields"]: {
	__typename: "estoque_Enderecamentos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Enderecamentos_max_fields"],
	min?: GraphQLTypes["estoque_Enderecamentos_min_fields"]
};
	/** order by aggregate values of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["estoque_Enderecamentos_max_order_by"],
	min?: GraphQLTypes["estoque_Enderecamentos_min_order_by"]
};
	/** input type for inserting array relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["estoque_Enderecamentos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Enderecamentos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "estoque.Enderecamentos". All fields are combined with a logical 'AND'. */
["estoque_Enderecamentos_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Filhos?: GraphQLTypes["estoque_Enderecamentos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["estoque_Itens_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Pai?: GraphQLTypes["estoque_Enderecamentos_bool_exp"],
	Pai_Id?: GraphQLTypes["uuid_comparison_exp"],
	Tipo?: GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Enderecamentos_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Enderecamentos_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Enderecamentos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Enderecamentos" */
["estoque_Enderecamentos_constraint"]: estoque_Enderecamentos_constraint;
	/** input type for inserting data into table "estoque.Enderecamentos" */
["estoque_Enderecamentos_insert_input"]: {
		Descricao?: string,
	Filhos?: GraphQLTypes["estoque_Enderecamentos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["estoque_Itens_arr_rel_insert_input"],
	Nome?: string,
	Pai?: GraphQLTypes["estoque_Enderecamentos_obj_rel_insert_input"],
	Pai_Id?: GraphQLTypes["uuid"],
	Tipo?: GraphQLTypes["estoque_TiposDeEnderecamentos_obj_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Enderecamentos_max_fields"]: {
	__typename: "estoque_Enderecamentos_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["estoque_Enderecamentos_min_fields"]: {
	__typename: "estoque_Enderecamentos_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "estoque.Enderecamentos" */
["estoque_Enderecamentos_mutation_response"]: {
	__typename: "estoque_Enderecamentos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Enderecamentos"]>
};
	/** input type for inserting object relation for remote table "estoque.Enderecamentos" */
["estoque_Enderecamentos_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Enderecamentos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Enderecamentos_on_conflict"]
};
	/** on conflict condition type for table "estoque.Enderecamentos" */
["estoque_Enderecamentos_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Enderecamentos_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Enderecamentos_update_column"]>,
	where?: GraphQLTypes["estoque_Enderecamentos_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Enderecamentos". */
["estoque_Enderecamentos_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Filhos_aggregate?: GraphQLTypes["estoque_Enderecamentos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["estoque_Itens_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai?: GraphQLTypes["estoque_Enderecamentos_order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["estoque_TiposDeEnderecamentos_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Enderecamentos */
["estoque_Enderecamentos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_select_column"]: estoque_Enderecamentos_select_column;
	/** input type for updating data in table "estoque.Enderecamentos" */
["estoque_Enderecamentos_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Enderecamentos" */
["estoque_Enderecamentos_update_column"]: estoque_Enderecamentos_update_column;
	/** columns and relationships of "estoque.Fabricantes" */
["estoque_Fabricantes"]: {
	__typename: "estoque_Fabricantes",
	Descricao: string,
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	/** An array relationship */
	Modelos: Array<GraphQLTypes["estoque_Modelos"]>,
	/** An aggregate relationship */
	Modelos_aggregate: GraphQLTypes["estoque_Modelos_aggregate"],
	Nome: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate"]: {
	__typename: "estoque_Fabricantes_aggregate",
	aggregate?: GraphQLTypes["estoque_Fabricantes_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Fabricantes"]>
};
	/** aggregate fields of "estoque.Fabricantes" */
["estoque_Fabricantes_aggregate_fields"]: {
	__typename: "estoque_Fabricantes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Fabricantes_max_fields"],
	min?: GraphQLTypes["estoque_Fabricantes_min_fields"]
};
	/** Boolean expression to filter rows from the table "estoque.Fabricantes". All fields are combined with a logical 'AND'. */
["estoque_Fabricantes_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["estoque_Itens_bool_exp"],
	Modelos?: GraphQLTypes["estoque_Modelos_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Fabricantes_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Fabricantes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Fabricantes" */
["estoque_Fabricantes_constraint"]: estoque_Fabricantes_constraint;
	/** input type for inserting data into table "estoque.Fabricantes" */
["estoque_Fabricantes_insert_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["estoque_Itens_arr_rel_insert_input"],
	Modelos?: GraphQLTypes["estoque_Modelos_arr_rel_insert_input"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Fabricantes_max_fields"]: {
	__typename: "estoque_Fabricantes_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Fabricantes_min_fields"]: {
	__typename: "estoque_Fabricantes_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Fabricantes" */
["estoque_Fabricantes_mutation_response"]: {
	__typename: "estoque_Fabricantes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Fabricantes"]>
};
	/** input type for inserting object relation for remote table "estoque.Fabricantes" */
["estoque_Fabricantes_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Fabricantes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Fabricantes_on_conflict"]
};
	/** on conflict condition type for table "estoque.Fabricantes" */
["estoque_Fabricantes_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Fabricantes_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Fabricantes_update_column"]>,
	where?: GraphQLTypes["estoque_Fabricantes_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Fabricantes". */
["estoque_Fabricantes_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["estoque_Itens_aggregate_order_by"],
	Modelos_aggregate?: GraphQLTypes["estoque_Modelos_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Fabricantes */
["estoque_Fabricantes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_select_column"]: estoque_Fabricantes_select_column;
	/** input type for updating data in table "estoque.Fabricantes" */
["estoque_Fabricantes_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Fabricantes" */
["estoque_Fabricantes_update_column"]: estoque_Fabricantes_update_column;
	/** columns and relationships of "estoque.Familias" */
["estoque_Familias"]: {
	__typename: "estoque_Familias",
	Descricao: string,
	/** An array relationship */
	Filhos: Array<GraphQLTypes["estoque_Familias"]>,
	/** An aggregate relationship */
	Filhos_aggregate: GraphQLTypes["estoque_Familias_aggregate"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	Nome: string,
	/** An object relationship */
	Pai?: GraphQLTypes["estoque_Familias"],
	Pai_Id?: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Familias" */
["estoque_Familias_aggregate"]: {
	__typename: "estoque_Familias_aggregate",
	aggregate?: GraphQLTypes["estoque_Familias_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Familias"]>
};
	/** aggregate fields of "estoque.Familias" */
["estoque_Familias_aggregate_fields"]: {
	__typename: "estoque_Familias_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Familias_max_fields"],
	min?: GraphQLTypes["estoque_Familias_min_fields"]
};
	/** order by aggregate values of table "estoque.Familias" */
["estoque_Familias_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["estoque_Familias_max_order_by"],
	min?: GraphQLTypes["estoque_Familias_min_order_by"]
};
	/** input type for inserting array relation for remote table "estoque.Familias" */
["estoque_Familias_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["estoque_Familias_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Familias_on_conflict"]
};
	/** Boolean expression to filter rows from the table "estoque.Familias". All fields are combined with a logical 'AND'. */
["estoque_Familias_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Filhos?: GraphQLTypes["estoque_Familias_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["estoque_Itens_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Pai?: GraphQLTypes["estoque_Familias_bool_exp"],
	Pai_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Familias_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Familias_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Familias_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Familias" */
["estoque_Familias_constraint"]: estoque_Familias_constraint;
	/** input type for inserting data into table "estoque.Familias" */
["estoque_Familias_insert_input"]: {
		Descricao?: string,
	Filhos?: GraphQLTypes["estoque_Familias_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["estoque_Itens_arr_rel_insert_input"],
	Nome?: string,
	Pai?: GraphQLTypes["estoque_Familias_obj_rel_insert_input"],
	Pai_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Familias_max_fields"]: {
	__typename: "estoque_Familias_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Familias" */
["estoque_Familias_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["estoque_Familias_min_fields"]: {
	__typename: "estoque_Familias_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Familias" */
["estoque_Familias_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "estoque.Familias" */
["estoque_Familias_mutation_response"]: {
	__typename: "estoque_Familias_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Familias"]>
};
	/** input type for inserting object relation for remote table "estoque.Familias" */
["estoque_Familias_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Familias_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Familias_on_conflict"]
};
	/** on conflict condition type for table "estoque.Familias" */
["estoque_Familias_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Familias_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Familias_update_column"]>,
	where?: GraphQLTypes["estoque_Familias_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Familias". */
["estoque_Familias_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Filhos_aggregate?: GraphQLTypes["estoque_Familias_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["estoque_Itens_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pai?: GraphQLTypes["estoque_Familias_order_by"],
	Pai_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Familias */
["estoque_Familias_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Familias" */
["estoque_Familias_select_column"]: estoque_Familias_select_column;
	/** input type for updating data in table "estoque.Familias" */
["estoque_Familias_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Pai_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Familias" */
["estoque_Familias_update_column"]: estoque_Familias_update_column;
	/** columns and relationships of "estoque.Grupos" */
["estoque_Grupos"]: {
	__typename: "estoque_Grupos",
	Descricao: string,
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	Nome: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Grupos" */
["estoque_Grupos_aggregate"]: {
	__typename: "estoque_Grupos_aggregate",
	aggregate?: GraphQLTypes["estoque_Grupos_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Grupos"]>
};
	/** aggregate fields of "estoque.Grupos" */
["estoque_Grupos_aggregate_fields"]: {
	__typename: "estoque_Grupos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Grupos_max_fields"],
	min?: GraphQLTypes["estoque_Grupos_min_fields"]
};
	/** Boolean expression to filter rows from the table "estoque.Grupos". All fields are combined with a logical 'AND'. */
["estoque_Grupos_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["estoque_Itens_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Grupos_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Grupos_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Grupos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Grupos" */
["estoque_Grupos_constraint"]: estoque_Grupos_constraint;
	/** input type for inserting data into table "estoque.Grupos" */
["estoque_Grupos_insert_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["estoque_Itens_arr_rel_insert_input"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Grupos_max_fields"]: {
	__typename: "estoque_Grupos_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Grupos_min_fields"]: {
	__typename: "estoque_Grupos_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Grupos" */
["estoque_Grupos_mutation_response"]: {
	__typename: "estoque_Grupos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Grupos"]>
};
	/** input type for inserting object relation for remote table "estoque.Grupos" */
["estoque_Grupos_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Grupos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Grupos_on_conflict"]
};
	/** on conflict condition type for table "estoque.Grupos" */
["estoque_Grupos_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Grupos_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Grupos_update_column"]>,
	where?: GraphQLTypes["estoque_Grupos_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Grupos". */
["estoque_Grupos_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["estoque_Itens_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Grupos */
["estoque_Grupos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Grupos" */
["estoque_Grupos_select_column"]: estoque_Grupos_select_column;
	/** input type for updating data in table "estoque.Grupos" */
["estoque_Grupos_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Grupos" */
["estoque_Grupos_update_column"]: estoque_Grupos_update_column;
	/** columns and relationships of "estoque.Itens" */
["estoque_Itens"]: {
	__typename: "estoque_Itens",
	Classificacao: string,
	Criticidade: string,
	/** An object relationship */
	Enderecamento: GraphQLTypes["estoque_Enderecamentos"],
	Enderecamento_Id: GraphQLTypes["uuid"],
	EstoqueMinimo: number,
	/** An object relationship */
	Fabricante: GraphQLTypes["estoque_Fabricantes"],
	Fabricante_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Familia: GraphQLTypes["estoque_Familias"],
	Familia_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Grupo: GraphQLTypes["estoque_Grupos"],
	Grupo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Modelo?: GraphQLTypes["estoque_Modelos"],
	Modelo_Id?: GraphQLTypes["uuid"],
	/** An array relationship */
	Movimentacoes: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>,
	/** An aggregate relationship */
	Movimentacoes_aggregate: GraphQLTypes["movimentacoes_Movimentacoes_aggregate"],
	/** An object relationship */
	Produto: GraphQLTypes["Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Itens" */
["estoque_Itens_aggregate"]: {
	__typename: "estoque_Itens_aggregate",
	aggregate?: GraphQLTypes["estoque_Itens_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Itens"]>
};
	/** aggregate fields of "estoque.Itens" */
["estoque_Itens_aggregate_fields"]: {
	__typename: "estoque_Itens_aggregate_fields",
	avg?: GraphQLTypes["estoque_Itens_avg_fields"],
	count: number,
	max?: GraphQLTypes["estoque_Itens_max_fields"],
	min?: GraphQLTypes["estoque_Itens_min_fields"],
	stddev?: GraphQLTypes["estoque_Itens_stddev_fields"],
	stddev_pop?: GraphQLTypes["estoque_Itens_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["estoque_Itens_stddev_samp_fields"],
	sum?: GraphQLTypes["estoque_Itens_sum_fields"],
	var_pop?: GraphQLTypes["estoque_Itens_var_pop_fields"],
	var_samp?: GraphQLTypes["estoque_Itens_var_samp_fields"],
	variance?: GraphQLTypes["estoque_Itens_variance_fields"]
};
	/** order by aggregate values of table "estoque.Itens" */
["estoque_Itens_aggregate_order_by"]: {
		avg?: GraphQLTypes["estoque_Itens_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["estoque_Itens_max_order_by"],
	min?: GraphQLTypes["estoque_Itens_min_order_by"],
	stddev?: GraphQLTypes["estoque_Itens_stddev_order_by"],
	stddev_pop?: GraphQLTypes["estoque_Itens_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["estoque_Itens_stddev_samp_order_by"],
	sum?: GraphQLTypes["estoque_Itens_sum_order_by"],
	var_pop?: GraphQLTypes["estoque_Itens_var_pop_order_by"],
	var_samp?: GraphQLTypes["estoque_Itens_var_samp_order_by"],
	variance?: GraphQLTypes["estoque_Itens_variance_order_by"]
};
	/** input type for inserting array relation for remote table "estoque.Itens" */
["estoque_Itens_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["estoque_Itens_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Itens_on_conflict"]
};
	/** aggregate avg on columns */
["estoque_Itens_avg_fields"]: {
	__typename: "estoque_Itens_avg_fields",
	EstoqueMinimo?: number
};
	/** order by avg() on columns of table "estoque.Itens" */
["estoque_Itens_avg_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "estoque.Itens". All fields are combined with a logical 'AND'. */
["estoque_Itens_bool_exp"]: {
		Classificacao?: GraphQLTypes["String_comparison_exp"],
	Criticidade?: GraphQLTypes["String_comparison_exp"],
	Enderecamento?: GraphQLTypes["estoque_Enderecamentos_bool_exp"],
	Enderecamento_Id?: GraphQLTypes["uuid_comparison_exp"],
	EstoqueMinimo?: GraphQLTypes["Int_comparison_exp"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	Fabricante_Id?: GraphQLTypes["uuid_comparison_exp"],
	Familia?: GraphQLTypes["estoque_Familias_bool_exp"],
	Familia_Id?: GraphQLTypes["uuid_comparison_exp"],
	Grupo?: GraphQLTypes["estoque_Grupos_bool_exp"],
	Grupo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Modelo?: GraphQLTypes["estoque_Modelos_bool_exp"],
	Modelo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"],
	Produto?: GraphQLTypes["Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Itens_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Itens_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Itens_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Itens" */
["estoque_Itens_constraint"]: estoque_Itens_constraint;
	/** input type for incrementing numeric columns in table "estoque.Itens" */
["estoque_Itens_inc_input"]: {
		EstoqueMinimo?: number
};
	/** input type for inserting data into table "estoque.Itens" */
["estoque_Itens_insert_input"]: {
		Classificacao?: string,
	Criticidade?: string,
	Enderecamento?: GraphQLTypes["estoque_Enderecamentos_obj_rel_insert_input"],
	Enderecamento_Id?: GraphQLTypes["uuid"],
	EstoqueMinimo?: number,
	Fabricante?: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Familia?: GraphQLTypes["estoque_Familias_obj_rel_insert_input"],
	Familia_Id?: GraphQLTypes["uuid"],
	Grupo?: GraphQLTypes["estoque_Grupos_obj_rel_insert_input"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Modelo?: GraphQLTypes["estoque_Modelos_obj_rel_insert_input"],
	Modelo_Id?: GraphQLTypes["uuid"],
	Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_arr_rel_insert_input"],
	Produto?: GraphQLTypes["Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Itens_max_fields"]: {
	__typename: "estoque_Itens_max_fields",
	Classificacao?: string,
	Criticidade?: string,
	Enderecamento_Id?: GraphQLTypes["uuid"],
	EstoqueMinimo?: number,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Familia_Id?: GraphQLTypes["uuid"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Modelo_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Itens" */
["estoque_Itens_max_order_by"]: {
		Classificacao?: GraphQLTypes["order_by"],
	Criticidade?: GraphQLTypes["order_by"],
	Enderecamento_Id?: GraphQLTypes["order_by"],
	EstoqueMinimo?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Familia_Id?: GraphQLTypes["order_by"],
	Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Modelo_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["estoque_Itens_min_fields"]: {
	__typename: "estoque_Itens_min_fields",
	Classificacao?: string,
	Criticidade?: string,
	Enderecamento_Id?: GraphQLTypes["uuid"],
	EstoqueMinimo?: number,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Familia_Id?: GraphQLTypes["uuid"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Modelo_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Itens" */
["estoque_Itens_min_order_by"]: {
		Classificacao?: GraphQLTypes["order_by"],
	Criticidade?: GraphQLTypes["order_by"],
	Enderecamento_Id?: GraphQLTypes["order_by"],
	EstoqueMinimo?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Familia_Id?: GraphQLTypes["order_by"],
	Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Modelo_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "estoque.Itens" */
["estoque_Itens_mutation_response"]: {
	__typename: "estoque_Itens_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Itens"]>
};
	/** input type for inserting object relation for remote table "estoque.Itens" */
["estoque_Itens_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Itens_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Itens_on_conflict"]
};
	/** on conflict condition type for table "estoque.Itens" */
["estoque_Itens_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Itens_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Itens_update_column"]>,
	where?: GraphQLTypes["estoque_Itens_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Itens". */
["estoque_Itens_order_by"]: {
		Classificacao?: GraphQLTypes["order_by"],
	Criticidade?: GraphQLTypes["order_by"],
	Enderecamento?: GraphQLTypes["estoque_Enderecamentos_order_by"],
	Enderecamento_Id?: GraphQLTypes["order_by"],
	EstoqueMinimo?: GraphQLTypes["order_by"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Familia?: GraphQLTypes["estoque_Familias_order_by"],
	Familia_Id?: GraphQLTypes["order_by"],
	Grupo?: GraphQLTypes["estoque_Grupos_order_by"],
	Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Modelo?: GraphQLTypes["estoque_Modelos_order_by"],
	Modelo_Id?: GraphQLTypes["order_by"],
	Movimentacoes_aggregate?: GraphQLTypes["movimentacoes_Movimentacoes_aggregate_order_by"],
	Produto?: GraphQLTypes["Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Itens */
["estoque_Itens_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Itens" */
["estoque_Itens_select_column"]: estoque_Itens_select_column;
	/** input type for updating data in table "estoque.Itens" */
["estoque_Itens_set_input"]: {
		Classificacao?: string,
	Criticidade?: string,
	Enderecamento_Id?: GraphQLTypes["uuid"],
	EstoqueMinimo?: number,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Familia_Id?: GraphQLTypes["uuid"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Modelo_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["estoque_Itens_stddev_fields"]: {
	__typename: "estoque_Itens_stddev_fields",
	EstoqueMinimo?: number
};
	/** order by stddev() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["estoque_Itens_stddev_pop_fields"]: {
	__typename: "estoque_Itens_stddev_pop_fields",
	EstoqueMinimo?: number
};
	/** order by stddev_pop() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_pop_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["estoque_Itens_stddev_samp_fields"]: {
	__typename: "estoque_Itens_stddev_samp_fields",
	EstoqueMinimo?: number
};
	/** order by stddev_samp() on columns of table "estoque.Itens" */
["estoque_Itens_stddev_samp_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["estoque_Itens_sum_fields"]: {
	__typename: "estoque_Itens_sum_fields",
	EstoqueMinimo?: number
};
	/** order by sum() on columns of table "estoque.Itens" */
["estoque_Itens_sum_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** update columns of table "estoque.Itens" */
["estoque_Itens_update_column"]: estoque_Itens_update_column;
	/** aggregate var_pop on columns */
["estoque_Itens_var_pop_fields"]: {
	__typename: "estoque_Itens_var_pop_fields",
	EstoqueMinimo?: number
};
	/** order by var_pop() on columns of table "estoque.Itens" */
["estoque_Itens_var_pop_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["estoque_Itens_var_samp_fields"]: {
	__typename: "estoque_Itens_var_samp_fields",
	EstoqueMinimo?: number
};
	/** order by var_samp() on columns of table "estoque.Itens" */
["estoque_Itens_var_samp_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["estoque_Itens_variance_fields"]: {
	__typename: "estoque_Itens_variance_fields",
	EstoqueMinimo?: number
};
	/** order by variance() on columns of table "estoque.Itens" */
["estoque_Itens_variance_order_by"]: {
		EstoqueMinimo?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "estoque.Logs" */
["estoque_Logs"]: {
	__typename: "estoque_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Logs" */
["estoque_Logs_aggregate"]: {
	__typename: "estoque_Logs_aggregate",
	aggregate?: GraphQLTypes["estoque_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Logs"]>
};
	/** aggregate fields of "estoque.Logs" */
["estoque_Logs_aggregate_fields"]: {
	__typename: "estoque_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Logs_max_fields"],
	min?: GraphQLTypes["estoque_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "estoque.Logs". All fields are combined with a logical 'AND'. */
["estoque_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Logs_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Logs" */
["estoque_Logs_constraint"]: estoque_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["estoque_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["estoque_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["estoque_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "estoque.Logs" */
["estoque_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Logs_max_fields"]: {
	__typename: "estoque_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_Logs_min_fields"]: {
	__typename: "estoque_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.Logs" */
["estoque_Logs_mutation_response"]: {
	__typename: "estoque_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Logs"]>
};
	/** on conflict condition type for table "estoque.Logs" */
["estoque_Logs_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Logs_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Logs_update_column"]>,
	where?: GraphQLTypes["estoque_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Logs". */
["estoque_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Logs */
["estoque_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["estoque_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "estoque.Logs" */
["estoque_Logs_select_column"]: estoque_Logs_select_column;
	/** input type for updating data in table "estoque.Logs" */
["estoque_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Logs" */
["estoque_Logs_update_column"]: estoque_Logs_update_column;
	/** columns and relationships of "estoque.Modelos" */
["estoque_Modelos"]: {
	__typename: "estoque_Modelos",
	Descricao: string,
	/** An object relationship */
	Fabricante: GraphQLTypes["estoque_Fabricantes"],
	Fabricante_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	Nome: string,
	/** An object relationship */
	Produto: GraphQLTypes["Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.Modelos" */
["estoque_Modelos_aggregate"]: {
	__typename: "estoque_Modelos_aggregate",
	aggregate?: GraphQLTypes["estoque_Modelos_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_Modelos"]>
};
	/** aggregate fields of "estoque.Modelos" */
["estoque_Modelos_aggregate_fields"]: {
	__typename: "estoque_Modelos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["estoque_Modelos_max_fields"],
	min?: GraphQLTypes["estoque_Modelos_min_fields"]
};
	/** order by aggregate values of table "estoque.Modelos" */
["estoque_Modelos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["estoque_Modelos_max_order_by"],
	min?: GraphQLTypes["estoque_Modelos_min_order_by"]
};
	/** input type for inserting array relation for remote table "estoque.Modelos" */
["estoque_Modelos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["estoque_Modelos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Modelos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "estoque.Modelos". All fields are combined with a logical 'AND'. */
["estoque_Modelos_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	Fabricante_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["estoque_Itens_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Produto?: GraphQLTypes["Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_Modelos_bool_exp"]>,
	_not?: GraphQLTypes["estoque_Modelos_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_Modelos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.Modelos" */
["estoque_Modelos_constraint"]: estoque_Modelos_constraint;
	/** input type for inserting data into table "estoque.Modelos" */
["estoque_Modelos_insert_input"]: {
		Descricao?: string,
	Fabricante?: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["estoque_Itens_arr_rel_insert_input"],
	Nome?: string,
	Produto?: GraphQLTypes["Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_Modelos_max_fields"]: {
	__typename: "estoque_Modelos_max_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "estoque.Modelos" */
["estoque_Modelos_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["estoque_Modelos_min_fields"]: {
	__typename: "estoque_Modelos_min_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "estoque.Modelos" */
["estoque_Modelos_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "estoque.Modelos" */
["estoque_Modelos_mutation_response"]: {
	__typename: "estoque_Modelos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_Modelos"]>
};
	/** input type for inserting object relation for remote table "estoque.Modelos" */
["estoque_Modelos_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_Modelos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_Modelos_on_conflict"]
};
	/** on conflict condition type for table "estoque.Modelos" */
["estoque_Modelos_on_conflict"]: {
		constraint: GraphQLTypes["estoque_Modelos_constraint"],
	update_columns: Array<GraphQLTypes["estoque_Modelos_update_column"]>,
	where?: GraphQLTypes["estoque_Modelos_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.Modelos". */
["estoque_Modelos_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["estoque_Itens_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_Modelos */
["estoque_Modelos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.Modelos" */
["estoque_Modelos_select_column"]: estoque_Modelos_select_column;
	/** input type for updating data in table "estoque.Modelos" */
["estoque_Modelos_set_input"]: {
		Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Produto_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "estoque.Modelos" */
["estoque_Modelos_update_column"]: estoque_Modelos_update_column;
	/** columns and relationships of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos"]: {
	__typename: "estoque_TiposDeEnderecamentos",
	CodigoReferencia: number,
	Descricao: string,
	/** An array relationship */
	Enderecamentos: Array<GraphQLTypes["estoque_Enderecamentos"]>,
	/** An aggregate relationship */
	Enderecamentos_aggregate: GraphQLTypes["estoque_Enderecamentos_aggregate"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Slug?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate"]: {
	__typename: "estoque_TiposDeEnderecamentos_aggregate",
	aggregate?: GraphQLTypes["estoque_TiposDeEnderecamentos_aggregate_fields"],
	nodes: Array<GraphQLTypes["estoque_TiposDeEnderecamentos"]>
};
	/** aggregate fields of "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_aggregate_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_aggregate_fields",
	avg?: GraphQLTypes["estoque_TiposDeEnderecamentos_avg_fields"],
	count: number,
	max?: GraphQLTypes["estoque_TiposDeEnderecamentos_max_fields"],
	min?: GraphQLTypes["estoque_TiposDeEnderecamentos_min_fields"],
	stddev?: GraphQLTypes["estoque_TiposDeEnderecamentos_stddev_fields"],
	stddev_pop?: GraphQLTypes["estoque_TiposDeEnderecamentos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["estoque_TiposDeEnderecamentos_stddev_samp_fields"],
	sum?: GraphQLTypes["estoque_TiposDeEnderecamentos_sum_fields"],
	var_pop?: GraphQLTypes["estoque_TiposDeEnderecamentos_var_pop_fields"],
	var_samp?: GraphQLTypes["estoque_TiposDeEnderecamentos_var_samp_fields"],
	variance?: GraphQLTypes["estoque_TiposDeEnderecamentos_variance_fields"]
};
	/** aggregate avg on columns */
["estoque_TiposDeEnderecamentos_avg_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_avg_fields",
	CodigoReferencia?: number
};
	/** Boolean expression to filter rows from the table "estoque.TiposDeEnderecamentos". All fields are combined with a logical 'AND'. */
["estoque_TiposDeEnderecamentos_bool_exp"]: {
		CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Descricao?: GraphQLTypes["String_comparison_exp"],
	Enderecamentos?: GraphQLTypes["estoque_Enderecamentos_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Slug?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"]>,
	_not?: GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"],
	_or?: Array<GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_constraint"]: estoque_TiposDeEnderecamentos_constraint;
	/** input type for incrementing numeric columns in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_insert_input"]: {
		CodigoReferencia?: number,
	Descricao?: string,
	Enderecamentos?: GraphQLTypes["estoque_Enderecamentos_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["estoque_TiposDeEnderecamentos_max_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_max_fields",
	CodigoReferencia?: number,
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["estoque_TiposDeEnderecamentos_min_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_min_fields",
	CodigoReferencia?: number,
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_mutation_response"]: {
	__typename: "estoque_TiposDeEnderecamentos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["estoque_TiposDeEnderecamentos"]>
};
	/** input type for inserting object relation for remote table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_obj_rel_insert_input"]: {
		data: GraphQLTypes["estoque_TiposDeEnderecamentos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["estoque_TiposDeEnderecamentos_on_conflict"]
};
	/** on conflict condition type for table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_on_conflict"]: {
		constraint: GraphQLTypes["estoque_TiposDeEnderecamentos_constraint"],
	update_columns: Array<GraphQLTypes["estoque_TiposDeEnderecamentos_update_column"]>,
	where?: GraphQLTypes["estoque_TiposDeEnderecamentos_bool_exp"]
};
	/** Ordering options when selecting data from "estoque.TiposDeEnderecamentos". */
["estoque_TiposDeEnderecamentos_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Descricao?: GraphQLTypes["order_by"],
	Enderecamentos_aggregate?: GraphQLTypes["estoque_Enderecamentos_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Slug?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: estoque_TiposDeEnderecamentos */
["estoque_TiposDeEnderecamentos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_select_column"]: estoque_TiposDeEnderecamentos_select_column;
	/** input type for updating data in table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_set_input"]: {
		CodigoReferencia?: number,
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Slug?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["estoque_TiposDeEnderecamentos_stddev_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_stddev_fields",
	CodigoReferencia?: number
};
	/** aggregate stddev_pop on columns */
["estoque_TiposDeEnderecamentos_stddev_pop_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** aggregate stddev_samp on columns */
["estoque_TiposDeEnderecamentos_stddev_samp_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** aggregate sum on columns */
["estoque_TiposDeEnderecamentos_sum_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_sum_fields",
	CodigoReferencia?: number
};
	/** update columns of table "estoque.TiposDeEnderecamentos" */
["estoque_TiposDeEnderecamentos_update_column"]: estoque_TiposDeEnderecamentos_update_column;
	/** aggregate var_pop on columns */
["estoque_TiposDeEnderecamentos_var_pop_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_var_pop_fields",
	CodigoReferencia?: number
};
	/** aggregate var_samp on columns */
["estoque_TiposDeEnderecamentos_var_samp_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_var_samp_fields",
	CodigoReferencia?: number
};
	/** aggregate variance on columns */
["estoque_TiposDeEnderecamentos_variance_fields"]: {
	__typename: "estoque_TiposDeEnderecamentos_variance_fields",
	CodigoReferencia?: number
};
	["float8"]:any;
	/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
["float8_comparison_exp"]: {
		_eq?: GraphQLTypes["float8"],
	_gt?: GraphQLTypes["float8"],
	_gte?: GraphQLTypes["float8"],
	_in?: Array<GraphQLTypes["float8"]>,
	_is_null?: boolean,
	_lt?: GraphQLTypes["float8"],
	_lte?: GraphQLTypes["float8"],
	_neq?: GraphQLTypes["float8"],
	_nin?: Array<GraphQLTypes["float8"]>
};
	/** columns and relationships of "identidades.Clientes" */
["identidades_Clientes"]: {
	__typename: "identidades_Clientes",
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Leads: Array<GraphQLTypes["clientes_Leads"]>,
	/** An aggregate relationship */
	Leads_aggregate: GraphQLTypes["clientes_Leads_aggregate"],
	/** An object relationship */
	Pessoa: GraphQLTypes["identidades_Pessoas"],
	Pessoa_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** An aggregate relationship */
	Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	/** An array relationship */
	Usuarios: Array<GraphQLTypes["autenticacao_Usuarios"]>,
	/** An aggregate relationship */
	Usuarios_aggregate: GraphQLTypes["autenticacao_Usuarios_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos"]: {
	__typename: "identidades_Clientes_Documentos",
	DataAprovado?: GraphQLTypes["timestamptz"],
	DataRecusado?: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	MotivoRecusa?: string,
	Nome: string,
	/** An object relationship */
	Pessoa: GraphQLTypes["identidades_Pessoas"],
	Pessoa_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Situacao?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes"],
	Situacao_Id?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes",
	/** An array relationship */
	Clientes_Documentos: Array<GraphQLTypes["identidades_Clientes_Documentos"]>,
	/** An aggregate relationship */
	Clientes_Documentos_aggregate: GraphQLTypes["identidades_Clientes_Documentos_aggregate"],
	Comentario: string,
	Valor: string
};
	/** aggregated selection of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes_aggregate",
	aggregate?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes"]>
};
	/** aggregate fields of "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_aggregate_fields"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_max_fields"],
	min?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos_Situacoes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_bool_exp"]: {
		Clientes_Documentos?: GraphQLTypes["identidades_Clientes_Documentos_bool_exp"],
	Comentario?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_constraint"]: identidades_Clientes_Documentos_Situacoes_constraint;
	["identidades_Clientes_Documentos_Situacoes_enum"]: identidades_Clientes_Documentos_Situacoes_enum;
	/** Boolean expression to compare columns of type "identidades_Clientes_Documentos_Situacoes_enum". All fields are combined with logical 'AND'. */
["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	_in?: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	_nin?: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"]>
};
	/** input type for inserting data into table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_insert_input"]: {
		Clientes_Documentos?: GraphQLTypes["identidades_Clientes_Documentos_arr_rel_insert_input"],
	Comentario?: string,
	Valor?: string
};
	/** aggregate max on columns */
["identidades_Clientes_Documentos_Situacoes_max_fields"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["identidades_Clientes_Documentos_Situacoes_min_fields"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_mutation_response"]: {
	__typename: "identidades_Clientes_Documentos_Situacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes"]>
};
	/** input type for inserting object relation for remote table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_on_conflict"]
};
	/** on conflict condition type for table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes_update_column"]>,
	where?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Clientes_Documentos_Situacoes". */
["identidades_Clientes_Documentos_Situacoes_order_by"]: {
		Clientes_Documentos_aggregate?: GraphQLTypes["identidades_Clientes_Documentos_aggregate_order_by"],
	Comentario?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Clientes_Documentos_Situacoes */
["identidades_Clientes_Documentos_Situacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_select_column"]: identidades_Clientes_Documentos_Situacoes_select_column;
	/** input type for updating data in table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "identidades.Clientes_Documentos_Situacoes" */
["identidades_Clientes_Documentos_Situacoes_update_column"]: identidades_Clientes_Documentos_Situacoes_update_column;
	/** aggregated selection of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate"]: {
	__typename: "identidades_Clientes_Documentos_aggregate",
	aggregate?: GraphQLTypes["identidades_Clientes_Documentos_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Clientes_Documentos"]>
};
	/** aggregate fields of "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_fields"]: {
	__typename: "identidades_Clientes_Documentos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Clientes_Documentos_max_fields"],
	min?: GraphQLTypes["identidades_Clientes_Documentos_min_fields"]
};
	/** order by aggregate values of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["identidades_Clientes_Documentos_max_order_by"],
	min?: GraphQLTypes["identidades_Clientes_Documentos_min_order_by"]
};
	/** input type for inserting array relation for remote table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["identidades_Clientes_Documentos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Clientes_Documentos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "identidades.Clientes_Documentos". All fields are combined with a logical 'AND'. */
["identidades_Clientes_Documentos_bool_exp"]: {
		DataAprovado?: GraphQLTypes["timestamptz_comparison_exp"],
	DataRecusado?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	MotivoRecusa?: GraphQLTypes["String_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	Pessoa_Id?: GraphQLTypes["uuid_comparison_exp"],
	Situacao?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Clientes_Documentos_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Clientes_Documentos_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Clientes_Documentos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_constraint"]: identidades_Clientes_Documentos_constraint;
	/** input type for inserting data into table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_insert_input"]: {
		DataAprovado?: GraphQLTypes["timestamptz"],
	DataRecusado?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusa?: string,
	Nome?: string,
	Pessoa?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	Situacao?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Clientes_Documentos_max_fields"]: {
	__typename: "identidades_Clientes_Documentos_max_fields",
	DataAprovado?: GraphQLTypes["timestamptz"],
	DataRecusado?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusa?: string,
	Nome?: string,
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_max_order_by"]: {
		DataAprovado?: GraphQLTypes["order_by"],
	DataRecusado?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusa?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["identidades_Clientes_Documentos_min_fields"]: {
	__typename: "identidades_Clientes_Documentos_min_fields",
	DataAprovado?: GraphQLTypes["timestamptz"],
	DataRecusado?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusa?: string,
	Nome?: string,
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_min_order_by"]: {
		DataAprovado?: GraphQLTypes["order_by"],
	DataRecusado?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusa?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_mutation_response"]: {
	__typename: "identidades_Clientes_Documentos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Clientes_Documentos"]>
};
	/** on conflict condition type for table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Clientes_Documentos_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Clientes_Documentos_update_column"]>,
	where?: GraphQLTypes["identidades_Clientes_Documentos_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Clientes_Documentos". */
["identidades_Clientes_Documentos_order_by"]: {
		DataAprovado?: GraphQLTypes["order_by"],
	DataRecusado?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusa?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	Situacao?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Clientes_Documentos */
["identidades_Clientes_Documentos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_select_column"]: identidades_Clientes_Documentos_select_column;
	/** input type for updating data in table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_set_input"]: {
		DataAprovado?: GraphQLTypes["timestamptz"],
	DataRecusado?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusa?: string,
	Nome?: string,
	Pessoa_Id?: GraphQLTypes["uuid"],
	Situacao_Id?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Clientes_Documentos" */
["identidades_Clientes_Documentos_update_column"]: identidades_Clientes_Documentos_update_column;
	/** aggregated selection of "identidades.Clientes" */
["identidades_Clientes_aggregate"]: {
	__typename: "identidades_Clientes_aggregate",
	aggregate?: GraphQLTypes["identidades_Clientes_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Clientes"]>
};
	/** aggregate fields of "identidades.Clientes" */
["identidades_Clientes_aggregate_fields"]: {
	__typename: "identidades_Clientes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Clientes_max_fields"],
	min?: GraphQLTypes["identidades_Clientes_min_fields"]
};
	/** Boolean expression to filter rows from the table "identidades.Clientes". All fields are combined with a logical 'AND'. */
["identidades_Clientes_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Leads?: GraphQLTypes["clientes_Leads_bool_exp"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	Pessoa_Id?: GraphQLTypes["uuid_comparison_exp"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_bool_exp"],
	Usuarios?: GraphQLTypes["autenticacao_Usuarios_bool_exp"],
	_and?: Array<GraphQLTypes["identidades_Clientes_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Clientes_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Clientes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Clientes" */
["identidades_Clientes_constraint"]: identidades_Clientes_constraint;
	/** input type for inserting data into table "identidades.Clientes" */
["identidades_Clientes_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Leads?: GraphQLTypes["clientes_Leads_arr_rel_insert_input"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	Tickets?: GraphQLTypes["atendimentos_Tickets_arr_rel_insert_input"],
	Usuarios?: GraphQLTypes["autenticacao_Usuarios_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Clientes_max_fields"]: {
	__typename: "identidades_Clientes_max_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Clientes_min_fields"]: {
	__typename: "identidades_Clientes_min_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Clientes" */
["identidades_Clientes_mutation_response"]: {
	__typename: "identidades_Clientes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Clientes"]>
};
	/** input type for inserting object relation for remote table "identidades.Clientes" */
["identidades_Clientes_obj_rel_insert_input"]: {
		data: GraphQLTypes["identidades_Clientes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Clientes_on_conflict"]
};
	/** on conflict condition type for table "identidades.Clientes" */
["identidades_Clientes_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Clientes_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Clientes_update_column"]>,
	where?: GraphQLTypes["identidades_Clientes_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Clientes". */
["identidades_Clientes_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Leads_aggregate?: GraphQLTypes["clientes_Leads_aggregate_order_by"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	Tickets_aggregate?: GraphQLTypes["atendimentos_Tickets_aggregate_order_by"],
	Usuarios_aggregate?: GraphQLTypes["autenticacao_Usuarios_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Clientes */
["identidades_Clientes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "identidades.Clientes" */
["identidades_Clientes_select_column"]: identidades_Clientes_select_column;
	/** input type for updating data in table "identidades.Clientes" */
["identidades_Clientes_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Clientes" */
["identidades_Clientes_update_column"]: identidades_Clientes_update_column;
	/** columns and relationships of "identidades.Colaboradores" */
["identidades_Colaboradores"]: {
	__typename: "identidades_Colaboradores",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pessoa: GraphQLTypes["identidades_Pessoas"],
	Pessoa_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate"]: {
	__typename: "identidades_Colaboradores_aggregate",
	aggregate?: GraphQLTypes["identidades_Colaboradores_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Colaboradores"]>
};
	/** aggregate fields of "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_fields"]: {
	__typename: "identidades_Colaboradores_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Colaboradores_max_fields"],
	min?: GraphQLTypes["identidades_Colaboradores_min_fields"]
};
	/** order by aggregate values of table "identidades.Colaboradores" */
["identidades_Colaboradores_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["identidades_Colaboradores_max_order_by"],
	min?: GraphQLTypes["identidades_Colaboradores_min_order_by"]
};
	/** input type for inserting array relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["identidades_Colaboradores_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Colaboradores_on_conflict"]
};
	/** Boolean expression to filter rows from the table "identidades.Colaboradores". All fields are combined with a logical 'AND'. */
["identidades_Colaboradores_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	Pessoa_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Colaboradores_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Colaboradores_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Colaboradores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Colaboradores" */
["identidades_Colaboradores_constraint"]: identidades_Colaboradores_constraint;
	/** input type for inserting data into table "identidades.Colaboradores" */
["identidades_Colaboradores_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Colaboradores_max_fields"]: {
	__typename: "identidades_Colaboradores_max_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["identidades_Colaboradores_min_fields"]: {
	__typename: "identidades_Colaboradores_min_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "identidades.Colaboradores" */
["identidades_Colaboradores_mutation_response"]: {
	__typename: "identidades_Colaboradores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Colaboradores"]>
};
	/** input type for inserting object relation for remote table "identidades.Colaboradores" */
["identidades_Colaboradores_obj_rel_insert_input"]: {
		data: GraphQLTypes["identidades_Colaboradores_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Colaboradores_on_conflict"]
};
	/** on conflict condition type for table "identidades.Colaboradores" */
["identidades_Colaboradores_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Colaboradores_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Colaboradores_update_column"]>,
	where?: GraphQLTypes["identidades_Colaboradores_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Colaboradores". */
["identidades_Colaboradores_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Colaboradores */
["identidades_Colaboradores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_select_column"]: identidades_Colaboradores_select_column;
	/** input type for updating data in table "identidades.Colaboradores" */
["identidades_Colaboradores_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Colaboradores" */
["identidades_Colaboradores_update_column"]: identidades_Colaboradores_update_column;
	/** columns and relationships of "identidades.Fornecedores" */
["identidades_Fornecedores"]: {
	__typename: "identidades_Fornecedores",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pessoa: GraphQLTypes["identidades_Pessoas"],
	Pessoa_Id: GraphQLTypes["uuid"],
	PrecoDoKm?: GraphQLTypes["float8"],
	PrestadorDeServico: boolean,
	/** An array relationship */
	Servicos: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos"]>,
	/** An aggregate relationship */
	Servicos_aggregate: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** An array relationship */
	Vendedores: Array<GraphQLTypes["identidades_Vendedores"]>,
	/** An aggregate relationship */
	Vendedores_aggregate: GraphQLTypes["identidades_Vendedores_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate"]: {
	__typename: "identidades_Fornecedores_aggregate",
	aggregate?: GraphQLTypes["identidades_Fornecedores_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Fornecedores"]>
};
	/** aggregate fields of "identidades.Fornecedores" */
["identidades_Fornecedores_aggregate_fields"]: {
	__typename: "identidades_Fornecedores_aggregate_fields",
	avg?: GraphQLTypes["identidades_Fornecedores_avg_fields"],
	count: number,
	max?: GraphQLTypes["identidades_Fornecedores_max_fields"],
	min?: GraphQLTypes["identidades_Fornecedores_min_fields"],
	stddev?: GraphQLTypes["identidades_Fornecedores_stddev_fields"],
	stddev_pop?: GraphQLTypes["identidades_Fornecedores_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["identidades_Fornecedores_stddev_samp_fields"],
	sum?: GraphQLTypes["identidades_Fornecedores_sum_fields"],
	var_pop?: GraphQLTypes["identidades_Fornecedores_var_pop_fields"],
	var_samp?: GraphQLTypes["identidades_Fornecedores_var_samp_fields"],
	variance?: GraphQLTypes["identidades_Fornecedores_variance_fields"]
};
	/** aggregate avg on columns */
["identidades_Fornecedores_avg_fields"]: {
	__typename: "identidades_Fornecedores_avg_fields",
	PrecoDoKm?: number
};
	/** Boolean expression to filter rows from the table "identidades.Fornecedores". All fields are combined with a logical 'AND'. */
["identidades_Fornecedores_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	Pessoa_Id?: GraphQLTypes["uuid_comparison_exp"],
	PrecoDoKm?: GraphQLTypes["float8_comparison_exp"],
	PrestadorDeServico?: GraphQLTypes["Boolean_comparison_exp"],
	Servicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_bool_exp"],
	Vendedores?: GraphQLTypes["identidades_Vendedores_bool_exp"],
	_and?: Array<GraphQLTypes["identidades_Fornecedores_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Fornecedores_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Fornecedores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Fornecedores" */
["identidades_Fornecedores_constraint"]: identidades_Fornecedores_constraint;
	/** input type for incrementing numeric columns in table "identidades.Fornecedores" */
["identidades_Fornecedores_inc_input"]: {
		PrecoDoKm?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "identidades.Fornecedores" */
["identidades_Fornecedores_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	PrecoDoKm?: GraphQLTypes["float8"],
	PrestadorDeServico?: boolean,
	Servicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_arr_rel_insert_input"],
	Vendedores?: GraphQLTypes["identidades_Vendedores_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Fornecedores_max_fields"]: {
	__typename: "identidades_Fornecedores_max_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	PrecoDoKm?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Fornecedores_min_fields"]: {
	__typename: "identidades_Fornecedores_min_fields",
	Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	PrecoDoKm?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Fornecedores" */
["identidades_Fornecedores_mutation_response"]: {
	__typename: "identidades_Fornecedores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Fornecedores"]>
};
	/** input type for inserting object relation for remote table "identidades.Fornecedores" */
["identidades_Fornecedores_obj_rel_insert_input"]: {
		data: GraphQLTypes["identidades_Fornecedores_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Fornecedores_on_conflict"]
};
	/** on conflict condition type for table "identidades.Fornecedores" */
["identidades_Fornecedores_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Fornecedores_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Fornecedores_update_column"]>,
	where?: GraphQLTypes["identidades_Fornecedores_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Fornecedores". */
["identidades_Fornecedores_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	PrecoDoKm?: GraphQLTypes["order_by"],
	PrestadorDeServico?: GraphQLTypes["order_by"],
	Servicos_aggregate?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate_order_by"],
	Vendedores_aggregate?: GraphQLTypes["identidades_Vendedores_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Fornecedores */
["identidades_Fornecedores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_select_column"]: identidades_Fornecedores_select_column;
	/** input type for updating data in table "identidades.Fornecedores" */
["identidades_Fornecedores_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	PrecoDoKm?: GraphQLTypes["float8"],
	PrestadorDeServico?: boolean,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["identidades_Fornecedores_stddev_fields"]: {
	__typename: "identidades_Fornecedores_stddev_fields",
	PrecoDoKm?: number
};
	/** aggregate stddev_pop on columns */
["identidades_Fornecedores_stddev_pop_fields"]: {
	__typename: "identidades_Fornecedores_stddev_pop_fields",
	PrecoDoKm?: number
};
	/** aggregate stddev_samp on columns */
["identidades_Fornecedores_stddev_samp_fields"]: {
	__typename: "identidades_Fornecedores_stddev_samp_fields",
	PrecoDoKm?: number
};
	/** aggregate sum on columns */
["identidades_Fornecedores_sum_fields"]: {
	__typename: "identidades_Fornecedores_sum_fields",
	PrecoDoKm?: GraphQLTypes["float8"]
};
	/** update columns of table "identidades.Fornecedores" */
["identidades_Fornecedores_update_column"]: identidades_Fornecedores_update_column;
	/** aggregate var_pop on columns */
["identidades_Fornecedores_var_pop_fields"]: {
	__typename: "identidades_Fornecedores_var_pop_fields",
	PrecoDoKm?: number
};
	/** aggregate var_samp on columns */
["identidades_Fornecedores_var_samp_fields"]: {
	__typename: "identidades_Fornecedores_var_samp_fields",
	PrecoDoKm?: number
};
	/** aggregate variance on columns */
["identidades_Fornecedores_variance_fields"]: {
	__typename: "identidades_Fornecedores_variance_fields",
	PrecoDoKm?: number
};
	/** columns and relationships of "identidades.Logs" */
["identidades_Logs"]: {
	__typename: "identidades_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Logs" */
["identidades_Logs_aggregate"]: {
	__typename: "identidades_Logs_aggregate",
	aggregate?: GraphQLTypes["identidades_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Logs"]>
};
	/** aggregate fields of "identidades.Logs" */
["identidades_Logs_aggregate_fields"]: {
	__typename: "identidades_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Logs_max_fields"],
	min?: GraphQLTypes["identidades_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "identidades.Logs". All fields are combined with a logical 'AND'. */
["identidades_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Logs_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Logs" */
["identidades_Logs_constraint"]: identidades_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "identidades.Logs" */
["identidades_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Logs_max_fields"]: {
	__typename: "identidades_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Logs_min_fields"]: {
	__typename: "identidades_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Logs" */
["identidades_Logs_mutation_response"]: {
	__typename: "identidades_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Logs"]>
};
	/** on conflict condition type for table "identidades.Logs" */
["identidades_Logs_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Logs_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Logs_update_column"]>,
	where?: GraphQLTypes["identidades_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Logs". */
["identidades_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Logs */
["identidades_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "identidades.Logs" */
["identidades_Logs_select_column"]: identidades_Logs_select_column;
	/** input type for updating data in table "identidades.Logs" */
["identidades_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Logs" */
["identidades_Logs_update_column"]: identidades_Logs_update_column;
	/** columns and relationships of "identidades.Pessoas" */
["identidades_Pessoas"]: {
	__typename: "identidades_Pessoas",
	/** An object relationship */
	Cliente?: GraphQLTypes["identidades_Clientes"],
	/** An array relationship */
	Colaboradores: Array<GraphQLTypes["identidades_Colaboradores"]>,
	/** An aggregate relationship */
	Colaboradores_aggregate: GraphQLTypes["identidades_Colaboradores_aggregate"],
	DadosDaApi: GraphQLTypes["jsonb"],
	/** An array relationship */
	Documentos: Array<GraphQLTypes["identidades_Clientes_Documentos"]>,
	/** An aggregate relationship */
	Documentos_aggregate: GraphQLTypes["identidades_Clientes_Documentos_aggregate"],
	/** An object relationship */
	Fornecedor?: GraphQLTypes["identidades_Fornecedores"],
	Id: GraphQLTypes["uuid"],
	Identificador: string,
	Nome: string,
	PessoaJuridica: boolean,
	/** An array relationship */
	Representantes: Array<GraphQLTypes["identidades_Representantes"]>,
	/** An aggregate relationship */
	Representantes_aggregate: GraphQLTypes["identidades_Representantes_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Pessoas" */
["identidades_Pessoas_aggregate"]: {
	__typename: "identidades_Pessoas_aggregate",
	aggregate?: GraphQLTypes["identidades_Pessoas_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Pessoas"]>
};
	/** aggregate fields of "identidades.Pessoas" */
["identidades_Pessoas_aggregate_fields"]: {
	__typename: "identidades_Pessoas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Pessoas_max_fields"],
	min?: GraphQLTypes["identidades_Pessoas_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_append_input"]: {
		DadosDaApi?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "identidades.Pessoas". All fields are combined with a logical 'AND'. */
["identidades_Pessoas_bool_exp"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_bool_exp"],
	Colaboradores?: GraphQLTypes["identidades_Colaboradores_bool_exp"],
	DadosDaApi?: GraphQLTypes["jsonb_comparison_exp"],
	Documentos?: GraphQLTypes["identidades_Clientes_Documentos_bool_exp"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Identificador?: GraphQLTypes["String_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	PessoaJuridica?: GraphQLTypes["Boolean_comparison_exp"],
	Representantes?: GraphQLTypes["identidades_Representantes_bool_exp"],
	_and?: Array<GraphQLTypes["identidades_Pessoas_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Pessoas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Pessoas" */
["identidades_Pessoas_constraint"]: identidades_Pessoas_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Pessoas_delete_at_path_input"]: {
		DadosDaApi?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Pessoas_delete_elem_input"]: {
		DadosDaApi?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Pessoas_delete_key_input"]: {
		DadosDaApi?: string
};
	/** input type for inserting data into table "identidades.Pessoas" */
["identidades_Pessoas_insert_input"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_obj_rel_insert_input"],
	Colaboradores?: GraphQLTypes["identidades_Colaboradores_arr_rel_insert_input"],
	DadosDaApi?: GraphQLTypes["jsonb"],
	Documentos?: GraphQLTypes["identidades_Clientes_Documentos_arr_rel_insert_input"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_obj_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Identificador?: string,
	Nome?: string,
	PessoaJuridica?: boolean,
	Representantes?: GraphQLTypes["identidades_Representantes_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Pessoas_max_fields"]: {
	__typename: "identidades_Pessoas_max_fields",
	Id?: GraphQLTypes["uuid"],
	Identificador?: string,
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["identidades_Pessoas_min_fields"]: {
	__typename: "identidades_Pessoas_min_fields",
	Id?: GraphQLTypes["uuid"],
	Identificador?: string,
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "identidades.Pessoas" */
["identidades_Pessoas_mutation_response"]: {
	__typename: "identidades_Pessoas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Pessoas"]>
};
	/** input type for inserting object relation for remote table "identidades.Pessoas" */
["identidades_Pessoas_obj_rel_insert_input"]: {
		data: GraphQLTypes["identidades_Pessoas_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Pessoas_on_conflict"]
};
	/** on conflict condition type for table "identidades.Pessoas" */
["identidades_Pessoas_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Pessoas_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Pessoas_update_column"]>,
	where?: GraphQLTypes["identidades_Pessoas_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Pessoas". */
["identidades_Pessoas_order_by"]: {
		Cliente?: GraphQLTypes["identidades_Clientes_order_by"],
	Colaboradores_aggregate?: GraphQLTypes["identidades_Colaboradores_aggregate_order_by"],
	DadosDaApi?: GraphQLTypes["order_by"],
	Documentos_aggregate?: GraphQLTypes["identidades_Clientes_Documentos_aggregate_order_by"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_order_by"],
	Id?: GraphQLTypes["order_by"],
	Identificador?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	PessoaJuridica?: GraphQLTypes["order_by"],
	Representantes_aggregate?: GraphQLTypes["identidades_Representantes_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Pessoas */
["identidades_Pessoas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Pessoas_prepend_input"]: {
		DadosDaApi?: GraphQLTypes["jsonb"]
};
	/** select columns of table "identidades.Pessoas" */
["identidades_Pessoas_select_column"]: identidades_Pessoas_select_column;
	/** input type for updating data in table "identidades.Pessoas" */
["identidades_Pessoas_set_input"]: {
		DadosDaApi?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Identificador?: string,
	Nome?: string,
	PessoaJuridica?: boolean,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Pessoas" */
["identidades_Pessoas_update_column"]: identidades_Pessoas_update_column;
	/** columns and relationships of "identidades.Representantes" */
["identidades_Representantes"]: {
	__typename: "identidades_Representantes",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pessoa: GraphQLTypes["identidades_Pessoas"],
	/** An object relationship */
	PessoaRepresentada?: GraphQLTypes["identidades_Pessoas"],
	PessoaRepresentada_Id: GraphQLTypes["uuid"],
	Pessoa_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Representantes" */
["identidades_Representantes_aggregate"]: {
	__typename: "identidades_Representantes_aggregate",
	aggregate?: GraphQLTypes["identidades_Representantes_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Representantes"]>
};
	/** aggregate fields of "identidades.Representantes" */
["identidades_Representantes_aggregate_fields"]: {
	__typename: "identidades_Representantes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Representantes_max_fields"],
	min?: GraphQLTypes["identidades_Representantes_min_fields"]
};
	/** order by aggregate values of table "identidades.Representantes" */
["identidades_Representantes_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["identidades_Representantes_max_order_by"],
	min?: GraphQLTypes["identidades_Representantes_min_order_by"]
};
	/** input type for inserting array relation for remote table "identidades.Representantes" */
["identidades_Representantes_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["identidades_Representantes_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Representantes_on_conflict"]
};
	/** Boolean expression to filter rows from the table "identidades.Representantes". All fields are combined with a logical 'AND'. */
["identidades_Representantes_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	PessoaRepresentada?: GraphQLTypes["identidades_Pessoas_bool_exp"],
	PessoaRepresentada_Id?: GraphQLTypes["uuid_comparison_exp"],
	Pessoa_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Representantes_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Representantes_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Representantes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Representantes" */
["identidades_Representantes_constraint"]: identidades_Representantes_constraint;
	/** input type for inserting data into table "identidades.Representantes" */
["identidades_Representantes_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	PessoaRepresentada?: GraphQLTypes["identidades_Pessoas_obj_rel_insert_input"],
	PessoaRepresentada_Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Representantes_max_fields"]: {
	__typename: "identidades_Representantes_max_fields",
	Id?: GraphQLTypes["uuid"],
	PessoaRepresentada_Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Representantes" */
["identidades_Representantes_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	PessoaRepresentada_Id?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["identidades_Representantes_min_fields"]: {
	__typename: "identidades_Representantes_min_fields",
	Id?: GraphQLTypes["uuid"],
	PessoaRepresentada_Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Representantes" */
["identidades_Representantes_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	PessoaRepresentada_Id?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "identidades.Representantes" */
["identidades_Representantes_mutation_response"]: {
	__typename: "identidades_Representantes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Representantes"]>
};
	/** on conflict condition type for table "identidades.Representantes" */
["identidades_Representantes_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Representantes_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Representantes_update_column"]>,
	where?: GraphQLTypes["identidades_Representantes_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Representantes". */
["identidades_Representantes_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Pessoa?: GraphQLTypes["identidades_Pessoas_order_by"],
	PessoaRepresentada?: GraphQLTypes["identidades_Pessoas_order_by"],
	PessoaRepresentada_Id?: GraphQLTypes["order_by"],
	Pessoa_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Representantes */
["identidades_Representantes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "identidades.Representantes" */
["identidades_Representantes_select_column"]: identidades_Representantes_select_column;
	/** input type for updating data in table "identidades.Representantes" */
["identidades_Representantes_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	PessoaRepresentada_Id?: GraphQLTypes["uuid"],
	Pessoa_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Representantes" */
["identidades_Representantes_update_column"]: identidades_Representantes_update_column;
	/** columns and relationships of "identidades.Vendedores" */
["identidades_Vendedores"]: {
	__typename: "identidades_Vendedores",
	Emails?: GraphQLTypes["jsonb"],
	/** An object relationship */
	Fornecedor: GraphQLTypes["identidades_Fornecedores"],
	Fornecedor_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	Nome: string,
	Telefones?: GraphQLTypes["jsonb"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "identidades.Vendedores" */
["identidades_Vendedores_aggregate"]: {
	__typename: "identidades_Vendedores_aggregate",
	aggregate?: GraphQLTypes["identidades_Vendedores_aggregate_fields"],
	nodes: Array<GraphQLTypes["identidades_Vendedores"]>
};
	/** aggregate fields of "identidades.Vendedores" */
["identidades_Vendedores_aggregate_fields"]: {
	__typename: "identidades_Vendedores_aggregate_fields",
	count: number,
	max?: GraphQLTypes["identidades_Vendedores_max_fields"],
	min?: GraphQLTypes["identidades_Vendedores_min_fields"]
};
	/** order by aggregate values of table "identidades.Vendedores" */
["identidades_Vendedores_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["identidades_Vendedores_max_order_by"],
	min?: GraphQLTypes["identidades_Vendedores_min_order_by"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_append_input"]: {
		Emails?: GraphQLTypes["jsonb"],
	Telefones?: GraphQLTypes["jsonb"]
};
	/** input type for inserting array relation for remote table "identidades.Vendedores" */
["identidades_Vendedores_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["identidades_Vendedores_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["identidades_Vendedores_on_conflict"]
};
	/** Boolean expression to filter rows from the table "identidades.Vendedores". All fields are combined with a logical 'AND'. */
["identidades_Vendedores_bool_exp"]: {
		Emails?: GraphQLTypes["jsonb_comparison_exp"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_bool_exp"],
	Fornecedor_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Telefones?: GraphQLTypes["jsonb_comparison_exp"],
	_and?: Array<GraphQLTypes["identidades_Vendedores_bool_exp"]>,
	_not?: GraphQLTypes["identidades_Vendedores_bool_exp"],
	_or?: Array<GraphQLTypes["identidades_Vendedores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "identidades.Vendedores" */
["identidades_Vendedores_constraint"]: identidades_Vendedores_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["identidades_Vendedores_delete_at_path_input"]: {
		Emails?: Array<string>,
	Telefones?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["identidades_Vendedores_delete_elem_input"]: {
		Emails?: number,
	Telefones?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["identidades_Vendedores_delete_key_input"]: {
		Emails?: string,
	Telefones?: string
};
	/** input type for inserting data into table "identidades.Vendedores" */
["identidades_Vendedores_insert_input"]: {
		Emails?: GraphQLTypes["jsonb"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_obj_rel_insert_input"],
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Telefones?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["identidades_Vendedores_max_fields"]: {
	__typename: "identidades_Vendedores_max_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_max_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["identidades_Vendedores_min_fields"]: {
	__typename: "identidades_Vendedores_min_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "identidades.Vendedores" */
["identidades_Vendedores_min_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "identidades.Vendedores" */
["identidades_Vendedores_mutation_response"]: {
	__typename: "identidades_Vendedores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["identidades_Vendedores"]>
};
	/** on conflict condition type for table "identidades.Vendedores" */
["identidades_Vendedores_on_conflict"]: {
		constraint: GraphQLTypes["identidades_Vendedores_constraint"],
	update_columns: Array<GraphQLTypes["identidades_Vendedores_update_column"]>,
	where?: GraphQLTypes["identidades_Vendedores_bool_exp"]
};
	/** Ordering options when selecting data from "identidades.Vendedores". */
["identidades_Vendedores_order_by"]: {
		Emails?: GraphQLTypes["order_by"],
	Fornecedor?: GraphQLTypes["identidades_Fornecedores_order_by"],
	Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Telefones?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: identidades_Vendedores */
["identidades_Vendedores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["identidades_Vendedores_prepend_input"]: {
		Emails?: GraphQLTypes["jsonb"],
	Telefones?: GraphQLTypes["jsonb"]
};
	/** select columns of table "identidades.Vendedores" */
["identidades_Vendedores_select_column"]: identidades_Vendedores_select_column;
	/** input type for updating data in table "identidades.Vendedores" */
["identidades_Vendedores_set_input"]: {
		Emails?: GraphQLTypes["jsonb"],
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Telefones?: GraphQLTypes["jsonb"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "identidades.Vendedores" */
["identidades_Vendedores_update_column"]: identidades_Vendedores_update_column;
	["jsonb"]:any;
	/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
["jsonb_comparison_exp"]: {
		/** is the column contained in the given json value */
	_contained_in?: GraphQLTypes["jsonb"],
	/** does the column contain the given json value at the top level */
	_contains?: GraphQLTypes["jsonb"],
	_eq?: GraphQLTypes["jsonb"],
	_gt?: GraphQLTypes["jsonb"],
	_gte?: GraphQLTypes["jsonb"],
	/** does the string exist as a top-level key in the column */
	_has_key?: string,
	/** do all of these strings exist as top-level keys in the column */
	_has_keys_all?: Array<string>,
	/** do any of these strings exist as top-level keys in the column */
	_has_keys_any?: Array<string>,
	_in?: Array<GraphQLTypes["jsonb"]>,
	_is_null?: boolean,
	_lt?: GraphQLTypes["jsonb"],
	_lte?: GraphQLTypes["jsonb"],
	_neq?: GraphQLTypes["jsonb"],
	_nin?: Array<GraphQLTypes["jsonb"]>
};
	/** columns and relationships of "movimentacoes.Motivos" */
["movimentacoes_Motivos"]: {
	__typename: "movimentacoes_Motivos",
	Comentario: string,
	/** An array relationship */
	Movimentacoes: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>,
	/** An aggregate relationship */
	Movimentacoes_aggregate: GraphQLTypes["movimentacoes_Movimentacoes_aggregate"],
	Valor: string
};
	/** aggregated selection of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate"]: {
	__typename: "movimentacoes_Motivos_aggregate",
	aggregate?: GraphQLTypes["movimentacoes_Motivos_aggregate_fields"],
	nodes: Array<GraphQLTypes["movimentacoes_Motivos"]>
};
	/** aggregate fields of "movimentacoes.Motivos" */
["movimentacoes_Motivos_aggregate_fields"]: {
	__typename: "movimentacoes_Motivos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["movimentacoes_Motivos_max_fields"],
	min?: GraphQLTypes["movimentacoes_Motivos_min_fields"]
};
	/** Boolean expression to filter rows from the table "movimentacoes.Motivos". All fields are combined with a logical 'AND'. */
["movimentacoes_Motivos_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["movimentacoes_Motivos_bool_exp"]>,
	_not?: GraphQLTypes["movimentacoes_Motivos_bool_exp"],
	_or?: Array<GraphQLTypes["movimentacoes_Motivos_bool_exp"]>
};
	/** unique or primary key constraints on table "movimentacoes.Motivos" */
["movimentacoes_Motivos_constraint"]: movimentacoes_Motivos_constraint;
	["movimentacoes_Motivos_enum"]: movimentacoes_Motivos_enum;
	/** Boolean expression to compare columns of type "movimentacoes_Motivos_enum". All fields are combined with logical 'AND'. */
["movimentacoes_Motivos_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["movimentacoes_Motivos_enum"],
	_in?: Array<GraphQLTypes["movimentacoes_Motivos_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["movimentacoes_Motivos_enum"],
	_nin?: Array<GraphQLTypes["movimentacoes_Motivos_enum"]>
};
	/** input type for inserting data into table "movimentacoes.Motivos" */
["movimentacoes_Motivos_insert_input"]: {
		Comentario?: string,
	Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["movimentacoes_Motivos_max_fields"]: {
	__typename: "movimentacoes_Motivos_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["movimentacoes_Motivos_min_fields"]: {
	__typename: "movimentacoes_Motivos_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "movimentacoes.Motivos" */
["movimentacoes_Motivos_mutation_response"]: {
	__typename: "movimentacoes_Motivos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["movimentacoes_Motivos"]>
};
	/** input type for inserting object relation for remote table "movimentacoes.Motivos" */
["movimentacoes_Motivos_obj_rel_insert_input"]: {
		data: GraphQLTypes["movimentacoes_Motivos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["movimentacoes_Motivos_on_conflict"]
};
	/** on conflict condition type for table "movimentacoes.Motivos" */
["movimentacoes_Motivos_on_conflict"]: {
		constraint: GraphQLTypes["movimentacoes_Motivos_constraint"],
	update_columns: Array<GraphQLTypes["movimentacoes_Motivos_update_column"]>,
	where?: GraphQLTypes["movimentacoes_Motivos_bool_exp"]
};
	/** Ordering options when selecting data from "movimentacoes.Motivos". */
["movimentacoes_Motivos_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Movimentacoes_aggregate?: GraphQLTypes["movimentacoes_Movimentacoes_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: movimentacoes_Motivos */
["movimentacoes_Motivos_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_select_column"]: movimentacoes_Motivos_select_column;
	/** input type for updating data in table "movimentacoes.Motivos" */
["movimentacoes_Motivos_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "movimentacoes.Motivos" */
["movimentacoes_Motivos_update_column"]: movimentacoes_Motivos_update_column;
	/** columns and relationships of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes"]: {
	__typename: "movimentacoes_Movimentacoes",
	Data: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Motivo?: GraphQLTypes["movimentacoes_Motivos"],
	Motivo_Id?: GraphQLTypes["movimentacoes_Motivos_enum"],
	Quantidade: number,
	Tipo: string,
	Valor: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate"]: {
	__typename: "movimentacoes_Movimentacoes_aggregate",
	aggregate?: GraphQLTypes["movimentacoes_Movimentacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>
};
	/** aggregate fields of "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_fields"]: {
	__typename: "movimentacoes_Movimentacoes_aggregate_fields",
	avg?: GraphQLTypes["movimentacoes_Movimentacoes_avg_fields"],
	count: number,
	max?: GraphQLTypes["movimentacoes_Movimentacoes_max_fields"],
	min?: GraphQLTypes["movimentacoes_Movimentacoes_min_fields"],
	stddev?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_fields"],
	stddev_pop?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_samp_fields"],
	sum?: GraphQLTypes["movimentacoes_Movimentacoes_sum_fields"],
	var_pop?: GraphQLTypes["movimentacoes_Movimentacoes_var_pop_fields"],
	var_samp?: GraphQLTypes["movimentacoes_Movimentacoes_var_samp_fields"],
	variance?: GraphQLTypes["movimentacoes_Movimentacoes_variance_fields"]
};
	/** order by aggregate values of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_aggregate_order_by"]: {
		avg?: GraphQLTypes["movimentacoes_Movimentacoes_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["movimentacoes_Movimentacoes_max_order_by"],
	min?: GraphQLTypes["movimentacoes_Movimentacoes_min_order_by"],
	stddev?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_order_by"],
	stddev_pop?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["movimentacoes_Movimentacoes_stddev_samp_order_by"],
	sum?: GraphQLTypes["movimentacoes_Movimentacoes_sum_order_by"],
	var_pop?: GraphQLTypes["movimentacoes_Movimentacoes_var_pop_order_by"],
	var_samp?: GraphQLTypes["movimentacoes_Movimentacoes_var_samp_order_by"],
	variance?: GraphQLTypes["movimentacoes_Movimentacoes_variance_order_by"]
};
	/** input type for inserting array relation for remote table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["movimentacoes_Movimentacoes_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["movimentacoes_Movimentacoes_on_conflict"]
};
	/** aggregate avg on columns */
["movimentacoes_Movimentacoes_avg_fields"]: {
	__typename: "movimentacoes_Movimentacoes_avg_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by avg() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_avg_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "movimentacoes.Movimentacoes". All fields are combined with a logical 'AND'. */
["movimentacoes_Movimentacoes_bool_exp"]: {
		Data?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	Motivo?: GraphQLTypes["movimentacoes_Motivos_bool_exp"],
	Motivo_Id?: GraphQLTypes["movimentacoes_Motivos_enum_comparison_exp"],
	Quantidade?: GraphQLTypes["Int_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"]>,
	_not?: GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"],
	_or?: Array<GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_constraint"]: movimentacoes_Movimentacoes_constraint;
	/** input type for incrementing numeric columns in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_inc_input"]: {
		Quantidade?: number,
	Valor?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_insert_input"]: {
		Data?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	Motivo?: GraphQLTypes["movimentacoes_Motivos_obj_rel_insert_input"],
	Motivo_Id?: GraphQLTypes["movimentacoes_Motivos_enum"],
	Quantidade?: number,
	Tipo?: string,
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["movimentacoes_Movimentacoes_max_fields"]: {
	__typename: "movimentacoes_Movimentacoes_max_fields",
	Data?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	Tipo?: string,
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_max_order_by"]: {
		Data?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["movimentacoes_Movimentacoes_min_fields"]: {
	__typename: "movimentacoes_Movimentacoes_min_fields",
	Data?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	Tipo?: string,
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_min_order_by"]: {
		Data?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_mutation_response"]: {
	__typename: "movimentacoes_Movimentacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>
};
	/** on conflict condition type for table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_on_conflict"]: {
		constraint: GraphQLTypes["movimentacoes_Movimentacoes_constraint"],
	update_columns: Array<GraphQLTypes["movimentacoes_Movimentacoes_update_column"]>,
	where?: GraphQLTypes["movimentacoes_Movimentacoes_bool_exp"]
};
	/** Ordering options when selecting data from "movimentacoes.Movimentacoes". */
["movimentacoes_Movimentacoes_order_by"]: {
		Data?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Motivo?: GraphQLTypes["movimentacoes_Motivos_order_by"],
	Motivo_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: movimentacoes_Movimentacoes */
["movimentacoes_Movimentacoes_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_select_column"]: movimentacoes_Movimentacoes_select_column;
	/** input type for updating data in table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_set_input"]: {
		Data?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Motivo_Id?: GraphQLTypes["movimentacoes_Motivos_enum"],
	Quantidade?: number,
	Tipo?: string,
	Valor?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["movimentacoes_Movimentacoes_stddev_fields"]: {
	__typename: "movimentacoes_Movimentacoes_stddev_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by stddev() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["movimentacoes_Movimentacoes_stddev_pop_fields"]: {
	__typename: "movimentacoes_Movimentacoes_stddev_pop_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by stddev_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["movimentacoes_Movimentacoes_stddev_samp_fields"]: {
	__typename: "movimentacoes_Movimentacoes_stddev_samp_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by stddev_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_stddev_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["movimentacoes_Movimentacoes_sum_fields"]: {
	__typename: "movimentacoes_Movimentacoes_sum_fields",
	Quantidade?: number,
	Valor?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_sum_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** update columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_update_column"]: movimentacoes_Movimentacoes_update_column;
	/** aggregate var_pop on columns */
["movimentacoes_Movimentacoes_var_pop_fields"]: {
	__typename: "movimentacoes_Movimentacoes_var_pop_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by var_pop() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["movimentacoes_Movimentacoes_var_samp_fields"]: {
	__typename: "movimentacoes_Movimentacoes_var_samp_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by var_samp() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_var_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["movimentacoes_Movimentacoes_variance_fields"]: {
	__typename: "movimentacoes_Movimentacoes_variance_fields",
	Quantidade?: number,
	Valor?: number
};
	/** order by variance() on columns of table "movimentacoes.Movimentacoes" */
["movimentacoes_Movimentacoes_variance_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** mutation root */
["mutation_root"]: {
	__typename: "mutation_root",
	CadastrarCliente?: GraphQLTypes["CadastrarClienteOutput"],
	CadastrarColaborador?: GraphQLTypes["CadastrarColaboradorOutput"],
	CadastrarFornecedor?: GraphQLTypes["CadastrarFornecedorOutput"],
	CadastrarRepresentante?: GraphQLTypes["CadastrarRepresentanteOutput"],
	/** delete data from the table: "CategoriasDeVeiculos" */
	delete_CategoriasDeVeiculos?: GraphQLTypes["CategoriasDeVeiculos_mutation_response"],
	/** delete single row from the table: "CategoriasDeVeiculos" */
	delete_CategoriasDeVeiculos_by_pk?: GraphQLTypes["CategoriasDeVeiculos"],
	/** delete data from the table: "Configuracoes" */
	delete_Configuracoes?: GraphQLTypes["Configuracoes_mutation_response"],
	/** delete single row from the table: "Configuracoes" */
	delete_Configuracoes_by_pk?: GraphQLTypes["Configuracoes"],
	/** delete data from the table: "EstadosEMunicipios" */
	delete_EstadosEMunicipios?: GraphQLTypes["EstadosEMunicipios_mutation_response"],
	/** delete single row from the table: "EstadosEMunicipios" */
	delete_EstadosEMunicipios_by_pk?: GraphQLTypes["EstadosEMunicipios"],
	/** delete data from the table: "Operadoras" */
	delete_Operadoras?: GraphQLTypes["Operadoras_mutation_response"],
	/** delete single row from the table: "Operadoras" */
	delete_Operadoras_by_pk?: GraphQLTypes["Operadoras"],
	/** delete data from the table: "Produtos" */
	delete_Produtos?: GraphQLTypes["Produtos_mutation_response"],
	/** delete single row from the table: "Produtos" */
	delete_Produtos_by_pk?: GraphQLTypes["Produtos"],
	/** delete data from the table: "UnidadesDeMedidas" */
	delete_UnidadesDeMedidas?: GraphQLTypes["UnidadesDeMedidas_mutation_response"],
	/** delete single row from the table: "UnidadesDeMedidas" */
	delete_UnidadesDeMedidas_by_pk?: GraphQLTypes["UnidadesDeMedidas"],
	/** delete data from the table: "atendimentos.EtapasDosFluxos" */
	delete_atendimentos_EtapasDosFluxos?: GraphQLTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** delete single row from the table: "atendimentos.EtapasDosFluxos" */
	delete_atendimentos_EtapasDosFluxos_by_pk?: GraphQLTypes["atendimentos_EtapasDosFluxos"],
	/** delete data from the table: "atendimentos.Fluxos" */
	delete_atendimentos_Fluxos?: GraphQLTypes["atendimentos_Fluxos_mutation_response"],
	/** delete single row from the table: "atendimentos.Fluxos" */
	delete_atendimentos_Fluxos_by_pk?: GraphQLTypes["atendimentos_Fluxos"],
	/** delete data from the table: "atendimentos.Tickets" */
	delete_atendimentos_Tickets?: GraphQLTypes["atendimentos_Tickets_mutation_response"],
	/** delete single row from the table: "atendimentos.Tickets" */
	delete_atendimentos_Tickets_by_pk?: GraphQLTypes["atendimentos_Tickets"],
	/** delete data from the table: "atendimentos.TiposDeTickets" */
	delete_atendimentos_TiposDeTickets?: GraphQLTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** delete single row from the table: "atendimentos.TiposDeTickets" */
	delete_atendimentos_TiposDeTickets_by_pk?: GraphQLTypes["atendimentos_TiposDeTickets"],
	/** delete data from the table: "autenticacao.Atendentes" */
	delete_autenticacao_Atendentes?: GraphQLTypes["autenticacao_Atendentes_mutation_response"],
	/** delete single row from the table: "autenticacao.Atendentes" */
	delete_autenticacao_Atendentes_by_pk?: GraphQLTypes["autenticacao_Atendentes"],
	/** delete data from the table: "autenticacao.Usuarios" */
	delete_autenticacao_Usuarios?: GraphQLTypes["autenticacao_Usuarios_mutation_response"],
	/** delete single row from the table: "autenticacao.Usuarios" */
	delete_autenticacao_Usuarios_by_pk?: GraphQLTypes["autenticacao_Usuarios"],
	/** delete data from the table: "clientes.Leads" */
	delete_clientes_Leads?: GraphQLTypes["clientes_Leads_mutation_response"],
	/** delete single row from the table: "clientes.Leads" */
	delete_clientes_Leads_by_pk?: GraphQLTypes["clientes_Leads"],
	/** delete data from the table: "clientes.PerfisComerciais" */
	delete_clientes_PerfisComerciais?: GraphQLTypes["clientes_PerfisComerciais_mutation_response"],
	/** delete single row from the table: "clientes.PerfisComerciais" */
	delete_clientes_PerfisComerciais_by_pk?: GraphQLTypes["clientes_PerfisComerciais"],
	/** delete data from the table: "clientes.Veiculos" */
	delete_clientes_Veiculos?: GraphQLTypes["clientes_Veiculos_mutation_response"],
	/** delete single row from the table: "clientes.Veiculos" */
	delete_clientes_Veiculos_by_pk?: GraphQLTypes["clientes_Veiculos"],
	/** delete data from the table: "comercial.Acoes" */
	delete_comercial_Acoes?: GraphQLTypes["comercial_Acoes_mutation_response"],
	/** delete single row from the table: "comercial.Acoes" */
	delete_comercial_Acoes_by_pk?: GraphQLTypes["comercial_Acoes"],
	/** delete data from the table: "comercial.Atributos" */
	delete_comercial_Atributos?: GraphQLTypes["comercial_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Atributos" */
	delete_comercial_Atributos_by_pk?: GraphQLTypes["comercial_Atributos"],
	/** delete data from the table: "comercial.Coberturas" */
	delete_comercial_Coberturas?: GraphQLTypes["comercial_Coberturas_mutation_response"],
	/** delete single row from the table: "comercial.Coberturas" */
	delete_comercial_Coberturas_by_pk?: GraphQLTypes["comercial_Coberturas"],
	/** delete data from the table: "comercial.Combos" */
	delete_comercial_Combos?: GraphQLTypes["comercial_Combos_mutation_response"],
	/** delete data from the table: "comercial.Combos_Combos" */
	delete_comercial_Combos_Combos?: GraphQLTypes["comercial_Combos_Combos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Combos" */
	delete_comercial_Combos_Combos_by_pk?: GraphQLTypes["comercial_Combos_Combos"],
	/** delete data from the table: "comercial.Combos_Planos" */
	delete_comercial_Combos_Planos?: GraphQLTypes["comercial_Combos_Planos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Planos" */
	delete_comercial_Combos_Planos_by_pk?: GraphQLTypes["comercial_Combos_Planos"],
	/** delete data from the table: "comercial.Combos_Precos" */
	delete_comercial_Combos_Precos?: GraphQLTypes["comercial_Combos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Precos" */
	delete_comercial_Combos_Precos_by_pk?: GraphQLTypes["comercial_Combos_Precos"],
	/** delete data from the table: "comercial.Combos_Produtos" */
	delete_comercial_Combos_Produtos?: GraphQLTypes["comercial_Combos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Produtos" */
	delete_comercial_Combos_Produtos_by_pk?: GraphQLTypes["comercial_Combos_Produtos"],
	/** delete data from the table: "comercial.Combos_Servicos" */
	delete_comercial_Combos_Servicos?: GraphQLTypes["comercial_Combos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Combos_Servicos" */
	delete_comercial_Combos_Servicos_by_pk?: GraphQLTypes["comercial_Combos_Servicos"],
	/** delete single row from the table: "comercial.Combos" */
	delete_comercial_Combos_by_pk?: GraphQLTypes["comercial_Combos"],
	/** delete data from the table: "comercial.Condicionais" */
	delete_comercial_Condicionais?: GraphQLTypes["comercial_Condicionais_mutation_response"],
	/** delete data from the table: "comercial.CondicionaisSituacoes" */
	delete_comercial_CondicionaisSituacoes?: GraphQLTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** delete single row from the table: "comercial.CondicionaisSituacoes" */
	delete_comercial_CondicionaisSituacoes_by_pk?: GraphQLTypes["comercial_CondicionaisSituacoes"],
	/** delete single row from the table: "comercial.Condicionais" */
	delete_comercial_Condicionais_by_pk?: GraphQLTypes["comercial_Condicionais"],
	/** delete data from the table: "comercial.ContratosBase" */
	delete_comercial_ContratosBase?: GraphQLTypes["comercial_ContratosBase_mutation_response"],
	/** delete data from the table: "comercial.ContratosBase_Versoes" */
	delete_comercial_ContratosBase_Versoes?: GraphQLTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** delete single row from the table: "comercial.ContratosBase_Versoes" */
	delete_comercial_ContratosBase_Versoes_by_pk?: GraphQLTypes["comercial_ContratosBase_Versoes"],
	/** delete single row from the table: "comercial.ContratosBase" */
	delete_comercial_ContratosBase_by_pk?: GraphQLTypes["comercial_ContratosBase"],
	/** delete data from the table: "comercial.Fornecedores" */
	delete_comercial_Fornecedores?: GraphQLTypes["comercial_Fornecedores_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Produtos" */
	delete_comercial_Fornecedores_Produtos?: GraphQLTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Produtos_Precos" */
	delete_comercial_Fornecedores_Produtos_Precos?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Produtos_Precos" */
	delete_comercial_Fornecedores_Produtos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	/** delete single row from the table: "comercial.Fornecedores_Produtos" */
	delete_comercial_Fornecedores_Produtos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos"],
	/** delete data from the table: "comercial.Fornecedores_Servicos" */
	delete_comercial_Fornecedores_Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** delete data from the table: "comercial.Fornecedores_Servicos_Precos" */
	delete_comercial_Fornecedores_Servicos_Precos?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos_Precos" */
	delete_comercial_Fornecedores_Servicos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	/** delete data from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	delete_comercial_Fornecedores_Servicos_Tarifas?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	delete_comercial_Fornecedores_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** delete single row from the table: "comercial.Fornecedores_Servicos" */
	delete_comercial_Fornecedores_Servicos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos"],
	/** delete single row from the table: "comercial.Fornecedores" */
	delete_comercial_Fornecedores_by_pk?: GraphQLTypes["comercial_Fornecedores"],
	/** delete data from the table: "comercial.Planos" */
	delete_comercial_Planos?: GraphQLTypes["comercial_Planos_mutation_response"],
	/** delete data from the table: "comercial.Planos_Condicionais" */
	delete_comercial_Planos_Condicionais?: GraphQLTypes["comercial_Planos_Condicionais_mutation_response"],
	/** delete single row from the table: "comercial.Planos_Condicionais" */
	delete_comercial_Planos_Condicionais_by_pk?: GraphQLTypes["comercial_Planos_Condicionais"],
	/** delete data from the table: "comercial.Planos_Precos" */
	delete_comercial_Planos_Precos?: GraphQLTypes["comercial_Planos_Precos_mutation_response"],
	/** delete single row from the table: "comercial.Planos_Precos" */
	delete_comercial_Planos_Precos_by_pk?: GraphQLTypes["comercial_Planos_Precos"],
	/** delete single row from the table: "comercial.Planos" */
	delete_comercial_Planos_by_pk?: GraphQLTypes["comercial_Planos"],
	/** delete data from the table: "comercial.PrestadorDeServicos_Servicos" */
	delete_comercial_PrestadorDeServicos_Servicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.PrestadorDeServicos_Servicos" */
	delete_comercial_PrestadorDeServicos_Servicos_by_pk?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos"],
	/** delete data from the table: "comercial.Produtos" */
	delete_comercial_Produtos?: GraphQLTypes["comercial_Produtos_mutation_response"],
	/** delete data from the table: "comercial.Produtos_Atributos" */
	delete_comercial_Produtos_Atributos?: GraphQLTypes["comercial_Produtos_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Atributos" */
	delete_comercial_Produtos_Atributos_by_pk?: GraphQLTypes["comercial_Produtos_Atributos"],
	/** delete data from the table: "comercial.Produtos_Oportunidades" */
	delete_comercial_Produtos_Oportunidades?: GraphQLTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Oportunidades" */
	delete_comercial_Produtos_Oportunidades_by_pk?: GraphQLTypes["comercial_Produtos_Oportunidades"],
	/** delete data from the table: "comercial.Produtos_Produtos" */
	delete_comercial_Produtos_Produtos?: GraphQLTypes["comercial_Produtos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Produtos" */
	delete_comercial_Produtos_Produtos_by_pk?: GraphQLTypes["comercial_Produtos_Produtos"],
	/** delete data from the table: "comercial.Produtos_Servicos" */
	delete_comercial_Produtos_Servicos?: GraphQLTypes["comercial_Produtos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Servicos" */
	delete_comercial_Produtos_Servicos_by_pk?: GraphQLTypes["comercial_Produtos_Servicos"],
	/** delete data from the table: "comercial.Produtos_Tipos" */
	delete_comercial_Produtos_Tipos?: GraphQLTypes["comercial_Produtos_Tipos_mutation_response"],
	/** delete single row from the table: "comercial.Produtos_Tipos" */
	delete_comercial_Produtos_Tipos_by_pk?: GraphQLTypes["comercial_Produtos_Tipos"],
	/** delete single row from the table: "comercial.Produtos" */
	delete_comercial_Produtos_by_pk?: GraphQLTypes["comercial_Produtos"],
	/** delete data from the table: "comercial.Propostas" */
	delete_comercial_Propostas?: GraphQLTypes["comercial_Propostas_mutation_response"],
	/** delete data from the table: "comercial.Propostas_Combos" */
	delete_comercial_Propostas_Combos?: GraphQLTypes["comercial_Propostas_Combos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Combos" */
	delete_comercial_Propostas_Combos_by_pk?: GraphQLTypes["comercial_Propostas_Combos"],
	/** delete data from the table: "comercial.Propostas_Instalacoes" */
	delete_comercial_Propostas_Instalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Instalacoes" */
	delete_comercial_Propostas_Instalacoes_by_pk?: GraphQLTypes["comercial_Propostas_Instalacoes"],
	/** delete data from the table: "comercial.Propostas_Oportunidades" */
	delete_comercial_Propostas_Oportunidades?: GraphQLTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Oportunidades" */
	delete_comercial_Propostas_Oportunidades_by_pk?: GraphQLTypes["comercial_Propostas_Oportunidades"],
	/** delete data from the table: "comercial.Propostas_Planos" */
	delete_comercial_Propostas_Planos?: GraphQLTypes["comercial_Propostas_Planos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Planos" */
	delete_comercial_Propostas_Planos_by_pk?: GraphQLTypes["comercial_Propostas_Planos"],
	/** delete data from the table: "comercial.Propostas_Produtos" */
	delete_comercial_Propostas_Produtos?: GraphQLTypes["comercial_Propostas_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Produtos" */
	delete_comercial_Propostas_Produtos_by_pk?: GraphQLTypes["comercial_Propostas_Produtos"],
	/** delete data from the table: "comercial.Propostas_Servicos" */
	delete_comercial_Propostas_Servicos?: GraphQLTypes["comercial_Propostas_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Servicos" */
	delete_comercial_Propostas_Servicos_by_pk?: GraphQLTypes["comercial_Propostas_Servicos"],
	/** delete data from the table: "comercial.Propostas_Situacoes" */
	delete_comercial_Propostas_Situacoes?: GraphQLTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** delete single row from the table: "comercial.Propostas_Situacoes" */
	delete_comercial_Propostas_Situacoes_by_pk?: GraphQLTypes["comercial_Propostas_Situacoes"],
	/** delete single row from the table: "comercial.Propostas" */
	delete_comercial_Propostas_by_pk?: GraphQLTypes["comercial_Propostas"],
	/** delete data from the table: "comercial.Servicos" */
	delete_comercial_Servicos?: GraphQLTypes["comercial_Servicos_mutation_response"],
	/** delete data from the table: "comercial.Servicos_Atributos" */
	delete_comercial_Servicos_Atributos?: GraphQLTypes["comercial_Servicos_Atributos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Atributos" */
	delete_comercial_Servicos_Atributos_by_pk?: GraphQLTypes["comercial_Servicos_Atributos"],
	/** delete data from the table: "comercial.Servicos_Oportunidades" */
	delete_comercial_Servicos_Oportunidades?: GraphQLTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Oportunidades" */
	delete_comercial_Servicos_Oportunidades_by_pk?: GraphQLTypes["comercial_Servicos_Oportunidades"],
	/** delete data from the table: "comercial.Servicos_Produtos" */
	delete_comercial_Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Produtos" */
	delete_comercial_Servicos_Produtos_by_pk?: GraphQLTypes["comercial_Servicos_Produtos"],
	/** delete data from the table: "comercial.Servicos_Servicos" */
	delete_comercial_Servicos_Servicos?: GraphQLTypes["comercial_Servicos_Servicos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Servicos" */
	delete_comercial_Servicos_Servicos_by_pk?: GraphQLTypes["comercial_Servicos_Servicos"],
	/** delete data from the table: "comercial.Servicos_Tarifas" */
	delete_comercial_Servicos_Tarifas?: GraphQLTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Tarifas" */
	delete_comercial_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Servicos_Tarifas"],
	/** delete data from the table: "comercial.Servicos_Tipos" */
	delete_comercial_Servicos_Tipos?: GraphQLTypes["comercial_Servicos_Tipos_mutation_response"],
	/** delete single row from the table: "comercial.Servicos_Tipos" */
	delete_comercial_Servicos_Tipos_by_pk?: GraphQLTypes["comercial_Servicos_Tipos"],
	/** delete single row from the table: "comercial.Servicos" */
	delete_comercial_Servicos_by_pk?: GraphQLTypes["comercial_Servicos"],
	/** delete data from the table: "comercial.Tarifas" */
	delete_comercial_Tarifas?: GraphQLTypes["comercial_Tarifas_mutation_response"],
	/** delete single row from the table: "comercial.Tarifas" */
	delete_comercial_Tarifas_by_pk?: GraphQLTypes["comercial_Tarifas"],
	/** delete data from the table: "contatos.Emails" */
	delete_contatos_Emails?: GraphQLTypes["contatos_Emails_mutation_response"],
	/** delete single row from the table: "contatos.Emails" */
	delete_contatos_Emails_by_pk?: GraphQLTypes["contatos_Emails"],
	/** delete data from the table: "contatos.Enderecos" */
	delete_contatos_Enderecos?: GraphQLTypes["contatos_Enderecos_mutation_response"],
	/** delete single row from the table: "contatos.Enderecos" */
	delete_contatos_Enderecos_by_pk?: GraphQLTypes["contatos_Enderecos"],
	/** delete data from the table: "contatos.Logs" */
	delete_contatos_Logs?: GraphQLTypes["contatos_Logs_mutation_response"],
	/** delete single row from the table: "contatos.Logs" */
	delete_contatos_Logs_by_pk?: GraphQLTypes["contatos_Logs"],
	/** delete data from the table: "contatos.Telefones" */
	delete_contatos_Telefones?: GraphQLTypes["contatos_Telefones_mutation_response"],
	/** delete single row from the table: "contatos.Telefones" */
	delete_contatos_Telefones_by_pk?: GraphQLTypes["contatos_Telefones"],
	/** delete data from the table: "estoque.Enderecamentos" */
	delete_estoque_Enderecamentos?: GraphQLTypes["estoque_Enderecamentos_mutation_response"],
	/** delete single row from the table: "estoque.Enderecamentos" */
	delete_estoque_Enderecamentos_by_pk?: GraphQLTypes["estoque_Enderecamentos"],
	/** delete data from the table: "estoque.Fabricantes" */
	delete_estoque_Fabricantes?: GraphQLTypes["estoque_Fabricantes_mutation_response"],
	/** delete single row from the table: "estoque.Fabricantes" */
	delete_estoque_Fabricantes_by_pk?: GraphQLTypes["estoque_Fabricantes"],
	/** delete data from the table: "estoque.Familias" */
	delete_estoque_Familias?: GraphQLTypes["estoque_Familias_mutation_response"],
	/** delete single row from the table: "estoque.Familias" */
	delete_estoque_Familias_by_pk?: GraphQLTypes["estoque_Familias"],
	/** delete data from the table: "estoque.Grupos" */
	delete_estoque_Grupos?: GraphQLTypes["estoque_Grupos_mutation_response"],
	/** delete single row from the table: "estoque.Grupos" */
	delete_estoque_Grupos_by_pk?: GraphQLTypes["estoque_Grupos"],
	/** delete data from the table: "estoque.Itens" */
	delete_estoque_Itens?: GraphQLTypes["estoque_Itens_mutation_response"],
	/** delete single row from the table: "estoque.Itens" */
	delete_estoque_Itens_by_pk?: GraphQLTypes["estoque_Itens"],
	/** delete data from the table: "estoque.Logs" */
	delete_estoque_Logs?: GraphQLTypes["estoque_Logs_mutation_response"],
	/** delete single row from the table: "estoque.Logs" */
	delete_estoque_Logs_by_pk?: GraphQLTypes["estoque_Logs"],
	/** delete data from the table: "estoque.Modelos" */
	delete_estoque_Modelos?: GraphQLTypes["estoque_Modelos_mutation_response"],
	/** delete single row from the table: "estoque.Modelos" */
	delete_estoque_Modelos_by_pk?: GraphQLTypes["estoque_Modelos"],
	/** delete data from the table: "estoque.TiposDeEnderecamentos" */
	delete_estoque_TiposDeEnderecamentos?: GraphQLTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** delete single row from the table: "estoque.TiposDeEnderecamentos" */
	delete_estoque_TiposDeEnderecamentos_by_pk?: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	/** delete data from the table: "identidades.Clientes" */
	delete_identidades_Clientes?: GraphQLTypes["identidades_Clientes_mutation_response"],
	/** delete data from the table: "identidades.Clientes_Documentos" */
	delete_identidades_Clientes_Documentos?: GraphQLTypes["identidades_Clientes_Documentos_mutation_response"],
	/** delete data from the table: "identidades.Clientes_Documentos_Situacoes" */
	delete_identidades_Clientes_Documentos_Situacoes?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** delete single row from the table: "identidades.Clientes_Documentos_Situacoes" */
	delete_identidades_Clientes_Documentos_Situacoes_by_pk?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes"],
	/** delete single row from the table: "identidades.Clientes_Documentos" */
	delete_identidades_Clientes_Documentos_by_pk?: GraphQLTypes["identidades_Clientes_Documentos"],
	/** delete single row from the table: "identidades.Clientes" */
	delete_identidades_Clientes_by_pk?: GraphQLTypes["identidades_Clientes"],
	/** delete data from the table: "identidades.Colaboradores" */
	delete_identidades_Colaboradores?: GraphQLTypes["identidades_Colaboradores_mutation_response"],
	/** delete single row from the table: "identidades.Colaboradores" */
	delete_identidades_Colaboradores_by_pk?: GraphQLTypes["identidades_Colaboradores"],
	/** delete data from the table: "identidades.Fornecedores" */
	delete_identidades_Fornecedores?: GraphQLTypes["identidades_Fornecedores_mutation_response"],
	/** delete single row from the table: "identidades.Fornecedores" */
	delete_identidades_Fornecedores_by_pk?: GraphQLTypes["identidades_Fornecedores"],
	/** delete data from the table: "identidades.Logs" */
	delete_identidades_Logs?: GraphQLTypes["identidades_Logs_mutation_response"],
	/** delete single row from the table: "identidades.Logs" */
	delete_identidades_Logs_by_pk?: GraphQLTypes["identidades_Logs"],
	/** delete data from the table: "identidades.Pessoas" */
	delete_identidades_Pessoas?: GraphQLTypes["identidades_Pessoas_mutation_response"],
	/** delete single row from the table: "identidades.Pessoas" */
	delete_identidades_Pessoas_by_pk?: GraphQLTypes["identidades_Pessoas"],
	/** delete data from the table: "identidades.Representantes" */
	delete_identidades_Representantes?: GraphQLTypes["identidades_Representantes_mutation_response"],
	/** delete single row from the table: "identidades.Representantes" */
	delete_identidades_Representantes_by_pk?: GraphQLTypes["identidades_Representantes"],
	/** delete data from the table: "identidades.Vendedores" */
	delete_identidades_Vendedores?: GraphQLTypes["identidades_Vendedores_mutation_response"],
	/** delete single row from the table: "identidades.Vendedores" */
	delete_identidades_Vendedores_by_pk?: GraphQLTypes["identidades_Vendedores"],
	/** delete data from the table: "movimentacoes.Motivos" */
	delete_movimentacoes_Motivos?: GraphQLTypes["movimentacoes_Motivos_mutation_response"],
	/** delete single row from the table: "movimentacoes.Motivos" */
	delete_movimentacoes_Motivos_by_pk?: GraphQLTypes["movimentacoes_Motivos"],
	/** delete data from the table: "movimentacoes.Movimentacoes" */
	delete_movimentacoes_Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** delete single row from the table: "movimentacoes.Movimentacoes" */
	delete_movimentacoes_Movimentacoes_by_pk?: GraphQLTypes["movimentacoes_Movimentacoes"],
	/** delete data from the table: "operacional.OrdemDeServico" */
	delete_operacional_OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_mutation_response"],
	/** delete data from the table: "operacional.OrdemDeServico_Atividades" */
	delete_operacional_OrdemDeServico_Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Atividades" */
	delete_operacional_OrdemDeServico_Atividades_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Atividades"],
	/** delete data from the table: "operacional.OrdemDeServico_Situacoes" */
	delete_operacional_OrdemDeServico_Situacoes?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Situacoes" */
	delete_operacional_OrdemDeServico_Situacoes_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	/** delete data from the table: "operacional.OrdemDeServico_Tipo" */
	delete_operacional_OrdemDeServico_Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** delete single row from the table: "operacional.OrdemDeServico_Tipo" */
	delete_operacional_OrdemDeServico_Tipo_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	/** delete single row from the table: "operacional.OrdemDeServico" */
	delete_operacional_OrdemDeServico_by_pk?: GraphQLTypes["operacional_OrdemDeServico"],
	/** delete data from the table: "pedidosDeCompra.Logs" */
	delete_pedidosDeCompra_Logs?: GraphQLTypes["pedidosDeCompra_Logs_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Logs" */
	delete_pedidosDeCompra_Logs_by_pk?: GraphQLTypes["pedidosDeCompra_Logs"],
	/** delete data from the table: "pedidosDeCompra.Orcamentos" */
	delete_pedidosDeCompra_Orcamentos?: GraphQLTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** delete data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	delete_pedidosDeCompra_Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	delete_pedidosDeCompra_Orcamentos_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** delete single row from the table: "pedidosDeCompra.Orcamentos" */
	delete_pedidosDeCompra_Orcamentos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	/** delete data from the table: "pedidosDeCompra.Pedidos" */
	delete_pedidosDeCompra_Pedidos?: GraphQLTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Pedidos" */
	delete_pedidosDeCompra_Pedidos_by_pk?: GraphQLTypes["pedidosDeCompra_Pedidos"],
	/** delete data from the table: "pedidosDeCompra.Produtos" */
	delete_pedidosDeCompra_Produtos?: GraphQLTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Produtos" */
	delete_pedidosDeCompra_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Produtos"],
	/** delete data from the table: "pedidosDeCompra.Situacoes" */
	delete_pedidosDeCompra_Situacoes?: GraphQLTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** delete single row from the table: "pedidosDeCompra.Situacoes" */
	delete_pedidosDeCompra_Situacoes_by_pk?: GraphQLTypes["pedidosDeCompra_Situacoes"],
	/** delete data from the table: "pedidosDeSaida.Logs" */
	delete_pedidosDeSaida_Logs?: GraphQLTypes["pedidosDeSaida_Logs_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Logs" */
	delete_pedidosDeSaida_Logs_by_pk?: GraphQLTypes["pedidosDeSaida_Logs"],
	/** delete data from the table: "pedidosDeSaida.Pedidos" */
	delete_pedidosDeSaida_Pedidos?: GraphQLTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Pedidos" */
	delete_pedidosDeSaida_Pedidos_by_pk?: GraphQLTypes["pedidosDeSaida_Pedidos"],
	/** delete data from the table: "pedidosDeSaida.Produtos" */
	delete_pedidosDeSaida_Produtos?: GraphQLTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Produtos" */
	delete_pedidosDeSaida_Produtos_by_pk?: GraphQLTypes["pedidosDeSaida_Produtos"],
	/** delete data from the table: "pedidosDeSaida.Situacoes" */
	delete_pedidosDeSaida_Situacoes?: GraphQLTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** delete single row from the table: "pedidosDeSaida.Situacoes" */
	delete_pedidosDeSaida_Situacoes_by_pk?: GraphQLTypes["pedidosDeSaida_Situacoes"],
	/** delete data from the table: "producao.Chips" */
	delete_producao_Chips?: GraphQLTypes["producao_Chips_mutation_response"],
	/** delete data from the table: "producao.ChipsSituacoes" */
	delete_producao_ChipsSituacoes?: GraphQLTypes["producao_ChipsSituacoes_mutation_response"],
	/** delete single row from the table: "producao.ChipsSituacoes" */
	delete_producao_ChipsSituacoes_by_pk?: GraphQLTypes["producao_ChipsSituacoes"],
	/** delete single row from the table: "producao.Chips" */
	delete_producao_Chips_by_pk?: GraphQLTypes["producao_Chips"],
	/** delete data from the table: "producao.Equipamentos" */
	delete_producao_Equipamentos?: GraphQLTypes["producao_Equipamentos_mutation_response"],
	/** delete single row from the table: "producao.Equipamentos" */
	delete_producao_Equipamentos_by_pk?: GraphQLTypes["producao_Equipamentos"],
	/** delete data from the table: "producao.Identificadores" */
	delete_producao_Identificadores?: GraphQLTypes["producao_Identificadores_mutation_response"],
	/** delete single row from the table: "producao.Identificadores" */
	delete_producao_Identificadores_by_pk?: GraphQLTypes["producao_Identificadores"],
	/** delete data from the table: "producao.KitDeInsumo_Itens" */
	delete_producao_KitDeInsumo_Itens?: GraphQLTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** delete single row from the table: "producao.KitDeInsumo_Itens" */
	delete_producao_KitDeInsumo_Itens_by_pk?: GraphQLTypes["producao_KitDeInsumo_Itens"],
	/** delete data from the table: "producao.KitsDeInstalacao" */
	delete_producao_KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_mutation_response"],
	/** delete single row from the table: "producao.KitsDeInstalacao" */
	delete_producao_KitsDeInstalacao_by_pk?: GraphQLTypes["producao_KitsDeInstalacao"],
	/** delete data from the table: "producao.KitsDeInsumo" */
	delete_producao_KitsDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_mutation_response"],
	/** delete single row from the table: "producao.KitsDeInsumo" */
	delete_producao_KitsDeInsumo_by_pk?: GraphQLTypes["producao_KitsDeInsumo"],
	/** delete data from the table: "producao.Logs" */
	delete_producao_Logs?: GraphQLTypes["producao_Logs_mutation_response"],
	/** delete single row from the table: "producao.Logs" */
	delete_producao_Logs_by_pk?: GraphQLTypes["producao_Logs"],
	/** delete data from the table: "producao.Rastreadores" */
	delete_producao_Rastreadores?: GraphQLTypes["producao_Rastreadores_mutation_response"],
	/** delete single row from the table: "producao.Rastreadores" */
	delete_producao_Rastreadores_by_pk?: GraphQLTypes["producao_Rastreadores"],
	/** delete data from the table: "producao.TiposDeKitDeInsumo" */
	delete_producao_TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** delete single row from the table: "producao.TiposDeKitDeInsumo" */
	delete_producao_TiposDeKitDeInsumo_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	/** delete data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	delete_producao_TiposDeKitDeInsumo_estoque_Itens?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** delete single row from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	delete_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** delete data from the table: "vendas.GruposDePerguntas" */
	delete_vendas_GruposDePerguntas?: GraphQLTypes["vendas_GruposDePerguntas_mutation_response"],
	/** delete data from the table: "vendas.GruposDePerguntas_Perguntas" */
	delete_vendas_GruposDePerguntas_Perguntas?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** delete single row from the table: "vendas.GruposDePerguntas_Perguntas" */
	delete_vendas_GruposDePerguntas_Perguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas"],
	/** delete single row from the table: "vendas.GruposDePerguntas" */
	delete_vendas_GruposDePerguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas"],
	/** delete data from the table: "vendas.Perguntas" */
	delete_vendas_Perguntas?: GraphQLTypes["vendas_Perguntas_mutation_response"],
	/** delete single row from the table: "vendas.Perguntas" */
	delete_vendas_Perguntas_by_pk?: GraphQLTypes["vendas_Perguntas"],
	/** delete data from the table: "vendas.TiposDePagamento" */
	delete_vendas_TiposDePagamento?: GraphQLTypes["vendas_TiposDePagamento_mutation_response"],
	/** delete single row from the table: "vendas.TiposDePagamento" */
	delete_vendas_TiposDePagamento_by_pk?: GraphQLTypes["vendas_TiposDePagamento"],
	/** delete data from the table: "vendas.TiposDeRecorrencia" */
	delete_vendas_TiposDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** delete single row from the table: "vendas.TiposDeRecorrencia" */
	delete_vendas_TiposDeRecorrencia_by_pk?: GraphQLTypes["vendas_TiposDeRecorrencia"],
	/** insert data into the table: "CategoriasDeVeiculos" */
	insert_CategoriasDeVeiculos?: GraphQLTypes["CategoriasDeVeiculos_mutation_response"],
	/** insert a single row into the table: "CategoriasDeVeiculos" */
	insert_CategoriasDeVeiculos_one?: GraphQLTypes["CategoriasDeVeiculos"],
	/** insert data into the table: "Configuracoes" */
	insert_Configuracoes?: GraphQLTypes["Configuracoes_mutation_response"],
	/** insert a single row into the table: "Configuracoes" */
	insert_Configuracoes_one?: GraphQLTypes["Configuracoes"],
	/** insert data into the table: "EstadosEMunicipios" */
	insert_EstadosEMunicipios?: GraphQLTypes["EstadosEMunicipios_mutation_response"],
	/** insert a single row into the table: "EstadosEMunicipios" */
	insert_EstadosEMunicipios_one?: GraphQLTypes["EstadosEMunicipios"],
	/** insert data into the table: "Operadoras" */
	insert_Operadoras?: GraphQLTypes["Operadoras_mutation_response"],
	/** insert a single row into the table: "Operadoras" */
	insert_Operadoras_one?: GraphQLTypes["Operadoras"],
	/** insert data into the table: "Produtos" */
	insert_Produtos?: GraphQLTypes["Produtos_mutation_response"],
	/** insert a single row into the table: "Produtos" */
	insert_Produtos_one?: GraphQLTypes["Produtos"],
	/** insert data into the table: "UnidadesDeMedidas" */
	insert_UnidadesDeMedidas?: GraphQLTypes["UnidadesDeMedidas_mutation_response"],
	/** insert a single row into the table: "UnidadesDeMedidas" */
	insert_UnidadesDeMedidas_one?: GraphQLTypes["UnidadesDeMedidas"],
	/** insert data into the table: "atendimentos.EtapasDosFluxos" */
	insert_atendimentos_EtapasDosFluxos?: GraphQLTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** insert a single row into the table: "atendimentos.EtapasDosFluxos" */
	insert_atendimentos_EtapasDosFluxos_one?: GraphQLTypes["atendimentos_EtapasDosFluxos"],
	/** insert data into the table: "atendimentos.Fluxos" */
	insert_atendimentos_Fluxos?: GraphQLTypes["atendimentos_Fluxos_mutation_response"],
	/** insert a single row into the table: "atendimentos.Fluxos" */
	insert_atendimentos_Fluxos_one?: GraphQLTypes["atendimentos_Fluxos"],
	/** insert data into the table: "atendimentos.Tickets" */
	insert_atendimentos_Tickets?: GraphQLTypes["atendimentos_Tickets_mutation_response"],
	/** insert a single row into the table: "atendimentos.Tickets" */
	insert_atendimentos_Tickets_one?: GraphQLTypes["atendimentos_Tickets"],
	/** insert data into the table: "atendimentos.TiposDeTickets" */
	insert_atendimentos_TiposDeTickets?: GraphQLTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** insert a single row into the table: "atendimentos.TiposDeTickets" */
	insert_atendimentos_TiposDeTickets_one?: GraphQLTypes["atendimentos_TiposDeTickets"],
	/** insert data into the table: "autenticacao.Atendentes" */
	insert_autenticacao_Atendentes?: GraphQLTypes["autenticacao_Atendentes_mutation_response"],
	/** insert a single row into the table: "autenticacao.Atendentes" */
	insert_autenticacao_Atendentes_one?: GraphQLTypes["autenticacao_Atendentes"],
	/** insert data into the table: "autenticacao.Usuarios" */
	insert_autenticacao_Usuarios?: GraphQLTypes["autenticacao_Usuarios_mutation_response"],
	/** insert a single row into the table: "autenticacao.Usuarios" */
	insert_autenticacao_Usuarios_one?: GraphQLTypes["autenticacao_Usuarios"],
	/** insert data into the table: "clientes.Leads" */
	insert_clientes_Leads?: GraphQLTypes["clientes_Leads_mutation_response"],
	/** insert a single row into the table: "clientes.Leads" */
	insert_clientes_Leads_one?: GraphQLTypes["clientes_Leads"],
	/** insert data into the table: "clientes.PerfisComerciais" */
	insert_clientes_PerfisComerciais?: GraphQLTypes["clientes_PerfisComerciais_mutation_response"],
	/** insert a single row into the table: "clientes.PerfisComerciais" */
	insert_clientes_PerfisComerciais_one?: GraphQLTypes["clientes_PerfisComerciais"],
	/** insert data into the table: "clientes.Veiculos" */
	insert_clientes_Veiculos?: GraphQLTypes["clientes_Veiculos_mutation_response"],
	/** insert a single row into the table: "clientes.Veiculos" */
	insert_clientes_Veiculos_one?: GraphQLTypes["clientes_Veiculos"],
	/** insert data into the table: "comercial.Acoes" */
	insert_comercial_Acoes?: GraphQLTypes["comercial_Acoes_mutation_response"],
	/** insert a single row into the table: "comercial.Acoes" */
	insert_comercial_Acoes_one?: GraphQLTypes["comercial_Acoes"],
	/** insert data into the table: "comercial.Atributos" */
	insert_comercial_Atributos?: GraphQLTypes["comercial_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Atributos" */
	insert_comercial_Atributos_one?: GraphQLTypes["comercial_Atributos"],
	/** insert data into the table: "comercial.Coberturas" */
	insert_comercial_Coberturas?: GraphQLTypes["comercial_Coberturas_mutation_response"],
	/** insert a single row into the table: "comercial.Coberturas" */
	insert_comercial_Coberturas_one?: GraphQLTypes["comercial_Coberturas"],
	/** insert data into the table: "comercial.Combos" */
	insert_comercial_Combos?: GraphQLTypes["comercial_Combos_mutation_response"],
	/** insert data into the table: "comercial.Combos_Combos" */
	insert_comercial_Combos_Combos?: GraphQLTypes["comercial_Combos_Combos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Combos" */
	insert_comercial_Combos_Combos_one?: GraphQLTypes["comercial_Combos_Combos"],
	/** insert data into the table: "comercial.Combos_Planos" */
	insert_comercial_Combos_Planos?: GraphQLTypes["comercial_Combos_Planos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Planos" */
	insert_comercial_Combos_Planos_one?: GraphQLTypes["comercial_Combos_Planos"],
	/** insert data into the table: "comercial.Combos_Precos" */
	insert_comercial_Combos_Precos?: GraphQLTypes["comercial_Combos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Precos" */
	insert_comercial_Combos_Precos_one?: GraphQLTypes["comercial_Combos_Precos"],
	/** insert data into the table: "comercial.Combos_Produtos" */
	insert_comercial_Combos_Produtos?: GraphQLTypes["comercial_Combos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Produtos" */
	insert_comercial_Combos_Produtos_one?: GraphQLTypes["comercial_Combos_Produtos"],
	/** insert data into the table: "comercial.Combos_Servicos" */
	insert_comercial_Combos_Servicos?: GraphQLTypes["comercial_Combos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Combos_Servicos" */
	insert_comercial_Combos_Servicos_one?: GraphQLTypes["comercial_Combos_Servicos"],
	/** insert a single row into the table: "comercial.Combos" */
	insert_comercial_Combos_one?: GraphQLTypes["comercial_Combos"],
	/** insert data into the table: "comercial.Condicionais" */
	insert_comercial_Condicionais?: GraphQLTypes["comercial_Condicionais_mutation_response"],
	/** insert data into the table: "comercial.CondicionaisSituacoes" */
	insert_comercial_CondicionaisSituacoes?: GraphQLTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** insert a single row into the table: "comercial.CondicionaisSituacoes" */
	insert_comercial_CondicionaisSituacoes_one?: GraphQLTypes["comercial_CondicionaisSituacoes"],
	/** insert a single row into the table: "comercial.Condicionais" */
	insert_comercial_Condicionais_one?: GraphQLTypes["comercial_Condicionais"],
	/** insert data into the table: "comercial.ContratosBase" */
	insert_comercial_ContratosBase?: GraphQLTypes["comercial_ContratosBase_mutation_response"],
	/** insert data into the table: "comercial.ContratosBase_Versoes" */
	insert_comercial_ContratosBase_Versoes?: GraphQLTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** insert a single row into the table: "comercial.ContratosBase_Versoes" */
	insert_comercial_ContratosBase_Versoes_one?: GraphQLTypes["comercial_ContratosBase_Versoes"],
	/** insert a single row into the table: "comercial.ContratosBase" */
	insert_comercial_ContratosBase_one?: GraphQLTypes["comercial_ContratosBase"],
	/** insert data into the table: "comercial.Fornecedores" */
	insert_comercial_Fornecedores?: GraphQLTypes["comercial_Fornecedores_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Produtos" */
	insert_comercial_Fornecedores_Produtos?: GraphQLTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Produtos_Precos" */
	insert_comercial_Fornecedores_Produtos_Precos?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Produtos_Precos" */
	insert_comercial_Fornecedores_Produtos_Precos_one?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	/** insert a single row into the table: "comercial.Fornecedores_Produtos" */
	insert_comercial_Fornecedores_Produtos_one?: GraphQLTypes["comercial_Fornecedores_Produtos"],
	/** insert data into the table: "comercial.Fornecedores_Servicos" */
	insert_comercial_Fornecedores_Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** insert data into the table: "comercial.Fornecedores_Servicos_Precos" */
	insert_comercial_Fornecedores_Servicos_Precos?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos_Precos" */
	insert_comercial_Fornecedores_Servicos_Precos_one?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	/** insert data into the table: "comercial.Fornecedores_Servicos_Tarifas" */
	insert_comercial_Fornecedores_Servicos_Tarifas?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos_Tarifas" */
	insert_comercial_Fornecedores_Servicos_Tarifas_one?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** insert a single row into the table: "comercial.Fornecedores_Servicos" */
	insert_comercial_Fornecedores_Servicos_one?: GraphQLTypes["comercial_Fornecedores_Servicos"],
	/** insert a single row into the table: "comercial.Fornecedores" */
	insert_comercial_Fornecedores_one?: GraphQLTypes["comercial_Fornecedores"],
	/** insert data into the table: "comercial.Planos" */
	insert_comercial_Planos?: GraphQLTypes["comercial_Planos_mutation_response"],
	/** insert data into the table: "comercial.Planos_Condicionais" */
	insert_comercial_Planos_Condicionais?: GraphQLTypes["comercial_Planos_Condicionais_mutation_response"],
	/** insert a single row into the table: "comercial.Planos_Condicionais" */
	insert_comercial_Planos_Condicionais_one?: GraphQLTypes["comercial_Planos_Condicionais"],
	/** insert data into the table: "comercial.Planos_Precos" */
	insert_comercial_Planos_Precos?: GraphQLTypes["comercial_Planos_Precos_mutation_response"],
	/** insert a single row into the table: "comercial.Planos_Precos" */
	insert_comercial_Planos_Precos_one?: GraphQLTypes["comercial_Planos_Precos"],
	/** insert a single row into the table: "comercial.Planos" */
	insert_comercial_Planos_one?: GraphQLTypes["comercial_Planos"],
	/** insert data into the table: "comercial.PrestadorDeServicos_Servicos" */
	insert_comercial_PrestadorDeServicos_Servicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.PrestadorDeServicos_Servicos" */
	insert_comercial_PrestadorDeServicos_Servicos_one?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos"],
	/** insert data into the table: "comercial.Produtos" */
	insert_comercial_Produtos?: GraphQLTypes["comercial_Produtos_mutation_response"],
	/** insert data into the table: "comercial.Produtos_Atributos" */
	insert_comercial_Produtos_Atributos?: GraphQLTypes["comercial_Produtos_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Atributos" */
	insert_comercial_Produtos_Atributos_one?: GraphQLTypes["comercial_Produtos_Atributos"],
	/** insert data into the table: "comercial.Produtos_Oportunidades" */
	insert_comercial_Produtos_Oportunidades?: GraphQLTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Oportunidades" */
	insert_comercial_Produtos_Oportunidades_one?: GraphQLTypes["comercial_Produtos_Oportunidades"],
	/** insert data into the table: "comercial.Produtos_Produtos" */
	insert_comercial_Produtos_Produtos?: GraphQLTypes["comercial_Produtos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Produtos" */
	insert_comercial_Produtos_Produtos_one?: GraphQLTypes["comercial_Produtos_Produtos"],
	/** insert data into the table: "comercial.Produtos_Servicos" */
	insert_comercial_Produtos_Servicos?: GraphQLTypes["comercial_Produtos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Servicos" */
	insert_comercial_Produtos_Servicos_one?: GraphQLTypes["comercial_Produtos_Servicos"],
	/** insert data into the table: "comercial.Produtos_Tipos" */
	insert_comercial_Produtos_Tipos?: GraphQLTypes["comercial_Produtos_Tipos_mutation_response"],
	/** insert a single row into the table: "comercial.Produtos_Tipos" */
	insert_comercial_Produtos_Tipos_one?: GraphQLTypes["comercial_Produtos_Tipos"],
	/** insert a single row into the table: "comercial.Produtos" */
	insert_comercial_Produtos_one?: GraphQLTypes["comercial_Produtos"],
	/** insert data into the table: "comercial.Propostas" */
	insert_comercial_Propostas?: GraphQLTypes["comercial_Propostas_mutation_response"],
	/** insert data into the table: "comercial.Propostas_Combos" */
	insert_comercial_Propostas_Combos?: GraphQLTypes["comercial_Propostas_Combos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Combos" */
	insert_comercial_Propostas_Combos_one?: GraphQLTypes["comercial_Propostas_Combos"],
	/** insert data into the table: "comercial.Propostas_Instalacoes" */
	insert_comercial_Propostas_Instalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Instalacoes" */
	insert_comercial_Propostas_Instalacoes_one?: GraphQLTypes["comercial_Propostas_Instalacoes"],
	/** insert data into the table: "comercial.Propostas_Oportunidades" */
	insert_comercial_Propostas_Oportunidades?: GraphQLTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Oportunidades" */
	insert_comercial_Propostas_Oportunidades_one?: GraphQLTypes["comercial_Propostas_Oportunidades"],
	/** insert data into the table: "comercial.Propostas_Planos" */
	insert_comercial_Propostas_Planos?: GraphQLTypes["comercial_Propostas_Planos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Planos" */
	insert_comercial_Propostas_Planos_one?: GraphQLTypes["comercial_Propostas_Planos"],
	/** insert data into the table: "comercial.Propostas_Produtos" */
	insert_comercial_Propostas_Produtos?: GraphQLTypes["comercial_Propostas_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Produtos" */
	insert_comercial_Propostas_Produtos_one?: GraphQLTypes["comercial_Propostas_Produtos"],
	/** insert data into the table: "comercial.Propostas_Servicos" */
	insert_comercial_Propostas_Servicos?: GraphQLTypes["comercial_Propostas_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Servicos" */
	insert_comercial_Propostas_Servicos_one?: GraphQLTypes["comercial_Propostas_Servicos"],
	/** insert data into the table: "comercial.Propostas_Situacoes" */
	insert_comercial_Propostas_Situacoes?: GraphQLTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** insert a single row into the table: "comercial.Propostas_Situacoes" */
	insert_comercial_Propostas_Situacoes_one?: GraphQLTypes["comercial_Propostas_Situacoes"],
	/** insert a single row into the table: "comercial.Propostas" */
	insert_comercial_Propostas_one?: GraphQLTypes["comercial_Propostas"],
	/** insert data into the table: "comercial.Servicos" */
	insert_comercial_Servicos?: GraphQLTypes["comercial_Servicos_mutation_response"],
	/** insert data into the table: "comercial.Servicos_Atributos" */
	insert_comercial_Servicos_Atributos?: GraphQLTypes["comercial_Servicos_Atributos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Atributos" */
	insert_comercial_Servicos_Atributos_one?: GraphQLTypes["comercial_Servicos_Atributos"],
	/** insert data into the table: "comercial.Servicos_Oportunidades" */
	insert_comercial_Servicos_Oportunidades?: GraphQLTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Oportunidades" */
	insert_comercial_Servicos_Oportunidades_one?: GraphQLTypes["comercial_Servicos_Oportunidades"],
	/** insert data into the table: "comercial.Servicos_Produtos" */
	insert_comercial_Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Produtos" */
	insert_comercial_Servicos_Produtos_one?: GraphQLTypes["comercial_Servicos_Produtos"],
	/** insert data into the table: "comercial.Servicos_Servicos" */
	insert_comercial_Servicos_Servicos?: GraphQLTypes["comercial_Servicos_Servicos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Servicos" */
	insert_comercial_Servicos_Servicos_one?: GraphQLTypes["comercial_Servicos_Servicos"],
	/** insert data into the table: "comercial.Servicos_Tarifas" */
	insert_comercial_Servicos_Tarifas?: GraphQLTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Tarifas" */
	insert_comercial_Servicos_Tarifas_one?: GraphQLTypes["comercial_Servicos_Tarifas"],
	/** insert data into the table: "comercial.Servicos_Tipos" */
	insert_comercial_Servicos_Tipos?: GraphQLTypes["comercial_Servicos_Tipos_mutation_response"],
	/** insert a single row into the table: "comercial.Servicos_Tipos" */
	insert_comercial_Servicos_Tipos_one?: GraphQLTypes["comercial_Servicos_Tipos"],
	/** insert a single row into the table: "comercial.Servicos" */
	insert_comercial_Servicos_one?: GraphQLTypes["comercial_Servicos"],
	/** insert data into the table: "comercial.Tarifas" */
	insert_comercial_Tarifas?: GraphQLTypes["comercial_Tarifas_mutation_response"],
	/** insert a single row into the table: "comercial.Tarifas" */
	insert_comercial_Tarifas_one?: GraphQLTypes["comercial_Tarifas"],
	/** insert data into the table: "contatos.Emails" */
	insert_contatos_Emails?: GraphQLTypes["contatos_Emails_mutation_response"],
	/** insert a single row into the table: "contatos.Emails" */
	insert_contatos_Emails_one?: GraphQLTypes["contatos_Emails"],
	/** insert data into the table: "contatos.Enderecos" */
	insert_contatos_Enderecos?: GraphQLTypes["contatos_Enderecos_mutation_response"],
	/** insert a single row into the table: "contatos.Enderecos" */
	insert_contatos_Enderecos_one?: GraphQLTypes["contatos_Enderecos"],
	/** insert data into the table: "contatos.Logs" */
	insert_contatos_Logs?: GraphQLTypes["contatos_Logs_mutation_response"],
	/** insert a single row into the table: "contatos.Logs" */
	insert_contatos_Logs_one?: GraphQLTypes["contatos_Logs"],
	/** insert data into the table: "contatos.Telefones" */
	insert_contatos_Telefones?: GraphQLTypes["contatos_Telefones_mutation_response"],
	/** insert a single row into the table: "contatos.Telefones" */
	insert_contatos_Telefones_one?: GraphQLTypes["contatos_Telefones"],
	/** insert data into the table: "estoque.Enderecamentos" */
	insert_estoque_Enderecamentos?: GraphQLTypes["estoque_Enderecamentos_mutation_response"],
	/** insert a single row into the table: "estoque.Enderecamentos" */
	insert_estoque_Enderecamentos_one?: GraphQLTypes["estoque_Enderecamentos"],
	/** insert data into the table: "estoque.Fabricantes" */
	insert_estoque_Fabricantes?: GraphQLTypes["estoque_Fabricantes_mutation_response"],
	/** insert a single row into the table: "estoque.Fabricantes" */
	insert_estoque_Fabricantes_one?: GraphQLTypes["estoque_Fabricantes"],
	/** insert data into the table: "estoque.Familias" */
	insert_estoque_Familias?: GraphQLTypes["estoque_Familias_mutation_response"],
	/** insert a single row into the table: "estoque.Familias" */
	insert_estoque_Familias_one?: GraphQLTypes["estoque_Familias"],
	/** insert data into the table: "estoque.Grupos" */
	insert_estoque_Grupos?: GraphQLTypes["estoque_Grupos_mutation_response"],
	/** insert a single row into the table: "estoque.Grupos" */
	insert_estoque_Grupos_one?: GraphQLTypes["estoque_Grupos"],
	/** insert data into the table: "estoque.Itens" */
	insert_estoque_Itens?: GraphQLTypes["estoque_Itens_mutation_response"],
	/** insert a single row into the table: "estoque.Itens" */
	insert_estoque_Itens_one?: GraphQLTypes["estoque_Itens"],
	/** insert data into the table: "estoque.Logs" */
	insert_estoque_Logs?: GraphQLTypes["estoque_Logs_mutation_response"],
	/** insert a single row into the table: "estoque.Logs" */
	insert_estoque_Logs_one?: GraphQLTypes["estoque_Logs"],
	/** insert data into the table: "estoque.Modelos" */
	insert_estoque_Modelos?: GraphQLTypes["estoque_Modelos_mutation_response"],
	/** insert a single row into the table: "estoque.Modelos" */
	insert_estoque_Modelos_one?: GraphQLTypes["estoque_Modelos"],
	/** insert data into the table: "estoque.TiposDeEnderecamentos" */
	insert_estoque_TiposDeEnderecamentos?: GraphQLTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** insert a single row into the table: "estoque.TiposDeEnderecamentos" */
	insert_estoque_TiposDeEnderecamentos_one?: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	/** insert data into the table: "identidades.Clientes" */
	insert_identidades_Clientes?: GraphQLTypes["identidades_Clientes_mutation_response"],
	/** insert data into the table: "identidades.Clientes_Documentos" */
	insert_identidades_Clientes_Documentos?: GraphQLTypes["identidades_Clientes_Documentos_mutation_response"],
	/** insert data into the table: "identidades.Clientes_Documentos_Situacoes" */
	insert_identidades_Clientes_Documentos_Situacoes?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** insert a single row into the table: "identidades.Clientes_Documentos_Situacoes" */
	insert_identidades_Clientes_Documentos_Situacoes_one?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes"],
	/** insert a single row into the table: "identidades.Clientes_Documentos" */
	insert_identidades_Clientes_Documentos_one?: GraphQLTypes["identidades_Clientes_Documentos"],
	/** insert a single row into the table: "identidades.Clientes" */
	insert_identidades_Clientes_one?: GraphQLTypes["identidades_Clientes"],
	/** insert data into the table: "identidades.Colaboradores" */
	insert_identidades_Colaboradores?: GraphQLTypes["identidades_Colaboradores_mutation_response"],
	/** insert a single row into the table: "identidades.Colaboradores" */
	insert_identidades_Colaboradores_one?: GraphQLTypes["identidades_Colaboradores"],
	/** insert data into the table: "identidades.Fornecedores" */
	insert_identidades_Fornecedores?: GraphQLTypes["identidades_Fornecedores_mutation_response"],
	/** insert a single row into the table: "identidades.Fornecedores" */
	insert_identidades_Fornecedores_one?: GraphQLTypes["identidades_Fornecedores"],
	/** insert data into the table: "identidades.Logs" */
	insert_identidades_Logs?: GraphQLTypes["identidades_Logs_mutation_response"],
	/** insert a single row into the table: "identidades.Logs" */
	insert_identidades_Logs_one?: GraphQLTypes["identidades_Logs"],
	/** insert data into the table: "identidades.Pessoas" */
	insert_identidades_Pessoas?: GraphQLTypes["identidades_Pessoas_mutation_response"],
	/** insert a single row into the table: "identidades.Pessoas" */
	insert_identidades_Pessoas_one?: GraphQLTypes["identidades_Pessoas"],
	/** insert data into the table: "identidades.Representantes" */
	insert_identidades_Representantes?: GraphQLTypes["identidades_Representantes_mutation_response"],
	/** insert a single row into the table: "identidades.Representantes" */
	insert_identidades_Representantes_one?: GraphQLTypes["identidades_Representantes"],
	/** insert data into the table: "identidades.Vendedores" */
	insert_identidades_Vendedores?: GraphQLTypes["identidades_Vendedores_mutation_response"],
	/** insert a single row into the table: "identidades.Vendedores" */
	insert_identidades_Vendedores_one?: GraphQLTypes["identidades_Vendedores"],
	/** insert data into the table: "movimentacoes.Motivos" */
	insert_movimentacoes_Motivos?: GraphQLTypes["movimentacoes_Motivos_mutation_response"],
	/** insert a single row into the table: "movimentacoes.Motivos" */
	insert_movimentacoes_Motivos_one?: GraphQLTypes["movimentacoes_Motivos"],
	/** insert data into the table: "movimentacoes.Movimentacoes" */
	insert_movimentacoes_Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** insert a single row into the table: "movimentacoes.Movimentacoes" */
	insert_movimentacoes_Movimentacoes_one?: GraphQLTypes["movimentacoes_Movimentacoes"],
	/** insert data into the table: "operacional.OrdemDeServico" */
	insert_operacional_OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_mutation_response"],
	/** insert data into the table: "operacional.OrdemDeServico_Atividades" */
	insert_operacional_OrdemDeServico_Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Atividades" */
	insert_operacional_OrdemDeServico_Atividades_one?: GraphQLTypes["operacional_OrdemDeServico_Atividades"],
	/** insert data into the table: "operacional.OrdemDeServico_Situacoes" */
	insert_operacional_OrdemDeServico_Situacoes?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Situacoes" */
	insert_operacional_OrdemDeServico_Situacoes_one?: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	/** insert data into the table: "operacional.OrdemDeServico_Tipo" */
	insert_operacional_OrdemDeServico_Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** insert a single row into the table: "operacional.OrdemDeServico_Tipo" */
	insert_operacional_OrdemDeServico_Tipo_one?: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	/** insert a single row into the table: "operacional.OrdemDeServico" */
	insert_operacional_OrdemDeServico_one?: GraphQLTypes["operacional_OrdemDeServico"],
	/** insert data into the table: "pedidosDeCompra.Logs" */
	insert_pedidosDeCompra_Logs?: GraphQLTypes["pedidosDeCompra_Logs_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Logs" */
	insert_pedidosDeCompra_Logs_one?: GraphQLTypes["pedidosDeCompra_Logs"],
	/** insert data into the table: "pedidosDeCompra.Orcamentos" */
	insert_pedidosDeCompra_Orcamentos?: GraphQLTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** insert data into the table: "pedidosDeCompra.Orcamentos_Produtos" */
	insert_pedidosDeCompra_Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Orcamentos_Produtos" */
	insert_pedidosDeCompra_Orcamentos_Produtos_one?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** insert a single row into the table: "pedidosDeCompra.Orcamentos" */
	insert_pedidosDeCompra_Orcamentos_one?: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	/** insert data into the table: "pedidosDeCompra.Pedidos" */
	insert_pedidosDeCompra_Pedidos?: GraphQLTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Pedidos" */
	insert_pedidosDeCompra_Pedidos_one?: GraphQLTypes["pedidosDeCompra_Pedidos"],
	/** insert data into the table: "pedidosDeCompra.Produtos" */
	insert_pedidosDeCompra_Produtos?: GraphQLTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Produtos" */
	insert_pedidosDeCompra_Produtos_one?: GraphQLTypes["pedidosDeCompra_Produtos"],
	/** insert data into the table: "pedidosDeCompra.Situacoes" */
	insert_pedidosDeCompra_Situacoes?: GraphQLTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** insert a single row into the table: "pedidosDeCompra.Situacoes" */
	insert_pedidosDeCompra_Situacoes_one?: GraphQLTypes["pedidosDeCompra_Situacoes"],
	/** insert data into the table: "pedidosDeSaida.Logs" */
	insert_pedidosDeSaida_Logs?: GraphQLTypes["pedidosDeSaida_Logs_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Logs" */
	insert_pedidosDeSaida_Logs_one?: GraphQLTypes["pedidosDeSaida_Logs"],
	/** insert data into the table: "pedidosDeSaida.Pedidos" */
	insert_pedidosDeSaida_Pedidos?: GraphQLTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Pedidos" */
	insert_pedidosDeSaida_Pedidos_one?: GraphQLTypes["pedidosDeSaida_Pedidos"],
	/** insert data into the table: "pedidosDeSaida.Produtos" */
	insert_pedidosDeSaida_Produtos?: GraphQLTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Produtos" */
	insert_pedidosDeSaida_Produtos_one?: GraphQLTypes["pedidosDeSaida_Produtos"],
	/** insert data into the table: "pedidosDeSaida.Situacoes" */
	insert_pedidosDeSaida_Situacoes?: GraphQLTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** insert a single row into the table: "pedidosDeSaida.Situacoes" */
	insert_pedidosDeSaida_Situacoes_one?: GraphQLTypes["pedidosDeSaida_Situacoes"],
	/** insert data into the table: "producao.Chips" */
	insert_producao_Chips?: GraphQLTypes["producao_Chips_mutation_response"],
	/** insert data into the table: "producao.ChipsSituacoes" */
	insert_producao_ChipsSituacoes?: GraphQLTypes["producao_ChipsSituacoes_mutation_response"],
	/** insert a single row into the table: "producao.ChipsSituacoes" */
	insert_producao_ChipsSituacoes_one?: GraphQLTypes["producao_ChipsSituacoes"],
	/** insert a single row into the table: "producao.Chips" */
	insert_producao_Chips_one?: GraphQLTypes["producao_Chips"],
	/** insert data into the table: "producao.Equipamentos" */
	insert_producao_Equipamentos?: GraphQLTypes["producao_Equipamentos_mutation_response"],
	/** insert a single row into the table: "producao.Equipamentos" */
	insert_producao_Equipamentos_one?: GraphQLTypes["producao_Equipamentos"],
	/** insert data into the table: "producao.Identificadores" */
	insert_producao_Identificadores?: GraphQLTypes["producao_Identificadores_mutation_response"],
	/** insert a single row into the table: "producao.Identificadores" */
	insert_producao_Identificadores_one?: GraphQLTypes["producao_Identificadores"],
	/** insert data into the table: "producao.KitDeInsumo_Itens" */
	insert_producao_KitDeInsumo_Itens?: GraphQLTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** insert a single row into the table: "producao.KitDeInsumo_Itens" */
	insert_producao_KitDeInsumo_Itens_one?: GraphQLTypes["producao_KitDeInsumo_Itens"],
	/** insert data into the table: "producao.KitsDeInstalacao" */
	insert_producao_KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_mutation_response"],
	/** insert a single row into the table: "producao.KitsDeInstalacao" */
	insert_producao_KitsDeInstalacao_one?: GraphQLTypes["producao_KitsDeInstalacao"],
	/** insert data into the table: "producao.KitsDeInsumo" */
	insert_producao_KitsDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_mutation_response"],
	/** insert a single row into the table: "producao.KitsDeInsumo" */
	insert_producao_KitsDeInsumo_one?: GraphQLTypes["producao_KitsDeInsumo"],
	/** insert data into the table: "producao.Logs" */
	insert_producao_Logs?: GraphQLTypes["producao_Logs_mutation_response"],
	/** insert a single row into the table: "producao.Logs" */
	insert_producao_Logs_one?: GraphQLTypes["producao_Logs"],
	/** insert data into the table: "producao.Rastreadores" */
	insert_producao_Rastreadores?: GraphQLTypes["producao_Rastreadores_mutation_response"],
	/** insert a single row into the table: "producao.Rastreadores" */
	insert_producao_Rastreadores_one?: GraphQLTypes["producao_Rastreadores"],
	/** insert data into the table: "producao.TiposDeKitDeInsumo" */
	insert_producao_TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** insert data into the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	insert_producao_TiposDeKitDeInsumo_estoque_Itens?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** insert a single row into the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	insert_producao_TiposDeKitDeInsumo_estoque_Itens_one?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** insert a single row into the table: "producao.TiposDeKitDeInsumo" */
	insert_producao_TiposDeKitDeInsumo_one?: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	/** insert data into the table: "vendas.GruposDePerguntas" */
	insert_vendas_GruposDePerguntas?: GraphQLTypes["vendas_GruposDePerguntas_mutation_response"],
	/** insert data into the table: "vendas.GruposDePerguntas_Perguntas" */
	insert_vendas_GruposDePerguntas_Perguntas?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** insert a single row into the table: "vendas.GruposDePerguntas_Perguntas" */
	insert_vendas_GruposDePerguntas_Perguntas_one?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas"],
	/** insert a single row into the table: "vendas.GruposDePerguntas" */
	insert_vendas_GruposDePerguntas_one?: GraphQLTypes["vendas_GruposDePerguntas"],
	/** insert data into the table: "vendas.Perguntas" */
	insert_vendas_Perguntas?: GraphQLTypes["vendas_Perguntas_mutation_response"],
	/** insert a single row into the table: "vendas.Perguntas" */
	insert_vendas_Perguntas_one?: GraphQLTypes["vendas_Perguntas"],
	/** insert data into the table: "vendas.TiposDePagamento" */
	insert_vendas_TiposDePagamento?: GraphQLTypes["vendas_TiposDePagamento_mutation_response"],
	/** insert a single row into the table: "vendas.TiposDePagamento" */
	insert_vendas_TiposDePagamento_one?: GraphQLTypes["vendas_TiposDePagamento"],
	/** insert data into the table: "vendas.TiposDeRecorrencia" */
	insert_vendas_TiposDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** insert a single row into the table: "vendas.TiposDeRecorrencia" */
	insert_vendas_TiposDeRecorrencia_one?: GraphQLTypes["vendas_TiposDeRecorrencia"],
	/** update data of the table: "CategoriasDeVeiculos" */
	update_CategoriasDeVeiculos?: GraphQLTypes["CategoriasDeVeiculos_mutation_response"],
	/** update single row of the table: "CategoriasDeVeiculos" */
	update_CategoriasDeVeiculos_by_pk?: GraphQLTypes["CategoriasDeVeiculos"],
	/** update data of the table: "Configuracoes" */
	update_Configuracoes?: GraphQLTypes["Configuracoes_mutation_response"],
	/** update single row of the table: "Configuracoes" */
	update_Configuracoes_by_pk?: GraphQLTypes["Configuracoes"],
	/** update data of the table: "EstadosEMunicipios" */
	update_EstadosEMunicipios?: GraphQLTypes["EstadosEMunicipios_mutation_response"],
	/** update single row of the table: "EstadosEMunicipios" */
	update_EstadosEMunicipios_by_pk?: GraphQLTypes["EstadosEMunicipios"],
	/** update data of the table: "Operadoras" */
	update_Operadoras?: GraphQLTypes["Operadoras_mutation_response"],
	/** update single row of the table: "Operadoras" */
	update_Operadoras_by_pk?: GraphQLTypes["Operadoras"],
	/** update data of the table: "Produtos" */
	update_Produtos?: GraphQLTypes["Produtos_mutation_response"],
	/** update single row of the table: "Produtos" */
	update_Produtos_by_pk?: GraphQLTypes["Produtos"],
	/** update data of the table: "UnidadesDeMedidas" */
	update_UnidadesDeMedidas?: GraphQLTypes["UnidadesDeMedidas_mutation_response"],
	/** update single row of the table: "UnidadesDeMedidas" */
	update_UnidadesDeMedidas_by_pk?: GraphQLTypes["UnidadesDeMedidas"],
	/** update data of the table: "atendimentos.EtapasDosFluxos" */
	update_atendimentos_EtapasDosFluxos?: GraphQLTypes["atendimentos_EtapasDosFluxos_mutation_response"],
	/** update single row of the table: "atendimentos.EtapasDosFluxos" */
	update_atendimentos_EtapasDosFluxos_by_pk?: GraphQLTypes["atendimentos_EtapasDosFluxos"],
	/** update data of the table: "atendimentos.Fluxos" */
	update_atendimentos_Fluxos?: GraphQLTypes["atendimentos_Fluxos_mutation_response"],
	/** update single row of the table: "atendimentos.Fluxos" */
	update_atendimentos_Fluxos_by_pk?: GraphQLTypes["atendimentos_Fluxos"],
	/** update data of the table: "atendimentos.Tickets" */
	update_atendimentos_Tickets?: GraphQLTypes["atendimentos_Tickets_mutation_response"],
	/** update single row of the table: "atendimentos.Tickets" */
	update_atendimentos_Tickets_by_pk?: GraphQLTypes["atendimentos_Tickets"],
	/** update data of the table: "atendimentos.TiposDeTickets" */
	update_atendimentos_TiposDeTickets?: GraphQLTypes["atendimentos_TiposDeTickets_mutation_response"],
	/** update single row of the table: "atendimentos.TiposDeTickets" */
	update_atendimentos_TiposDeTickets_by_pk?: GraphQLTypes["atendimentos_TiposDeTickets"],
	/** update data of the table: "autenticacao.Atendentes" */
	update_autenticacao_Atendentes?: GraphQLTypes["autenticacao_Atendentes_mutation_response"],
	/** update single row of the table: "autenticacao.Atendentes" */
	update_autenticacao_Atendentes_by_pk?: GraphQLTypes["autenticacao_Atendentes"],
	/** update data of the table: "autenticacao.Usuarios" */
	update_autenticacao_Usuarios?: GraphQLTypes["autenticacao_Usuarios_mutation_response"],
	/** update single row of the table: "autenticacao.Usuarios" */
	update_autenticacao_Usuarios_by_pk?: GraphQLTypes["autenticacao_Usuarios"],
	/** update data of the table: "clientes.Leads" */
	update_clientes_Leads?: GraphQLTypes["clientes_Leads_mutation_response"],
	/** update single row of the table: "clientes.Leads" */
	update_clientes_Leads_by_pk?: GraphQLTypes["clientes_Leads"],
	/** update data of the table: "clientes.PerfisComerciais" */
	update_clientes_PerfisComerciais?: GraphQLTypes["clientes_PerfisComerciais_mutation_response"],
	/** update single row of the table: "clientes.PerfisComerciais" */
	update_clientes_PerfisComerciais_by_pk?: GraphQLTypes["clientes_PerfisComerciais"],
	/** update data of the table: "clientes.Veiculos" */
	update_clientes_Veiculos?: GraphQLTypes["clientes_Veiculos_mutation_response"],
	/** update single row of the table: "clientes.Veiculos" */
	update_clientes_Veiculos_by_pk?: GraphQLTypes["clientes_Veiculos"],
	/** update data of the table: "comercial.Acoes" */
	update_comercial_Acoes?: GraphQLTypes["comercial_Acoes_mutation_response"],
	/** update single row of the table: "comercial.Acoes" */
	update_comercial_Acoes_by_pk?: GraphQLTypes["comercial_Acoes"],
	/** update data of the table: "comercial.Atributos" */
	update_comercial_Atributos?: GraphQLTypes["comercial_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Atributos" */
	update_comercial_Atributos_by_pk?: GraphQLTypes["comercial_Atributos"],
	/** update data of the table: "comercial.Coberturas" */
	update_comercial_Coberturas?: GraphQLTypes["comercial_Coberturas_mutation_response"],
	/** update single row of the table: "comercial.Coberturas" */
	update_comercial_Coberturas_by_pk?: GraphQLTypes["comercial_Coberturas"],
	/** update data of the table: "comercial.Combos" */
	update_comercial_Combos?: GraphQLTypes["comercial_Combos_mutation_response"],
	/** update data of the table: "comercial.Combos_Combos" */
	update_comercial_Combos_Combos?: GraphQLTypes["comercial_Combos_Combos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Combos" */
	update_comercial_Combos_Combos_by_pk?: GraphQLTypes["comercial_Combos_Combos"],
	/** update data of the table: "comercial.Combos_Planos" */
	update_comercial_Combos_Planos?: GraphQLTypes["comercial_Combos_Planos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Planos" */
	update_comercial_Combos_Planos_by_pk?: GraphQLTypes["comercial_Combos_Planos"],
	/** update data of the table: "comercial.Combos_Precos" */
	update_comercial_Combos_Precos?: GraphQLTypes["comercial_Combos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Precos" */
	update_comercial_Combos_Precos_by_pk?: GraphQLTypes["comercial_Combos_Precos"],
	/** update data of the table: "comercial.Combos_Produtos" */
	update_comercial_Combos_Produtos?: GraphQLTypes["comercial_Combos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Produtos" */
	update_comercial_Combos_Produtos_by_pk?: GraphQLTypes["comercial_Combos_Produtos"],
	/** update data of the table: "comercial.Combos_Servicos" */
	update_comercial_Combos_Servicos?: GraphQLTypes["comercial_Combos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Combos_Servicos" */
	update_comercial_Combos_Servicos_by_pk?: GraphQLTypes["comercial_Combos_Servicos"],
	/** update single row of the table: "comercial.Combos" */
	update_comercial_Combos_by_pk?: GraphQLTypes["comercial_Combos"],
	/** update data of the table: "comercial.Condicionais" */
	update_comercial_Condicionais?: GraphQLTypes["comercial_Condicionais_mutation_response"],
	/** update data of the table: "comercial.CondicionaisSituacoes" */
	update_comercial_CondicionaisSituacoes?: GraphQLTypes["comercial_CondicionaisSituacoes_mutation_response"],
	/** update single row of the table: "comercial.CondicionaisSituacoes" */
	update_comercial_CondicionaisSituacoes_by_pk?: GraphQLTypes["comercial_CondicionaisSituacoes"],
	/** update single row of the table: "comercial.Condicionais" */
	update_comercial_Condicionais_by_pk?: GraphQLTypes["comercial_Condicionais"],
	/** update data of the table: "comercial.ContratosBase" */
	update_comercial_ContratosBase?: GraphQLTypes["comercial_ContratosBase_mutation_response"],
	/** update data of the table: "comercial.ContratosBase_Versoes" */
	update_comercial_ContratosBase_Versoes?: GraphQLTypes["comercial_ContratosBase_Versoes_mutation_response"],
	/** update single row of the table: "comercial.ContratosBase_Versoes" */
	update_comercial_ContratosBase_Versoes_by_pk?: GraphQLTypes["comercial_ContratosBase_Versoes"],
	/** update single row of the table: "comercial.ContratosBase" */
	update_comercial_ContratosBase_by_pk?: GraphQLTypes["comercial_ContratosBase"],
	/** update data of the table: "comercial.Fornecedores" */
	update_comercial_Fornecedores?: GraphQLTypes["comercial_Fornecedores_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Produtos" */
	update_comercial_Fornecedores_Produtos?: GraphQLTypes["comercial_Fornecedores_Produtos_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Produtos_Precos" */
	update_comercial_Fornecedores_Produtos_Precos?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Produtos_Precos" */
	update_comercial_Fornecedores_Produtos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	/** update single row of the table: "comercial.Fornecedores_Produtos" */
	update_comercial_Fornecedores_Produtos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos"],
	/** update data of the table: "comercial.Fornecedores_Servicos" */
	update_comercial_Fornecedores_Servicos?: GraphQLTypes["comercial_Fornecedores_Servicos_mutation_response"],
	/** update data of the table: "comercial.Fornecedores_Servicos_Precos" */
	update_comercial_Fornecedores_Servicos_Precos?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Servicos_Precos" */
	update_comercial_Fornecedores_Servicos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	/** update data of the table: "comercial.Fornecedores_Servicos_Tarifas" */
	update_comercial_Fornecedores_Servicos_Tarifas?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Fornecedores_Servicos_Tarifas" */
	update_comercial_Fornecedores_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** update single row of the table: "comercial.Fornecedores_Servicos" */
	update_comercial_Fornecedores_Servicos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos"],
	/** update single row of the table: "comercial.Fornecedores" */
	update_comercial_Fornecedores_by_pk?: GraphQLTypes["comercial_Fornecedores"],
	/** update data of the table: "comercial.Planos" */
	update_comercial_Planos?: GraphQLTypes["comercial_Planos_mutation_response"],
	/** update data of the table: "comercial.Planos_Condicionais" */
	update_comercial_Planos_Condicionais?: GraphQLTypes["comercial_Planos_Condicionais_mutation_response"],
	/** update single row of the table: "comercial.Planos_Condicionais" */
	update_comercial_Planos_Condicionais_by_pk?: GraphQLTypes["comercial_Planos_Condicionais"],
	/** update data of the table: "comercial.Planos_Precos" */
	update_comercial_Planos_Precos?: GraphQLTypes["comercial_Planos_Precos_mutation_response"],
	/** update single row of the table: "comercial.Planos_Precos" */
	update_comercial_Planos_Precos_by_pk?: GraphQLTypes["comercial_Planos_Precos"],
	/** update single row of the table: "comercial.Planos" */
	update_comercial_Planos_by_pk?: GraphQLTypes["comercial_Planos"],
	/** update data of the table: "comercial.PrestadorDeServicos_Servicos" */
	update_comercial_PrestadorDeServicos_Servicos?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.PrestadorDeServicos_Servicos" */
	update_comercial_PrestadorDeServicos_Servicos_by_pk?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos"],
	/** update data of the table: "comercial.Produtos" */
	update_comercial_Produtos?: GraphQLTypes["comercial_Produtos_mutation_response"],
	/** update data of the table: "comercial.Produtos_Atributos" */
	update_comercial_Produtos_Atributos?: GraphQLTypes["comercial_Produtos_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Atributos" */
	update_comercial_Produtos_Atributos_by_pk?: GraphQLTypes["comercial_Produtos_Atributos"],
	/** update data of the table: "comercial.Produtos_Oportunidades" */
	update_comercial_Produtos_Oportunidades?: GraphQLTypes["comercial_Produtos_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Oportunidades" */
	update_comercial_Produtos_Oportunidades_by_pk?: GraphQLTypes["comercial_Produtos_Oportunidades"],
	/** update data of the table: "comercial.Produtos_Produtos" */
	update_comercial_Produtos_Produtos?: GraphQLTypes["comercial_Produtos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Produtos" */
	update_comercial_Produtos_Produtos_by_pk?: GraphQLTypes["comercial_Produtos_Produtos"],
	/** update data of the table: "comercial.Produtos_Servicos" */
	update_comercial_Produtos_Servicos?: GraphQLTypes["comercial_Produtos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Servicos" */
	update_comercial_Produtos_Servicos_by_pk?: GraphQLTypes["comercial_Produtos_Servicos"],
	/** update data of the table: "comercial.Produtos_Tipos" */
	update_comercial_Produtos_Tipos?: GraphQLTypes["comercial_Produtos_Tipos_mutation_response"],
	/** update single row of the table: "comercial.Produtos_Tipos" */
	update_comercial_Produtos_Tipos_by_pk?: GraphQLTypes["comercial_Produtos_Tipos"],
	/** update single row of the table: "comercial.Produtos" */
	update_comercial_Produtos_by_pk?: GraphQLTypes["comercial_Produtos"],
	/** update data of the table: "comercial.Propostas" */
	update_comercial_Propostas?: GraphQLTypes["comercial_Propostas_mutation_response"],
	/** update data of the table: "comercial.Propostas_Combos" */
	update_comercial_Propostas_Combos?: GraphQLTypes["comercial_Propostas_Combos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Combos" */
	update_comercial_Propostas_Combos_by_pk?: GraphQLTypes["comercial_Propostas_Combos"],
	/** update data of the table: "comercial.Propostas_Instalacoes" */
	update_comercial_Propostas_Instalacoes?: GraphQLTypes["comercial_Propostas_Instalacoes_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Instalacoes" */
	update_comercial_Propostas_Instalacoes_by_pk?: GraphQLTypes["comercial_Propostas_Instalacoes"],
	/** update data of the table: "comercial.Propostas_Oportunidades" */
	update_comercial_Propostas_Oportunidades?: GraphQLTypes["comercial_Propostas_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Oportunidades" */
	update_comercial_Propostas_Oportunidades_by_pk?: GraphQLTypes["comercial_Propostas_Oportunidades"],
	/** update data of the table: "comercial.Propostas_Planos" */
	update_comercial_Propostas_Planos?: GraphQLTypes["comercial_Propostas_Planos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Planos" */
	update_comercial_Propostas_Planos_by_pk?: GraphQLTypes["comercial_Propostas_Planos"],
	/** update data of the table: "comercial.Propostas_Produtos" */
	update_comercial_Propostas_Produtos?: GraphQLTypes["comercial_Propostas_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Produtos" */
	update_comercial_Propostas_Produtos_by_pk?: GraphQLTypes["comercial_Propostas_Produtos"],
	/** update data of the table: "comercial.Propostas_Servicos" */
	update_comercial_Propostas_Servicos?: GraphQLTypes["comercial_Propostas_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Servicos" */
	update_comercial_Propostas_Servicos_by_pk?: GraphQLTypes["comercial_Propostas_Servicos"],
	/** update data of the table: "comercial.Propostas_Situacoes" */
	update_comercial_Propostas_Situacoes?: GraphQLTypes["comercial_Propostas_Situacoes_mutation_response"],
	/** update single row of the table: "comercial.Propostas_Situacoes" */
	update_comercial_Propostas_Situacoes_by_pk?: GraphQLTypes["comercial_Propostas_Situacoes"],
	/** update single row of the table: "comercial.Propostas" */
	update_comercial_Propostas_by_pk?: GraphQLTypes["comercial_Propostas"],
	/** update data of the table: "comercial.Servicos" */
	update_comercial_Servicos?: GraphQLTypes["comercial_Servicos_mutation_response"],
	/** update data of the table: "comercial.Servicos_Atributos" */
	update_comercial_Servicos_Atributos?: GraphQLTypes["comercial_Servicos_Atributos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Atributos" */
	update_comercial_Servicos_Atributos_by_pk?: GraphQLTypes["comercial_Servicos_Atributos"],
	/** update data of the table: "comercial.Servicos_Oportunidades" */
	update_comercial_Servicos_Oportunidades?: GraphQLTypes["comercial_Servicos_Oportunidades_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Oportunidades" */
	update_comercial_Servicos_Oportunidades_by_pk?: GraphQLTypes["comercial_Servicos_Oportunidades"],
	/** update data of the table: "comercial.Servicos_Produtos" */
	update_comercial_Servicos_Produtos?: GraphQLTypes["comercial_Servicos_Produtos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Produtos" */
	update_comercial_Servicos_Produtos_by_pk?: GraphQLTypes["comercial_Servicos_Produtos"],
	/** update data of the table: "comercial.Servicos_Servicos" */
	update_comercial_Servicos_Servicos?: GraphQLTypes["comercial_Servicos_Servicos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Servicos" */
	update_comercial_Servicos_Servicos_by_pk?: GraphQLTypes["comercial_Servicos_Servicos"],
	/** update data of the table: "comercial.Servicos_Tarifas" */
	update_comercial_Servicos_Tarifas?: GraphQLTypes["comercial_Servicos_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Tarifas" */
	update_comercial_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Servicos_Tarifas"],
	/** update data of the table: "comercial.Servicos_Tipos" */
	update_comercial_Servicos_Tipos?: GraphQLTypes["comercial_Servicos_Tipos_mutation_response"],
	/** update single row of the table: "comercial.Servicos_Tipos" */
	update_comercial_Servicos_Tipos_by_pk?: GraphQLTypes["comercial_Servicos_Tipos"],
	/** update single row of the table: "comercial.Servicos" */
	update_comercial_Servicos_by_pk?: GraphQLTypes["comercial_Servicos"],
	/** update data of the table: "comercial.Tarifas" */
	update_comercial_Tarifas?: GraphQLTypes["comercial_Tarifas_mutation_response"],
	/** update single row of the table: "comercial.Tarifas" */
	update_comercial_Tarifas_by_pk?: GraphQLTypes["comercial_Tarifas"],
	/** update data of the table: "contatos.Emails" */
	update_contatos_Emails?: GraphQLTypes["contatos_Emails_mutation_response"],
	/** update single row of the table: "contatos.Emails" */
	update_contatos_Emails_by_pk?: GraphQLTypes["contatos_Emails"],
	/** update data of the table: "contatos.Enderecos" */
	update_contatos_Enderecos?: GraphQLTypes["contatos_Enderecos_mutation_response"],
	/** update single row of the table: "contatos.Enderecos" */
	update_contatos_Enderecos_by_pk?: GraphQLTypes["contatos_Enderecos"],
	/** update data of the table: "contatos.Logs" */
	update_contatos_Logs?: GraphQLTypes["contatos_Logs_mutation_response"],
	/** update single row of the table: "contatos.Logs" */
	update_contatos_Logs_by_pk?: GraphQLTypes["contatos_Logs"],
	/** update data of the table: "contatos.Telefones" */
	update_contatos_Telefones?: GraphQLTypes["contatos_Telefones_mutation_response"],
	/** update single row of the table: "contatos.Telefones" */
	update_contatos_Telefones_by_pk?: GraphQLTypes["contatos_Telefones"],
	/** update data of the table: "estoque.Enderecamentos" */
	update_estoque_Enderecamentos?: GraphQLTypes["estoque_Enderecamentos_mutation_response"],
	/** update single row of the table: "estoque.Enderecamentos" */
	update_estoque_Enderecamentos_by_pk?: GraphQLTypes["estoque_Enderecamentos"],
	/** update data of the table: "estoque.Fabricantes" */
	update_estoque_Fabricantes?: GraphQLTypes["estoque_Fabricantes_mutation_response"],
	/** update single row of the table: "estoque.Fabricantes" */
	update_estoque_Fabricantes_by_pk?: GraphQLTypes["estoque_Fabricantes"],
	/** update data of the table: "estoque.Familias" */
	update_estoque_Familias?: GraphQLTypes["estoque_Familias_mutation_response"],
	/** update single row of the table: "estoque.Familias" */
	update_estoque_Familias_by_pk?: GraphQLTypes["estoque_Familias"],
	/** update data of the table: "estoque.Grupos" */
	update_estoque_Grupos?: GraphQLTypes["estoque_Grupos_mutation_response"],
	/** update single row of the table: "estoque.Grupos" */
	update_estoque_Grupos_by_pk?: GraphQLTypes["estoque_Grupos"],
	/** update data of the table: "estoque.Itens" */
	update_estoque_Itens?: GraphQLTypes["estoque_Itens_mutation_response"],
	/** update single row of the table: "estoque.Itens" */
	update_estoque_Itens_by_pk?: GraphQLTypes["estoque_Itens"],
	/** update data of the table: "estoque.Logs" */
	update_estoque_Logs?: GraphQLTypes["estoque_Logs_mutation_response"],
	/** update single row of the table: "estoque.Logs" */
	update_estoque_Logs_by_pk?: GraphQLTypes["estoque_Logs"],
	/** update data of the table: "estoque.Modelos" */
	update_estoque_Modelos?: GraphQLTypes["estoque_Modelos_mutation_response"],
	/** update single row of the table: "estoque.Modelos" */
	update_estoque_Modelos_by_pk?: GraphQLTypes["estoque_Modelos"],
	/** update data of the table: "estoque.TiposDeEnderecamentos" */
	update_estoque_TiposDeEnderecamentos?: GraphQLTypes["estoque_TiposDeEnderecamentos_mutation_response"],
	/** update single row of the table: "estoque.TiposDeEnderecamentos" */
	update_estoque_TiposDeEnderecamentos_by_pk?: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	/** update data of the table: "identidades.Clientes" */
	update_identidades_Clientes?: GraphQLTypes["identidades_Clientes_mutation_response"],
	/** update data of the table: "identidades.Clientes_Documentos" */
	update_identidades_Clientes_Documentos?: GraphQLTypes["identidades_Clientes_Documentos_mutation_response"],
	/** update data of the table: "identidades.Clientes_Documentos_Situacoes" */
	update_identidades_Clientes_Documentos_Situacoes?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_mutation_response"],
	/** update single row of the table: "identidades.Clientes_Documentos_Situacoes" */
	update_identidades_Clientes_Documentos_Situacoes_by_pk?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes"],
	/** update single row of the table: "identidades.Clientes_Documentos" */
	update_identidades_Clientes_Documentos_by_pk?: GraphQLTypes["identidades_Clientes_Documentos"],
	/** update single row of the table: "identidades.Clientes" */
	update_identidades_Clientes_by_pk?: GraphQLTypes["identidades_Clientes"],
	/** update data of the table: "identidades.Colaboradores" */
	update_identidades_Colaboradores?: GraphQLTypes["identidades_Colaboradores_mutation_response"],
	/** update single row of the table: "identidades.Colaboradores" */
	update_identidades_Colaboradores_by_pk?: GraphQLTypes["identidades_Colaboradores"],
	/** update data of the table: "identidades.Fornecedores" */
	update_identidades_Fornecedores?: GraphQLTypes["identidades_Fornecedores_mutation_response"],
	/** update single row of the table: "identidades.Fornecedores" */
	update_identidades_Fornecedores_by_pk?: GraphQLTypes["identidades_Fornecedores"],
	/** update data of the table: "identidades.Logs" */
	update_identidades_Logs?: GraphQLTypes["identidades_Logs_mutation_response"],
	/** update single row of the table: "identidades.Logs" */
	update_identidades_Logs_by_pk?: GraphQLTypes["identidades_Logs"],
	/** update data of the table: "identidades.Pessoas" */
	update_identidades_Pessoas?: GraphQLTypes["identidades_Pessoas_mutation_response"],
	/** update single row of the table: "identidades.Pessoas" */
	update_identidades_Pessoas_by_pk?: GraphQLTypes["identidades_Pessoas"],
	/** update data of the table: "identidades.Representantes" */
	update_identidades_Representantes?: GraphQLTypes["identidades_Representantes_mutation_response"],
	/** update single row of the table: "identidades.Representantes" */
	update_identidades_Representantes_by_pk?: GraphQLTypes["identidades_Representantes"],
	/** update data of the table: "identidades.Vendedores" */
	update_identidades_Vendedores?: GraphQLTypes["identidades_Vendedores_mutation_response"],
	/** update single row of the table: "identidades.Vendedores" */
	update_identidades_Vendedores_by_pk?: GraphQLTypes["identidades_Vendedores"],
	/** update data of the table: "movimentacoes.Motivos" */
	update_movimentacoes_Motivos?: GraphQLTypes["movimentacoes_Motivos_mutation_response"],
	/** update single row of the table: "movimentacoes.Motivos" */
	update_movimentacoes_Motivos_by_pk?: GraphQLTypes["movimentacoes_Motivos"],
	/** update data of the table: "movimentacoes.Movimentacoes" */
	update_movimentacoes_Movimentacoes?: GraphQLTypes["movimentacoes_Movimentacoes_mutation_response"],
	/** update single row of the table: "movimentacoes.Movimentacoes" */
	update_movimentacoes_Movimentacoes_by_pk?: GraphQLTypes["movimentacoes_Movimentacoes"],
	/** update data of the table: "operacional.OrdemDeServico" */
	update_operacional_OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_mutation_response"],
	/** update data of the table: "operacional.OrdemDeServico_Atividades" */
	update_operacional_OrdemDeServico_Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Atividades" */
	update_operacional_OrdemDeServico_Atividades_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Atividades"],
	/** update data of the table: "operacional.OrdemDeServico_Situacoes" */
	update_operacional_OrdemDeServico_Situacoes?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Situacoes" */
	update_operacional_OrdemDeServico_Situacoes_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	/** update data of the table: "operacional.OrdemDeServico_Tipo" */
	update_operacional_OrdemDeServico_Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_mutation_response"],
	/** update single row of the table: "operacional.OrdemDeServico_Tipo" */
	update_operacional_OrdemDeServico_Tipo_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	/** update single row of the table: "operacional.OrdemDeServico" */
	update_operacional_OrdemDeServico_by_pk?: GraphQLTypes["operacional_OrdemDeServico"],
	/** update data of the table: "pedidosDeCompra.Logs" */
	update_pedidosDeCompra_Logs?: GraphQLTypes["pedidosDeCompra_Logs_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Logs" */
	update_pedidosDeCompra_Logs_by_pk?: GraphQLTypes["pedidosDeCompra_Logs"],
	/** update data of the table: "pedidosDeCompra.Orcamentos" */
	update_pedidosDeCompra_Orcamentos?: GraphQLTypes["pedidosDeCompra_Orcamentos_mutation_response"],
	/** update data of the table: "pedidosDeCompra.Orcamentos_Produtos" */
	update_pedidosDeCompra_Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Orcamentos_Produtos" */
	update_pedidosDeCompra_Orcamentos_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** update single row of the table: "pedidosDeCompra.Orcamentos" */
	update_pedidosDeCompra_Orcamentos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	/** update data of the table: "pedidosDeCompra.Pedidos" */
	update_pedidosDeCompra_Pedidos?: GraphQLTypes["pedidosDeCompra_Pedidos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Pedidos" */
	update_pedidosDeCompra_Pedidos_by_pk?: GraphQLTypes["pedidosDeCompra_Pedidos"],
	/** update data of the table: "pedidosDeCompra.Produtos" */
	update_pedidosDeCompra_Produtos?: GraphQLTypes["pedidosDeCompra_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Produtos" */
	update_pedidosDeCompra_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Produtos"],
	/** update data of the table: "pedidosDeCompra.Situacoes" */
	update_pedidosDeCompra_Situacoes?: GraphQLTypes["pedidosDeCompra_Situacoes_mutation_response"],
	/** update single row of the table: "pedidosDeCompra.Situacoes" */
	update_pedidosDeCompra_Situacoes_by_pk?: GraphQLTypes["pedidosDeCompra_Situacoes"],
	/** update data of the table: "pedidosDeSaida.Logs" */
	update_pedidosDeSaida_Logs?: GraphQLTypes["pedidosDeSaida_Logs_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Logs" */
	update_pedidosDeSaida_Logs_by_pk?: GraphQLTypes["pedidosDeSaida_Logs"],
	/** update data of the table: "pedidosDeSaida.Pedidos" */
	update_pedidosDeSaida_Pedidos?: GraphQLTypes["pedidosDeSaida_Pedidos_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Pedidos" */
	update_pedidosDeSaida_Pedidos_by_pk?: GraphQLTypes["pedidosDeSaida_Pedidos"],
	/** update data of the table: "pedidosDeSaida.Produtos" */
	update_pedidosDeSaida_Produtos?: GraphQLTypes["pedidosDeSaida_Produtos_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Produtos" */
	update_pedidosDeSaida_Produtos_by_pk?: GraphQLTypes["pedidosDeSaida_Produtos"],
	/** update data of the table: "pedidosDeSaida.Situacoes" */
	update_pedidosDeSaida_Situacoes?: GraphQLTypes["pedidosDeSaida_Situacoes_mutation_response"],
	/** update single row of the table: "pedidosDeSaida.Situacoes" */
	update_pedidosDeSaida_Situacoes_by_pk?: GraphQLTypes["pedidosDeSaida_Situacoes"],
	/** update data of the table: "producao.Chips" */
	update_producao_Chips?: GraphQLTypes["producao_Chips_mutation_response"],
	/** update data of the table: "producao.ChipsSituacoes" */
	update_producao_ChipsSituacoes?: GraphQLTypes["producao_ChipsSituacoes_mutation_response"],
	/** update single row of the table: "producao.ChipsSituacoes" */
	update_producao_ChipsSituacoes_by_pk?: GraphQLTypes["producao_ChipsSituacoes"],
	/** update single row of the table: "producao.Chips" */
	update_producao_Chips_by_pk?: GraphQLTypes["producao_Chips"],
	/** update data of the table: "producao.Equipamentos" */
	update_producao_Equipamentos?: GraphQLTypes["producao_Equipamentos_mutation_response"],
	/** update single row of the table: "producao.Equipamentos" */
	update_producao_Equipamentos_by_pk?: GraphQLTypes["producao_Equipamentos"],
	/** update data of the table: "producao.Identificadores" */
	update_producao_Identificadores?: GraphQLTypes["producao_Identificadores_mutation_response"],
	/** update single row of the table: "producao.Identificadores" */
	update_producao_Identificadores_by_pk?: GraphQLTypes["producao_Identificadores"],
	/** update data of the table: "producao.KitDeInsumo_Itens" */
	update_producao_KitDeInsumo_Itens?: GraphQLTypes["producao_KitDeInsumo_Itens_mutation_response"],
	/** update single row of the table: "producao.KitDeInsumo_Itens" */
	update_producao_KitDeInsumo_Itens_by_pk?: GraphQLTypes["producao_KitDeInsumo_Itens"],
	/** update data of the table: "producao.KitsDeInstalacao" */
	update_producao_KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_mutation_response"],
	/** update single row of the table: "producao.KitsDeInstalacao" */
	update_producao_KitsDeInstalacao_by_pk?: GraphQLTypes["producao_KitsDeInstalacao"],
	/** update data of the table: "producao.KitsDeInsumo" */
	update_producao_KitsDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_mutation_response"],
	/** update single row of the table: "producao.KitsDeInsumo" */
	update_producao_KitsDeInsumo_by_pk?: GraphQLTypes["producao_KitsDeInsumo"],
	/** update data of the table: "producao.Logs" */
	update_producao_Logs?: GraphQLTypes["producao_Logs_mutation_response"],
	/** update single row of the table: "producao.Logs" */
	update_producao_Logs_by_pk?: GraphQLTypes["producao_Logs"],
	/** update data of the table: "producao.Rastreadores" */
	update_producao_Rastreadores?: GraphQLTypes["producao_Rastreadores_mutation_response"],
	/** update single row of the table: "producao.Rastreadores" */
	update_producao_Rastreadores_by_pk?: GraphQLTypes["producao_Rastreadores"],
	/** update data of the table: "producao.TiposDeKitDeInsumo" */
	update_producao_TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_mutation_response"],
	/** update single row of the table: "producao.TiposDeKitDeInsumo" */
	update_producao_TiposDeKitDeInsumo_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	/** update data of the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	update_producao_TiposDeKitDeInsumo_estoque_Itens?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"],
	/** update single row of the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	update_producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** update data of the table: "vendas.GruposDePerguntas" */
	update_vendas_GruposDePerguntas?: GraphQLTypes["vendas_GruposDePerguntas_mutation_response"],
	/** update data of the table: "vendas.GruposDePerguntas_Perguntas" */
	update_vendas_GruposDePerguntas_Perguntas?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_mutation_response"],
	/** update single row of the table: "vendas.GruposDePerguntas_Perguntas" */
	update_vendas_GruposDePerguntas_Perguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas"],
	/** update single row of the table: "vendas.GruposDePerguntas" */
	update_vendas_GruposDePerguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas"],
	/** update data of the table: "vendas.Perguntas" */
	update_vendas_Perguntas?: GraphQLTypes["vendas_Perguntas_mutation_response"],
	/** update single row of the table: "vendas.Perguntas" */
	update_vendas_Perguntas_by_pk?: GraphQLTypes["vendas_Perguntas"],
	/** update data of the table: "vendas.TiposDePagamento" */
	update_vendas_TiposDePagamento?: GraphQLTypes["vendas_TiposDePagamento_mutation_response"],
	/** update single row of the table: "vendas.TiposDePagamento" */
	update_vendas_TiposDePagamento_by_pk?: GraphQLTypes["vendas_TiposDePagamento"],
	/** update data of the table: "vendas.TiposDeRecorrencia" */
	update_vendas_TiposDeRecorrencia?: GraphQLTypes["vendas_TiposDeRecorrencia_mutation_response"],
	/** update single row of the table: "vendas.TiposDeRecorrencia" */
	update_vendas_TiposDeRecorrencia_by_pk?: GraphQLTypes["vendas_TiposDeRecorrencia"]
};
	/** columns and relationships of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico"]: {
	__typename: "operacional_OrdemDeServico",
	/** An array relationship */
	Atividades: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>,
	/** An aggregate relationship */
	Atividades_aggregate: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	CodigoIdentificador: number,
	DataAgendamento?: GraphQLTypes["timestamptz"],
	DataConcluida?: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	Proposta_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Situacao: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	/** An object relationship */
	Tipo: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	Tipo_Id: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades"]: {
	__typename: "operacional_OrdemDeServico_Atividades",
	Id: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	/** An object relationship */
	OrdemDeServico: GraphQLTypes["operacional_OrdemDeServico"],
	OrdemDeServico_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Situacao: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	Situacao_Id: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Usuario_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate"]: {
	__typename: "operacional_OrdemDeServico_Atividades_aggregate",
	aggregate?: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate_fields"],
	nodes: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>
};
	/** aggregate fields of "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_fields"]: {
	__typename: "operacional_OrdemDeServico_Atividades_aggregate_fields",
	count: number,
	max?: GraphQLTypes["operacional_OrdemDeServico_Atividades_max_fields"],
	min?: GraphQLTypes["operacional_OrdemDeServico_Atividades_min_fields"]
};
	/** order by aggregate values of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["operacional_OrdemDeServico_Atividades_max_order_by"],
	min?: GraphQLTypes["operacional_OrdemDeServico_Atividades_min_order_by"]
};
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["operacional_OrdemDeServico_Atividades_on_conflict"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Atividades". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Atividades_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	MotivoRecusado?: GraphQLTypes["String_comparison_exp"],
	OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_bool_exp"],
	OrdemDeServico_Id?: GraphQLTypes["uuid_comparison_exp"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"],
	Usuario_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"]>,
	_not?: GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"],
	_or?: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_constraint"]: operacional_OrdemDeServico_Atividades_constraint;
	/** input type for inserting data into table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_obj_rel_insert_input"],
	OrdemDeServico_Id?: GraphQLTypes["uuid"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Atividades_max_fields"]: {
	__typename: "operacional_OrdemDeServico_Atividades_max_fields",
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	OrdemDeServico_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	OrdemDeServico_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Atividades_min_fields"]: {
	__typename: "operacional_OrdemDeServico_Atividades_min_fields",
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	OrdemDeServico_Id?: GraphQLTypes["uuid"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	OrdemDeServico_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_mutation_response"]: {
	__typename: "operacional_OrdemDeServico_Atividades_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_on_conflict"]: {
		constraint: GraphQLTypes["operacional_OrdemDeServico_Atividades_constraint"],
	update_columns: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades_update_column"]>,
	where?: GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"]
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Atividades". */
["operacional_OrdemDeServico_Atividades_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	OrdemDeServico?: GraphQLTypes["operacional_OrdemDeServico_order_by"],
	OrdemDeServico_Id?: GraphQLTypes["order_by"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	Usuario_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: operacional_OrdemDeServico_Atividades */
["operacional_OrdemDeServico_Atividades_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_select_column"]: operacional_OrdemDeServico_Atividades_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	OrdemDeServico_Id?: GraphQLTypes["uuid"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Usuario_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "operacional.OrdemDeServico_Atividades" */
["operacional_OrdemDeServico_Atividades_update_column"]: operacional_OrdemDeServico_Atividades_update_column;
	/** columns and relationships of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes"]: {
	__typename: "operacional_OrdemDeServico_Situacoes",
	Comentario: string,
	/** An array relationship */
	OrdemDeServico_Atividades: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>,
	/** An aggregate relationship */
	OrdemDeServico_Atividades_aggregate: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** An array relationship */
	OrdemDeServicos: Array<GraphQLTypes["operacional_OrdemDeServico"]>,
	/** An aggregate relationship */
	OrdemDeServicos_aggregate: GraphQLTypes["operacional_OrdemDeServico_aggregate"],
	Valor: string
};
	/** aggregated selection of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate"]: {
	__typename: "operacional_OrdemDeServico_Situacoes_aggregate",
	aggregate?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes"]>
};
	/** aggregate fields of "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_aggregate_fields"]: {
	__typename: "operacional_OrdemDeServico_Situacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_max_fields"],
	min?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Situacoes". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	OrdemDeServico_Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"],
	OrdemDeServicos?: GraphQLTypes["operacional_OrdemDeServico_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"]>,
	_not?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"],
	_or?: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_constraint"]: operacional_OrdemDeServico_Situacoes_constraint;
	["operacional_OrdemDeServico_Situacoes_enum"]: operacional_OrdemDeServico_Situacoes_enum;
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Situacoes_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	_in?: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	_nin?: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"]>
};
	/** input type for inserting data into table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_insert_input"]: {
		Comentario?: string,
	OrdemDeServico_Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"],
	OrdemDeServicos?: GraphQLTypes["operacional_OrdemDeServico_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Situacoes_max_fields"]: {
	__typename: "operacional_OrdemDeServico_Situacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Situacoes_min_fields"]: {
	__typename: "operacional_OrdemDeServico_Situacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_mutation_response"]: {
	__typename: "operacional_OrdemDeServico_Situacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes"]>
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["operacional_OrdemDeServico_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_on_conflict"]
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_on_conflict"]: {
		constraint: GraphQLTypes["operacional_OrdemDeServico_Situacoes_constraint"],
	update_columns: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes_update_column"]>,
	where?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"]
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Situacoes". */
["operacional_OrdemDeServico_Situacoes_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	OrdemDeServico_Atividades_aggregate?: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate_order_by"],
	OrdemDeServicos_aggregate?: GraphQLTypes["operacional_OrdemDeServico_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: operacional_OrdemDeServico_Situacoes */
["operacional_OrdemDeServico_Situacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_select_column"]: operacional_OrdemDeServico_Situacoes_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "operacional.OrdemDeServico_Situacoes" */
["operacional_OrdemDeServico_Situacoes_update_column"]: operacional_OrdemDeServico_Situacoes_update_column;
	/** columns and relationships of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo"]: {
	__typename: "operacional_OrdemDeServico_Tipo",
	Comentario: string,
	/** An array relationship */
	OrdemDeServicos: Array<GraphQLTypes["operacional_OrdemDeServico"]>,
	/** An aggregate relationship */
	OrdemDeServicos_aggregate: GraphQLTypes["operacional_OrdemDeServico_aggregate"],
	Valor: string
};
	/** aggregated selection of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate"]: {
	__typename: "operacional_OrdemDeServico_Tipo_aggregate",
	aggregate?: GraphQLTypes["operacional_OrdemDeServico_Tipo_aggregate_fields"],
	nodes: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo"]>
};
	/** aggregate fields of "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_aggregate_fields"]: {
	__typename: "operacional_OrdemDeServico_Tipo_aggregate_fields",
	count: number,
	max?: GraphQLTypes["operacional_OrdemDeServico_Tipo_max_fields"],
	min?: GraphQLTypes["operacional_OrdemDeServico_Tipo_min_fields"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico_Tipo". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_Tipo_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	OrdemDeServicos?: GraphQLTypes["operacional_OrdemDeServico_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"]>,
	_not?: GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"],
	_or?: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"]>
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_constraint"]: operacional_OrdemDeServico_Tipo_constraint;
	["operacional_OrdemDeServico_Tipo_enum"]: operacional_OrdemDeServico_Tipo_enum;
	/** Boolean expression to compare columns of type "operacional_OrdemDeServico_Tipo_enum". All fields are combined with logical 'AND'. */
["operacional_OrdemDeServico_Tipo_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"],
	_in?: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"],
	_nin?: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"]>
};
	/** input type for inserting data into table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_insert_input"]: {
		Comentario?: string,
	OrdemDeServicos?: GraphQLTypes["operacional_OrdemDeServico_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_Tipo_max_fields"]: {
	__typename: "operacional_OrdemDeServico_Tipo_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_Tipo_min_fields"]: {
	__typename: "operacional_OrdemDeServico_Tipo_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_mutation_response"]: {
	__typename: "operacional_OrdemDeServico_Tipo_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo"]>
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"]: {
		data: GraphQLTypes["operacional_OrdemDeServico_Tipo_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["operacional_OrdemDeServico_Tipo_on_conflict"]
};
	/** on conflict condition type for table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_on_conflict"]: {
		constraint: GraphQLTypes["operacional_OrdemDeServico_Tipo_constraint"],
	update_columns: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo_update_column"]>,
	where?: GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"]
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico_Tipo". */
["operacional_OrdemDeServico_Tipo_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	OrdemDeServicos_aggregate?: GraphQLTypes["operacional_OrdemDeServico_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: operacional_OrdemDeServico_Tipo */
["operacional_OrdemDeServico_Tipo_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_select_column"]: operacional_OrdemDeServico_Tipo_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "operacional.OrdemDeServico_Tipo" */
["operacional_OrdemDeServico_Tipo_update_column"]: operacional_OrdemDeServico_Tipo_update_column;
	/** aggregated selection of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate"]: {
	__typename: "operacional_OrdemDeServico_aggregate",
	aggregate?: GraphQLTypes["operacional_OrdemDeServico_aggregate_fields"],
	nodes: Array<GraphQLTypes["operacional_OrdemDeServico"]>
};
	/** aggregate fields of "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_fields"]: {
	__typename: "operacional_OrdemDeServico_aggregate_fields",
	avg?: GraphQLTypes["operacional_OrdemDeServico_avg_fields"],
	count: number,
	max?: GraphQLTypes["operacional_OrdemDeServico_max_fields"],
	min?: GraphQLTypes["operacional_OrdemDeServico_min_fields"],
	stddev?: GraphQLTypes["operacional_OrdemDeServico_stddev_fields"],
	stddev_pop?: GraphQLTypes["operacional_OrdemDeServico_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["operacional_OrdemDeServico_stddev_samp_fields"],
	sum?: GraphQLTypes["operacional_OrdemDeServico_sum_fields"],
	var_pop?: GraphQLTypes["operacional_OrdemDeServico_var_pop_fields"],
	var_samp?: GraphQLTypes["operacional_OrdemDeServico_var_samp_fields"],
	variance?: GraphQLTypes["operacional_OrdemDeServico_variance_fields"]
};
	/** order by aggregate values of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_aggregate_order_by"]: {
		avg?: GraphQLTypes["operacional_OrdemDeServico_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["operacional_OrdemDeServico_max_order_by"],
	min?: GraphQLTypes["operacional_OrdemDeServico_min_order_by"],
	stddev?: GraphQLTypes["operacional_OrdemDeServico_stddev_order_by"],
	stddev_pop?: GraphQLTypes["operacional_OrdemDeServico_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["operacional_OrdemDeServico_stddev_samp_order_by"],
	sum?: GraphQLTypes["operacional_OrdemDeServico_sum_order_by"],
	var_pop?: GraphQLTypes["operacional_OrdemDeServico_var_pop_order_by"],
	var_samp?: GraphQLTypes["operacional_OrdemDeServico_var_samp_order_by"],
	variance?: GraphQLTypes["operacional_OrdemDeServico_variance_order_by"]
};
	/** input type for inserting array relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["operacional_OrdemDeServico_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["operacional_OrdemDeServico_on_conflict"]
};
	/** aggregate avg on columns */
["operacional_OrdemDeServico_avg_fields"]: {
	__typename: "operacional_OrdemDeServico_avg_fields",
	CodigoIdentificador?: number
};
	/** order by avg() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_avg_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "operacional.OrdemDeServico". All fields are combined with a logical 'AND'. */
["operacional_OrdemDeServico_bool_exp"]: {
		Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_bool_exp"],
	CodigoIdentificador?: GraphQLTypes["Int_comparison_exp"],
	DataAgendamento?: GraphQLTypes["timestamptz_comparison_exp"],
	DataConcluida?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Proposta_Id?: GraphQLTypes["uuid_comparison_exp"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum_comparison_exp"],
	Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_bool_exp"],
	Tipo_Id?: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum_comparison_exp"],
	_and?: Array<GraphQLTypes["operacional_OrdemDeServico_bool_exp"]>,
	_not?: GraphQLTypes["operacional_OrdemDeServico_bool_exp"],
	_or?: Array<GraphQLTypes["operacional_OrdemDeServico_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_constraint"]: operacional_OrdemDeServico_constraint;
	/** input type for incrementing numeric columns in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_inc_input"]: {
		CodigoIdentificador?: number
};
	/** input type for inserting data into table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_insert_input"]: {
		Atividades?: GraphQLTypes["operacional_OrdemDeServico_Atividades_arr_rel_insert_input"],
	CodigoIdentificador?: number,
	DataAgendamento?: GraphQLTypes["timestamptz"],
	DataConcluida?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_obj_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["operacional_OrdemDeServico_max_fields"]: {
	__typename: "operacional_OrdemDeServico_max_fields",
	CodigoIdentificador?: number,
	DataAgendamento?: GraphQLTypes["timestamptz"],
	DataConcluida?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_max_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"],
	DataAgendamento?: GraphQLTypes["order_by"],
	DataConcluida?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["operacional_OrdemDeServico_min_fields"]: {
	__typename: "operacional_OrdemDeServico_min_fields",
	CodigoIdentificador?: number,
	DataAgendamento?: GraphQLTypes["timestamptz"],
	DataConcluida?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_min_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"],
	DataAgendamento?: GraphQLTypes["order_by"],
	DataConcluida?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_mutation_response"]: {
	__typename: "operacional_OrdemDeServico_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["operacional_OrdemDeServico"]>
};
	/** input type for inserting object relation for remote table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_obj_rel_insert_input"]: {
		data: GraphQLTypes["operacional_OrdemDeServico_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["operacional_OrdemDeServico_on_conflict"]
};
	/** on conflict condition type for table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_on_conflict"]: {
		constraint: GraphQLTypes["operacional_OrdemDeServico_constraint"],
	update_columns: Array<GraphQLTypes["operacional_OrdemDeServico_update_column"]>,
	where?: GraphQLTypes["operacional_OrdemDeServico_bool_exp"]
};
	/** Ordering options when selecting data from "operacional.OrdemDeServico". */
["operacional_OrdemDeServico_order_by"]: {
		Atividades_aggregate?: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate_order_by"],
	CodigoIdentificador?: GraphQLTypes["order_by"],
	DataAgendamento?: GraphQLTypes["order_by"],
	DataConcluida?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Proposta_Id?: GraphQLTypes["order_by"],
	Situacao?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["operacional_OrdemDeServico_Tipo_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: operacional_OrdemDeServico */
["operacional_OrdemDeServico_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_select_column"]: operacional_OrdemDeServico_select_column;
	/** input type for updating data in table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_set_input"]: {
		CodigoIdentificador?: number,
	DataAgendamento?: GraphQLTypes["timestamptz"],
	DataConcluida?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	Proposta_Id?: GraphQLTypes["uuid"],
	Situacao_Id?: GraphQLTypes["operacional_OrdemDeServico_Situacoes_enum"],
	Tipo_Id?: GraphQLTypes["operacional_OrdemDeServico_Tipo_enum"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["operacional_OrdemDeServico_stddev_fields"]: {
	__typename: "operacional_OrdemDeServico_stddev_fields",
	CodigoIdentificador?: number
};
	/** order by stddev() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["operacional_OrdemDeServico_stddev_pop_fields"]: {
	__typename: "operacional_OrdemDeServico_stddev_pop_fields",
	CodigoIdentificador?: number
};
	/** order by stddev_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_pop_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["operacional_OrdemDeServico_stddev_samp_fields"]: {
	__typename: "operacional_OrdemDeServico_stddev_samp_fields",
	CodigoIdentificador?: number
};
	/** order by stddev_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_stddev_samp_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["operacional_OrdemDeServico_sum_fields"]: {
	__typename: "operacional_OrdemDeServico_sum_fields",
	CodigoIdentificador?: number
};
	/** order by sum() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_sum_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** update columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_update_column"]: operacional_OrdemDeServico_update_column;
	/** aggregate var_pop on columns */
["operacional_OrdemDeServico_var_pop_fields"]: {
	__typename: "operacional_OrdemDeServico_var_pop_fields",
	CodigoIdentificador?: number
};
	/** order by var_pop() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_pop_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["operacional_OrdemDeServico_var_samp_fields"]: {
	__typename: "operacional_OrdemDeServico_var_samp_fields",
	CodigoIdentificador?: number
};
	/** order by var_samp() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_var_samp_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["operacional_OrdemDeServico_variance_fields"]: {
	__typename: "operacional_OrdemDeServico_variance_fields",
	CodigoIdentificador?: number
};
	/** order by variance() on columns of table "operacional.OrdemDeServico" */
["operacional_OrdemDeServico_variance_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"]
};
	/** column ordering options */
["order_by"]: order_by;
	/** columns and relationships of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs"]: {
	__typename: "pedidosDeCompra_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate"]: {
	__typename: "pedidosDeCompra_Logs_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Logs"]>
};
	/** aggregate fields of "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Logs_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Logs_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_constraint"]: pedidosDeCompra_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeCompra_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeCompra_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeCompra_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeCompra_Logs_max_fields"]: {
	__typename: "pedidosDeCompra_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Logs_min_fields"]: {
	__typename: "pedidosDeCompra_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_mutation_response"]: {
	__typename: "pedidosDeCompra_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Logs"]>
};
	/** on conflict condition type for table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Logs_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Logs_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Logs". */
["pedidosDeCompra_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Logs */
["pedidosDeCompra_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeCompra_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_select_column"]: pedidosDeCompra_Logs_select_column;
	/** input type for updating data in table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "pedidosDeCompra.Logs" */
["pedidosDeCompra_Logs_update_column"]: pedidosDeCompra_Logs_update_column;
	/** columns and relationships of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos"]: {
	__typename: "pedidosDeCompra_Orcamentos",
	Aprovado: boolean,
	Fornecedor_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Orcamentos_Produtos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>,
	/** An aggregate relationship */
	Orcamentos_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** An object relationship */
	Pedido: GraphQLTypes["pedidosDeCompra_Pedidos"],
	Pedido_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos",
	Descricao?: string,
	/** An object relationship */
	Fabricante?: GraphQLTypes["estoque_Fabricantes"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Orcamento: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	Orcamento_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	PedidosDeCompra_Produto: GraphQLTypes["pedidosDeCompra_Produtos"],
	PedidosDeCompra_Produto_Id: GraphQLTypes["uuid"],
	Quantidade: number,
	ValorUnitario: GraphQLTypes["float8"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>
};
	/** aggregate fields of "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_aggregate_fields",
	avg?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_min_fields"],
	stddev?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_sum_fields"],
	var_pop?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"],
	variance?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"]: {
		avg?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_max_order_by"],
	min?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_min_order_by"],
	stddev?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"],
	sum?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"],
	var_pop?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"],
	var_samp?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"],
	variance?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_on_conflict"]
};
	/** aggregate avg on columns */
["pedidosDeCompra_Orcamentos_Produtos_avg_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_avg_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by avg() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_avg_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos_Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	Fabricante_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Orcamento?: GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"],
	Orcamento_Id?: GraphQLTypes["uuid_comparison_exp"],
	PedidosDeCompra_Produto?: GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	Quantidade?: GraphQLTypes["Int_comparison_exp"],
	ValorUnitario?: GraphQLTypes["float8_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_constraint"]: pedidosDeCompra_Orcamentos_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_inc_input"]: {
		Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"]
};
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_insert_input"]: {
		Descricao?: string,
	Fabricante?: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamento?: GraphQLTypes["pedidosDeCompra_Orcamentos_obj_rel_insert_input"],
	Orcamento_Id?: GraphQLTypes["uuid"],
	PedidosDeCompra_Produto?: GraphQLTypes["pedidosDeCompra_Produtos_obj_rel_insert_input"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_Produtos_max_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_max_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamento_Id?: GraphQLTypes["uuid"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Orcamento_Id?: GraphQLTypes["order_by"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_Produtos_min_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_min_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamento_Id?: GraphQLTypes["uuid"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Orcamento_Id?: GraphQLTypes["order_by"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_mutation_response"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>
};
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos_Produtos". */
["pedidosDeCompra_Orcamentos_Produtos_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Orcamento?: GraphQLTypes["pedidosDeCompra_Orcamentos_order_by"],
	Orcamento_Id?: GraphQLTypes["order_by"],
	PedidosDeCompra_Produto?: GraphQLTypes["pedidosDeCompra_Produtos_order_by"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Orcamentos_Produtos */
["pedidosDeCompra_Orcamentos_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_select_column"]: pedidosDeCompra_Orcamentos_Produtos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_set_input"]: {
		Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamento_Id?: GraphQLTypes["uuid"],
	PedidosDeCompra_Produto_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_stddev_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by stddev() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_stddev_pop_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_stddev_samp_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_stddev_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["pedidosDeCompra_Orcamentos_Produtos_sum_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_sum_fields",
	Quantidade?: number,
	ValorUnitario?: GraphQLTypes["float8"]
};
	/** order by sum() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_sum_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** update columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_update_column"]: pedidosDeCompra_Orcamentos_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_var_pop_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by var_pop() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_var_samp_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by var_samp() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_var_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["pedidosDeCompra_Orcamentos_Produtos_variance_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_Produtos_variance_fields",
	Quantidade?: number,
	ValorUnitario?: number
};
	/** order by variance() on columns of table "pedidosDeCompra.Orcamentos_Produtos" */
["pedidosDeCompra_Orcamentos_Produtos_variance_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"],
	ValorUnitario?: GraphQLTypes["order_by"]
};
	/** aggregated selection of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate"]: {
	__typename: "pedidosDeCompra_Orcamentos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Orcamentos"]>
};
	/** aggregate fields of "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Orcamentos_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Orcamentos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeCompra_Orcamentos_max_order_by"],
	min?: GraphQLTypes["pedidosDeCompra_Orcamentos_min_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Orcamentos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Orcamentos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Orcamentos_bool_exp"]: {
		Aprovado?: GraphQLTypes["Boolean_comparison_exp"],
	Fornecedor_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"],
	Pedido_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_constraint"]: pedidosDeCompra_Orcamentos_constraint;
	/** input type for inserting data into table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_insert_input"]: {
		Aprovado?: boolean,
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_obj_rel_insert_input"],
	Pedido_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeCompra_Orcamentos_max_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_max_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_max_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Orcamentos_min_fields"]: {
	__typename: "pedidosDeCompra_Orcamentos_min_fields",
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_min_order_by"]: {
		Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_mutation_response"]: {
	__typename: "pedidosDeCompra_Orcamentos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Orcamentos"]>
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeCompra_Orcamentos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Orcamentos_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Orcamentos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Orcamentos". */
["pedidosDeCompra_Orcamentos_order_by"]: {
		Aprovado?: GraphQLTypes["order_by"],
	Fornecedor_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Orcamentos_Produtos_aggregate?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Orcamentos */
["pedidosDeCompra_Orcamentos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_select_column"]: pedidosDeCompra_Orcamentos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_set_input"]: {
		Aprovado?: boolean,
	Fornecedor_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "pedidosDeCompra.Orcamentos" */
["pedidosDeCompra_Orcamentos_update_column"]: pedidosDeCompra_Orcamentos_update_column;
	/** columns and relationships of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos"]: {
	__typename: "pedidosDeCompra_Pedidos",
	DataAbertura: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataCompra?: GraphQLTypes["timestamptz"],
	DataEntrada?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataOrcamento?: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	/** An array relationship */
	Orcamentos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos"]>,
	/** An aggregate relationship */
	Orcamentos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** An array relationship */
	Produtos: Array<GraphQLTypes["pedidosDeCompra_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Produtos_aggregate"],
	/** An object relationship */
	Situacao: GraphQLTypes["pedidosDeCompra_Situacoes"],
	Situacao_Id: GraphQLTypes["pedidosDeCompra_Situacoes_enum"],
	Solicitante_Id: GraphQLTypes["uuid"],
	TipoPagamento?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate"]: {
	__typename: "pedidosDeCompra_Pedidos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Pedidos"]>
};
	/** aggregate fields of "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Pedidos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Pedidos_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Pedidos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeCompra_Pedidos_max_order_by"],
	min?: GraphQLTypes["pedidosDeCompra_Pedidos_min_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeCompra_Pedidos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Pedidos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Pedidos_bool_exp"]: {
		DataAbertura?: GraphQLTypes["timestamptz_comparison_exp"],
	DataAutorizacao?: GraphQLTypes["timestamptz_comparison_exp"],
	DataCompra?: GraphQLTypes["timestamptz_comparison_exp"],
	DataEntrada?: GraphQLTypes["timestamptz_comparison_exp"],
	DataEntregue?: GraphQLTypes["timestamptz_comparison_exp"],
	DataOrcamento?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	MotivoRecusado?: GraphQLTypes["String_comparison_exp"],
	Orcamentos?: GraphQLTypes["pedidosDeCompra_Orcamentos_bool_exp"],
	Produtos?: GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"],
	Situacao?: GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["pedidosDeCompra_Situacoes_enum_comparison_exp"],
	Solicitante_Id?: GraphQLTypes["uuid_comparison_exp"],
	TipoPagamento?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_constraint"]: pedidosDeCompra_Pedidos_constraint;
	/** input type for inserting data into table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_insert_input"]: {
		DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataCompra?: GraphQLTypes["timestamptz"],
	DataEntrada?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataOrcamento?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Orcamentos?: GraphQLTypes["pedidosDeCompra_Orcamentos_arr_rel_insert_input"],
	Produtos?: GraphQLTypes["pedidosDeCompra_Produtos_arr_rel_insert_input"],
	Situacao?: GraphQLTypes["pedidosDeCompra_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["pedidosDeCompra_Situacoes_enum"],
	Solicitante_Id?: GraphQLTypes["uuid"],
	TipoPagamento?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeCompra_Pedidos_max_fields"]: {
	__typename: "pedidosDeCompra_Pedidos_max_fields",
	DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataCompra?: GraphQLTypes["timestamptz"],
	DataEntrada?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataOrcamento?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Solicitante_Id?: GraphQLTypes["uuid"],
	TipoPagamento?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_max_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataCompra?: GraphQLTypes["order_by"],
	DataEntrada?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataOrcamento?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	TipoPagamento?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Pedidos_min_fields"]: {
	__typename: "pedidosDeCompra_Pedidos_min_fields",
	DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataCompra?: GraphQLTypes["timestamptz"],
	DataEntrada?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataOrcamento?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Solicitante_Id?: GraphQLTypes["uuid"],
	TipoPagamento?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_min_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataCompra?: GraphQLTypes["order_by"],
	DataEntrada?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataOrcamento?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	TipoPagamento?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_mutation_response"]: {
	__typename: "pedidosDeCompra_Pedidos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Pedidos"]>
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeCompra_Pedidos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Pedidos_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Pedidos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Pedidos_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Pedidos". */
["pedidosDeCompra_Pedidos_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataCompra?: GraphQLTypes["order_by"],
	DataEntrada?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataOrcamento?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Orcamentos_aggregate?: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate_order_by"],
	Produtos_aggregate?: GraphQLTypes["pedidosDeCompra_Produtos_aggregate_order_by"],
	Situacao?: GraphQLTypes["pedidosDeCompra_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	TipoPagamento?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Pedidos */
["pedidosDeCompra_Pedidos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_select_column"]: pedidosDeCompra_Pedidos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_set_input"]: {
		DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataCompra?: GraphQLTypes["timestamptz"],
	DataEntrada?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataOrcamento?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Situacao_Id?: GraphQLTypes["pedidosDeCompra_Situacoes_enum"],
	Solicitante_Id?: GraphQLTypes["uuid"],
	TipoPagamento?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "pedidosDeCompra.Pedidos" */
["pedidosDeCompra_Pedidos_update_column"]: pedidosDeCompra_Pedidos_update_column;
	/** columns and relationships of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos"]: {
	__typename: "pedidosDeCompra_Produtos",
	Autorizado: boolean,
	Descricao: string,
	/** An object relationship */
	Fabricante?: GraphQLTypes["estoque_Fabricantes"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Orcamentos_Produtos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>,
	/** An aggregate relationship */
	Orcamentos_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** An object relationship */
	Pedido: GraphQLTypes["pedidosDeCompra_Pedidos"],
	PedidoDeCompra_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida: number,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate"]: {
	__typename: "pedidosDeCompra_Produtos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Produtos"]>
};
	/** aggregate fields of "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Produtos_aggregate_fields",
	avg?: GraphQLTypes["pedidosDeCompra_Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Produtos_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Produtos_min_fields"],
	stddev?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["pedidosDeCompra_Produtos_sum_fields"],
	var_pop?: GraphQLTypes["pedidosDeCompra_Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["pedidosDeCompra_Produtos_var_samp_fields"],
	variance?: GraphQLTypes["pedidosDeCompra_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_aggregate_order_by"]: {
		avg?: GraphQLTypes["pedidosDeCompra_Produtos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeCompra_Produtos_max_order_by"],
	min?: GraphQLTypes["pedidosDeCompra_Produtos_min_order_by"],
	stddev?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["pedidosDeCompra_Produtos_stddev_samp_order_by"],
	sum?: GraphQLTypes["pedidosDeCompra_Produtos_sum_order_by"],
	var_pop?: GraphQLTypes["pedidosDeCompra_Produtos_var_pop_order_by"],
	var_samp?: GraphQLTypes["pedidosDeCompra_Produtos_var_samp_order_by"],
	variance?: GraphQLTypes["pedidosDeCompra_Produtos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeCompra_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Produtos_on_conflict"]
};
	/** aggregate avg on columns */
["pedidosDeCompra_Produtos_avg_fields"]: {
	__typename: "pedidosDeCompra_Produtos_avg_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by avg() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_avg_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Produtos_bool_exp"]: {
		Autorizado?: GraphQLTypes["Boolean_comparison_exp"],
	Descricao?: GraphQLTypes["String_comparison_exp"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	Fabricante_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_bool_exp"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"],
	PedidoDeCompra_Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	QuantidadeAutorizada?: GraphQLTypes["Int_comparison_exp"],
	QuantidadeComprada?: GraphQLTypes["Int_comparison_exp"],
	QuantidadeEntregue?: GraphQLTypes["Int_comparison_exp"],
	QuantidadePedida?: GraphQLTypes["Int_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_constraint"]: pedidosDeCompra_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_inc_input"]: {
		QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** input type for inserting data into table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_insert_input"]: {
		Autorizado?: boolean,
	Descricao?: string,
	Fabricante?: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Orcamentos_Produtos?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_arr_rel_insert_input"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_obj_rel_insert_input"],
	PedidoDeCompra_Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeCompra_Produtos_max_fields"]: {
	__typename: "pedidosDeCompra_Produtos_max_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PedidoDeCompra_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	PedidoDeCompra_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeCompra_Produtos_min_fields"]: {
	__typename: "pedidosDeCompra_Produtos_min_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PedidoDeCompra_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	PedidoDeCompra_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_mutation_response"]: {
	__typename: "pedidosDeCompra_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Produtos"]>
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeCompra_Produtos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Produtos_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Produtos_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Produtos". */
["pedidosDeCompra_Produtos_order_by"]: {
		Autorizado?: GraphQLTypes["order_by"],
	Descricao?: GraphQLTypes["order_by"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Orcamentos_Produtos_aggregate?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate_order_by"],
	Pedido?: GraphQLTypes["pedidosDeCompra_Pedidos_order_by"],
	PedidoDeCompra_Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Produtos */
["pedidosDeCompra_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_select_column"]: pedidosDeCompra_Produtos_select_column;
	/** input type for updating data in table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_set_input"]: {
		Autorizado?: boolean,
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	PedidoDeCompra_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["pedidosDeCompra_Produtos_stddev_fields"]: {
	__typename: "pedidosDeCompra_Produtos_stddev_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by stddev() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["pedidosDeCompra_Produtos_stddev_pop_fields"]: {
	__typename: "pedidosDeCompra_Produtos_stddev_pop_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by stddev_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_pop_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["pedidosDeCompra_Produtos_stddev_samp_fields"]: {
	__typename: "pedidosDeCompra_Produtos_stddev_samp_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by stddev_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_stddev_samp_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["pedidosDeCompra_Produtos_sum_fields"]: {
	__typename: "pedidosDeCompra_Produtos_sum_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by sum() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_sum_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** update columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_update_column"]: pedidosDeCompra_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeCompra_Produtos_var_pop_fields"]: {
	__typename: "pedidosDeCompra_Produtos_var_pop_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by var_pop() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_pop_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["pedidosDeCompra_Produtos_var_samp_fields"]: {
	__typename: "pedidosDeCompra_Produtos_var_samp_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by var_samp() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_var_samp_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["pedidosDeCompra_Produtos_variance_fields"]: {
	__typename: "pedidosDeCompra_Produtos_variance_fields",
	QuantidadeAutorizada?: number,
	QuantidadeComprada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number
};
	/** order by variance() on columns of table "pedidosDeCompra.Produtos" */
["pedidosDeCompra_Produtos_variance_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeComprada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes"]: {
	__typename: "pedidosDeCompra_Situacoes",
	Comentario: string,
	/** An array relationship */
	Pedidos: Array<GraphQLTypes["pedidosDeCompra_Pedidos"]>,
	/** An aggregate relationship */
	Pedidos_aggregate: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate"],
	Valor: string
};
	/** aggregated selection of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate"]: {
	__typename: "pedidosDeCompra_Situacoes_aggregate",
	aggregate?: GraphQLTypes["pedidosDeCompra_Situacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeCompra_Situacoes"]>
};
	/** aggregate fields of "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_aggregate_fields"]: {
	__typename: "pedidosDeCompra_Situacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeCompra_Situacoes_max_fields"],
	min?: GraphQLTypes["pedidosDeCompra_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "pedidosDeCompra.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeCompra_Situacoes_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Pedidos?: GraphQLTypes["pedidosDeCompra_Pedidos_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_constraint"]: pedidosDeCompra_Situacoes_constraint;
	["pedidosDeCompra_Situacoes_enum"]: pedidosDeCompra_Situacoes_enum;
	/** Boolean expression to compare columns of type "pedidosDeCompra_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeCompra_Situacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["pedidosDeCompra_Situacoes_enum"],
	_in?: Array<GraphQLTypes["pedidosDeCompra_Situacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["pedidosDeCompra_Situacoes_enum"],
	_nin?: Array<GraphQLTypes["pedidosDeCompra_Situacoes_enum"]>
};
	/** input type for inserting data into table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_insert_input"]: {
		Comentario?: string,
	Pedidos?: GraphQLTypes["pedidosDeCompra_Pedidos_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["pedidosDeCompra_Situacoes_max_fields"]: {
	__typename: "pedidosDeCompra_Situacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["pedidosDeCompra_Situacoes_min_fields"]: {
	__typename: "pedidosDeCompra_Situacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_mutation_response"]: {
	__typename: "pedidosDeCompra_Situacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeCompra_Situacoes"]>
};
	/** input type for inserting object relation for remote table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeCompra_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeCompra_Situacoes_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeCompra_Situacoes_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeCompra_Situacoes_update_column"]>,
	where?: GraphQLTypes["pedidosDeCompra_Situacoes_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeCompra.Situacoes". */
["pedidosDeCompra_Situacoes_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Pedidos_aggregate?: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeCompra_Situacoes */
["pedidosDeCompra_Situacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_select_column"]: pedidosDeCompra_Situacoes_select_column;
	/** input type for updating data in table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "pedidosDeCompra.Situacoes" */
["pedidosDeCompra_Situacoes_update_column"]: pedidosDeCompra_Situacoes_update_column;
	/** columns and relationships of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs"]: {
	__typename: "pedidosDeSaida_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate"]: {
	__typename: "pedidosDeSaida_Logs_aggregate",
	aggregate?: GraphQLTypes["pedidosDeSaida_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeSaida_Logs"]>
};
	/** aggregate fields of "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_aggregate_fields"]: {
	__typename: "pedidosDeSaida_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeSaida_Logs_max_fields"],
	min?: GraphQLTypes["pedidosDeSaida_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Logs". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeSaida_Logs_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeSaida_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeSaida_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_constraint"]: pedidosDeSaida_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["pedidosDeSaida_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["pedidosDeSaida_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["pedidosDeSaida_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeSaida_Logs_max_fields"]: {
	__typename: "pedidosDeSaida_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["pedidosDeSaida_Logs_min_fields"]: {
	__typename: "pedidosDeSaida_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_mutation_response"]: {
	__typename: "pedidosDeSaida_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeSaida_Logs"]>
};
	/** on conflict condition type for table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeSaida_Logs_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeSaida_Logs_update_column"]>,
	where?: GraphQLTypes["pedidosDeSaida_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeSaida.Logs". */
["pedidosDeSaida_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeSaida_Logs */
["pedidosDeSaida_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["pedidosDeSaida_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_select_column"]: pedidosDeSaida_Logs_select_column;
	/** input type for updating data in table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "pedidosDeSaida.Logs" */
["pedidosDeSaida_Logs_update_column"]: pedidosDeSaida_Logs_update_column;
	/** columns and relationships of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos"]: {
	__typename: "pedidosDeSaida_Pedidos",
	DataAbertura: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataRecebido?: GraphQLTypes["timestamptz"],
	Id: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	/** An array relationship */
	Produtos: Array<GraphQLTypes["pedidosDeSaida_Produtos"]>,
	/** An aggregate relationship */
	Produtos_aggregate: GraphQLTypes["pedidosDeSaida_Produtos_aggregate"],
	/** An object relationship */
	Situacao: GraphQLTypes["pedidosDeSaida_Situacoes"],
	Situacao_Id: GraphQLTypes["pedidosDeSaida_Situacoes_enum"],
	Solicitante_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate"]: {
	__typename: "pedidosDeSaida_Pedidos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeSaida_Pedidos"]>
};
	/** aggregate fields of "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_fields"]: {
	__typename: "pedidosDeSaida_Pedidos_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeSaida_Pedidos_max_fields"],
	min?: GraphQLTypes["pedidosDeSaida_Pedidos_min_fields"]
};
	/** order by aggregate values of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeSaida_Pedidos_max_order_by"],
	min?: GraphQLTypes["pedidosDeSaida_Pedidos_min_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeSaida_Pedidos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeSaida_Pedidos_on_conflict"]
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Pedidos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Pedidos_bool_exp"]: {
		DataAbertura?: GraphQLTypes["timestamptz_comparison_exp"],
	DataAutorizacao?: GraphQLTypes["timestamptz_comparison_exp"],
	DataEntregue?: GraphQLTypes["timestamptz_comparison_exp"],
	DataRecebido?: GraphQLTypes["timestamptz_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	MotivoRecusado?: GraphQLTypes["String_comparison_exp"],
	Produtos?: GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"],
	Situacao?: GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["pedidosDeSaida_Situacoes_enum_comparison_exp"],
	Solicitante_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_constraint"]: pedidosDeSaida_Pedidos_constraint;
	/** input type for inserting data into table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_insert_input"]: {
		DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataRecebido?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Produtos?: GraphQLTypes["pedidosDeSaida_Produtos_arr_rel_insert_input"],
	Situacao?: GraphQLTypes["pedidosDeSaida_Situacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["pedidosDeSaida_Situacoes_enum"],
	Solicitante_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeSaida_Pedidos_max_fields"]: {
	__typename: "pedidosDeSaida_Pedidos_max_fields",
	DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataRecebido?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Solicitante_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_max_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataRecebido?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeSaida_Pedidos_min_fields"]: {
	__typename: "pedidosDeSaida_Pedidos_min_fields",
	DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataRecebido?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Solicitante_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_min_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataRecebido?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_mutation_response"]: {
	__typename: "pedidosDeSaida_Pedidos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeSaida_Pedidos"]>
};
	/** input type for inserting object relation for remote table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeSaida_Pedidos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeSaida_Pedidos_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeSaida_Pedidos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeSaida_Pedidos_update_column"]>,
	where?: GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeSaida.Pedidos". */
["pedidosDeSaida_Pedidos_order_by"]: {
		DataAbertura?: GraphQLTypes["order_by"],
	DataAutorizacao?: GraphQLTypes["order_by"],
	DataEntregue?: GraphQLTypes["order_by"],
	DataRecebido?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	MotivoRecusado?: GraphQLTypes["order_by"],
	Produtos_aggregate?: GraphQLTypes["pedidosDeSaida_Produtos_aggregate_order_by"],
	Situacao?: GraphQLTypes["pedidosDeSaida_Situacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	Solicitante_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeSaida_Pedidos */
["pedidosDeSaida_Pedidos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_select_column"]: pedidosDeSaida_Pedidos_select_column;
	/** input type for updating data in table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_set_input"]: {
		DataAbertura?: GraphQLTypes["timestamptz"],
	DataAutorizacao?: GraphQLTypes["timestamptz"],
	DataEntregue?: GraphQLTypes["timestamptz"],
	DataRecebido?: GraphQLTypes["timestamptz"],
	Id?: GraphQLTypes["uuid"],
	MotivoRecusado?: string,
	Situacao_Id?: GraphQLTypes["pedidosDeSaida_Situacoes_enum"],
	Solicitante_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "pedidosDeSaida.Pedidos" */
["pedidosDeSaida_Pedidos_update_column"]: pedidosDeSaida_Pedidos_update_column;
	/** columns and relationships of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos"]: {
	__typename: "pedidosDeSaida_Produtos",
	Autorizado: boolean,
	Descricao: string,
	/** An object relationship */
	Fabricante?: GraphQLTypes["estoque_Fabricantes"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pedido: GraphQLTypes["pedidosDeSaida_Pedidos"],
	Pedido_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Produto: GraphQLTypes["Produtos"],
	Produto_Id: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida: number,
	QuantidadeRecebida?: number,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate"]: {
	__typename: "pedidosDeSaida_Produtos_aggregate",
	aggregate?: GraphQLTypes["pedidosDeSaida_Produtos_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeSaida_Produtos"]>
};
	/** aggregate fields of "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_fields"]: {
	__typename: "pedidosDeSaida_Produtos_aggregate_fields",
	avg?: GraphQLTypes["pedidosDeSaida_Produtos_avg_fields"],
	count: number,
	max?: GraphQLTypes["pedidosDeSaida_Produtos_max_fields"],
	min?: GraphQLTypes["pedidosDeSaida_Produtos_min_fields"],
	stddev?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_fields"],
	stddev_pop?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_samp_fields"],
	sum?: GraphQLTypes["pedidosDeSaida_Produtos_sum_fields"],
	var_pop?: GraphQLTypes["pedidosDeSaida_Produtos_var_pop_fields"],
	var_samp?: GraphQLTypes["pedidosDeSaida_Produtos_var_samp_fields"],
	variance?: GraphQLTypes["pedidosDeSaida_Produtos_variance_fields"]
};
	/** order by aggregate values of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_aggregate_order_by"]: {
		avg?: GraphQLTypes["pedidosDeSaida_Produtos_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["pedidosDeSaida_Produtos_max_order_by"],
	min?: GraphQLTypes["pedidosDeSaida_Produtos_min_order_by"],
	stddev?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_order_by"],
	stddev_pop?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["pedidosDeSaida_Produtos_stddev_samp_order_by"],
	sum?: GraphQLTypes["pedidosDeSaida_Produtos_sum_order_by"],
	var_pop?: GraphQLTypes["pedidosDeSaida_Produtos_var_pop_order_by"],
	var_samp?: GraphQLTypes["pedidosDeSaida_Produtos_var_samp_order_by"],
	variance?: GraphQLTypes["pedidosDeSaida_Produtos_variance_order_by"]
};
	/** input type for inserting array relation for remote table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["pedidosDeSaida_Produtos_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeSaida_Produtos_on_conflict"]
};
	/** aggregate avg on columns */
["pedidosDeSaida_Produtos_avg_fields"]: {
	__typename: "pedidosDeSaida_Produtos_avg_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by avg() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_avg_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Produtos". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Produtos_bool_exp"]: {
		Autorizado?: GraphQLTypes["Boolean_comparison_exp"],
	Descricao?: GraphQLTypes["String_comparison_exp"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_bool_exp"],
	Fabricante_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Pedido?: GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"],
	Pedido_Id?: GraphQLTypes["uuid_comparison_exp"],
	Produto?: GraphQLTypes["Produtos_bool_exp"],
	Produto_Id?: GraphQLTypes["uuid_comparison_exp"],
	QuantidadeAutorizada?: GraphQLTypes["Int_comparison_exp"],
	QuantidadeEntregue?: GraphQLTypes["Int_comparison_exp"],
	QuantidadePedida?: GraphQLTypes["Int_comparison_exp"],
	QuantidadeRecebida?: GraphQLTypes["Int_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_constraint"]: pedidosDeSaida_Produtos_constraint;
	/** input type for incrementing numeric columns in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_inc_input"]: {
		QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** input type for inserting data into table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_insert_input"]: {
		Autorizado?: boolean,
	Descricao?: string,
	Fabricante?: GraphQLTypes["estoque_Fabricantes_obj_rel_insert_input"],
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido?: GraphQLTypes["pedidosDeSaida_Pedidos_obj_rel_insert_input"],
	Pedido_Id?: GraphQLTypes["uuid"],
	Produto?: GraphQLTypes["Produtos_obj_rel_insert_input"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["pedidosDeSaida_Produtos_max_fields"]: {
	__typename: "pedidosDeSaida_Produtos_max_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_max_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["pedidosDeSaida_Produtos_min_fields"]: {
	__typename: "pedidosDeSaida_Produtos_min_fields",
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_min_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_mutation_response"]: {
	__typename: "pedidosDeSaida_Produtos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeSaida_Produtos"]>
};
	/** on conflict condition type for table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeSaida_Produtos_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeSaida_Produtos_update_column"]>,
	where?: GraphQLTypes["pedidosDeSaida_Produtos_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeSaida.Produtos". */
["pedidosDeSaida_Produtos_order_by"]: {
		Autorizado?: GraphQLTypes["order_by"],
	Descricao?: GraphQLTypes["order_by"],
	Fabricante?: GraphQLTypes["estoque_Fabricantes_order_by"],
	Fabricante_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pedido?: GraphQLTypes["pedidosDeSaida_Pedidos_order_by"],
	Pedido_Id?: GraphQLTypes["order_by"],
	Produto?: GraphQLTypes["Produtos_order_by"],
	Produto_Id?: GraphQLTypes["order_by"],
	QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeSaida_Produtos */
["pedidosDeSaida_Produtos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_select_column"]: pedidosDeSaida_Produtos_select_column;
	/** input type for updating data in table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_set_input"]: {
		Autorizado?: boolean,
	Descricao?: string,
	Fabricante_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pedido_Id?: GraphQLTypes["uuid"],
	Produto_Id?: GraphQLTypes["uuid"],
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["pedidosDeSaida_Produtos_stddev_fields"]: {
	__typename: "pedidosDeSaida_Produtos_stddev_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by stddev() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["pedidosDeSaida_Produtos_stddev_pop_fields"]: {
	__typename: "pedidosDeSaida_Produtos_stddev_pop_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by stddev_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_pop_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["pedidosDeSaida_Produtos_stddev_samp_fields"]: {
	__typename: "pedidosDeSaida_Produtos_stddev_samp_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by stddev_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_stddev_samp_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["pedidosDeSaida_Produtos_sum_fields"]: {
	__typename: "pedidosDeSaida_Produtos_sum_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by sum() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_sum_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** update columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_update_column"]: pedidosDeSaida_Produtos_update_column;
	/** aggregate var_pop on columns */
["pedidosDeSaida_Produtos_var_pop_fields"]: {
	__typename: "pedidosDeSaida_Produtos_var_pop_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by var_pop() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_pop_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["pedidosDeSaida_Produtos_var_samp_fields"]: {
	__typename: "pedidosDeSaida_Produtos_var_samp_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by var_samp() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_var_samp_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["pedidosDeSaida_Produtos_variance_fields"]: {
	__typename: "pedidosDeSaida_Produtos_variance_fields",
	QuantidadeAutorizada?: number,
	QuantidadeEntregue?: number,
	QuantidadePedida?: number,
	QuantidadeRecebida?: number
};
	/** order by variance() on columns of table "pedidosDeSaida.Produtos" */
["pedidosDeSaida_Produtos_variance_order_by"]: {
		QuantidadeAutorizada?: GraphQLTypes["order_by"],
	QuantidadeEntregue?: GraphQLTypes["order_by"],
	QuantidadePedida?: GraphQLTypes["order_by"],
	QuantidadeRecebida?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes"]: {
	__typename: "pedidosDeSaida_Situacoes",
	Comentario: string,
	/** An array relationship */
	Pedidos: Array<GraphQLTypes["pedidosDeSaida_Pedidos"]>,
	/** An aggregate relationship */
	Pedidos_aggregate: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate"],
	Valor: string
};
	/** aggregated selection of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate"]: {
	__typename: "pedidosDeSaida_Situacoes_aggregate",
	aggregate?: GraphQLTypes["pedidosDeSaida_Situacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["pedidosDeSaida_Situacoes"]>
};
	/** aggregate fields of "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_aggregate_fields"]: {
	__typename: "pedidosDeSaida_Situacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["pedidosDeSaida_Situacoes_max_fields"],
	min?: GraphQLTypes["pedidosDeSaida_Situacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "pedidosDeSaida.Situacoes". All fields are combined with a logical 'AND'. */
["pedidosDeSaida_Situacoes_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Pedidos?: GraphQLTypes["pedidosDeSaida_Pedidos_bool_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"]>,
	_not?: GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"],
	_or?: Array<GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_constraint"]: pedidosDeSaida_Situacoes_constraint;
	["pedidosDeSaida_Situacoes_enum"]: pedidosDeSaida_Situacoes_enum;
	/** Boolean expression to compare columns of type "pedidosDeSaida_Situacoes_enum". All fields are combined with logical 'AND'. */
["pedidosDeSaida_Situacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["pedidosDeSaida_Situacoes_enum"],
	_in?: Array<GraphQLTypes["pedidosDeSaida_Situacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["pedidosDeSaida_Situacoes_enum"],
	_nin?: Array<GraphQLTypes["pedidosDeSaida_Situacoes_enum"]>
};
	/** input type for inserting data into table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_insert_input"]: {
		Comentario?: string,
	Pedidos?: GraphQLTypes["pedidosDeSaida_Pedidos_arr_rel_insert_input"],
	Valor?: string
};
	/** aggregate max on columns */
["pedidosDeSaida_Situacoes_max_fields"]: {
	__typename: "pedidosDeSaida_Situacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["pedidosDeSaida_Situacoes_min_fields"]: {
	__typename: "pedidosDeSaida_Situacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_mutation_response"]: {
	__typename: "pedidosDeSaida_Situacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["pedidosDeSaida_Situacoes"]>
};
	/** input type for inserting object relation for remote table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["pedidosDeSaida_Situacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["pedidosDeSaida_Situacoes_on_conflict"]
};
	/** on conflict condition type for table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_on_conflict"]: {
		constraint: GraphQLTypes["pedidosDeSaida_Situacoes_constraint"],
	update_columns: Array<GraphQLTypes["pedidosDeSaida_Situacoes_update_column"]>,
	where?: GraphQLTypes["pedidosDeSaida_Situacoes_bool_exp"]
};
	/** Ordering options when selecting data from "pedidosDeSaida.Situacoes". */
["pedidosDeSaida_Situacoes_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Pedidos_aggregate?: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate_order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: pedidosDeSaida_Situacoes */
["pedidosDeSaida_Situacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_select_column"]: pedidosDeSaida_Situacoes_select_column;
	/** input type for updating data in table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "pedidosDeSaida.Situacoes" */
["pedidosDeSaida_Situacoes_update_column"]: pedidosDeSaida_Situacoes_update_column;
	/** columns and relationships of "producao.Chips" */
["producao_Chips"]: {
	__typename: "producao_Chips",
	DataSuspensao?: GraphQLTypes["timestamptz"],
	Iccid: string,
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	NumeroDaLinha: GraphQLTypes["bigint"],
	/** An object relationship */
	Operadora: GraphQLTypes["Operadoras"],
	Operadora_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Rastreador?: GraphQLTypes["producao_Rastreadores"],
	/** An array relationship */
	Rastreadores: Array<GraphQLTypes["producao_Rastreadores"]>,
	/** An aggregate relationship */
	Rastreadores_aggregate: GraphQLTypes["producao_Rastreadores_aggregate"],
	/** An object relationship */
	Situacao: GraphQLTypes["producao_ChipsSituacoes"],
	Situacao_Id: GraphQLTypes["producao_ChipsSituacoes_enum"],
	TempoDaSuspensao?: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes"]: {
	__typename: "producao_ChipsSituacoes",
	/** An array relationship */
	Chips: Array<GraphQLTypes["producao_Chips"]>,
	/** An aggregate relationship */
	Chips_aggregate: GraphQLTypes["producao_Chips_aggregate"],
	Comentario: string,
	Valor: string
};
	/** aggregated selection of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate"]: {
	__typename: "producao_ChipsSituacoes_aggregate",
	aggregate?: GraphQLTypes["producao_ChipsSituacoes_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_ChipsSituacoes"]>
};
	/** aggregate fields of "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_aggregate_fields"]: {
	__typename: "producao_ChipsSituacoes_aggregate_fields",
	count: number,
	max?: GraphQLTypes["producao_ChipsSituacoes_max_fields"],
	min?: GraphQLTypes["producao_ChipsSituacoes_min_fields"]
};
	/** Boolean expression to filter rows from the table "producao.ChipsSituacoes". All fields are combined with a logical 'AND'. */
["producao_ChipsSituacoes_bool_exp"]: {
		Chips?: GraphQLTypes["producao_Chips_bool_exp"],
	Comentario?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_ChipsSituacoes_bool_exp"]>,
	_not?: GraphQLTypes["producao_ChipsSituacoes_bool_exp"],
	_or?: Array<GraphQLTypes["producao_ChipsSituacoes_bool_exp"]>
};
	/** unique or primary key constraints on table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_constraint"]: producao_ChipsSituacoes_constraint;
	["producao_ChipsSituacoes_enum"]: producao_ChipsSituacoes_enum;
	/** Boolean expression to compare columns of type "producao_ChipsSituacoes_enum". All fields are combined with logical 'AND'. */
["producao_ChipsSituacoes_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["producao_ChipsSituacoes_enum"],
	_in?: Array<GraphQLTypes["producao_ChipsSituacoes_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["producao_ChipsSituacoes_enum"],
	_nin?: Array<GraphQLTypes["producao_ChipsSituacoes_enum"]>
};
	/** input type for inserting data into table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_insert_input"]: {
		Chips?: GraphQLTypes["producao_Chips_arr_rel_insert_input"],
	Comentario?: string,
	Valor?: string
};
	/** aggregate max on columns */
["producao_ChipsSituacoes_max_fields"]: {
	__typename: "producao_ChipsSituacoes_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["producao_ChipsSituacoes_min_fields"]: {
	__typename: "producao_ChipsSituacoes_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_mutation_response"]: {
	__typename: "producao_ChipsSituacoes_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_ChipsSituacoes"]>
};
	/** input type for inserting object relation for remote table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_ChipsSituacoes_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_ChipsSituacoes_on_conflict"]
};
	/** on conflict condition type for table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_on_conflict"]: {
		constraint: GraphQLTypes["producao_ChipsSituacoes_constraint"],
	update_columns: Array<GraphQLTypes["producao_ChipsSituacoes_update_column"]>,
	where?: GraphQLTypes["producao_ChipsSituacoes_bool_exp"]
};
	/** Ordering options when selecting data from "producao.ChipsSituacoes". */
["producao_ChipsSituacoes_order_by"]: {
		Chips_aggregate?: GraphQLTypes["producao_Chips_aggregate_order_by"],
	Comentario?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_ChipsSituacoes */
["producao_ChipsSituacoes_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_select_column"]: producao_ChipsSituacoes_select_column;
	/** input type for updating data in table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "producao.ChipsSituacoes" */
["producao_ChipsSituacoes_update_column"]: producao_ChipsSituacoes_update_column;
	/** aggregated selection of "producao.Chips" */
["producao_Chips_aggregate"]: {
	__typename: "producao_Chips_aggregate",
	aggregate?: GraphQLTypes["producao_Chips_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_Chips"]>
};
	/** aggregate fields of "producao.Chips" */
["producao_Chips_aggregate_fields"]: {
	__typename: "producao_Chips_aggregate_fields",
	avg?: GraphQLTypes["producao_Chips_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_Chips_max_fields"],
	min?: GraphQLTypes["producao_Chips_min_fields"],
	stddev?: GraphQLTypes["producao_Chips_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_Chips_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_Chips_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_Chips_sum_fields"],
	var_pop?: GraphQLTypes["producao_Chips_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_Chips_var_samp_fields"],
	variance?: GraphQLTypes["producao_Chips_variance_fields"]
};
	/** order by aggregate values of table "producao.Chips" */
["producao_Chips_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_Chips_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_Chips_max_order_by"],
	min?: GraphQLTypes["producao_Chips_min_order_by"],
	stddev?: GraphQLTypes["producao_Chips_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_Chips_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_Chips_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_Chips_sum_order_by"],
	var_pop?: GraphQLTypes["producao_Chips_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_Chips_var_samp_order_by"],
	variance?: GraphQLTypes["producao_Chips_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.Chips" */
["producao_Chips_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_Chips_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_Chips_on_conflict"]
};
	/** aggregate avg on columns */
["producao_Chips_avg_fields"]: {
	__typename: "producao_Chips_avg_fields",
	NumeroDaLinha?: number
};
	/** order by avg() on columns of table "producao.Chips" */
["producao_Chips_avg_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.Chips". All fields are combined with a logical 'AND'. */
["producao_Chips_bool_exp"]: {
		DataSuspensao?: GraphQLTypes["timestamptz_comparison_exp"],
	Iccid?: GraphQLTypes["String_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	NumeroDaLinha?: GraphQLTypes["bigint_comparison_exp"],
	Operadora?: GraphQLTypes["Operadoras_bool_exp"],
	Operadora_Id?: GraphQLTypes["uuid_comparison_exp"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_bool_exp"],
	Rastreadores?: GraphQLTypes["producao_Rastreadores_bool_exp"],
	Situacao?: GraphQLTypes["producao_ChipsSituacoes_bool_exp"],
	Situacao_Id?: GraphQLTypes["producao_ChipsSituacoes_enum_comparison_exp"],
	TempoDaSuspensao?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_Chips_bool_exp"]>,
	_not?: GraphQLTypes["producao_Chips_bool_exp"],
	_or?: Array<GraphQLTypes["producao_Chips_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.Chips" */
["producao_Chips_constraint"]: producao_Chips_constraint;
	/** input type for incrementing numeric columns in table "producao.Chips" */
["producao_Chips_inc_input"]: {
		NumeroDaLinha?: GraphQLTypes["bigint"]
};
	/** input type for inserting data into table "producao.Chips" */
["producao_Chips_insert_input"]: {
		DataSuspensao?: GraphQLTypes["timestamptz"],
	Iccid?: string,
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	NumeroDaLinha?: GraphQLTypes["bigint"],
	Operadora?: GraphQLTypes["Operadoras_obj_rel_insert_input"],
	Operadora_Id?: GraphQLTypes["uuid"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_obj_rel_insert_input"],
	Rastreadores?: GraphQLTypes["producao_Rastreadores_arr_rel_insert_input"],
	Situacao?: GraphQLTypes["producao_ChipsSituacoes_obj_rel_insert_input"],
	Situacao_Id?: GraphQLTypes["producao_ChipsSituacoes_enum"],
	TempoDaSuspensao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_Chips_max_fields"]: {
	__typename: "producao_Chips_max_fields",
	DataSuspensao?: GraphQLTypes["timestamptz"],
	Iccid?: string,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	NumeroDaLinha?: GraphQLTypes["bigint"],
	Operadora_Id?: GraphQLTypes["uuid"],
	TempoDaSuspensao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.Chips" */
["producao_Chips_max_order_by"]: {
		DataSuspensao?: GraphQLTypes["order_by"],
	Iccid?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	NumeroDaLinha?: GraphQLTypes["order_by"],
	Operadora_Id?: GraphQLTypes["order_by"],
	TempoDaSuspensao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_Chips_min_fields"]: {
	__typename: "producao_Chips_min_fields",
	DataSuspensao?: GraphQLTypes["timestamptz"],
	Iccid?: string,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	NumeroDaLinha?: GraphQLTypes["bigint"],
	Operadora_Id?: GraphQLTypes["uuid"],
	TempoDaSuspensao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.Chips" */
["producao_Chips_min_order_by"]: {
		DataSuspensao?: GraphQLTypes["order_by"],
	Iccid?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	NumeroDaLinha?: GraphQLTypes["order_by"],
	Operadora_Id?: GraphQLTypes["order_by"],
	TempoDaSuspensao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.Chips" */
["producao_Chips_mutation_response"]: {
	__typename: "producao_Chips_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_Chips"]>
};
	/** input type for inserting object relation for remote table "producao.Chips" */
["producao_Chips_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_Chips_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_Chips_on_conflict"]
};
	/** on conflict condition type for table "producao.Chips" */
["producao_Chips_on_conflict"]: {
		constraint: GraphQLTypes["producao_Chips_constraint"],
	update_columns: Array<GraphQLTypes["producao_Chips_update_column"]>,
	where?: GraphQLTypes["producao_Chips_bool_exp"]
};
	/** Ordering options when selecting data from "producao.Chips". */
["producao_Chips_order_by"]: {
		DataSuspensao?: GraphQLTypes["order_by"],
	Iccid?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	NumeroDaLinha?: GraphQLTypes["order_by"],
	Operadora?: GraphQLTypes["Operadoras_order_by"],
	Operadora_Id?: GraphQLTypes["order_by"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_order_by"],
	Rastreadores_aggregate?: GraphQLTypes["producao_Rastreadores_aggregate_order_by"],
	Situacao?: GraphQLTypes["producao_ChipsSituacoes_order_by"],
	Situacao_Id?: GraphQLTypes["order_by"],
	TempoDaSuspensao?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_Chips */
["producao_Chips_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.Chips" */
["producao_Chips_select_column"]: producao_Chips_select_column;
	/** input type for updating data in table "producao.Chips" */
["producao_Chips_set_input"]: {
		DataSuspensao?: GraphQLTypes["timestamptz"],
	Iccid?: string,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	NumeroDaLinha?: GraphQLTypes["bigint"],
	Operadora_Id?: GraphQLTypes["uuid"],
	Situacao_Id?: GraphQLTypes["producao_ChipsSituacoes_enum"],
	TempoDaSuspensao?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_Chips_stddev_fields"]: {
	__typename: "producao_Chips_stddev_fields",
	NumeroDaLinha?: number
};
	/** order by stddev() on columns of table "producao.Chips" */
["producao_Chips_stddev_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_Chips_stddev_pop_fields"]: {
	__typename: "producao_Chips_stddev_pop_fields",
	NumeroDaLinha?: number
};
	/** order by stddev_pop() on columns of table "producao.Chips" */
["producao_Chips_stddev_pop_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_Chips_stddev_samp_fields"]: {
	__typename: "producao_Chips_stddev_samp_fields",
	NumeroDaLinha?: number
};
	/** order by stddev_samp() on columns of table "producao.Chips" */
["producao_Chips_stddev_samp_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_Chips_sum_fields"]: {
	__typename: "producao_Chips_sum_fields",
	NumeroDaLinha?: GraphQLTypes["bigint"]
};
	/** order by sum() on columns of table "producao.Chips" */
["producao_Chips_sum_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.Chips" */
["producao_Chips_update_column"]: producao_Chips_update_column;
	/** aggregate var_pop on columns */
["producao_Chips_var_pop_fields"]: {
	__typename: "producao_Chips_var_pop_fields",
	NumeroDaLinha?: number
};
	/** order by var_pop() on columns of table "producao.Chips" */
["producao_Chips_var_pop_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_Chips_var_samp_fields"]: {
	__typename: "producao_Chips_var_samp_fields",
	NumeroDaLinha?: number
};
	/** order by var_samp() on columns of table "producao.Chips" */
["producao_Chips_var_samp_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_Chips_variance_fields"]: {
	__typename: "producao_Chips_variance_fields",
	NumeroDaLinha?: number
};
	/** order by variance() on columns of table "producao.Chips" */
["producao_Chips_variance_order_by"]: {
		NumeroDaLinha?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "producao.Equipamentos" */
["producao_Equipamentos"]: {
	__typename: "producao_Equipamentos",
	Id: GraphQLTypes["uuid"],
	Identificador: GraphQLTypes["bigint"],
	Imei: GraphQLTypes["bigint"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Rastreador?: GraphQLTypes["producao_Rastreadores"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.Equipamentos" */
["producao_Equipamentos_aggregate"]: {
	__typename: "producao_Equipamentos_aggregate",
	aggregate?: GraphQLTypes["producao_Equipamentos_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_Equipamentos"]>
};
	/** aggregate fields of "producao.Equipamentos" */
["producao_Equipamentos_aggregate_fields"]: {
	__typename: "producao_Equipamentos_aggregate_fields",
	avg?: GraphQLTypes["producao_Equipamentos_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_Equipamentos_max_fields"],
	min?: GraphQLTypes["producao_Equipamentos_min_fields"],
	stddev?: GraphQLTypes["producao_Equipamentos_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_Equipamentos_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_Equipamentos_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_Equipamentos_sum_fields"],
	var_pop?: GraphQLTypes["producao_Equipamentos_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_Equipamentos_var_samp_fields"],
	variance?: GraphQLTypes["producao_Equipamentos_variance_fields"]
};
	/** aggregate avg on columns */
["producao_Equipamentos_avg_fields"]: {
	__typename: "producao_Equipamentos_avg_fields",
	Identificador?: number,
	Imei?: number
};
	/** Boolean expression to filter rows from the table "producao.Equipamentos". All fields are combined with a logical 'AND'. */
["producao_Equipamentos_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Identificador?: GraphQLTypes["bigint_comparison_exp"],
	Imei?: GraphQLTypes["bigint_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_bool_exp"],
	_and?: Array<GraphQLTypes["producao_Equipamentos_bool_exp"]>,
	_not?: GraphQLTypes["producao_Equipamentos_bool_exp"],
	_or?: Array<GraphQLTypes["producao_Equipamentos_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.Equipamentos" */
["producao_Equipamentos_constraint"]: producao_Equipamentos_constraint;
	/** input type for incrementing numeric columns in table "producao.Equipamentos" */
["producao_Equipamentos_inc_input"]: {
		Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"]
};
	/** input type for inserting data into table "producao.Equipamentos" */
["producao_Equipamentos_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_obj_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_Equipamentos_max_fields"]: {
	__typename: "producao_Equipamentos_max_fields",
	Id?: GraphQLTypes["uuid"],
	Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Equipamentos_min_fields"]: {
	__typename: "producao_Equipamentos_min_fields",
	Id?: GraphQLTypes["uuid"],
	Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Equipamentos" */
["producao_Equipamentos_mutation_response"]: {
	__typename: "producao_Equipamentos_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_Equipamentos"]>
};
	/** input type for inserting object relation for remote table "producao.Equipamentos" */
["producao_Equipamentos_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_Equipamentos_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_Equipamentos_on_conflict"]
};
	/** on conflict condition type for table "producao.Equipamentos" */
["producao_Equipamentos_on_conflict"]: {
		constraint: GraphQLTypes["producao_Equipamentos_constraint"],
	update_columns: Array<GraphQLTypes["producao_Equipamentos_update_column"]>,
	where?: GraphQLTypes["producao_Equipamentos_bool_exp"]
};
	/** Ordering options when selecting data from "producao.Equipamentos". */
["producao_Equipamentos_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Identificador?: GraphQLTypes["order_by"],
	Imei?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_Equipamentos */
["producao_Equipamentos_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.Equipamentos" */
["producao_Equipamentos_select_column"]: producao_Equipamentos_select_column;
	/** input type for updating data in table "producao.Equipamentos" */
["producao_Equipamentos_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_Equipamentos_stddev_fields"]: {
	__typename: "producao_Equipamentos_stddev_fields",
	Identificador?: number,
	Imei?: number
};
	/** aggregate stddev_pop on columns */
["producao_Equipamentos_stddev_pop_fields"]: {
	__typename: "producao_Equipamentos_stddev_pop_fields",
	Identificador?: number,
	Imei?: number
};
	/** aggregate stddev_samp on columns */
["producao_Equipamentos_stddev_samp_fields"]: {
	__typename: "producao_Equipamentos_stddev_samp_fields",
	Identificador?: number,
	Imei?: number
};
	/** aggregate sum on columns */
["producao_Equipamentos_sum_fields"]: {
	__typename: "producao_Equipamentos_sum_fields",
	Identificador?: GraphQLTypes["bigint"],
	Imei?: GraphQLTypes["bigint"]
};
	/** update columns of table "producao.Equipamentos" */
["producao_Equipamentos_update_column"]: producao_Equipamentos_update_column;
	/** aggregate var_pop on columns */
["producao_Equipamentos_var_pop_fields"]: {
	__typename: "producao_Equipamentos_var_pop_fields",
	Identificador?: number,
	Imei?: number
};
	/** aggregate var_samp on columns */
["producao_Equipamentos_var_samp_fields"]: {
	__typename: "producao_Equipamentos_var_samp_fields",
	Identificador?: number,
	Imei?: number
};
	/** aggregate variance on columns */
["producao_Equipamentos_variance_fields"]: {
	__typename: "producao_Equipamentos_variance_fields",
	Identificador?: number,
	Imei?: number
};
	/** columns and relationships of "producao.Identificadores" */
["producao_Identificadores"]: {
	__typename: "producao_Identificadores",
	CodigoIdentificador: number,
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.Identificadores" */
["producao_Identificadores_aggregate"]: {
	__typename: "producao_Identificadores_aggregate",
	aggregate?: GraphQLTypes["producao_Identificadores_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_Identificadores"]>
};
	/** aggregate fields of "producao.Identificadores" */
["producao_Identificadores_aggregate_fields"]: {
	__typename: "producao_Identificadores_aggregate_fields",
	avg?: GraphQLTypes["producao_Identificadores_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_Identificadores_max_fields"],
	min?: GraphQLTypes["producao_Identificadores_min_fields"],
	stddev?: GraphQLTypes["producao_Identificadores_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_Identificadores_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_Identificadores_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_Identificadores_sum_fields"],
	var_pop?: GraphQLTypes["producao_Identificadores_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_Identificadores_var_samp_fields"],
	variance?: GraphQLTypes["producao_Identificadores_variance_fields"]
};
	/** aggregate avg on columns */
["producao_Identificadores_avg_fields"]: {
	__typename: "producao_Identificadores_avg_fields",
	CodigoIdentificador?: number
};
	/** Boolean expression to filter rows from the table "producao.Identificadores". All fields are combined with a logical 'AND'. */
["producao_Identificadores_bool_exp"]: {
		CodigoIdentificador?: GraphQLTypes["Int_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_Identificadores_bool_exp"]>,
	_not?: GraphQLTypes["producao_Identificadores_bool_exp"],
	_or?: Array<GraphQLTypes["producao_Identificadores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.Identificadores" */
["producao_Identificadores_constraint"]: producao_Identificadores_constraint;
	/** input type for incrementing numeric columns in table "producao.Identificadores" */
["producao_Identificadores_inc_input"]: {
		CodigoIdentificador?: number
};
	/** input type for inserting data into table "producao.Identificadores" */
["producao_Identificadores_insert_input"]: {
		CodigoIdentificador?: number,
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_Identificadores_max_fields"]: {
	__typename: "producao_Identificadores_max_fields",
	CodigoIdentificador?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Identificadores_min_fields"]: {
	__typename: "producao_Identificadores_min_fields",
	CodigoIdentificador?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Identificadores" */
["producao_Identificadores_mutation_response"]: {
	__typename: "producao_Identificadores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_Identificadores"]>
};
	/** on conflict condition type for table "producao.Identificadores" */
["producao_Identificadores_on_conflict"]: {
		constraint: GraphQLTypes["producao_Identificadores_constraint"],
	update_columns: Array<GraphQLTypes["producao_Identificadores_update_column"]>,
	where?: GraphQLTypes["producao_Identificadores_bool_exp"]
};
	/** Ordering options when selecting data from "producao.Identificadores". */
["producao_Identificadores_order_by"]: {
		CodigoIdentificador?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_Identificadores */
["producao_Identificadores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.Identificadores" */
["producao_Identificadores_select_column"]: producao_Identificadores_select_column;
	/** input type for updating data in table "producao.Identificadores" */
["producao_Identificadores_set_input"]: {
		CodigoIdentificador?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_Identificadores_stddev_fields"]: {
	__typename: "producao_Identificadores_stddev_fields",
	CodigoIdentificador?: number
};
	/** aggregate stddev_pop on columns */
["producao_Identificadores_stddev_pop_fields"]: {
	__typename: "producao_Identificadores_stddev_pop_fields",
	CodigoIdentificador?: number
};
	/** aggregate stddev_samp on columns */
["producao_Identificadores_stddev_samp_fields"]: {
	__typename: "producao_Identificadores_stddev_samp_fields",
	CodigoIdentificador?: number
};
	/** aggregate sum on columns */
["producao_Identificadores_sum_fields"]: {
	__typename: "producao_Identificadores_sum_fields",
	CodigoIdentificador?: number
};
	/** update columns of table "producao.Identificadores" */
["producao_Identificadores_update_column"]: producao_Identificadores_update_column;
	/** aggregate var_pop on columns */
["producao_Identificadores_var_pop_fields"]: {
	__typename: "producao_Identificadores_var_pop_fields",
	CodigoIdentificador?: number
};
	/** aggregate var_samp on columns */
["producao_Identificadores_var_samp_fields"]: {
	__typename: "producao_Identificadores_var_samp_fields",
	CodigoIdentificador?: number
};
	/** aggregate variance on columns */
["producao_Identificadores_variance_fields"]: {
	__typename: "producao_Identificadores_variance_fields",
	CodigoIdentificador?: number
};
	/** columns and relationships of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens"]: {
	__typename: "producao_KitDeInsumo_Itens",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	KitDeInsumo: GraphQLTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id: GraphQLTypes["uuid"],
	Lote: string,
	Quantidade: number,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate"]: {
	__typename: "producao_KitDeInsumo_Itens_aggregate",
	aggregate?: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_KitDeInsumo_Itens"]>
};
	/** aggregate fields of "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_aggregate_fields",
	avg?: GraphQLTypes["producao_KitDeInsumo_Itens_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_KitDeInsumo_Itens_max_fields"],
	min?: GraphQLTypes["producao_KitDeInsumo_Itens_min_fields"],
	stddev?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_KitDeInsumo_Itens_sum_fields"],
	var_pop?: GraphQLTypes["producao_KitDeInsumo_Itens_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_KitDeInsumo_Itens_var_samp_fields"],
	variance?: GraphQLTypes["producao_KitDeInsumo_Itens_variance_fields"]
};
	/** order by aggregate values of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_KitDeInsumo_Itens_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_KitDeInsumo_Itens_max_order_by"],
	min?: GraphQLTypes["producao_KitDeInsumo_Itens_min_order_by"],
	stddev?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_KitDeInsumo_Itens_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_KitDeInsumo_Itens_sum_order_by"],
	var_pop?: GraphQLTypes["producao_KitDeInsumo_Itens_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_KitDeInsumo_Itens_var_samp_order_by"],
	variance?: GraphQLTypes["producao_KitDeInsumo_Itens_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_KitDeInsumo_Itens_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_KitDeInsumo_Itens_on_conflict"]
};
	/** aggregate avg on columns */
["producao_KitDeInsumo_Itens_avg_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_avg_fields",
	Quantidade?: number
};
	/** order by avg() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_avg_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.KitDeInsumo_Itens". All fields are combined with a logical 'AND'. */
["producao_KitDeInsumo_Itens_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_bool_exp"],
	KitDeInsumo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Lote?: GraphQLTypes["String_comparison_exp"],
	Quantidade?: GraphQLTypes["Int_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"]>,
	_not?: GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"],
	_or?: Array<GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_constraint"]: producao_KitDeInsumo_Itens_constraint;
	/** input type for incrementing numeric columns in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_inc_input"]: {
		Quantidade?: number
};
	/** input type for inserting data into table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_obj_rel_insert_input"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Lote?: string,
	Quantidade?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_KitDeInsumo_Itens_max_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_max_fields",
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Lote?: string,
	Quantidade?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Lote?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_KitDeInsumo_Itens_min_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_min_fields",
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Lote?: string,
	Quantidade?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Lote?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_mutation_response"]: {
	__typename: "producao_KitDeInsumo_Itens_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_KitDeInsumo_Itens"]>
};
	/** on conflict condition type for table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_on_conflict"]: {
		constraint: GraphQLTypes["producao_KitDeInsumo_Itens_constraint"],
	update_columns: Array<GraphQLTypes["producao_KitDeInsumo_Itens_update_column"]>,
	where?: GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"]
};
	/** Ordering options when selecting data from "producao.KitDeInsumo_Itens". */
["producao_KitDeInsumo_Itens_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Lote?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_KitDeInsumo_Itens */
["producao_KitDeInsumo_Itens_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_select_column"]: producao_KitDeInsumo_Itens_select_column;
	/** input type for updating data in table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Lote?: string,
	Quantidade?: number,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_KitDeInsumo_Itens_stddev_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_stddev_fields",
	Quantidade?: number
};
	/** order by stddev() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_KitDeInsumo_Itens_stddev_pop_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_stddev_pop_fields",
	Quantidade?: number
};
	/** order by stddev_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_KitDeInsumo_Itens_stddev_samp_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_stddev_samp_fields",
	Quantidade?: number
};
	/** order by stddev_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_stddev_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_KitDeInsumo_Itens_sum_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_sum_fields",
	Quantidade?: number
};
	/** order by sum() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_sum_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_update_column"]: producao_KitDeInsumo_Itens_update_column;
	/** aggregate var_pop on columns */
["producao_KitDeInsumo_Itens_var_pop_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_var_pop_fields",
	Quantidade?: number
};
	/** order by var_pop() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_KitDeInsumo_Itens_var_samp_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_var_samp_fields",
	Quantidade?: number
};
	/** order by var_samp() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_var_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_KitDeInsumo_Itens_variance_fields"]: {
	__typename: "producao_KitDeInsumo_Itens_variance_fields",
	Quantidade?: number
};
	/** order by variance() on columns of table "producao.KitDeInsumo_Itens" */
["producao_KitDeInsumo_Itens_variance_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao"]: {
	__typename: "producao_KitsDeInstalacao",
	CodigoReferencia: number,
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	KitDeInsumo: GraphQLTypes["producao_KitsDeInsumo"],
	KitDeInsumo_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Rastreador: GraphQLTypes["producao_Rastreadores"],
	Rastreador_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate"]: {
	__typename: "producao_KitsDeInstalacao_aggregate",
	aggregate?: GraphQLTypes["producao_KitsDeInstalacao_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_KitsDeInstalacao"]>
};
	/** aggregate fields of "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_fields"]: {
	__typename: "producao_KitsDeInstalacao_aggregate_fields",
	avg?: GraphQLTypes["producao_KitsDeInstalacao_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_KitsDeInstalacao_max_fields"],
	min?: GraphQLTypes["producao_KitsDeInstalacao_min_fields"],
	stddev?: GraphQLTypes["producao_KitsDeInstalacao_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_KitsDeInstalacao_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_KitsDeInstalacao_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_KitsDeInstalacao_sum_fields"],
	var_pop?: GraphQLTypes["producao_KitsDeInstalacao_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_KitsDeInstalacao_var_samp_fields"],
	variance?: GraphQLTypes["producao_KitsDeInstalacao_variance_fields"]
};
	/** order by aggregate values of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_KitsDeInstalacao_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_KitsDeInstalacao_max_order_by"],
	min?: GraphQLTypes["producao_KitsDeInstalacao_min_order_by"],
	stddev?: GraphQLTypes["producao_KitsDeInstalacao_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_KitsDeInstalacao_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_KitsDeInstalacao_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_KitsDeInstalacao_sum_order_by"],
	var_pop?: GraphQLTypes["producao_KitsDeInstalacao_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_KitsDeInstalacao_var_samp_order_by"],
	variance?: GraphQLTypes["producao_KitsDeInstalacao_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_KitsDeInstalacao_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_KitsDeInstalacao_on_conflict"]
};
	/** aggregate avg on columns */
["producao_KitsDeInstalacao_avg_fields"]: {
	__typename: "producao_KitsDeInstalacao_avg_fields",
	CodigoReferencia?: number
};
	/** order by avg() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_avg_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.KitsDeInstalacao". All fields are combined with a logical 'AND'. */
["producao_KitsDeInstalacao_bool_exp"]: {
		CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_bool_exp"],
	KitDeInsumo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_bool_exp"],
	Rastreador_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_KitsDeInstalacao_bool_exp"]>,
	_not?: GraphQLTypes["producao_KitsDeInstalacao_bool_exp"],
	_or?: Array<GraphQLTypes["producao_KitsDeInstalacao_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_constraint"]: producao_KitsDeInstalacao_constraint;
	/** input type for incrementing numeric columns in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_insert_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_obj_rel_insert_input"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_obj_rel_insert_input"],
	Rastreador_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_KitsDeInstalacao_max_fields"]: {
	__typename: "producao_KitsDeInstalacao_max_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Rastreador_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_max_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Rastreador_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_KitsDeInstalacao_min_fields"]: {
	__typename: "producao_KitsDeInstalacao_min_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Rastreador_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_min_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Rastreador_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_mutation_response"]: {
	__typename: "producao_KitsDeInstalacao_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_KitsDeInstalacao"]>
};
	/** on conflict condition type for table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_on_conflict"]: {
		constraint: GraphQLTypes["producao_KitsDeInstalacao_constraint"],
	update_columns: Array<GraphQLTypes["producao_KitsDeInstalacao_update_column"]>,
	where?: GraphQLTypes["producao_KitsDeInstalacao_bool_exp"]
};
	/** Ordering options when selecting data from "producao.KitsDeInstalacao". */
["producao_KitsDeInstalacao_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_order_by"],
	KitDeInsumo_Id?: GraphQLTypes["order_by"],
	Rastreador?: GraphQLTypes["producao_Rastreadores_order_by"],
	Rastreador_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_KitsDeInstalacao */
["producao_KitsDeInstalacao_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_select_column"]: producao_KitsDeInstalacao_select_column;
	/** input type for updating data in table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_set_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	KitDeInsumo_Id?: GraphQLTypes["uuid"],
	Rastreador_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_KitsDeInstalacao_stddev_fields"]: {
	__typename: "producao_KitsDeInstalacao_stddev_fields",
	CodigoReferencia?: number
};
	/** order by stddev() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_KitsDeInstalacao_stddev_pop_fields"]: {
	__typename: "producao_KitsDeInstalacao_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** order by stddev_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_KitsDeInstalacao_stddev_samp_fields"]: {
	__typename: "producao_KitsDeInstalacao_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** order by stddev_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_stddev_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_KitsDeInstalacao_sum_fields"]: {
	__typename: "producao_KitsDeInstalacao_sum_fields",
	CodigoReferencia?: number
};
	/** order by sum() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_sum_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_update_column"]: producao_KitsDeInstalacao_update_column;
	/** aggregate var_pop on columns */
["producao_KitsDeInstalacao_var_pop_fields"]: {
	__typename: "producao_KitsDeInstalacao_var_pop_fields",
	CodigoReferencia?: number
};
	/** order by var_pop() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_KitsDeInstalacao_var_samp_fields"]: {
	__typename: "producao_KitsDeInstalacao_var_samp_fields",
	CodigoReferencia?: number
};
	/** order by var_samp() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_var_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_KitsDeInstalacao_variance_fields"]: {
	__typename: "producao_KitsDeInstalacao_variance_fields",
	CodigoReferencia?: number
};
	/** order by variance() on columns of table "producao.KitsDeInstalacao" */
["producao_KitsDeInstalacao_variance_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo"]: {
	__typename: "producao_KitsDeInsumo",
	CodigoReferencia: number,
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["producao_KitDeInsumo_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** An array relationship */
	KitsDeInstalacao: Array<GraphQLTypes["producao_KitsDeInstalacao"]>,
	/** An aggregate relationship */
	KitsDeInstalacao_aggregate: GraphQLTypes["producao_KitsDeInstalacao_aggregate"],
	Tipo_Id: GraphQLTypes["uuid"],
	/** An object relationship */
	TiposDeKitDeInsumo: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate"]: {
	__typename: "producao_KitsDeInsumo_aggregate",
	aggregate?: GraphQLTypes["producao_KitsDeInsumo_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_KitsDeInsumo"]>
};
	/** aggregate fields of "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_fields"]: {
	__typename: "producao_KitsDeInsumo_aggregate_fields",
	avg?: GraphQLTypes["producao_KitsDeInsumo_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_KitsDeInsumo_max_fields"],
	min?: GraphQLTypes["producao_KitsDeInsumo_min_fields"],
	stddev?: GraphQLTypes["producao_KitsDeInsumo_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_KitsDeInsumo_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_KitsDeInsumo_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_KitsDeInsumo_sum_fields"],
	var_pop?: GraphQLTypes["producao_KitsDeInsumo_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_KitsDeInsumo_var_samp_fields"],
	variance?: GraphQLTypes["producao_KitsDeInsumo_variance_fields"]
};
	/** order by aggregate values of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_KitsDeInsumo_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_KitsDeInsumo_max_order_by"],
	min?: GraphQLTypes["producao_KitsDeInsumo_min_order_by"],
	stddev?: GraphQLTypes["producao_KitsDeInsumo_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_KitsDeInsumo_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_KitsDeInsumo_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_KitsDeInsumo_sum_order_by"],
	var_pop?: GraphQLTypes["producao_KitsDeInsumo_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_KitsDeInsumo_var_samp_order_by"],
	variance?: GraphQLTypes["producao_KitsDeInsumo_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_KitsDeInsumo_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_KitsDeInsumo_on_conflict"]
};
	/** aggregate avg on columns */
["producao_KitsDeInsumo_avg_fields"]: {
	__typename: "producao_KitsDeInsumo_avg_fields",
	CodigoReferencia?: number
};
	/** order by avg() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_avg_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.KitsDeInsumo". All fields are combined with a logical 'AND'. */
["producao_KitsDeInsumo_bool_exp"]: {
		CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["producao_KitDeInsumo_Itens_bool_exp"],
	KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_bool_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"],
	_and?: Array<GraphQLTypes["producao_KitsDeInsumo_bool_exp"]>,
	_not?: GraphQLTypes["producao_KitsDeInsumo_bool_exp"],
	_or?: Array<GraphQLTypes["producao_KitsDeInsumo_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_constraint"]: producao_KitsDeInsumo_constraint;
	/** input type for incrementing numeric columns in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_insert_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["producao_KitDeInsumo_Itens_arr_rel_insert_input"],
	KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_arr_rel_insert_input"],
	Tipo_Id?: GraphQLTypes["uuid"],
	TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_obj_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_KitsDeInsumo_max_fields"]: {
	__typename: "producao_KitsDeInsumo_max_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_max_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_KitsDeInsumo_min_fields"]: {
	__typename: "producao_KitsDeInsumo_min_fields",
	CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_min_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_mutation_response"]: {
	__typename: "producao_KitsDeInsumo_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_KitsDeInsumo"]>
};
	/** input type for inserting object relation for remote table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_KitsDeInsumo_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_KitsDeInsumo_on_conflict"]
};
	/** on conflict condition type for table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_on_conflict"]: {
		constraint: GraphQLTypes["producao_KitsDeInsumo_constraint"],
	update_columns: Array<GraphQLTypes["producao_KitsDeInsumo_update_column"]>,
	where?: GraphQLTypes["producao_KitsDeInsumo_bool_exp"]
};
	/** Ordering options when selecting data from "producao.KitsDeInsumo". */
["producao_KitsDeInsumo_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate_order_by"],
	KitsDeInstalacao_aggregate?: GraphQLTypes["producao_KitsDeInstalacao_aggregate_order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	TiposDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_KitsDeInsumo */
["producao_KitsDeInsumo_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_select_column"]: producao_KitsDeInsumo_select_column;
	/** input type for updating data in table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_set_input"]: {
		CodigoReferencia?: number,
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_KitsDeInsumo_stddev_fields"]: {
	__typename: "producao_KitsDeInsumo_stddev_fields",
	CodigoReferencia?: number
};
	/** order by stddev() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_KitsDeInsumo_stddev_pop_fields"]: {
	__typename: "producao_KitsDeInsumo_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** order by stddev_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_KitsDeInsumo_stddev_samp_fields"]: {
	__typename: "producao_KitsDeInsumo_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** order by stddev_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_stddev_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_KitsDeInsumo_sum_fields"]: {
	__typename: "producao_KitsDeInsumo_sum_fields",
	CodigoReferencia?: number
};
	/** order by sum() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_sum_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_update_column"]: producao_KitsDeInsumo_update_column;
	/** aggregate var_pop on columns */
["producao_KitsDeInsumo_var_pop_fields"]: {
	__typename: "producao_KitsDeInsumo_var_pop_fields",
	CodigoReferencia?: number
};
	/** order by var_pop() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_KitsDeInsumo_var_samp_fields"]: {
	__typename: "producao_KitsDeInsumo_var_samp_fields",
	CodigoReferencia?: number
};
	/** order by var_samp() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_var_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_KitsDeInsumo_variance_fields"]: {
	__typename: "producao_KitsDeInsumo_variance_fields",
	CodigoReferencia?: number
};
	/** order by variance() on columns of table "producao.KitsDeInsumo" */
["producao_KitsDeInsumo_variance_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "producao.Logs" */
["producao_Logs"]: {
	__typename: "producao_Logs",
	DadosAntigos: GraphQLTypes["jsonb"],
	DadosNovos: GraphQLTypes["jsonb"],
	Id: GraphQLTypes["uuid"],
	Operacao: string,
	Tipo: string,
	Tipo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.Logs" */
["producao_Logs_aggregate"]: {
	__typename: "producao_Logs_aggregate",
	aggregate?: GraphQLTypes["producao_Logs_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_Logs"]>
};
	/** aggregate fields of "producao.Logs" */
["producao_Logs_aggregate_fields"]: {
	__typename: "producao_Logs_aggregate_fields",
	count: number,
	max?: GraphQLTypes["producao_Logs_max_fields"],
	min?: GraphQLTypes["producao_Logs_min_fields"]
};
	/** append existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_append_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** Boolean expression to filter rows from the table "producao.Logs". All fields are combined with a logical 'AND'. */
["producao_Logs_bool_exp"]: {
		DadosAntigos?: GraphQLTypes["jsonb_comparison_exp"],
	DadosNovos?: GraphQLTypes["jsonb_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Operacao?: GraphQLTypes["String_comparison_exp"],
	Tipo?: GraphQLTypes["String_comparison_exp"],
	Tipo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_Logs_bool_exp"]>,
	_not?: GraphQLTypes["producao_Logs_bool_exp"],
	_or?: Array<GraphQLTypes["producao_Logs_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.Logs" */
["producao_Logs_constraint"]: producao_Logs_constraint;
	/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
["producao_Logs_delete_at_path_input"]: {
		DadosAntigos?: Array<string>,
	DadosNovos?: Array<string>
};
	/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
["producao_Logs_delete_elem_input"]: {
		DadosAntigos?: number,
	DadosNovos?: number
};
	/** delete key/value pair or string element. key/value pairs are matched based on their key value */
["producao_Logs_delete_key_input"]: {
		DadosAntigos?: string,
	DadosNovos?: string
};
	/** input type for inserting data into table "producao.Logs" */
["producao_Logs_insert_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_Logs_max_fields"]: {
	__typename: "producao_Logs_max_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_Logs_min_fields"]: {
	__typename: "producao_Logs_min_fields",
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.Logs" */
["producao_Logs_mutation_response"]: {
	__typename: "producao_Logs_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_Logs"]>
};
	/** on conflict condition type for table "producao.Logs" */
["producao_Logs_on_conflict"]: {
		constraint: GraphQLTypes["producao_Logs_constraint"],
	update_columns: Array<GraphQLTypes["producao_Logs_update_column"]>,
	where?: GraphQLTypes["producao_Logs_bool_exp"]
};
	/** Ordering options when selecting data from "producao.Logs". */
["producao_Logs_order_by"]: {
		DadosAntigos?: GraphQLTypes["order_by"],
	DadosNovos?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Operacao?: GraphQLTypes["order_by"],
	Tipo?: GraphQLTypes["order_by"],
	Tipo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_Logs */
["producao_Logs_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** prepend existing jsonb value of filtered columns with new jsonb value */
["producao_Logs_prepend_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"]
};
	/** select columns of table "producao.Logs" */
["producao_Logs_select_column"]: producao_Logs_select_column;
	/** input type for updating data in table "producao.Logs" */
["producao_Logs_set_input"]: {
		DadosAntigos?: GraphQLTypes["jsonb"],
	DadosNovos?: GraphQLTypes["jsonb"],
	Id?: GraphQLTypes["uuid"],
	Operacao?: string,
	Tipo?: string,
	Tipo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "producao.Logs" */
["producao_Logs_update_column"]: producao_Logs_update_column;
	/** columns and relationships of "producao.Rastreadores" */
["producao_Rastreadores"]: {
	__typename: "producao_Rastreadores",
	/** An object relationship */
	Chip: GraphQLTypes["producao_Chips"],
	Chip_Id: GraphQLTypes["uuid"],
	CodigoReferencia: number,
	/** An object relationship */
	Equipamento: GraphQLTypes["producao_Equipamentos"],
	Equipamento_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	/** An array relationship */
	KitsDeInstalacao: Array<GraphQLTypes["producao_KitsDeInstalacao"]>,
	/** An aggregate relationship */
	KitsDeInstalacao_aggregate: GraphQLTypes["producao_KitsDeInstalacao_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.Rastreadores" */
["producao_Rastreadores_aggregate"]: {
	__typename: "producao_Rastreadores_aggregate",
	aggregate?: GraphQLTypes["producao_Rastreadores_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_Rastreadores"]>
};
	/** aggregate fields of "producao.Rastreadores" */
["producao_Rastreadores_aggregate_fields"]: {
	__typename: "producao_Rastreadores_aggregate_fields",
	avg?: GraphQLTypes["producao_Rastreadores_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_Rastreadores_max_fields"],
	min?: GraphQLTypes["producao_Rastreadores_min_fields"],
	stddev?: GraphQLTypes["producao_Rastreadores_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_Rastreadores_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_Rastreadores_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_Rastreadores_sum_fields"],
	var_pop?: GraphQLTypes["producao_Rastreadores_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_Rastreadores_var_samp_fields"],
	variance?: GraphQLTypes["producao_Rastreadores_variance_fields"]
};
	/** order by aggregate values of table "producao.Rastreadores" */
["producao_Rastreadores_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_Rastreadores_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_Rastreadores_max_order_by"],
	min?: GraphQLTypes["producao_Rastreadores_min_order_by"],
	stddev?: GraphQLTypes["producao_Rastreadores_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_Rastreadores_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_Rastreadores_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_Rastreadores_sum_order_by"],
	var_pop?: GraphQLTypes["producao_Rastreadores_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_Rastreadores_var_samp_order_by"],
	variance?: GraphQLTypes["producao_Rastreadores_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_Rastreadores_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_Rastreadores_on_conflict"]
};
	/** aggregate avg on columns */
["producao_Rastreadores_avg_fields"]: {
	__typename: "producao_Rastreadores_avg_fields",
	CodigoReferencia?: number
};
	/** order by avg() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_avg_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.Rastreadores". All fields are combined with a logical 'AND'. */
["producao_Rastreadores_bool_exp"]: {
		Chip?: GraphQLTypes["producao_Chips_bool_exp"],
	Chip_Id?: GraphQLTypes["uuid_comparison_exp"],
	CodigoReferencia?: GraphQLTypes["Int_comparison_exp"],
	Equipamento?: GraphQLTypes["producao_Equipamentos_bool_exp"],
	Equipamento_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_bool_exp"],
	_and?: Array<GraphQLTypes["producao_Rastreadores_bool_exp"]>,
	_not?: GraphQLTypes["producao_Rastreadores_bool_exp"],
	_or?: Array<GraphQLTypes["producao_Rastreadores_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.Rastreadores" */
["producao_Rastreadores_constraint"]: producao_Rastreadores_constraint;
	/** input type for incrementing numeric columns in table "producao.Rastreadores" */
["producao_Rastreadores_inc_input"]: {
		CodigoReferencia?: number
};
	/** input type for inserting data into table "producao.Rastreadores" */
["producao_Rastreadores_insert_input"]: {
		Chip?: GraphQLTypes["producao_Chips_obj_rel_insert_input"],
	Chip_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Equipamento?: GraphQLTypes["producao_Equipamentos_obj_rel_insert_input"],
	Equipamento_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	KitsDeInstalacao?: GraphQLTypes["producao_KitsDeInstalacao_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_Rastreadores_max_fields"]: {
	__typename: "producao_Rastreadores_max_fields",
	Chip_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Equipamento_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_max_order_by"]: {
		Chip_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Equipamento_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_Rastreadores_min_fields"]: {
	__typename: "producao_Rastreadores_min_fields",
	Chip_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Equipamento_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_min_order_by"]: {
		Chip_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Equipamento_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.Rastreadores" */
["producao_Rastreadores_mutation_response"]: {
	__typename: "producao_Rastreadores_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_Rastreadores"]>
};
	/** input type for inserting object relation for remote table "producao.Rastreadores" */
["producao_Rastreadores_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_Rastreadores_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_Rastreadores_on_conflict"]
};
	/** on conflict condition type for table "producao.Rastreadores" */
["producao_Rastreadores_on_conflict"]: {
		constraint: GraphQLTypes["producao_Rastreadores_constraint"],
	update_columns: Array<GraphQLTypes["producao_Rastreadores_update_column"]>,
	where?: GraphQLTypes["producao_Rastreadores_bool_exp"]
};
	/** Ordering options when selecting data from "producao.Rastreadores". */
["producao_Rastreadores_order_by"]: {
		Chip?: GraphQLTypes["producao_Chips_order_by"],
	Chip_Id?: GraphQLTypes["order_by"],
	CodigoReferencia?: GraphQLTypes["order_by"],
	Equipamento?: GraphQLTypes["producao_Equipamentos_order_by"],
	Equipamento_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	KitsDeInstalacao_aggregate?: GraphQLTypes["producao_KitsDeInstalacao_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_Rastreadores */
["producao_Rastreadores_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.Rastreadores" */
["producao_Rastreadores_select_column"]: producao_Rastreadores_select_column;
	/** input type for updating data in table "producao.Rastreadores" */
["producao_Rastreadores_set_input"]: {
		Chip_Id?: GraphQLTypes["uuid"],
	CodigoReferencia?: number,
	Equipamento_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_Rastreadores_stddev_fields"]: {
	__typename: "producao_Rastreadores_stddev_fields",
	CodigoReferencia?: number
};
	/** order by stddev() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_Rastreadores_stddev_pop_fields"]: {
	__typename: "producao_Rastreadores_stddev_pop_fields",
	CodigoReferencia?: number
};
	/** order by stddev_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_Rastreadores_stddev_samp_fields"]: {
	__typename: "producao_Rastreadores_stddev_samp_fields",
	CodigoReferencia?: number
};
	/** order by stddev_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_stddev_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_Rastreadores_sum_fields"]: {
	__typename: "producao_Rastreadores_sum_fields",
	CodigoReferencia?: number
};
	/** order by sum() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_sum_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.Rastreadores" */
["producao_Rastreadores_update_column"]: producao_Rastreadores_update_column;
	/** aggregate var_pop on columns */
["producao_Rastreadores_var_pop_fields"]: {
	__typename: "producao_Rastreadores_var_pop_fields",
	CodigoReferencia?: number
};
	/** order by var_pop() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_pop_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_Rastreadores_var_samp_fields"]: {
	__typename: "producao_Rastreadores_var_samp_fields",
	CodigoReferencia?: number
};
	/** order by var_samp() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_var_samp_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_Rastreadores_variance_fields"]: {
	__typename: "producao_Rastreadores_variance_fields",
	CodigoReferencia?: number
};
	/** order by variance() on columns of table "producao.Rastreadores" */
["producao_Rastreadores_variance_order_by"]: {
		CodigoReferencia?: GraphQLTypes["order_by"]
};
	/** columns and relationships of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo"]: {
	__typename: "producao_TiposDeKitDeInsumo",
	Id: GraphQLTypes["uuid"],
	/** An array relationship */
	Itens: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]>,
	/** An aggregate relationship */
	Itens_aggregate: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** An array relationship */
	KitsDeInsumo: Array<GraphQLTypes["producao_KitsDeInsumo"]>,
	/** An aggregate relationship */
	KitsDeInsumo_aggregate: GraphQLTypes["producao_KitsDeInsumo_aggregate"],
	Nome: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate"]: {
	__typename: "producao_TiposDeKitDeInsumo_aggregate",
	aggregate?: GraphQLTypes["producao_TiposDeKitDeInsumo_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_TiposDeKitDeInsumo"]>
};
	/** aggregate fields of "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_aggregate_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_aggregate_fields",
	count: number,
	max?: GraphQLTypes["producao_TiposDeKitDeInsumo_max_fields"],
	min?: GraphQLTypes["producao_TiposDeKitDeInsumo_min_fields"]
};
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Itens?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"],
	KitsDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_bool_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"]>,
	_not?: GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"],
	_or?: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_constraint"]: producao_TiposDeKitDeInsumo_constraint;
	/** columns and relationships of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens",
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Item: GraphQLTypes["estoque_Itens"],
	Item_Id: GraphQLTypes["uuid"],
	Quantidade: number,
	/** An object relationship */
	TipoDeKitDeInsumo: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	TiposDeKitDeInsumo_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_aggregate",
	aggregate?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"],
	nodes: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]>
};
	/** aggregate fields of "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_fields",
	avg?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"],
	count: number,
	max?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"],
	min?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"],
	stddev?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"],
	stddev_pop?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"],
	stddev_samp?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"],
	sum?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"],
	var_pop?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"],
	var_samp?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"],
	variance?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"]
};
	/** order by aggregate values of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"]: {
		avg?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"],
	count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"],
	min?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"],
	stddev?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"],
	stddev_pop?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"],
	stddev_samp?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"],
	sum?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"],
	var_pop?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"],
	var_samp?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"],
	variance?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"]
};
	/** input type for inserting array relation for remote table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"]
};
	/** aggregate avg on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_avg_fields",
	Quantidade?: number
};
	/** order by avg() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_avg_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** Boolean expression to filter rows from the table "producao.TiposDeKitDeInsumo_estoque_Itens". All fields are combined with a logical 'AND'. */
["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Item?: GraphQLTypes["estoque_Itens_bool_exp"],
	Item_Id?: GraphQLTypes["uuid_comparison_exp"],
	Quantidade?: GraphQLTypes["Int_comparison_exp"],
	TipoDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"],
	TiposDeKitDeInsumo_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]>,
	_not?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"],
	_or?: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"]: producao_TiposDeKitDeInsumo_estoque_Itens_constraint;
	/** input type for incrementing numeric columns in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_inc_input"]: {
		Quantidade?: number
};
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Item?: GraphQLTypes["estoque_Itens_obj_rel_insert_input"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	TipoDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_obj_rel_insert_input"],
	TiposDeKitDeInsumo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_max_fields",
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	TiposDeKitDeInsumo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_max_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	TiposDeKitDeInsumo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_min_fields",
	Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	TiposDeKitDeInsumo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_min_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	TiposDeKitDeInsumo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]>
};
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_on_conflict"]: {
		constraint: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_constraint"],
	update_columns: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"]>,
	where?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_bool_exp"]
};
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo_estoque_Itens". */
["producao_TiposDeKitDeInsumo_estoque_Itens_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Item?: GraphQLTypes["estoque_Itens_order_by"],
	Item_Id?: GraphQLTypes["order_by"],
	Quantidade?: GraphQLTypes["order_by"],
	TipoDeKitDeInsumo?: GraphQLTypes["producao_TiposDeKitDeInsumo_order_by"],
	TiposDeKitDeInsumo_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_TiposDeKitDeInsumo_estoque_Itens */
["producao_TiposDeKitDeInsumo_estoque_Itens_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_select_column"]: producao_TiposDeKitDeInsumo_estoque_Itens_select_column;
	/** input type for updating data in table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Item_Id?: GraphQLTypes["uuid"],
	Quantidade?: number,
	TiposDeKitDeInsumo_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate stddev on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_stddev_fields",
	Quantidade?: number
};
	/** order by stddev() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_fields",
	Quantidade?: number
};
	/** order by stddev_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate stddev_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_fields",
	Quantidade?: number
};
	/** order by stddev_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_stddev_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate sum on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_sum_fields",
	Quantidade?: number
};
	/** order by sum() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_sum_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** update columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_update_column"]: producao_TiposDeKitDeInsumo_estoque_Itens_update_column;
	/** aggregate var_pop on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_fields",
	Quantidade?: number
};
	/** order by var_pop() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_pop_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate var_samp on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_fields",
	Quantidade?: number
};
	/** order by var_samp() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_var_samp_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** aggregate variance on columns */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_estoque_Itens_variance_fields",
	Quantidade?: number
};
	/** order by variance() on columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
["producao_TiposDeKitDeInsumo_estoque_Itens_variance_order_by"]: {
		Quantidade?: GraphQLTypes["order_by"]
};
	/** input type for inserting data into table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Itens?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_arr_rel_insert_input"],
	KitsDeInsumo?: GraphQLTypes["producao_KitsDeInsumo_arr_rel_insert_input"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["producao_TiposDeKitDeInsumo_max_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["producao_TiposDeKitDeInsumo_min_fields"]: {
	__typename: "producao_TiposDeKitDeInsumo_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_mutation_response"]: {
	__typename: "producao_TiposDeKitDeInsumo_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["producao_TiposDeKitDeInsumo"]>
};
	/** input type for inserting object relation for remote table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_obj_rel_insert_input"]: {
		data: GraphQLTypes["producao_TiposDeKitDeInsumo_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["producao_TiposDeKitDeInsumo_on_conflict"]
};
	/** on conflict condition type for table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_on_conflict"]: {
		constraint: GraphQLTypes["producao_TiposDeKitDeInsumo_constraint"],
	update_columns: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_update_column"]>,
	where?: GraphQLTypes["producao_TiposDeKitDeInsumo_bool_exp"]
};
	/** Ordering options when selecting data from "producao.TiposDeKitDeInsumo". */
["producao_TiposDeKitDeInsumo_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Itens_aggregate?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate_order_by"],
	KitsDeInsumo_aggregate?: GraphQLTypes["producao_KitsDeInsumo_aggregate_order_by"],
	Nome?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: producao_TiposDeKitDeInsumo */
["producao_TiposDeKitDeInsumo_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_select_column"]: producao_TiposDeKitDeInsumo_select_column;
	/** input type for updating data in table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "producao.TiposDeKitDeInsumo" */
["producao_TiposDeKitDeInsumo_update_column"]: producao_TiposDeKitDeInsumo_update_column;
	["query_root"]: {
	__typename: "query_root",
	/** fetch data from the table: "CategoriasDeVeiculos" */
	CategoriasDeVeiculos: Array<GraphQLTypes["CategoriasDeVeiculos"]>,
	/** fetch aggregated fields from the table: "CategoriasDeVeiculos" */
	CategoriasDeVeiculos_aggregate: GraphQLTypes["CategoriasDeVeiculos_aggregate"],
	/** fetch data from the table: "CategoriasDeVeiculos" using primary key columns */
	CategoriasDeVeiculos_by_pk?: GraphQLTypes["CategoriasDeVeiculos"],
	/** fetch data from the table: "Configuracoes" */
	Configuracoes: Array<GraphQLTypes["Configuracoes"]>,
	/** fetch aggregated fields from the table: "Configuracoes" */
	Configuracoes_aggregate: GraphQLTypes["Configuracoes_aggregate"],
	/** fetch data from the table: "Configuracoes" using primary key columns */
	Configuracoes_by_pk?: GraphQLTypes["Configuracoes"],
	/** fetch data from the table: "EstadosEMunicipios" */
	EstadosEMunicipios: Array<GraphQLTypes["EstadosEMunicipios"]>,
	/** fetch aggregated fields from the table: "EstadosEMunicipios" */
	EstadosEMunicipios_aggregate: GraphQLTypes["EstadosEMunicipios_aggregate"],
	/** fetch data from the table: "EstadosEMunicipios" using primary key columns */
	EstadosEMunicipios_by_pk?: GraphQLTypes["EstadosEMunicipios"],
	/** fetch data from the table: "Operadoras" */
	Operadoras: Array<GraphQLTypes["Operadoras"]>,
	/** fetch aggregated fields from the table: "Operadoras" */
	Operadoras_aggregate: GraphQLTypes["Operadoras_aggregate"],
	/** fetch data from the table: "Operadoras" using primary key columns */
	Operadoras_by_pk?: GraphQLTypes["Operadoras"],
	/** fetch data from the table: "Produtos" */
	Produtos: Array<GraphQLTypes["Produtos"]>,
	/** fetch aggregated fields from the table: "Produtos" */
	Produtos_aggregate: GraphQLTypes["Produtos_aggregate"],
	/** fetch data from the table: "Produtos" using primary key columns */
	Produtos_by_pk?: GraphQLTypes["Produtos"],
	/** fetch data from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas: Array<GraphQLTypes["UnidadesDeMedidas"]>,
	/** fetch aggregated fields from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas_aggregate: GraphQLTypes["UnidadesDeMedidas_aggregate"],
	/** fetch data from the table: "UnidadesDeMedidas" using primary key columns */
	UnidadesDeMedidas_by_pk?: GraphQLTypes["UnidadesDeMedidas"],
	/** fetch data from the table: "atendimentos.EtapasDosFluxos" */
	atendimentos_EtapasDosFluxos: Array<GraphQLTypes["atendimentos_EtapasDosFluxos"]>,
	/** fetch aggregated fields from the table: "atendimentos.EtapasDosFluxos" */
	atendimentos_EtapasDosFluxos_aggregate: GraphQLTypes["atendimentos_EtapasDosFluxos_aggregate"],
	/** fetch data from the table: "atendimentos.EtapasDosFluxos" using primary key columns */
	atendimentos_EtapasDosFluxos_by_pk?: GraphQLTypes["atendimentos_EtapasDosFluxos"],
	/** fetch data from the table: "atendimentos.Fluxos" */
	atendimentos_Fluxos: Array<GraphQLTypes["atendimentos_Fluxos"]>,
	/** fetch aggregated fields from the table: "atendimentos.Fluxos" */
	atendimentos_Fluxos_aggregate: GraphQLTypes["atendimentos_Fluxos_aggregate"],
	/** fetch data from the table: "atendimentos.Fluxos" using primary key columns */
	atendimentos_Fluxos_by_pk?: GraphQLTypes["atendimentos_Fluxos"],
	/** fetch data from the table: "atendimentos.Tickets" */
	atendimentos_Tickets: Array<GraphQLTypes["atendimentos_Tickets"]>,
	/** fetch aggregated fields from the table: "atendimentos.Tickets" */
	atendimentos_Tickets_aggregate: GraphQLTypes["atendimentos_Tickets_aggregate"],
	/** fetch data from the table: "atendimentos.Tickets" using primary key columns */
	atendimentos_Tickets_by_pk?: GraphQLTypes["atendimentos_Tickets"],
	/** fetch data from the table: "atendimentos.TiposDeTickets" */
	atendimentos_TiposDeTickets: Array<GraphQLTypes["atendimentos_TiposDeTickets"]>,
	/** fetch aggregated fields from the table: "atendimentos.TiposDeTickets" */
	atendimentos_TiposDeTickets_aggregate: GraphQLTypes["atendimentos_TiposDeTickets_aggregate"],
	/** fetch data from the table: "atendimentos.TiposDeTickets" using primary key columns */
	atendimentos_TiposDeTickets_by_pk?: GraphQLTypes["atendimentos_TiposDeTickets"],
	/** fetch data from the table: "autenticacao.Atendentes" */
	autenticacao_Atendentes: Array<GraphQLTypes["autenticacao_Atendentes"]>,
	/** fetch aggregated fields from the table: "autenticacao.Atendentes" */
	autenticacao_Atendentes_aggregate: GraphQLTypes["autenticacao_Atendentes_aggregate"],
	/** fetch data from the table: "autenticacao.Atendentes" using primary key columns */
	autenticacao_Atendentes_by_pk?: GraphQLTypes["autenticacao_Atendentes"],
	/** fetch data from the table: "autenticacao.Usuarios" */
	autenticacao_Usuarios: Array<GraphQLTypes["autenticacao_Usuarios"]>,
	/** fetch aggregated fields from the table: "autenticacao.Usuarios" */
	autenticacao_Usuarios_aggregate: GraphQLTypes["autenticacao_Usuarios_aggregate"],
	/** fetch data from the table: "autenticacao.Usuarios" using primary key columns */
	autenticacao_Usuarios_by_pk?: GraphQLTypes["autenticacao_Usuarios"],
	/** fetch data from the table: "clientes.Leads" */
	clientes_Leads: Array<GraphQLTypes["clientes_Leads"]>,
	/** fetch aggregated fields from the table: "clientes.Leads" */
	clientes_Leads_aggregate: GraphQLTypes["clientes_Leads_aggregate"],
	/** fetch data from the table: "clientes.Leads" using primary key columns */
	clientes_Leads_by_pk?: GraphQLTypes["clientes_Leads"],
	/** fetch data from the table: "clientes.PerfisComerciais" */
	clientes_PerfisComerciais: Array<GraphQLTypes["clientes_PerfisComerciais"]>,
	/** fetch aggregated fields from the table: "clientes.PerfisComerciais" */
	clientes_PerfisComerciais_aggregate: GraphQLTypes["clientes_PerfisComerciais_aggregate"],
	/** fetch data from the table: "clientes.PerfisComerciais" using primary key columns */
	clientes_PerfisComerciais_by_pk?: GraphQLTypes["clientes_PerfisComerciais"],
	/** fetch data from the table: "clientes.Veiculos" */
	clientes_Veiculos: Array<GraphQLTypes["clientes_Veiculos"]>,
	/** fetch aggregated fields from the table: "clientes.Veiculos" */
	clientes_Veiculos_aggregate: GraphQLTypes["clientes_Veiculos_aggregate"],
	/** fetch data from the table: "clientes.Veiculos" using primary key columns */
	clientes_Veiculos_by_pk?: GraphQLTypes["clientes_Veiculos"],
	/** fetch data from the table: "comercial.Acoes" */
	comercial_Acoes: Array<GraphQLTypes["comercial_Acoes"]>,
	/** fetch aggregated fields from the table: "comercial.Acoes" */
	comercial_Acoes_aggregate: GraphQLTypes["comercial_Acoes_aggregate"],
	/** fetch data from the table: "comercial.Acoes" using primary key columns */
	comercial_Acoes_by_pk?: GraphQLTypes["comercial_Acoes"],
	/** fetch data from the table: "comercial.Atributos" */
	comercial_Atributos: Array<GraphQLTypes["comercial_Atributos"]>,
	/** fetch aggregated fields from the table: "comercial.Atributos" */
	comercial_Atributos_aggregate: GraphQLTypes["comercial_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Atributos" using primary key columns */
	comercial_Atributos_by_pk?: GraphQLTypes["comercial_Atributos"],
	/** fetch data from the table: "comercial.Coberturas" */
	comercial_Coberturas: Array<GraphQLTypes["comercial_Coberturas"]>,
	/** fetch aggregated fields from the table: "comercial.Coberturas" */
	comercial_Coberturas_aggregate: GraphQLTypes["comercial_Coberturas_aggregate"],
	/** fetch data from the table: "comercial.Coberturas" using primary key columns */
	comercial_Coberturas_by_pk?: GraphQLTypes["comercial_Coberturas"],
	/** fetch data from the table: "comercial.Combos" */
	comercial_Combos: Array<GraphQLTypes["comercial_Combos"]>,
	/** fetch data from the table: "comercial.Combos_Combos" */
	comercial_Combos_Combos: Array<GraphQLTypes["comercial_Combos_Combos"]>,
	/** fetch aggregated fields from the table: "comercial.Combos_Combos" */
	comercial_Combos_Combos_aggregate: GraphQLTypes["comercial_Combos_Combos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Combos" using primary key columns */
	comercial_Combos_Combos_by_pk?: GraphQLTypes["comercial_Combos_Combos"],
	/** fetch data from the table: "comercial.Combos_Planos" */
	comercial_Combos_Planos: Array<GraphQLTypes["comercial_Combos_Planos"]>,
	/** fetch aggregated fields from the table: "comercial.Combos_Planos" */
	comercial_Combos_Planos_aggregate: GraphQLTypes["comercial_Combos_Planos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Planos" using primary key columns */
	comercial_Combos_Planos_by_pk?: GraphQLTypes["comercial_Combos_Planos"],
	/** fetch data from the table: "comercial.Combos_Precos" */
	comercial_Combos_Precos: Array<GraphQLTypes["comercial_Combos_Precos"]>,
	/** fetch aggregated fields from the table: "comercial.Combos_Precos" */
	comercial_Combos_Precos_aggregate: GraphQLTypes["comercial_Combos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Precos" using primary key columns */
	comercial_Combos_Precos_by_pk?: GraphQLTypes["comercial_Combos_Precos"],
	/** fetch data from the table: "comercial.Combos_Produtos" */
	comercial_Combos_Produtos: Array<GraphQLTypes["comercial_Combos_Produtos"]>,
	/** fetch aggregated fields from the table: "comercial.Combos_Produtos" */
	comercial_Combos_Produtos_aggregate: GraphQLTypes["comercial_Combos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Produtos" using primary key columns */
	comercial_Combos_Produtos_by_pk?: GraphQLTypes["comercial_Combos_Produtos"],
	/** fetch data from the table: "comercial.Combos_Servicos" */
	comercial_Combos_Servicos: Array<GraphQLTypes["comercial_Combos_Servicos"]>,
	/** fetch aggregated fields from the table: "comercial.Combos_Servicos" */
	comercial_Combos_Servicos_aggregate: GraphQLTypes["comercial_Combos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Combos_Servicos" using primary key columns */
	comercial_Combos_Servicos_by_pk?: GraphQLTypes["comercial_Combos_Servicos"],
	/** fetch aggregated fields from the table: "comercial.Combos" */
	comercial_Combos_aggregate: GraphQLTypes["comercial_Combos_aggregate"],
	/** fetch data from the table: "comercial.Combos" using primary key columns */
	comercial_Combos_by_pk?: GraphQLTypes["comercial_Combos"],
	/** fetch data from the table: "comercial.Condicionais" */
	comercial_Condicionais: Array<GraphQLTypes["comercial_Condicionais"]>,
	/** fetch data from the table: "comercial.CondicionaisSituacoes" */
	comercial_CondicionaisSituacoes: Array<GraphQLTypes["comercial_CondicionaisSituacoes"]>,
	/** fetch aggregated fields from the table: "comercial.CondicionaisSituacoes" */
	comercial_CondicionaisSituacoes_aggregate: GraphQLTypes["comercial_CondicionaisSituacoes_aggregate"],
	/** fetch data from the table: "comercial.CondicionaisSituacoes" using primary key columns */
	comercial_CondicionaisSituacoes_by_pk?: GraphQLTypes["comercial_CondicionaisSituacoes"],
	/** fetch aggregated fields from the table: "comercial.Condicionais" */
	comercial_Condicionais_aggregate: GraphQLTypes["comercial_Condicionais_aggregate"],
	/** fetch data from the table: "comercial.Condicionais" using primary key columns */
	comercial_Condicionais_by_pk?: GraphQLTypes["comercial_Condicionais"],
	/** fetch data from the table: "comercial.ContratosBase" */
	comercial_ContratosBase: Array<GraphQLTypes["comercial_ContratosBase"]>,
	/** fetch data from the table: "comercial.ContratosBase_Versoes" */
	comercial_ContratosBase_Versoes: Array<GraphQLTypes["comercial_ContratosBase_Versoes"]>,
	/** fetch aggregated fields from the table: "comercial.ContratosBase_Versoes" */
	comercial_ContratosBase_Versoes_aggregate: GraphQLTypes["comercial_ContratosBase_Versoes_aggregate"],
	/** fetch data from the table: "comercial.ContratosBase_Versoes" using primary key columns */
	comercial_ContratosBase_Versoes_by_pk?: GraphQLTypes["comercial_ContratosBase_Versoes"],
	/** fetch aggregated fields from the table: "comercial.ContratosBase" */
	comercial_ContratosBase_aggregate: GraphQLTypes["comercial_ContratosBase_aggregate"],
	/** fetch data from the table: "comercial.ContratosBase" using primary key columns */
	comercial_ContratosBase_by_pk?: GraphQLTypes["comercial_ContratosBase"],
	/** fetch data from the table: "comercial.Fornecedores" */
	comercial_Fornecedores: Array<GraphQLTypes["comercial_Fornecedores"]>,
	/** fetch data from the table: "comercial.Fornecedores_Produtos" */
	comercial_Fornecedores_Produtos: Array<GraphQLTypes["comercial_Fornecedores_Produtos"]>,
	/** fetch data from the table: "comercial.Fornecedores_Produtos_Precos" */
	comercial_Fornecedores_Produtos_Precos: Array<GraphQLTypes["comercial_Fornecedores_Produtos_Precos"]>,
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Produtos_Precos" */
	comercial_Fornecedores_Produtos_Precos_aggregate: GraphQLTypes["comercial_Fornecedores_Produtos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Produtos_Precos" using primary key columns */
	comercial_Fornecedores_Produtos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos_Precos"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Produtos" */
	comercial_Fornecedores_Produtos_aggregate: GraphQLTypes["comercial_Fornecedores_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Produtos" using primary key columns */
	comercial_Fornecedores_Produtos_by_pk?: GraphQLTypes["comercial_Fornecedores_Produtos"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos" */
	comercial_Fornecedores_Servicos: Array<GraphQLTypes["comercial_Fornecedores_Servicos"]>,
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Precos" */
	comercial_Fornecedores_Servicos_Precos: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Precos"]>,
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos_Precos" */
	comercial_Fornecedores_Servicos_Precos_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Precos" using primary key columns */
	comercial_Fornecedores_Servicos_Precos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Precos"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	comercial_Fornecedores_Servicos_Tarifas: Array<GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"]>,
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos_Tarifas" */
	comercial_Fornecedores_Servicos_Tarifas_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos_Tarifas" using primary key columns */
	comercial_Fornecedores_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos_Tarifas"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores_Servicos" */
	comercial_Fornecedores_Servicos_aggregate: GraphQLTypes["comercial_Fornecedores_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores_Servicos" using primary key columns */
	comercial_Fornecedores_Servicos_by_pk?: GraphQLTypes["comercial_Fornecedores_Servicos"],
	/** fetch aggregated fields from the table: "comercial.Fornecedores" */
	comercial_Fornecedores_aggregate: GraphQLTypes["comercial_Fornecedores_aggregate"],
	/** fetch data from the table: "comercial.Fornecedores" using primary key columns */
	comercial_Fornecedores_by_pk?: GraphQLTypes["comercial_Fornecedores"],
	/** fetch data from the table: "comercial.Planos" */
	comercial_Planos: Array<GraphQLTypes["comercial_Planos"]>,
	/** fetch data from the table: "comercial.Planos_Condicionais" */
	comercial_Planos_Condicionais: Array<GraphQLTypes["comercial_Planos_Condicionais"]>,
	/** fetch aggregated fields from the table: "comercial.Planos_Condicionais" */
	comercial_Planos_Condicionais_aggregate: GraphQLTypes["comercial_Planos_Condicionais_aggregate"],
	/** fetch data from the table: "comercial.Planos_Condicionais" using primary key columns */
	comercial_Planos_Condicionais_by_pk?: GraphQLTypes["comercial_Planos_Condicionais"],
	/** fetch data from the table: "comercial.Planos_Precos" */
	comercial_Planos_Precos: Array<GraphQLTypes["comercial_Planos_Precos"]>,
	/** fetch aggregated fields from the table: "comercial.Planos_Precos" */
	comercial_Planos_Precos_aggregate: GraphQLTypes["comercial_Planos_Precos_aggregate"],
	/** fetch data from the table: "comercial.Planos_Precos" using primary key columns */
	comercial_Planos_Precos_by_pk?: GraphQLTypes["comercial_Planos_Precos"],
	/** fetch aggregated fields from the table: "comercial.Planos" */
	comercial_Planos_aggregate: GraphQLTypes["comercial_Planos_aggregate"],
	/** fetch data from the table: "comercial.Planos" using primary key columns */
	comercial_Planos_by_pk?: GraphQLTypes["comercial_Planos"],
	/** fetch data from the table: "comercial.PrestadorDeServicos_Servicos" */
	comercial_PrestadorDeServicos_Servicos: Array<GraphQLTypes["comercial_PrestadorDeServicos_Servicos"]>,
	/** fetch aggregated fields from the table: "comercial.PrestadorDeServicos_Servicos" */
	comercial_PrestadorDeServicos_Servicos_aggregate: GraphQLTypes["comercial_PrestadorDeServicos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.PrestadorDeServicos_Servicos" using primary key columns */
	comercial_PrestadorDeServicos_Servicos_by_pk?: GraphQLTypes["comercial_PrestadorDeServicos_Servicos"],
	/** fetch data from the table: "comercial.Produtos" */
	comercial_Produtos: Array<GraphQLTypes["comercial_Produtos"]>,
	/** fetch data from the table: "comercial.Produtos_Atributos" */
	comercial_Produtos_Atributos: Array<GraphQLTypes["comercial_Produtos_Atributos"]>,
	/** fetch aggregated fields from the table: "comercial.Produtos_Atributos" */
	comercial_Produtos_Atributos_aggregate: GraphQLTypes["comercial_Produtos_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Atributos" using primary key columns */
	comercial_Produtos_Atributos_by_pk?: GraphQLTypes["comercial_Produtos_Atributos"],
	/** fetch data from the table: "comercial.Produtos_Oportunidades" */
	comercial_Produtos_Oportunidades: Array<GraphQLTypes["comercial_Produtos_Oportunidades"]>,
	/** fetch aggregated fields from the table: "comercial.Produtos_Oportunidades" */
	comercial_Produtos_Oportunidades_aggregate: GraphQLTypes["comercial_Produtos_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Oportunidades" using primary key columns */
	comercial_Produtos_Oportunidades_by_pk?: GraphQLTypes["comercial_Produtos_Oportunidades"],
	/** fetch data from the table: "comercial.Produtos_Produtos" */
	comercial_Produtos_Produtos: Array<GraphQLTypes["comercial_Produtos_Produtos"]>,
	/** fetch aggregated fields from the table: "comercial.Produtos_Produtos" */
	comercial_Produtos_Produtos_aggregate: GraphQLTypes["comercial_Produtos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Produtos" using primary key columns */
	comercial_Produtos_Produtos_by_pk?: GraphQLTypes["comercial_Produtos_Produtos"],
	/** fetch data from the table: "comercial.Produtos_Servicos" */
	comercial_Produtos_Servicos: Array<GraphQLTypes["comercial_Produtos_Servicos"]>,
	/** fetch aggregated fields from the table: "comercial.Produtos_Servicos" */
	comercial_Produtos_Servicos_aggregate: GraphQLTypes["comercial_Produtos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Servicos" using primary key columns */
	comercial_Produtos_Servicos_by_pk?: GraphQLTypes["comercial_Produtos_Servicos"],
	/** fetch data from the table: "comercial.Produtos_Tipos" */
	comercial_Produtos_Tipos: Array<GraphQLTypes["comercial_Produtos_Tipos"]>,
	/** fetch aggregated fields from the table: "comercial.Produtos_Tipos" */
	comercial_Produtos_Tipos_aggregate: GraphQLTypes["comercial_Produtos_Tipos_aggregate"],
	/** fetch data from the table: "comercial.Produtos_Tipos" using primary key columns */
	comercial_Produtos_Tipos_by_pk?: GraphQLTypes["comercial_Produtos_Tipos"],
	/** fetch aggregated fields from the table: "comercial.Produtos" */
	comercial_Produtos_aggregate: GraphQLTypes["comercial_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Produtos" using primary key columns */
	comercial_Produtos_by_pk?: GraphQLTypes["comercial_Produtos"],
	/** fetch data from the table: "comercial.Propostas" */
	comercial_Propostas: Array<GraphQLTypes["comercial_Propostas"]>,
	/** fetch data from the table: "comercial.Propostas_Combos" */
	comercial_Propostas_Combos: Array<GraphQLTypes["comercial_Propostas_Combos"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Combos" */
	comercial_Propostas_Combos_aggregate: GraphQLTypes["comercial_Propostas_Combos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Combos" using primary key columns */
	comercial_Propostas_Combos_by_pk?: GraphQLTypes["comercial_Propostas_Combos"],
	/** fetch data from the table: "comercial.Propostas_Instalacoes" */
	comercial_Propostas_Instalacoes: Array<GraphQLTypes["comercial_Propostas_Instalacoes"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Instalacoes" */
	comercial_Propostas_Instalacoes_aggregate: GraphQLTypes["comercial_Propostas_Instalacoes_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Instalacoes" using primary key columns */
	comercial_Propostas_Instalacoes_by_pk?: GraphQLTypes["comercial_Propostas_Instalacoes"],
	/** fetch data from the table: "comercial.Propostas_Oportunidades" */
	comercial_Propostas_Oportunidades: Array<GraphQLTypes["comercial_Propostas_Oportunidades"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Oportunidades" */
	comercial_Propostas_Oportunidades_aggregate: GraphQLTypes["comercial_Propostas_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Oportunidades" using primary key columns */
	comercial_Propostas_Oportunidades_by_pk?: GraphQLTypes["comercial_Propostas_Oportunidades"],
	/** fetch data from the table: "comercial.Propostas_Planos" */
	comercial_Propostas_Planos: Array<GraphQLTypes["comercial_Propostas_Planos"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Planos" */
	comercial_Propostas_Planos_aggregate: GraphQLTypes["comercial_Propostas_Planos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Planos" using primary key columns */
	comercial_Propostas_Planos_by_pk?: GraphQLTypes["comercial_Propostas_Planos"],
	/** fetch data from the table: "comercial.Propostas_Produtos" */
	comercial_Propostas_Produtos: Array<GraphQLTypes["comercial_Propostas_Produtos"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Produtos" */
	comercial_Propostas_Produtos_aggregate: GraphQLTypes["comercial_Propostas_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Produtos" using primary key columns */
	comercial_Propostas_Produtos_by_pk?: GraphQLTypes["comercial_Propostas_Produtos"],
	/** fetch data from the table: "comercial.Propostas_Servicos" */
	comercial_Propostas_Servicos: Array<GraphQLTypes["comercial_Propostas_Servicos"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Servicos" */
	comercial_Propostas_Servicos_aggregate: GraphQLTypes["comercial_Propostas_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Servicos" using primary key columns */
	comercial_Propostas_Servicos_by_pk?: GraphQLTypes["comercial_Propostas_Servicos"],
	/** fetch data from the table: "comercial.Propostas_Situacoes" */
	comercial_Propostas_Situacoes: Array<GraphQLTypes["comercial_Propostas_Situacoes"]>,
	/** fetch aggregated fields from the table: "comercial.Propostas_Situacoes" */
	comercial_Propostas_Situacoes_aggregate: GraphQLTypes["comercial_Propostas_Situacoes_aggregate"],
	/** fetch data from the table: "comercial.Propostas_Situacoes" using primary key columns */
	comercial_Propostas_Situacoes_by_pk?: GraphQLTypes["comercial_Propostas_Situacoes"],
	/** fetch aggregated fields from the table: "comercial.Propostas" */
	comercial_Propostas_aggregate: GraphQLTypes["comercial_Propostas_aggregate"],
	/** fetch data from the table: "comercial.Propostas" using primary key columns */
	comercial_Propostas_by_pk?: GraphQLTypes["comercial_Propostas"],
	/** fetch data from the table: "comercial.Servicos" */
	comercial_Servicos: Array<GraphQLTypes["comercial_Servicos"]>,
	/** fetch data from the table: "comercial.Servicos_Atributos" */
	comercial_Servicos_Atributos: Array<GraphQLTypes["comercial_Servicos_Atributos"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Atributos" */
	comercial_Servicos_Atributos_aggregate: GraphQLTypes["comercial_Servicos_Atributos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Atributos" using primary key columns */
	comercial_Servicos_Atributos_by_pk?: GraphQLTypes["comercial_Servicos_Atributos"],
	/** fetch data from the table: "comercial.Servicos_Oportunidades" */
	comercial_Servicos_Oportunidades: Array<GraphQLTypes["comercial_Servicos_Oportunidades"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Oportunidades" */
	comercial_Servicos_Oportunidades_aggregate: GraphQLTypes["comercial_Servicos_Oportunidades_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Oportunidades" using primary key columns */
	comercial_Servicos_Oportunidades_by_pk?: GraphQLTypes["comercial_Servicos_Oportunidades"],
	/** fetch data from the table: "comercial.Servicos_Produtos" */
	comercial_Servicos_Produtos: Array<GraphQLTypes["comercial_Servicos_Produtos"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Produtos" */
	comercial_Servicos_Produtos_aggregate: GraphQLTypes["comercial_Servicos_Produtos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Produtos" using primary key columns */
	comercial_Servicos_Produtos_by_pk?: GraphQLTypes["comercial_Servicos_Produtos"],
	/** fetch data from the table: "comercial.Servicos_Servicos" */
	comercial_Servicos_Servicos: Array<GraphQLTypes["comercial_Servicos_Servicos"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Servicos" */
	comercial_Servicos_Servicos_aggregate: GraphQLTypes["comercial_Servicos_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Servicos" using primary key columns */
	comercial_Servicos_Servicos_by_pk?: GraphQLTypes["comercial_Servicos_Servicos"],
	/** fetch data from the table: "comercial.Servicos_Tarifas" */
	comercial_Servicos_Tarifas: Array<GraphQLTypes["comercial_Servicos_Tarifas"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Tarifas" */
	comercial_Servicos_Tarifas_aggregate: GraphQLTypes["comercial_Servicos_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Tarifas" using primary key columns */
	comercial_Servicos_Tarifas_by_pk?: GraphQLTypes["comercial_Servicos_Tarifas"],
	/** fetch data from the table: "comercial.Servicos_Tipos" */
	comercial_Servicos_Tipos: Array<GraphQLTypes["comercial_Servicos_Tipos"]>,
	/** fetch aggregated fields from the table: "comercial.Servicos_Tipos" */
	comercial_Servicos_Tipos_aggregate: GraphQLTypes["comercial_Servicos_Tipos_aggregate"],
	/** fetch data from the table: "comercial.Servicos_Tipos" using primary key columns */
	comercial_Servicos_Tipos_by_pk?: GraphQLTypes["comercial_Servicos_Tipos"],
	/** fetch aggregated fields from the table: "comercial.Servicos" */
	comercial_Servicos_aggregate: GraphQLTypes["comercial_Servicos_aggregate"],
	/** fetch data from the table: "comercial.Servicos" using primary key columns */
	comercial_Servicos_by_pk?: GraphQLTypes["comercial_Servicos"],
	/** fetch data from the table: "comercial.Tarifas" */
	comercial_Tarifas: Array<GraphQLTypes["comercial_Tarifas"]>,
	/** fetch aggregated fields from the table: "comercial.Tarifas" */
	comercial_Tarifas_aggregate: GraphQLTypes["comercial_Tarifas_aggregate"],
	/** fetch data from the table: "comercial.Tarifas" using primary key columns */
	comercial_Tarifas_by_pk?: GraphQLTypes["comercial_Tarifas"],
	/** fetch data from the table: "contatos.Emails" */
	contatos_Emails: Array<GraphQLTypes["contatos_Emails"]>,
	/** fetch aggregated fields from the table: "contatos.Emails" */
	contatos_Emails_aggregate: GraphQLTypes["contatos_Emails_aggregate"],
	/** fetch data from the table: "contatos.Emails" using primary key columns */
	contatos_Emails_by_pk?: GraphQLTypes["contatos_Emails"],
	/** fetch data from the table: "contatos.Enderecos" */
	contatos_Enderecos: Array<GraphQLTypes["contatos_Enderecos"]>,
	/** fetch aggregated fields from the table: "contatos.Enderecos" */
	contatos_Enderecos_aggregate: GraphQLTypes["contatos_Enderecos_aggregate"],
	/** fetch data from the table: "contatos.Enderecos" using primary key columns */
	contatos_Enderecos_by_pk?: GraphQLTypes["contatos_Enderecos"],
	/** fetch data from the table: "contatos.Logs" */
	contatos_Logs: Array<GraphQLTypes["contatos_Logs"]>,
	/** fetch aggregated fields from the table: "contatos.Logs" */
	contatos_Logs_aggregate: GraphQLTypes["contatos_Logs_aggregate"],
	/** fetch data from the table: "contatos.Logs" using primary key columns */
	contatos_Logs_by_pk?: GraphQLTypes["contatos_Logs"],
	/** fetch data from the table: "contatos.Telefones" */
	contatos_Telefones: Array<GraphQLTypes["contatos_Telefones"]>,
	/** fetch aggregated fields from the table: "contatos.Telefones" */
	contatos_Telefones_aggregate: GraphQLTypes["contatos_Telefones_aggregate"],
	/** fetch data from the table: "contatos.Telefones" using primary key columns */
	contatos_Telefones_by_pk?: GraphQLTypes["contatos_Telefones"],
	/** fetch data from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos: Array<GraphQLTypes["estoque_Enderecamentos"]>,
	/** fetch aggregated fields from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos_aggregate: GraphQLTypes["estoque_Enderecamentos_aggregate"],
	/** fetch data from the table: "estoque.Enderecamentos" using primary key columns */
	estoque_Enderecamentos_by_pk?: GraphQLTypes["estoque_Enderecamentos"],
	/** fetch data from the table: "estoque.Fabricantes" */
	estoque_Fabricantes: Array<GraphQLTypes["estoque_Fabricantes"]>,
	/** fetch aggregated fields from the table: "estoque.Fabricantes" */
	estoque_Fabricantes_aggregate: GraphQLTypes["estoque_Fabricantes_aggregate"],
	/** fetch data from the table: "estoque.Fabricantes" using primary key columns */
	estoque_Fabricantes_by_pk?: GraphQLTypes["estoque_Fabricantes"],
	/** fetch data from the table: "estoque.Familias" */
	estoque_Familias: Array<GraphQLTypes["estoque_Familias"]>,
	/** fetch aggregated fields from the table: "estoque.Familias" */
	estoque_Familias_aggregate: GraphQLTypes["estoque_Familias_aggregate"],
	/** fetch data from the table: "estoque.Familias" using primary key columns */
	estoque_Familias_by_pk?: GraphQLTypes["estoque_Familias"],
	/** fetch data from the table: "estoque.Grupos" */
	estoque_Grupos: Array<GraphQLTypes["estoque_Grupos"]>,
	/** fetch aggregated fields from the table: "estoque.Grupos" */
	estoque_Grupos_aggregate: GraphQLTypes["estoque_Grupos_aggregate"],
	/** fetch data from the table: "estoque.Grupos" using primary key columns */
	estoque_Grupos_by_pk?: GraphQLTypes["estoque_Grupos"],
	/** fetch data from the table: "estoque.Itens" */
	estoque_Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** fetch aggregated fields from the table: "estoque.Itens" */
	estoque_Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	/** fetch data from the table: "estoque.Itens" using primary key columns */
	estoque_Itens_by_pk?: GraphQLTypes["estoque_Itens"],
	/** fetch data from the table: "estoque.Logs" */
	estoque_Logs: Array<GraphQLTypes["estoque_Logs"]>,
	/** fetch aggregated fields from the table: "estoque.Logs" */
	estoque_Logs_aggregate: GraphQLTypes["estoque_Logs_aggregate"],
	/** fetch data from the table: "estoque.Logs" using primary key columns */
	estoque_Logs_by_pk?: GraphQLTypes["estoque_Logs"],
	/** fetch data from the table: "estoque.Modelos" */
	estoque_Modelos: Array<GraphQLTypes["estoque_Modelos"]>,
	/** fetch aggregated fields from the table: "estoque.Modelos" */
	estoque_Modelos_aggregate: GraphQLTypes["estoque_Modelos_aggregate"],
	/** fetch data from the table: "estoque.Modelos" using primary key columns */
	estoque_Modelos_by_pk?: GraphQLTypes["estoque_Modelos"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos: Array<GraphQLTypes["estoque_TiposDeEnderecamentos"]>,
	/** fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos_aggregate: GraphQLTypes["estoque_TiposDeEnderecamentos_aggregate"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns */
	estoque_TiposDeEnderecamentos_by_pk?: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	/** fetch data from the table: "identidades.Clientes" */
	identidades_Clientes: Array<GraphQLTypes["identidades_Clientes"]>,
	/** fetch data from the table: "identidades.Clientes_Documentos" */
	identidades_Clientes_Documentos: Array<GraphQLTypes["identidades_Clientes_Documentos"]>,
	/** fetch data from the table: "identidades.Clientes_Documentos_Situacoes" */
	identidades_Clientes_Documentos_Situacoes: Array<GraphQLTypes["identidades_Clientes_Documentos_Situacoes"]>,
	/** fetch aggregated fields from the table: "identidades.Clientes_Documentos_Situacoes" */
	identidades_Clientes_Documentos_Situacoes_aggregate: GraphQLTypes["identidades_Clientes_Documentos_Situacoes_aggregate"],
	/** fetch data from the table: "identidades.Clientes_Documentos_Situacoes" using primary key columns */
	identidades_Clientes_Documentos_Situacoes_by_pk?: GraphQLTypes["identidades_Clientes_Documentos_Situacoes"],
	/** fetch aggregated fields from the table: "identidades.Clientes_Documentos" */
	identidades_Clientes_Documentos_aggregate: GraphQLTypes["identidades_Clientes_Documentos_aggregate"],
	/** fetch data from the table: "identidades.Clientes_Documentos" using primary key columns */
	identidades_Clientes_Documentos_by_pk?: GraphQLTypes["identidades_Clientes_Documentos"],
	/** fetch aggregated fields from the table: "identidades.Clientes" */
	identidades_Clientes_aggregate: GraphQLTypes["identidades_Clientes_aggregate"],
	/** fetch data from the table: "identidades.Clientes" using primary key columns */
	identidades_Clientes_by_pk?: GraphQLTypes["identidades_Clientes"],
	/** fetch data from the table: "identidades.Colaboradores" */
	identidades_Colaboradores: Array<GraphQLTypes["identidades_Colaboradores"]>,
	/** fetch aggregated fields from the table: "identidades.Colaboradores" */
	identidades_Colaboradores_aggregate: GraphQLTypes["identidades_Colaboradores_aggregate"],
	/** fetch data from the table: "identidades.Colaboradores" using primary key columns */
	identidades_Colaboradores_by_pk?: GraphQLTypes["identidades_Colaboradores"],
	/** fetch data from the table: "identidades.Fornecedores" */
	identidades_Fornecedores: Array<GraphQLTypes["identidades_Fornecedores"]>,
	/** fetch aggregated fields from the table: "identidades.Fornecedores" */
	identidades_Fornecedores_aggregate: GraphQLTypes["identidades_Fornecedores_aggregate"],
	/** fetch data from the table: "identidades.Fornecedores" using primary key columns */
	identidades_Fornecedores_by_pk?: GraphQLTypes["identidades_Fornecedores"],
	/** fetch data from the table: "identidades.Logs" */
	identidades_Logs: Array<GraphQLTypes["identidades_Logs"]>,
	/** fetch aggregated fields from the table: "identidades.Logs" */
	identidades_Logs_aggregate: GraphQLTypes["identidades_Logs_aggregate"],
	/** fetch data from the table: "identidades.Logs" using primary key columns */
	identidades_Logs_by_pk?: GraphQLTypes["identidades_Logs"],
	/** fetch data from the table: "identidades.Pessoas" */
	identidades_Pessoas: Array<GraphQLTypes["identidades_Pessoas"]>,
	/** fetch aggregated fields from the table: "identidades.Pessoas" */
	identidades_Pessoas_aggregate: GraphQLTypes["identidades_Pessoas_aggregate"],
	/** fetch data from the table: "identidades.Pessoas" using primary key columns */
	identidades_Pessoas_by_pk?: GraphQLTypes["identidades_Pessoas"],
	/** fetch data from the table: "identidades.Representantes" */
	identidades_Representantes: Array<GraphQLTypes["identidades_Representantes"]>,
	/** fetch aggregated fields from the table: "identidades.Representantes" */
	identidades_Representantes_aggregate: GraphQLTypes["identidades_Representantes_aggregate"],
	/** fetch data from the table: "identidades.Representantes" using primary key columns */
	identidades_Representantes_by_pk?: GraphQLTypes["identidades_Representantes"],
	/** fetch data from the table: "identidades.Vendedores" */
	identidades_Vendedores: Array<GraphQLTypes["identidades_Vendedores"]>,
	/** fetch aggregated fields from the table: "identidades.Vendedores" */
	identidades_Vendedores_aggregate: GraphQLTypes["identidades_Vendedores_aggregate"],
	/** fetch data from the table: "identidades.Vendedores" using primary key columns */
	identidades_Vendedores_by_pk?: GraphQLTypes["identidades_Vendedores"],
	/** fetch data from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos: Array<GraphQLTypes["movimentacoes_Motivos"]>,
	/** fetch aggregated fields from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos_aggregate: GraphQLTypes["movimentacoes_Motivos_aggregate"],
	/** fetch data from the table: "movimentacoes.Motivos" using primary key columns */
	movimentacoes_Motivos_by_pk?: GraphQLTypes["movimentacoes_Motivos"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>,
	/** fetch aggregated fields from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes_aggregate: GraphQLTypes["movimentacoes_Movimentacoes_aggregate"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" using primary key columns */
	movimentacoes_Movimentacoes_by_pk?: GraphQLTypes["movimentacoes_Movimentacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico: Array<GraphQLTypes["operacional_OrdemDeServico"]>,
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades_aggregate: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" using primary key columns */
	operacional_OrdemDeServico_Atividades_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Atividades"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes_aggregate: GraphQLTypes["operacional_OrdemDeServico_Situacoes_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" using primary key columns */
	operacional_OrdemDeServico_Situacoes_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo_aggregate: GraphQLTypes["operacional_OrdemDeServico_Tipo_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" using primary key columns */
	operacional_OrdemDeServico_Tipo_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico_aggregate: GraphQLTypes["operacional_OrdemDeServico_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico" using primary key columns */
	operacional_OrdemDeServico_by_pk?: GraphQLTypes["operacional_OrdemDeServico"],
	/** fetch data from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs: Array<GraphQLTypes["pedidosDeCompra_Logs"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs_aggregate: GraphQLTypes["pedidosDeCompra_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Logs" using primary key columns */
	pedidosDeCompra_Logs_by_pk?: GraphQLTypes["pedidosDeCompra_Logs"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos"]>,
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" using primary key columns */
	pedidosDeCompra_Orcamentos_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" using primary key columns */
	pedidosDeCompra_Orcamentos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos: Array<GraphQLTypes["pedidosDeCompra_Pedidos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos_aggregate: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" using primary key columns */
	pedidosDeCompra_Pedidos_by_pk?: GraphQLTypes["pedidosDeCompra_Pedidos"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos: Array<GraphQLTypes["pedidosDeCompra_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" using primary key columns */
	pedidosDeCompra_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Produtos"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes: Array<GraphQLTypes["pedidosDeCompra_Situacoes"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes_aggregate: GraphQLTypes["pedidosDeCompra_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" using primary key columns */
	pedidosDeCompra_Situacoes_by_pk?: GraphQLTypes["pedidosDeCompra_Situacoes"],
	/** fetch data from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs: Array<GraphQLTypes["pedidosDeSaida_Logs"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs_aggregate: GraphQLTypes["pedidosDeSaida_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Logs" using primary key columns */
	pedidosDeSaida_Logs_by_pk?: GraphQLTypes["pedidosDeSaida_Logs"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos: Array<GraphQLTypes["pedidosDeSaida_Pedidos"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos_aggregate: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" using primary key columns */
	pedidosDeSaida_Pedidos_by_pk?: GraphQLTypes["pedidosDeSaida_Pedidos"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos: Array<GraphQLTypes["pedidosDeSaida_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos_aggregate: GraphQLTypes["pedidosDeSaida_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" using primary key columns */
	pedidosDeSaida_Produtos_by_pk?: GraphQLTypes["pedidosDeSaida_Produtos"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes: Array<GraphQLTypes["pedidosDeSaida_Situacoes"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes_aggregate: GraphQLTypes["pedidosDeSaida_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" using primary key columns */
	pedidosDeSaida_Situacoes_by_pk?: GraphQLTypes["pedidosDeSaida_Situacoes"],
	/** fetch data from the table: "producao.Chips" */
	producao_Chips: Array<GraphQLTypes["producao_Chips"]>,
	/** fetch data from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes: Array<GraphQLTypes["producao_ChipsSituacoes"]>,
	/** fetch aggregated fields from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes_aggregate: GraphQLTypes["producao_ChipsSituacoes_aggregate"],
	/** fetch data from the table: "producao.ChipsSituacoes" using primary key columns */
	producao_ChipsSituacoes_by_pk?: GraphQLTypes["producao_ChipsSituacoes"],
	/** fetch aggregated fields from the table: "producao.Chips" */
	producao_Chips_aggregate: GraphQLTypes["producao_Chips_aggregate"],
	/** fetch data from the table: "producao.Chips" using primary key columns */
	producao_Chips_by_pk?: GraphQLTypes["producao_Chips"],
	/** fetch data from the table: "producao.Equipamentos" */
	producao_Equipamentos: Array<GraphQLTypes["producao_Equipamentos"]>,
	/** fetch aggregated fields from the table: "producao.Equipamentos" */
	producao_Equipamentos_aggregate: GraphQLTypes["producao_Equipamentos_aggregate"],
	/** fetch data from the table: "producao.Equipamentos" using primary key columns */
	producao_Equipamentos_by_pk?: GraphQLTypes["producao_Equipamentos"],
	/** fetch data from the table: "producao.Identificadores" */
	producao_Identificadores: Array<GraphQLTypes["producao_Identificadores"]>,
	/** fetch aggregated fields from the table: "producao.Identificadores" */
	producao_Identificadores_aggregate: GraphQLTypes["producao_Identificadores_aggregate"],
	/** fetch data from the table: "producao.Identificadores" using primary key columns */
	producao_Identificadores_by_pk?: GraphQLTypes["producao_Identificadores"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens: Array<GraphQLTypes["producao_KitDeInsumo_Itens"]>,
	/** fetch aggregated fields from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens_aggregate: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" using primary key columns */
	producao_KitDeInsumo_Itens_by_pk?: GraphQLTypes["producao_KitDeInsumo_Itens"],
	/** fetch data from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao: Array<GraphQLTypes["producao_KitsDeInstalacao"]>,
	/** fetch aggregated fields from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao_aggregate: GraphQLTypes["producao_KitsDeInstalacao_aggregate"],
	/** fetch data from the table: "producao.KitsDeInstalacao" using primary key columns */
	producao_KitsDeInstalacao_by_pk?: GraphQLTypes["producao_KitsDeInstalacao"],
	/** fetch data from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo: Array<GraphQLTypes["producao_KitsDeInsumo"]>,
	/** fetch aggregated fields from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo_aggregate: GraphQLTypes["producao_KitsDeInsumo_aggregate"],
	/** fetch data from the table: "producao.KitsDeInsumo" using primary key columns */
	producao_KitsDeInsumo_by_pk?: GraphQLTypes["producao_KitsDeInsumo"],
	/** fetch data from the table: "producao.Logs" */
	producao_Logs: Array<GraphQLTypes["producao_Logs"]>,
	/** fetch aggregated fields from the table: "producao.Logs" */
	producao_Logs_aggregate: GraphQLTypes["producao_Logs_aggregate"],
	/** fetch data from the table: "producao.Logs" using primary key columns */
	producao_Logs_by_pk?: GraphQLTypes["producao_Logs"],
	/** fetch data from the table: "producao.Rastreadores" */
	producao_Rastreadores: Array<GraphQLTypes["producao_Rastreadores"]>,
	/** fetch aggregated fields from the table: "producao.Rastreadores" */
	producao_Rastreadores_aggregate: GraphQLTypes["producao_Rastreadores_aggregate"],
	/** fetch data from the table: "producao.Rastreadores" using primary key columns */
	producao_Rastreadores_by_pk?: GraphQLTypes["producao_Rastreadores"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo: Array<GraphQLTypes["producao_TiposDeKitDeInsumo"]>,
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo_aggregate: GraphQLTypes["producao_TiposDeKitDeInsumo_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" using primary key columns */
	producao_TiposDeKitDeInsumo_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]>,
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens_aggregate: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" using primary key columns */
	producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"],
	/** fetch data from the table: "vendas.GruposDePerguntas" */
	vendas_GruposDePerguntas: Array<GraphQLTypes["vendas_GruposDePerguntas"]>,
	/** fetch data from the table: "vendas.GruposDePerguntas_Perguntas" */
	vendas_GruposDePerguntas_Perguntas: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas"]>,
	/** fetch aggregated fields from the table: "vendas.GruposDePerguntas_Perguntas" */
	vendas_GruposDePerguntas_Perguntas_aggregate: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	/** fetch data from the table: "vendas.GruposDePerguntas_Perguntas" using primary key columns */
	vendas_GruposDePerguntas_Perguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas"],
	/** fetch aggregated fields from the table: "vendas.GruposDePerguntas" */
	vendas_GruposDePerguntas_aggregate: GraphQLTypes["vendas_GruposDePerguntas_aggregate"],
	/** fetch data from the table: "vendas.GruposDePerguntas" using primary key columns */
	vendas_GruposDePerguntas_by_pk?: GraphQLTypes["vendas_GruposDePerguntas"],
	/** fetch data from the table: "vendas.Perguntas" */
	vendas_Perguntas: Array<GraphQLTypes["vendas_Perguntas"]>,
	/** fetch aggregated fields from the table: "vendas.Perguntas" */
	vendas_Perguntas_aggregate: GraphQLTypes["vendas_Perguntas_aggregate"],
	/** fetch data from the table: "vendas.Perguntas" using primary key columns */
	vendas_Perguntas_by_pk?: GraphQLTypes["vendas_Perguntas"],
	/** fetch data from the table: "vendas.TiposDePagamento" */
	vendas_TiposDePagamento: Array<GraphQLTypes["vendas_TiposDePagamento"]>,
	/** fetch aggregated fields from the table: "vendas.TiposDePagamento" */
	vendas_TiposDePagamento_aggregate: GraphQLTypes["vendas_TiposDePagamento_aggregate"],
	/** fetch data from the table: "vendas.TiposDePagamento" using primary key columns */
	vendas_TiposDePagamento_by_pk?: GraphQLTypes["vendas_TiposDePagamento"],
	/** fetch data from the table: "vendas.TiposDeRecorrencia" */
	vendas_TiposDeRecorrencia: Array<GraphQLTypes["vendas_TiposDeRecorrencia"]>,
	/** fetch aggregated fields from the table: "vendas.TiposDeRecorrencia" */
	vendas_TiposDeRecorrencia_aggregate: GraphQLTypes["vendas_TiposDeRecorrencia_aggregate"],
	/** fetch data from the table: "vendas.TiposDeRecorrencia" using primary key columns */
	vendas_TiposDeRecorrencia_by_pk?: GraphQLTypes["vendas_TiposDeRecorrencia"]
};
	["subscription_root"]: {
	__typename: "subscription_root",
	/** fetch data from the table: "Configuracoes" */
	Configuracoes: Array<GraphQLTypes["Configuracoes"]>,
	/** fetch aggregated fields from the table: "Configuracoes" */
	Configuracoes_aggregate: GraphQLTypes["Configuracoes_aggregate"],
	/** fetch data from the table: "Configuracoes" using primary key columns */
	Configuracoes_by_pk?: GraphQLTypes["Configuracoes"],
	/** fetch data from the table: "Operadoras" */
	Operadoras: Array<GraphQLTypes["Operadoras"]>,
	/** fetch aggregated fields from the table: "Operadoras" */
	Operadoras_aggregate: GraphQLTypes["Operadoras_aggregate"],
	/** fetch data from the table: "Operadoras" using primary key columns */
	Operadoras_by_pk?: GraphQLTypes["Operadoras"],
	/** fetch data from the table: "Produtos" */
	Produtos: Array<GraphQLTypes["Produtos"]>,
	/** fetch aggregated fields from the table: "Produtos" */
	Produtos_aggregate: GraphQLTypes["Produtos_aggregate"],
	/** fetch data from the table: "Produtos" using primary key columns */
	Produtos_by_pk?: GraphQLTypes["Produtos"],
	/** fetch data from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas: Array<GraphQLTypes["UnidadesDeMedidas"]>,
	/** fetch aggregated fields from the table: "UnidadesDeMedidas" */
	UnidadesDeMedidas_aggregate: GraphQLTypes["UnidadesDeMedidas_aggregate"],
	/** fetch data from the table: "UnidadesDeMedidas" using primary key columns */
	UnidadesDeMedidas_by_pk?: GraphQLTypes["UnidadesDeMedidas"],
	/** fetch data from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos: Array<GraphQLTypes["estoque_Enderecamentos"]>,
	/** fetch aggregated fields from the table: "estoque.Enderecamentos" */
	estoque_Enderecamentos_aggregate: GraphQLTypes["estoque_Enderecamentos_aggregate"],
	/** fetch data from the table: "estoque.Enderecamentos" using primary key columns */
	estoque_Enderecamentos_by_pk?: GraphQLTypes["estoque_Enderecamentos"],
	/** fetch data from the table: "estoque.Fabricantes" */
	estoque_Fabricantes: Array<GraphQLTypes["estoque_Fabricantes"]>,
	/** fetch aggregated fields from the table: "estoque.Fabricantes" */
	estoque_Fabricantes_aggregate: GraphQLTypes["estoque_Fabricantes_aggregate"],
	/** fetch data from the table: "estoque.Fabricantes" using primary key columns */
	estoque_Fabricantes_by_pk?: GraphQLTypes["estoque_Fabricantes"],
	/** fetch data from the table: "estoque.Familias" */
	estoque_Familias: Array<GraphQLTypes["estoque_Familias"]>,
	/** fetch aggregated fields from the table: "estoque.Familias" */
	estoque_Familias_aggregate: GraphQLTypes["estoque_Familias_aggregate"],
	/** fetch data from the table: "estoque.Familias" using primary key columns */
	estoque_Familias_by_pk?: GraphQLTypes["estoque_Familias"],
	/** fetch data from the table: "estoque.Grupos" */
	estoque_Grupos: Array<GraphQLTypes["estoque_Grupos"]>,
	/** fetch aggregated fields from the table: "estoque.Grupos" */
	estoque_Grupos_aggregate: GraphQLTypes["estoque_Grupos_aggregate"],
	/** fetch data from the table: "estoque.Grupos" using primary key columns */
	estoque_Grupos_by_pk?: GraphQLTypes["estoque_Grupos"],
	/** fetch data from the table: "estoque.Itens" */
	estoque_Itens: Array<GraphQLTypes["estoque_Itens"]>,
	/** fetch aggregated fields from the table: "estoque.Itens" */
	estoque_Itens_aggregate: GraphQLTypes["estoque_Itens_aggregate"],
	/** fetch data from the table: "estoque.Itens" using primary key columns */
	estoque_Itens_by_pk?: GraphQLTypes["estoque_Itens"],
	/** fetch data from the table: "estoque.Logs" */
	estoque_Logs: Array<GraphQLTypes["estoque_Logs"]>,
	/** fetch aggregated fields from the table: "estoque.Logs" */
	estoque_Logs_aggregate: GraphQLTypes["estoque_Logs_aggregate"],
	/** fetch data from the table: "estoque.Logs" using primary key columns */
	estoque_Logs_by_pk?: GraphQLTypes["estoque_Logs"],
	/** fetch data from the table: "estoque.Modelos" */
	estoque_Modelos: Array<GraphQLTypes["estoque_Modelos"]>,
	/** fetch aggregated fields from the table: "estoque.Modelos" */
	estoque_Modelos_aggregate: GraphQLTypes["estoque_Modelos_aggregate"],
	/** fetch data from the table: "estoque.Modelos" using primary key columns */
	estoque_Modelos_by_pk?: GraphQLTypes["estoque_Modelos"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos: Array<GraphQLTypes["estoque_TiposDeEnderecamentos"]>,
	/** fetch aggregated fields from the table: "estoque.TiposDeEnderecamentos" */
	estoque_TiposDeEnderecamentos_aggregate: GraphQLTypes["estoque_TiposDeEnderecamentos_aggregate"],
	/** fetch data from the table: "estoque.TiposDeEnderecamentos" using primary key columns */
	estoque_TiposDeEnderecamentos_by_pk?: GraphQLTypes["estoque_TiposDeEnderecamentos"],
	/** fetch data from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos: Array<GraphQLTypes["movimentacoes_Motivos"]>,
	/** fetch aggregated fields from the table: "movimentacoes.Motivos" */
	movimentacoes_Motivos_aggregate: GraphQLTypes["movimentacoes_Motivos_aggregate"],
	/** fetch data from the table: "movimentacoes.Motivos" using primary key columns */
	movimentacoes_Motivos_by_pk?: GraphQLTypes["movimentacoes_Motivos"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes: Array<GraphQLTypes["movimentacoes_Movimentacoes"]>,
	/** fetch aggregated fields from the table: "movimentacoes.Movimentacoes" */
	movimentacoes_Movimentacoes_aggregate: GraphQLTypes["movimentacoes_Movimentacoes_aggregate"],
	/** fetch data from the table: "movimentacoes.Movimentacoes" using primary key columns */
	movimentacoes_Movimentacoes_by_pk?: GraphQLTypes["movimentacoes_Movimentacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico: Array<GraphQLTypes["operacional_OrdemDeServico"]>,
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades: Array<GraphQLTypes["operacional_OrdemDeServico_Atividades"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Atividades" */
	operacional_OrdemDeServico_Atividades_aggregate: GraphQLTypes["operacional_OrdemDeServico_Atividades_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Atividades" using primary key columns */
	operacional_OrdemDeServico_Atividades_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Atividades"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes: Array<GraphQLTypes["operacional_OrdemDeServico_Situacoes"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Situacoes" */
	operacional_OrdemDeServico_Situacoes_aggregate: GraphQLTypes["operacional_OrdemDeServico_Situacoes_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Situacoes" using primary key columns */
	operacional_OrdemDeServico_Situacoes_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Situacoes"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo: Array<GraphQLTypes["operacional_OrdemDeServico_Tipo"]>,
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico_Tipo" */
	operacional_OrdemDeServico_Tipo_aggregate: GraphQLTypes["operacional_OrdemDeServico_Tipo_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico_Tipo" using primary key columns */
	operacional_OrdemDeServico_Tipo_by_pk?: GraphQLTypes["operacional_OrdemDeServico_Tipo"],
	/** fetch aggregated fields from the table: "operacional.OrdemDeServico" */
	operacional_OrdemDeServico_aggregate: GraphQLTypes["operacional_OrdemDeServico_aggregate"],
	/** fetch data from the table: "operacional.OrdemDeServico" using primary key columns */
	operacional_OrdemDeServico_by_pk?: GraphQLTypes["operacional_OrdemDeServico"],
	/** fetch data from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs: Array<GraphQLTypes["pedidosDeCompra_Logs"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Logs" */
	pedidosDeCompra_Logs_aggregate: GraphQLTypes["pedidosDeCompra_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Logs" using primary key columns */
	pedidosDeCompra_Logs_by_pk?: GraphQLTypes["pedidosDeCompra_Logs"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos"]>,
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos: Array<GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos_Produtos" */
	pedidosDeCompra_Orcamentos_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos_Produtos" using primary key columns */
	pedidosDeCompra_Orcamentos_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos_Produtos"],
	/** fetch aggregated fields from the table: "pedidosDeCompra.Orcamentos" */
	pedidosDeCompra_Orcamentos_aggregate: GraphQLTypes["pedidosDeCompra_Orcamentos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Orcamentos" using primary key columns */
	pedidosDeCompra_Orcamentos_by_pk?: GraphQLTypes["pedidosDeCompra_Orcamentos"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos: Array<GraphQLTypes["pedidosDeCompra_Pedidos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Pedidos" */
	pedidosDeCompra_Pedidos_aggregate: GraphQLTypes["pedidosDeCompra_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Pedidos" using primary key columns */
	pedidosDeCompra_Pedidos_by_pk?: GraphQLTypes["pedidosDeCompra_Pedidos"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos: Array<GraphQLTypes["pedidosDeCompra_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Produtos" */
	pedidosDeCompra_Produtos_aggregate: GraphQLTypes["pedidosDeCompra_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Produtos" using primary key columns */
	pedidosDeCompra_Produtos_by_pk?: GraphQLTypes["pedidosDeCompra_Produtos"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes: Array<GraphQLTypes["pedidosDeCompra_Situacoes"]>,
	/** fetch aggregated fields from the table: "pedidosDeCompra.Situacoes" */
	pedidosDeCompra_Situacoes_aggregate: GraphQLTypes["pedidosDeCompra_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeCompra.Situacoes" using primary key columns */
	pedidosDeCompra_Situacoes_by_pk?: GraphQLTypes["pedidosDeCompra_Situacoes"],
	/** fetch data from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs: Array<GraphQLTypes["pedidosDeSaida_Logs"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Logs" */
	pedidosDeSaida_Logs_aggregate: GraphQLTypes["pedidosDeSaida_Logs_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Logs" using primary key columns */
	pedidosDeSaida_Logs_by_pk?: GraphQLTypes["pedidosDeSaida_Logs"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos: Array<GraphQLTypes["pedidosDeSaida_Pedidos"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Pedidos" */
	pedidosDeSaida_Pedidos_aggregate: GraphQLTypes["pedidosDeSaida_Pedidos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Pedidos" using primary key columns */
	pedidosDeSaida_Pedidos_by_pk?: GraphQLTypes["pedidosDeSaida_Pedidos"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos: Array<GraphQLTypes["pedidosDeSaida_Produtos"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Produtos" */
	pedidosDeSaida_Produtos_aggregate: GraphQLTypes["pedidosDeSaida_Produtos_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Produtos" using primary key columns */
	pedidosDeSaida_Produtos_by_pk?: GraphQLTypes["pedidosDeSaida_Produtos"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes: Array<GraphQLTypes["pedidosDeSaida_Situacoes"]>,
	/** fetch aggregated fields from the table: "pedidosDeSaida.Situacoes" */
	pedidosDeSaida_Situacoes_aggregate: GraphQLTypes["pedidosDeSaida_Situacoes_aggregate"],
	/** fetch data from the table: "pedidosDeSaida.Situacoes" using primary key columns */
	pedidosDeSaida_Situacoes_by_pk?: GraphQLTypes["pedidosDeSaida_Situacoes"],
	/** fetch data from the table: "producao.Chips" */
	producao_Chips: Array<GraphQLTypes["producao_Chips"]>,
	/** fetch data from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes: Array<GraphQLTypes["producao_ChipsSituacoes"]>,
	/** fetch aggregated fields from the table: "producao.ChipsSituacoes" */
	producao_ChipsSituacoes_aggregate: GraphQLTypes["producao_ChipsSituacoes_aggregate"],
	/** fetch data from the table: "producao.ChipsSituacoes" using primary key columns */
	producao_ChipsSituacoes_by_pk?: GraphQLTypes["producao_ChipsSituacoes"],
	/** fetch aggregated fields from the table: "producao.Chips" */
	producao_Chips_aggregate: GraphQLTypes["producao_Chips_aggregate"],
	/** fetch data from the table: "producao.Chips" using primary key columns */
	producao_Chips_by_pk?: GraphQLTypes["producao_Chips"],
	/** fetch data from the table: "producao.Equipamentos" */
	producao_Equipamentos: Array<GraphQLTypes["producao_Equipamentos"]>,
	/** fetch aggregated fields from the table: "producao.Equipamentos" */
	producao_Equipamentos_aggregate: GraphQLTypes["producao_Equipamentos_aggregate"],
	/** fetch data from the table: "producao.Equipamentos" using primary key columns */
	producao_Equipamentos_by_pk?: GraphQLTypes["producao_Equipamentos"],
	/** fetch data from the table: "producao.Identificadores" */
	producao_Identificadores: Array<GraphQLTypes["producao_Identificadores"]>,
	/** fetch aggregated fields from the table: "producao.Identificadores" */
	producao_Identificadores_aggregate: GraphQLTypes["producao_Identificadores_aggregate"],
	/** fetch data from the table: "producao.Identificadores" using primary key columns */
	producao_Identificadores_by_pk?: GraphQLTypes["producao_Identificadores"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens: Array<GraphQLTypes["producao_KitDeInsumo_Itens"]>,
	/** fetch aggregated fields from the table: "producao.KitDeInsumo_Itens" */
	producao_KitDeInsumo_Itens_aggregate: GraphQLTypes["producao_KitDeInsumo_Itens_aggregate"],
	/** fetch data from the table: "producao.KitDeInsumo_Itens" using primary key columns */
	producao_KitDeInsumo_Itens_by_pk?: GraphQLTypes["producao_KitDeInsumo_Itens"],
	/** fetch data from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao: Array<GraphQLTypes["producao_KitsDeInstalacao"]>,
	/** fetch aggregated fields from the table: "producao.KitsDeInstalacao" */
	producao_KitsDeInstalacao_aggregate: GraphQLTypes["producao_KitsDeInstalacao_aggregate"],
	/** fetch data from the table: "producao.KitsDeInstalacao" using primary key columns */
	producao_KitsDeInstalacao_by_pk?: GraphQLTypes["producao_KitsDeInstalacao"],
	/** fetch data from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo: Array<GraphQLTypes["producao_KitsDeInsumo"]>,
	/** fetch aggregated fields from the table: "producao.KitsDeInsumo" */
	producao_KitsDeInsumo_aggregate: GraphQLTypes["producao_KitsDeInsumo_aggregate"],
	/** fetch data from the table: "producao.KitsDeInsumo" using primary key columns */
	producao_KitsDeInsumo_by_pk?: GraphQLTypes["producao_KitsDeInsumo"],
	/** fetch data from the table: "producao.Logs" */
	producao_Logs: Array<GraphQLTypes["producao_Logs"]>,
	/** fetch aggregated fields from the table: "producao.Logs" */
	producao_Logs_aggregate: GraphQLTypes["producao_Logs_aggregate"],
	/** fetch data from the table: "producao.Logs" using primary key columns */
	producao_Logs_by_pk?: GraphQLTypes["producao_Logs"],
	/** fetch data from the table: "producao.Rastreadores" */
	producao_Rastreadores: Array<GraphQLTypes["producao_Rastreadores"]>,
	/** fetch aggregated fields from the table: "producao.Rastreadores" */
	producao_Rastreadores_aggregate: GraphQLTypes["producao_Rastreadores_aggregate"],
	/** fetch data from the table: "producao.Rastreadores" using primary key columns */
	producao_Rastreadores_by_pk?: GraphQLTypes["producao_Rastreadores"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo: Array<GraphQLTypes["producao_TiposDeKitDeInsumo"]>,
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo" */
	producao_TiposDeKitDeInsumo_aggregate: GraphQLTypes["producao_TiposDeKitDeInsumo_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo" using primary key columns */
	producao_TiposDeKitDeInsumo_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens: Array<GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]>,
	/** fetch aggregated fields from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" */
	producao_TiposDeKitDeInsumo_estoque_Itens_aggregate: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens_aggregate"],
	/** fetch data from the table: "producao.TiposDeKitDeInsumo_estoque_Itens" using primary key columns */
	producao_TiposDeKitDeInsumo_estoque_Itens_by_pk?: GraphQLTypes["producao_TiposDeKitDeInsumo_estoque_Itens"]
};
	["timestamptz"]:any;
	/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
["timestamptz_comparison_exp"]: {
		_eq?: GraphQLTypes["timestamptz"],
	_gt?: GraphQLTypes["timestamptz"],
	_gte?: GraphQLTypes["timestamptz"],
	_in?: Array<GraphQLTypes["timestamptz"]>,
	_is_null?: boolean,
	_lt?: GraphQLTypes["timestamptz"],
	_lte?: GraphQLTypes["timestamptz"],
	_neq?: GraphQLTypes["timestamptz"],
	_nin?: Array<GraphQLTypes["timestamptz"]>
};
	["uuid"]:any;
	/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
["uuid_comparison_exp"]: {
		_eq?: GraphQLTypes["uuid"],
	_gt?: GraphQLTypes["uuid"],
	_gte?: GraphQLTypes["uuid"],
	_in?: Array<GraphQLTypes["uuid"]>,
	_is_null?: boolean,
	_lt?: GraphQLTypes["uuid"],
	_lte?: GraphQLTypes["uuid"],
	_neq?: GraphQLTypes["uuid"],
	_nin?: Array<GraphQLTypes["uuid"]>
};
	/** columns and relationships of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas"]: {
	__typename: "vendas_GruposDePerguntas",
	Id: GraphQLTypes["uuid"],
	Nome: string,
	/** An array relationship */
	Perguntas: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas"]>,
	/** An aggregate relationship */
	Perguntas_aggregate: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** columns and relationships of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas",
	/** An object relationship */
	Grupo: GraphQLTypes["vendas_GruposDePerguntas"],
	Grupo_Id: GraphQLTypes["uuid"],
	Id: GraphQLTypes["uuid"],
	/** An object relationship */
	Pergunta: GraphQLTypes["vendas_Perguntas"],
	Pergunta_Id: GraphQLTypes["uuid"],
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas_aggregate",
	aggregate?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate_fields"],
	nodes: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas"]>
};
	/** aggregate fields of "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_fields"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_max_fields"],
	min?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_min_fields"]
};
	/** order by aggregate values of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"]: {
		count?: GraphQLTypes["order_by"],
	max?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_max_order_by"],
	min?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_min_order_by"]
};
	/** input type for inserting array relation for remote table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"]: {
		data: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas_insert_input"]>,
	/** on conflict condition */
	on_conflict?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_on_conflict"]
};
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas_Perguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_Perguntas_bool_exp"]: {
		Grupo?: GraphQLTypes["vendas_GruposDePerguntas_bool_exp"],
	Grupo_Id?: GraphQLTypes["uuid_comparison_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_bool_exp"],
	Pergunta_Id?: GraphQLTypes["uuid_comparison_exp"],
	_and?: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"]>,
	_not?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"],
	_or?: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_constraint"]: vendas_GruposDePerguntas_Perguntas_constraint;
	/** input type for inserting data into table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_insert_input"]: {
		Grupo?: GraphQLTypes["vendas_GruposDePerguntas_obj_rel_insert_input"],
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_obj_rel_insert_input"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["vendas_GruposDePerguntas_Perguntas_max_fields"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas_max_fields",
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by max() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_max_order_by"]: {
		Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** aggregate min on columns */
["vendas_GruposDePerguntas_Perguntas_min_fields"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas_min_fields",
	Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** order by min() on columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_min_order_by"]: {
		Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** response of any mutation on the table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_mutation_response"]: {
	__typename: "vendas_GruposDePerguntas_Perguntas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas"]>
};
	/** on conflict condition type for table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_on_conflict"]: {
		constraint: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_constraint"],
	update_columns: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas_update_column"]>,
	where?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"]
};
	/** Ordering options when selecting data from "vendas.GruposDePerguntas_Perguntas". */
["vendas_GruposDePerguntas_Perguntas_order_by"]: {
		Grupo?: GraphQLTypes["vendas_GruposDePerguntas_order_by"],
	Grupo_Id?: GraphQLTypes["order_by"],
	Id?: GraphQLTypes["order_by"],
	Pergunta?: GraphQLTypes["vendas_Perguntas_order_by"],
	Pergunta_Id?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: vendas_GruposDePerguntas_Perguntas */
["vendas_GruposDePerguntas_Perguntas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_select_column"]: vendas_GruposDePerguntas_Perguntas_select_column;
	/** input type for updating data in table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_set_input"]: {
		Grupo_Id?: GraphQLTypes["uuid"],
	Id?: GraphQLTypes["uuid"],
	Pergunta_Id?: GraphQLTypes["uuid"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "vendas.GruposDePerguntas_Perguntas" */
["vendas_GruposDePerguntas_Perguntas_update_column"]: vendas_GruposDePerguntas_Perguntas_update_column;
	/** aggregated selection of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate"]: {
	__typename: "vendas_GruposDePerguntas_aggregate",
	aggregate?: GraphQLTypes["vendas_GruposDePerguntas_aggregate_fields"],
	nodes: Array<GraphQLTypes["vendas_GruposDePerguntas"]>
};
	/** aggregate fields of "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_aggregate_fields"]: {
	__typename: "vendas_GruposDePerguntas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["vendas_GruposDePerguntas_max_fields"],
	min?: GraphQLTypes["vendas_GruposDePerguntas_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.GruposDePerguntas". All fields are combined with a logical 'AND'. */
["vendas_GruposDePerguntas_bool_exp"]: {
		Id?: GraphQLTypes["uuid_comparison_exp"],
	Nome?: GraphQLTypes["String_comparison_exp"],
	Perguntas?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"],
	_and?: Array<GraphQLTypes["vendas_GruposDePerguntas_bool_exp"]>,
	_not?: GraphQLTypes["vendas_GruposDePerguntas_bool_exp"],
	_or?: Array<GraphQLTypes["vendas_GruposDePerguntas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_constraint"]: vendas_GruposDePerguntas_constraint;
	/** input type for inserting data into table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_insert_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	Perguntas?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"],
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["vendas_GruposDePerguntas_max_fields"]: {
	__typename: "vendas_GruposDePerguntas_max_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["vendas_GruposDePerguntas_min_fields"]: {
	__typename: "vendas_GruposDePerguntas_min_fields",
	Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_mutation_response"]: {
	__typename: "vendas_GruposDePerguntas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["vendas_GruposDePerguntas"]>
};
	/** input type for inserting object relation for remote table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_obj_rel_insert_input"]: {
		data: GraphQLTypes["vendas_GruposDePerguntas_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["vendas_GruposDePerguntas_on_conflict"]
};
	/** on conflict condition type for table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_on_conflict"]: {
		constraint: GraphQLTypes["vendas_GruposDePerguntas_constraint"],
	update_columns: Array<GraphQLTypes["vendas_GruposDePerguntas_update_column"]>,
	where?: GraphQLTypes["vendas_GruposDePerguntas_bool_exp"]
};
	/** Ordering options when selecting data from "vendas.GruposDePerguntas". */
["vendas_GruposDePerguntas_order_by"]: {
		Id?: GraphQLTypes["order_by"],
	Nome?: GraphQLTypes["order_by"],
	Perguntas_aggregate?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: vendas_GruposDePerguntas */
["vendas_GruposDePerguntas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_select_column"]: vendas_GruposDePerguntas_select_column;
	/** input type for updating data in table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_set_input"]: {
		Id?: GraphQLTypes["uuid"],
	Nome?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "vendas.GruposDePerguntas" */
["vendas_GruposDePerguntas_update_column"]: vendas_GruposDePerguntas_update_column;
	/** columns and relationships of "vendas.Perguntas" */
["vendas_Perguntas"]: {
	__typename: "vendas_Perguntas",
	Descricao: string,
	/** An array relationship */
	Grupos: Array<GraphQLTypes["vendas_GruposDePerguntas_Perguntas"]>,
	/** An aggregate relationship */
	Grupos_aggregate: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate"],
	Id: GraphQLTypes["uuid"],
	Titulo: string,
	created_at: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at: GraphQLTypes["timestamptz"]
};
	/** aggregated selection of "vendas.Perguntas" */
["vendas_Perguntas_aggregate"]: {
	__typename: "vendas_Perguntas_aggregate",
	aggregate?: GraphQLTypes["vendas_Perguntas_aggregate_fields"],
	nodes: Array<GraphQLTypes["vendas_Perguntas"]>
};
	/** aggregate fields of "vendas.Perguntas" */
["vendas_Perguntas_aggregate_fields"]: {
	__typename: "vendas_Perguntas_aggregate_fields",
	count: number,
	max?: GraphQLTypes["vendas_Perguntas_max_fields"],
	min?: GraphQLTypes["vendas_Perguntas_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.Perguntas". All fields are combined with a logical 'AND'. */
["vendas_Perguntas_bool_exp"]: {
		Descricao?: GraphQLTypes["String_comparison_exp"],
	Grupos?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_bool_exp"],
	Id?: GraphQLTypes["uuid_comparison_exp"],
	Titulo?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["vendas_Perguntas_bool_exp"]>,
	_not?: GraphQLTypes["vendas_Perguntas_bool_exp"],
	_or?: Array<GraphQLTypes["vendas_Perguntas_bool_exp"]>,
	created_at?: GraphQLTypes["timestamptz_comparison_exp"],
	deleted_at?: GraphQLTypes["timestamptz_comparison_exp"],
	updated_at?: GraphQLTypes["timestamptz_comparison_exp"]
};
	/** unique or primary key constraints on table "vendas.Perguntas" */
["vendas_Perguntas_constraint"]: vendas_Perguntas_constraint;
	/** input type for inserting data into table "vendas.Perguntas" */
["vendas_Perguntas_insert_input"]: {
		Descricao?: string,
	Grupos?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_arr_rel_insert_input"],
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate max on columns */
["vendas_Perguntas_max_fields"]: {
	__typename: "vendas_Perguntas_max_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** aggregate min on columns */
["vendas_Perguntas_min_fields"]: {
	__typename: "vendas_Perguntas_min_fields",
	Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** response of any mutation on the table "vendas.Perguntas" */
["vendas_Perguntas_mutation_response"]: {
	__typename: "vendas_Perguntas_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["vendas_Perguntas"]>
};
	/** input type for inserting object relation for remote table "vendas.Perguntas" */
["vendas_Perguntas_obj_rel_insert_input"]: {
		data: GraphQLTypes["vendas_Perguntas_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["vendas_Perguntas_on_conflict"]
};
	/** on conflict condition type for table "vendas.Perguntas" */
["vendas_Perguntas_on_conflict"]: {
		constraint: GraphQLTypes["vendas_Perguntas_constraint"],
	update_columns: Array<GraphQLTypes["vendas_Perguntas_update_column"]>,
	where?: GraphQLTypes["vendas_Perguntas_bool_exp"]
};
	/** Ordering options when selecting data from "vendas.Perguntas". */
["vendas_Perguntas_order_by"]: {
		Descricao?: GraphQLTypes["order_by"],
	Grupos_aggregate?: GraphQLTypes["vendas_GruposDePerguntas_Perguntas_aggregate_order_by"],
	Id?: GraphQLTypes["order_by"],
	Titulo?: GraphQLTypes["order_by"],
	created_at?: GraphQLTypes["order_by"],
	deleted_at?: GraphQLTypes["order_by"],
	updated_at?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: vendas_Perguntas */
["vendas_Perguntas_pk_columns_input"]: {
		Id: GraphQLTypes["uuid"]
};
	/** select columns of table "vendas.Perguntas" */
["vendas_Perguntas_select_column"]: vendas_Perguntas_select_column;
	/** input type for updating data in table "vendas.Perguntas" */
["vendas_Perguntas_set_input"]: {
		Descricao?: string,
	Id?: GraphQLTypes["uuid"],
	Titulo?: string,
	created_at?: GraphQLTypes["timestamptz"],
	deleted_at?: GraphQLTypes["timestamptz"],
	updated_at?: GraphQLTypes["timestamptz"]
};
	/** update columns of table "vendas.Perguntas" */
["vendas_Perguntas_update_column"]: vendas_Perguntas_update_column;
	/** columns and relationships of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento"]: {
	__typename: "vendas_TiposDePagamento",
	Comentario: string,
	Valor: string
};
	/** aggregated selection of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate"]: {
	__typename: "vendas_TiposDePagamento_aggregate",
	aggregate?: GraphQLTypes["vendas_TiposDePagamento_aggregate_fields"],
	nodes: Array<GraphQLTypes["vendas_TiposDePagamento"]>
};
	/** aggregate fields of "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_aggregate_fields"]: {
	__typename: "vendas_TiposDePagamento_aggregate_fields",
	count: number,
	max?: GraphQLTypes["vendas_TiposDePagamento_max_fields"],
	min?: GraphQLTypes["vendas_TiposDePagamento_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.TiposDePagamento". All fields are combined with a logical 'AND'. */
["vendas_TiposDePagamento_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["vendas_TiposDePagamento_bool_exp"]>,
	_not?: GraphQLTypes["vendas_TiposDePagamento_bool_exp"],
	_or?: Array<GraphQLTypes["vendas_TiposDePagamento_bool_exp"]>
};
	/** unique or primary key constraints on table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_constraint"]: vendas_TiposDePagamento_constraint;
	["vendas_TiposDePagamento_enum"]: vendas_TiposDePagamento_enum;
	/** Boolean expression to compare columns of type "vendas_TiposDePagamento_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDePagamento_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["vendas_TiposDePagamento_enum"],
	_in?: Array<GraphQLTypes["vendas_TiposDePagamento_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["vendas_TiposDePagamento_enum"],
	_nin?: Array<GraphQLTypes["vendas_TiposDePagamento_enum"]>
};
	/** input type for inserting data into table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_insert_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** aggregate max on columns */
["vendas_TiposDePagamento_max_fields"]: {
	__typename: "vendas_TiposDePagamento_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["vendas_TiposDePagamento_min_fields"]: {
	__typename: "vendas_TiposDePagamento_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_mutation_response"]: {
	__typename: "vendas_TiposDePagamento_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["vendas_TiposDePagamento"]>
};
	/** input type for inserting object relation for remote table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_obj_rel_insert_input"]: {
		data: GraphQLTypes["vendas_TiposDePagamento_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["vendas_TiposDePagamento_on_conflict"]
};
	/** on conflict condition type for table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_on_conflict"]: {
		constraint: GraphQLTypes["vendas_TiposDePagamento_constraint"],
	update_columns: Array<GraphQLTypes["vendas_TiposDePagamento_update_column"]>,
	where?: GraphQLTypes["vendas_TiposDePagamento_bool_exp"]
};
	/** Ordering options when selecting data from "vendas.TiposDePagamento". */
["vendas_TiposDePagamento_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: vendas_TiposDePagamento */
["vendas_TiposDePagamento_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_select_column"]: vendas_TiposDePagamento_select_column;
	/** input type for updating data in table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "vendas.TiposDePagamento" */
["vendas_TiposDePagamento_update_column"]: vendas_TiposDePagamento_update_column;
	/** columns and relationships of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia"]: {
	__typename: "vendas_TiposDeRecorrencia",
	Comentario: string,
	Valor: string
};
	/** aggregated selection of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate"]: {
	__typename: "vendas_TiposDeRecorrencia_aggregate",
	aggregate?: GraphQLTypes["vendas_TiposDeRecorrencia_aggregate_fields"],
	nodes: Array<GraphQLTypes["vendas_TiposDeRecorrencia"]>
};
	/** aggregate fields of "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_aggregate_fields"]: {
	__typename: "vendas_TiposDeRecorrencia_aggregate_fields",
	count: number,
	max?: GraphQLTypes["vendas_TiposDeRecorrencia_max_fields"],
	min?: GraphQLTypes["vendas_TiposDeRecorrencia_min_fields"]
};
	/** Boolean expression to filter rows from the table "vendas.TiposDeRecorrencia". All fields are combined with a logical 'AND'. */
["vendas_TiposDeRecorrencia_bool_exp"]: {
		Comentario?: GraphQLTypes["String_comparison_exp"],
	Valor?: GraphQLTypes["String_comparison_exp"],
	_and?: Array<GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"]>,
	_not?: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"],
	_or?: Array<GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"]>
};
	/** unique or primary key constraints on table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_constraint"]: vendas_TiposDeRecorrencia_constraint;
	["vendas_TiposDeRecorrencia_enum"]: vendas_TiposDeRecorrencia_enum;
	/** Boolean expression to compare columns of type "vendas_TiposDeRecorrencia_enum". All fields are combined with logical 'AND'. */
["vendas_TiposDeRecorrencia_enum_comparison_exp"]: {
		_eq?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	_in?: Array<GraphQLTypes["vendas_TiposDeRecorrencia_enum"]>,
	_is_null?: boolean,
	_neq?: GraphQLTypes["vendas_TiposDeRecorrencia_enum"],
	_nin?: Array<GraphQLTypes["vendas_TiposDeRecorrencia_enum"]>
};
	/** input type for inserting data into table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_insert_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** aggregate max on columns */
["vendas_TiposDeRecorrencia_max_fields"]: {
	__typename: "vendas_TiposDeRecorrencia_max_fields",
	Comentario?: string,
	Valor?: string
};
	/** aggregate min on columns */
["vendas_TiposDeRecorrencia_min_fields"]: {
	__typename: "vendas_TiposDeRecorrencia_min_fields",
	Comentario?: string,
	Valor?: string
};
	/** response of any mutation on the table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_mutation_response"]: {
	__typename: "vendas_TiposDeRecorrencia_mutation_response",
	/** number of rows affected by the mutation */
	affected_rows: number,
	/** data from the rows affected by the mutation */
	returning: Array<GraphQLTypes["vendas_TiposDeRecorrencia"]>
};
	/** input type for inserting object relation for remote table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_obj_rel_insert_input"]: {
		data: GraphQLTypes["vendas_TiposDeRecorrencia_insert_input"],
	/** on conflict condition */
	on_conflict?: GraphQLTypes["vendas_TiposDeRecorrencia_on_conflict"]
};
	/** on conflict condition type for table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_on_conflict"]: {
		constraint: GraphQLTypes["vendas_TiposDeRecorrencia_constraint"],
	update_columns: Array<GraphQLTypes["vendas_TiposDeRecorrencia_update_column"]>,
	where?: GraphQLTypes["vendas_TiposDeRecorrencia_bool_exp"]
};
	/** Ordering options when selecting data from "vendas.TiposDeRecorrencia". */
["vendas_TiposDeRecorrencia_order_by"]: {
		Comentario?: GraphQLTypes["order_by"],
	Valor?: GraphQLTypes["order_by"]
};
	/** primary key columns input for table: vendas_TiposDeRecorrencia */
["vendas_TiposDeRecorrencia_pk_columns_input"]: {
		Valor: string
};
	/** select columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_select_column"]: vendas_TiposDeRecorrencia_select_column;
	/** input type for updating data in table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_set_input"]: {
		Comentario?: string,
	Valor?: string
};
	/** update columns of table "vendas.TiposDeRecorrencia" */
["vendas_TiposDeRecorrencia_update_column"]: vendas_TiposDeRecorrencia_update_column
    }
/** unique or primary key constraints on table "CategoriasDeVeiculos" */
export const enum CategoriasDeVeiculos_constraint {
	CategoriasDeVeiculos_pkey = "CategoriasDeVeiculos_pkey"
}
/** select columns of table "CategoriasDeVeiculos" */
export const enum CategoriasDeVeiculos_select_column {
	Id = "Id",
	Nome = "Nome"
}
/** update columns of table "CategoriasDeVeiculos" */
export const enum CategoriasDeVeiculos_update_column {
	Id = "Id",
	Nome = "Nome"
}
/** unique or primary key constraints on table "Configuracoes" */
export const enum Configuracoes_constraint {
	Configuracoes_Nome_key = "Configuracoes_Nome_key",
	Configuracoes_Slug_key = "Configuracoes_Slug_key",
	Configuracoes_pkey = "Configuracoes_pkey"
}
/** select columns of table "Configuracoes" */
export const enum Configuracoes_select_column {
	Id = "Id",
	Nome = "Nome",
	Slug = "Slug",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "Configuracoes" */
export const enum Configuracoes_update_column {
	Id = "Id",
	Nome = "Nome",
	Slug = "Slug",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "EstadosEMunicipios" */
export const enum EstadosEMunicipios_constraint {
	EstadosEMunicipios_Id_key = "EstadosEMunicipios_Id_key",
	EstadosEMunicipios_pkey = "EstadosEMunicipios_pkey"
}
/** select columns of table "EstadosEMunicipios" */
export const enum EstadosEMunicipios_select_column {
	CodigoIbge = "CodigoIbge",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	Sigla = "Sigla",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "EstadosEMunicipios" */
export const enum EstadosEMunicipios_update_column {
	CodigoIbge = "CodigoIbge",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	Sigla = "Sigla",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "Operadoras" */
export const enum Operadoras_constraint {
	Operadoras_Apn_key = "Operadoras_Apn_key",
	Operadoras_Nome_key = "Operadoras_Nome_key",
	Operadoras_pkey = "Operadoras_pkey"
}
/** select columns of table "Operadoras" */
export const enum Operadoras_select_column {
	Apn = "Apn",
	Id = "Id",
	Nome = "Nome",
	Senha = "Senha",
	Usuario = "Usuario",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "Operadoras" */
export const enum Operadoras_update_column {
	Apn = "Apn",
	Id = "Id",
	Nome = "Nome",
	Senha = "Senha",
	Usuario = "Usuario",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "Produtos" */
export const enum Produtos_constraint {
	Produtos_pkey = "Produtos_pkey"
}
/** select columns of table "Produtos" */
export const enum Produtos_select_column {
	Descricao = "Descricao",
	Id = "Id",
	NCM = "NCM",
	Nome = "Nome",
	UnidadeDeMedida_Id = "UnidadeDeMedida_Id",
	Utilizacao = "Utilizacao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "Produtos" */
export const enum Produtos_update_column {
	Descricao = "Descricao",
	Id = "Id",
	NCM = "NCM",
	Nome = "Nome",
	UnidadeDeMedida_Id = "UnidadeDeMedida_Id",
	Utilizacao = "Utilizacao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "UnidadesDeMedidas" */
export const enum UnidadesDeMedidas_constraint {
	UnidadesDeMedidas_pkey = "UnidadesDeMedidas_pkey"
}
/** select columns of table "UnidadesDeMedidas" */
export const enum UnidadesDeMedidas_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "UnidadesDeMedidas" */
export const enum UnidadesDeMedidas_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "atendimentos.EtapasDosFluxos" */
export const enum atendimentos_EtapasDosFluxos_constraint {
	EtapasDosFluxos_pkey = "EtapasDosFluxos_pkey"
}
/** select columns of table "atendimentos.EtapasDosFluxos" */
export const enum atendimentos_EtapasDosFluxos_select_column {
	Fluxo_Id = "Fluxo_Id",
	Id = "Id",
	Nome = "Nome",
	Posicao = "Posicao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "atendimentos.EtapasDosFluxos" */
export const enum atendimentos_EtapasDosFluxos_update_column {
	Fluxo_Id = "Fluxo_Id",
	Id = "Id",
	Nome = "Nome",
	Posicao = "Posicao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "atendimentos.Fluxos" */
export const enum atendimentos_Fluxos_constraint {
	Fluxos_pkey = "Fluxos_pkey"
}
/** select columns of table "atendimentos.Fluxos" */
export const enum atendimentos_Fluxos_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "atendimentos.Fluxos" */
export const enum atendimentos_Fluxos_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "atendimentos.Tickets" */
export const enum atendimentos_Tickets_constraint {
	Tickets_CodigoReferencia_key = "Tickets_CodigoReferencia_key",
	Tickets_pkey = "Tickets_pkey"
}
/** select columns of table "atendimentos.Tickets" */
export const enum atendimentos_Tickets_select_column {
	Cliente_Id = "Cliente_Id",
	CodigoReferencia = "CodigoReferencia",
	Etapa_Id = "Etapa_Id",
	Fluxo_Id = "Fluxo_Id",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Tipo_Id = "Tipo_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "atendimentos.Tickets" */
export const enum atendimentos_Tickets_update_column {
	Cliente_Id = "Cliente_Id",
	CodigoReferencia = "CodigoReferencia",
	Etapa_Id = "Etapa_Id",
	Fluxo_Id = "Fluxo_Id",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Tipo_Id = "Tipo_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "atendimentos.TiposDeTickets" */
export const enum atendimentos_TiposDeTickets_constraint {
	TiposDeTickets_pkey = "TiposDeTickets_pkey"
}
export const enum atendimentos_TiposDeTickets_enum {
	comercial = "comercial"
}
/** select columns of table "atendimentos.TiposDeTickets" */
export const enum atendimentos_TiposDeTickets_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "atendimentos.TiposDeTickets" */
export const enum atendimentos_TiposDeTickets_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "autenticacao.Atendentes" */
export const enum autenticacao_Atendentes_constraint {
	Atendentes_Usuario_Id_key = "Atendentes_Usuario_Id_key",
	Atendentes_pkey = "Atendentes_pkey"
}
/** select columns of table "autenticacao.Atendentes" */
export const enum autenticacao_Atendentes_select_column {
	Id = "Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "autenticacao.Atendentes" */
export const enum autenticacao_Atendentes_update_column {
	Id = "Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "autenticacao.Usuarios" */
export const enum autenticacao_Usuarios_constraint {
	Usuarios_Email_key = "Usuarios_Email_key",
	Usuarios_Id_key = "Usuarios_Id_key",
	usuarios_pkey = "usuarios_pkey"
}
/** select columns of table "autenticacao.Usuarios" */
export const enum autenticacao_Usuarios_select_column {
	Cliente_Id = "Cliente_Id",
	Colaborador_Id = "Colaborador_Id",
	Email = "Email",
	Id = "Id",
	Senha = "Senha",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "autenticacao.Usuarios" */
export const enum autenticacao_Usuarios_update_column {
	Cliente_Id = "Cliente_Id",
	Colaborador_Id = "Colaborador_Id",
	Email = "Email",
	Id = "Id",
	Senha = "Senha",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "clientes.Leads" */
export const enum clientes_Leads_constraint {
	Leads_pkey = "Leads_pkey"
}
/** select columns of table "clientes.Leads" */
export const enum clientes_Leads_select_column {
	Cliente_Id = "Cliente_Id",
	Email = "Email",
	Id = "Id",
	Nome = "Nome",
	Telefone = "Telefone",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "clientes.Leads" */
export const enum clientes_Leads_update_column {
	Cliente_Id = "Cliente_Id",
	Email = "Email",
	Id = "Id",
	Nome = "Nome",
	Telefone = "Telefone",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "clientes.PerfisComerciais" */
export const enum clientes_PerfisComerciais_constraint {
	PerfisComerciais_Id_key = "PerfisComerciais_Id_key",
	PerfisComerciais_pkey = "PerfisComerciais_pkey"
}
/** select columns of table "clientes.PerfisComerciais" */
export const enum clientes_PerfisComerciais_select_column {
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Pergunta_Id = "Pergunta_Id",
	Resposta = "Resposta",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "clientes.PerfisComerciais" */
export const enum clientes_PerfisComerciais_update_column {
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Pergunta_Id = "Pergunta_Id",
	Resposta = "Resposta",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "clientes.Veiculos" */
export const enum clientes_Veiculos_constraint {
	Veiculos_Id_key = "Veiculos_Id_key",
	Veiculos_Placa_key = "Veiculos_Placa_key",
	Veiculos_pkey = "Veiculos_pkey"
}
/** select columns of table "clientes.Veiculos" */
export const enum clientes_Veiculos_select_column {
	Apelido = "Apelido",
	Categoria_Id = "Categoria_Id",
	Cliente_Id = "Cliente_Id",
	DadosDaApi = "DadosDaApi",
	Id = "Id",
	NumeroDoChassi = "NumeroDoChassi",
	Placa = "Placa",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "clientes.Veiculos" */
export const enum clientes_Veiculos_update_column {
	Apelido = "Apelido",
	Categoria_Id = "Categoria_Id",
	Cliente_Id = "Cliente_Id",
	DadosDaApi = "DadosDaApi",
	Id = "Id",
	NumeroDoChassi = "NumeroDoChassi",
	Placa = "Placa",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Acoes" */
export const enum comercial_Acoes_constraint {
	Acoes_pkey = "Acoes_pkey"
}
/** select columns of table "comercial.Acoes" */
export const enum comercial_Acoes_select_column {
	Etapas_Id = "Etapas_Id",
	Id = "Id",
	Titulo = "Titulo",
	Url = "Url",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Acoes" */
export const enum comercial_Acoes_update_column {
	Etapas_Id = "Etapas_Id",
	Id = "Id",
	Titulo = "Titulo",
	Url = "Url",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Atributos" */
export const enum comercial_Atributos_constraint {
	Atributos_pkey = "Atributos_pkey"
}
/** select columns of table "comercial.Atributos" */
export const enum comercial_Atributos_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Atributos" */
export const enum comercial_Atributos_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Coberturas" */
export const enum comercial_Coberturas_constraint {
	Coberturas_pkey = "Coberturas_pkey"
}
/** select columns of table "comercial.Coberturas" */
export const enum comercial_Coberturas_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Coberturas" */
export const enum comercial_Coberturas_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos_Combos" */
export const enum comercial_Combos_Combos_constraint {
	Combos_Combos_pkey = "Combos_Combos_pkey"
}
/** select columns of table "comercial.Combos_Combos" */
export const enum comercial_Combos_Combos_select_column {
	ComboPertencente_Id = "ComboPertencente_Id",
	Combo_Id = "Combo_Id",
	Id = "Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos_Combos" */
export const enum comercial_Combos_Combos_update_column {
	ComboPertencente_Id = "ComboPertencente_Id",
	Combo_Id = "Combo_Id",
	Id = "Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos_Planos" */
export const enum comercial_Combos_Planos_constraint {
	Combos_Planos_pkey = "Combos_Planos_pkey"
}
/** select columns of table "comercial.Combos_Planos" */
export const enum comercial_Combos_Planos_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	PlanoPreco_Id = "PlanoPreco_Id",
	Plano_Id = "Plano_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos_Planos" */
export const enum comercial_Combos_Planos_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	PlanoPreco_Id = "PlanoPreco_Id",
	Plano_Id = "Plano_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos_Precos" */
export const enum comercial_Combos_Precos_constraint {
	Combos_Precos_pkey = "Combos_Precos_pkey"
}
/** select columns of table "comercial.Combos_Precos" */
export const enum comercial_Combos_Precos_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ValorBase = "ValorBase",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos_Precos" */
export const enum comercial_Combos_Precos_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ValorBase = "ValorBase",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos_Produtos" */
export const enum comercial_Combos_Produtos_constraint {
	Combos_Produtos_pkey = "Combos_Produtos_pkey"
}
/** select columns of table "comercial.Combos_Produtos" */
export const enum comercial_Combos_Produtos_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ProdutoPreco_Id = "ProdutoPreco_Id",
	Produto_Id = "Produto_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos_Produtos" */
export const enum comercial_Combos_Produtos_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ProdutoPreco_Id = "ProdutoPreco_Id",
	Produto_Id = "Produto_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos_Servicos" */
export const enum comercial_Combos_Servicos_constraint {
	Combos_Servicos_pkey = "Combos_Servicos_pkey"
}
/** select columns of table "comercial.Combos_Servicos" */
export const enum comercial_Combos_Servicos_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ServicoPreco_Id = "ServicoPreco_Id",
	Servico_Id = "Servico_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos_Servicos" */
export const enum comercial_Combos_Servicos_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	ServicoPreco_Id = "ServicoPreco_Id",
	Servico_Id = "Servico_Id",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Combos" */
export const enum comercial_Combos_constraint {
	Combos_pkey = "Combos_pkey"
}
/** select columns of table "comercial.Combos" */
export const enum comercial_Combos_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Combos" */
export const enum comercial_Combos_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.CondicionaisSituacoes" */
export const enum comercial_CondicionaisSituacoes_constraint {
	CondicionaisSituacoes_pkey = "CondicionaisSituacoes_pkey"
}
export const enum comercial_CondicionaisSituacoes_enum {
	km = "km",
	qtd = "qtd"
}
/** select columns of table "comercial.CondicionaisSituacoes" */
export const enum comercial_CondicionaisSituacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "comercial.CondicionaisSituacoes" */
export const enum comercial_CondicionaisSituacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "comercial.Condicionais" */
export const enum comercial_Condicionais_constraint {
	Condicionais_pkey = "Condicionais_pkey"
}
/** select columns of table "comercial.Condicionais" */
export const enum comercial_Condicionais_select_column {
	Id = "Id",
	Nome = "Nome",
	Situacao_Id = "Situacao_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Condicionais" */
export const enum comercial_Condicionais_update_column {
	Id = "Id",
	Nome = "Nome",
	Situacao_Id = "Situacao_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.ContratosBase_Versoes" */
export const enum comercial_ContratosBase_Versoes_constraint {
	ContratosBase_Versoes_pkey = "ContratosBase_Versoes_pkey"
}
/** select columns of table "comercial.ContratosBase_Versoes" */
export const enum comercial_ContratosBase_Versoes_select_column {
	ContratoBase_Id = "ContratoBase_Id",
	Id = "Id",
	Versao = "Versao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.ContratosBase_Versoes" */
export const enum comercial_ContratosBase_Versoes_update_column {
	ContratoBase_Id = "ContratoBase_Id",
	Id = "Id",
	Versao = "Versao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.ContratosBase" */
export const enum comercial_ContratosBase_constraint {
	ContratosBase_pkey = "ContratosBase_pkey"
}
/** select columns of table "comercial.ContratosBase" */
export const enum comercial_ContratosBase_select_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Nome = "Nome",
	Parceiro_Id = "Parceiro_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.ContratosBase" */
export const enum comercial_ContratosBase_update_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Nome = "Nome",
	Parceiro_Id = "Parceiro_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores_Produtos_Precos" */
export const enum comercial_Fornecedores_Produtos_Precos_constraint {
	Fornecedores_Produtos_Precos_pkey = "Fornecedores_Produtos_Precos_pkey"
}
/** select columns of table "comercial.Fornecedores_Produtos_Precos" */
export const enum comercial_Fornecedores_Produtos_Precos_select_column {
	Fornecedor_Produto_Id = "Fornecedor_Produto_Id",
	Id = "Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores_Produtos_Precos" */
export const enum comercial_Fornecedores_Produtos_Precos_update_column {
	Fornecedor_Produto_Id = "Fornecedor_Produto_Id",
	Id = "Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores_Produtos" */
export const enum comercial_Fornecedores_Produtos_constraint {
	Fornecedores_Produtos_pkey = "Fornecedores_Produtos_pkey"
}
/** select columns of table "comercial.Fornecedores_Produtos" */
export const enum comercial_Fornecedores_Produtos_select_column {
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores_Produtos" */
export const enum comercial_Fornecedores_Produtos_update_column {
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Precos" */
export const enum comercial_Fornecedores_Servicos_Precos_constraint {
	Fornecedores_Servicos_Precos_pkey = "Fornecedores_Servicos_Precos_pkey"
}
/** select columns of table "comercial.Fornecedores_Servicos_Precos" */
export const enum comercial_Fornecedores_Servicos_Precos_select_column {
	Fornecedor_Servico_Id = "Fornecedor_Servico_Id",
	Id = "Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores_Servicos_Precos" */
export const enum comercial_Fornecedores_Servicos_Precos_update_column {
	Fornecedor_Servico_Id = "Fornecedor_Servico_Id",
	Id = "Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores_Servicos_Tarifas" */
export const enum comercial_Fornecedores_Servicos_Tarifas_constraint {
	Fornecedores_Servicos_Tarifas_pkey = "Fornecedores_Servicos_Tarifas_pkey"
}
/** select columns of table "comercial.Fornecedores_Servicos_Tarifas" */
export const enum comercial_Fornecedores_Servicos_Tarifas_select_column {
	Fornecedor_Servico_Id = "Fornecedor_Servico_Id",
	Id = "Id",
	Tarifa_Id = "Tarifa_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores_Servicos_Tarifas" */
export const enum comercial_Fornecedores_Servicos_Tarifas_update_column {
	Fornecedor_Servico_Id = "Fornecedor_Servico_Id",
	Id = "Id",
	Tarifa_Id = "Tarifa_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores_Servicos" */
export const enum comercial_Fornecedores_Servicos_constraint {
	Fornecedores_Servicos_pkey = "Fornecedores_Servicos_pkey"
}
/** select columns of table "comercial.Fornecedores_Servicos" */
export const enum comercial_Fornecedores_Servicos_select_column {
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores_Servicos" */
export const enum comercial_Fornecedores_Servicos_update_column {
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Fornecedores" */
export const enum comercial_Fornecedores_constraint {
	Fornecedores_pkey = "Fornecedores_pkey"
}
/** select columns of table "comercial.Fornecedores" */
export const enum comercial_Fornecedores_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Fornecedores" */
export const enum comercial_Fornecedores_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Planos_Condicionais" */
export const enum comercial_Planos_Condicionais_constraint {
	Planos_Condicionais_pkey = "Planos_Condicionais_pkey"
}
/** select columns of table "comercial.Planos_Condicionais" */
export const enum comercial_Planos_Condicionais_select_column {
	Condicional_Id = "Condicional_Id",
	Id = "Id",
	Plano_Id = "Plano_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Planos_Condicionais" */
export const enum comercial_Planos_Condicionais_update_column {
	Condicional_Id = "Condicional_Id",
	Id = "Id",
	Plano_Id = "Plano_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Planos_Precos" */
export const enum comercial_Planos_Precos_constraint {
	Planos_Precos_pkey = "Planos_Precos_pkey"
}
/** select columns of table "comercial.Planos_Precos" */
export const enum comercial_Planos_Precos_select_column {
	Id = "Id",
	Plano_Id = "Plano_Id",
	ServicoPreco_Id = "ServicoPreco_Id",
	ValorBase = "ValorBase",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Planos_Precos" */
export const enum comercial_Planos_Precos_update_column {
	Id = "Id",
	Plano_Id = "Plano_Id",
	ServicoPreco_Id = "ServicoPreco_Id",
	ValorBase = "ValorBase",
	ValorPraticado = "ValorPraticado",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Planos" */
export const enum comercial_Planos_constraint {
	Planos_pkey = "Planos_pkey"
}
/** select columns of table "comercial.Planos" */
export const enum comercial_Planos_select_column {
	Id = "Id",
	Nome = "Nome",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Planos" */
export const enum comercial_Planos_update_column {
	Id = "Id",
	Nome = "Nome",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.PrestadorDeServicos_Servicos" */
export const enum comercial_PrestadorDeServicos_Servicos_constraint {
	PrestadorDeServicos_Servicos_pkey = "PrestadorDeServicos_Servicos_pkey"
}
/** select columns of table "comercial.PrestadorDeServicos_Servicos" */
export const enum comercial_PrestadorDeServicos_Servicos_select_column {
	Id = "Id",
	Prestador_Id = "Prestador_Id",
	Servico_Id = "Servico_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.PrestadorDeServicos_Servicos" */
export const enum comercial_PrestadorDeServicos_Servicos_update_column {
	Id = "Id",
	Prestador_Id = "Prestador_Id",
	Servico_Id = "Servico_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Produtos_Atributos" */
export const enum comercial_Produtos_Atributos_constraint {
	Produtos_Atributos_pkey = "Produtos_Atributos_pkey"
}
/** select columns of table "comercial.Produtos_Atributos" */
export const enum comercial_Produtos_Atributos_select_column {
	Atributo_Id = "Atributo_Id",
	Id = "Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Produtos_Atributos" */
export const enum comercial_Produtos_Atributos_update_column {
	Atributo_Id = "Atributo_Id",
	Id = "Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Produtos_Oportunidades" */
export const enum comercial_Produtos_Oportunidades_constraint {
	Produtos_Oportunidades_pkey = "Produtos_Oportunidades_pkey"
}
/** select columns of table "comercial.Produtos_Oportunidades" */
export const enum comercial_Produtos_Oportunidades_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	Nome = "Nome",
	Produto_Id = "Produto_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Produtos_Oportunidades" */
export const enum comercial_Produtos_Oportunidades_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	Nome = "Nome",
	Produto_Id = "Produto_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Produtos_Produtos" */
export const enum comercial_Produtos_Produtos_constraint {
	Produtos_Produtos_pkey = "Produtos_Produtos_pkey"
}
/** select columns of table "comercial.Produtos_Produtos" */
export const enum comercial_Produtos_Produtos_select_column {
	Id = "Id",
	ProdutoDependente_Id = "ProdutoDependente_Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Produtos_Produtos" */
export const enum comercial_Produtos_Produtos_update_column {
	Id = "Id",
	ProdutoDependente_Id = "ProdutoDependente_Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Produtos_Servicos" */
export const enum comercial_Produtos_Servicos_constraint {
	Produtos_Servicos_pkey = "Produtos_Servicos_pkey"
}
/** select columns of table "comercial.Produtos_Servicos" */
export const enum comercial_Produtos_Servicos_select_column {
	Id = "Id",
	Produto_Id = "Produto_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Produtos_Servicos" */
export const enum comercial_Produtos_Servicos_update_column {
	Id = "Id",
	Produto_Id = "Produto_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Produtos_Tipos" */
export const enum comercial_Produtos_Tipos_constraint {
	Produtos_Tipos_pkey = "Produtos_Tipos_pkey"
}
export const enum comercial_Produtos_Tipos_enum {
	assistencia = "assistencia",
	monitoramento = "monitoramento",
	protecao = "protecao"
}
/** select columns of table "comercial.Produtos_Tipos" */
export const enum comercial_Produtos_Tipos_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "comercial.Produtos_Tipos" */
export const enum comercial_Produtos_Tipos_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "comercial.Produtos" */
export const enum comercial_Produtos_constraint {
	Produtos_pkey = "Produtos_pkey"
}
/** select columns of table "comercial.Produtos" */
export const enum comercial_Produtos_select_column {
	Categorias = "Categorias",
	Id = "Id",
	Nome = "Nome",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Produtos" */
export const enum comercial_Produtos_update_column {
	Categorias = "Categorias",
	Id = "Id",
	Nome = "Nome",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Combos" */
export const enum comercial_Propostas_Combos_constraint {
	Propostas_Combos_pkey = "Propostas_Combos_pkey"
}
/** select columns of table "comercial.Propostas_Combos" */
export const enum comercial_Propostas_Combos_select_column {
	ComboPreco_Id = "ComboPreco_Id",
	Combo_Id = "Combo_Id",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Combos" */
export const enum comercial_Propostas_Combos_update_column {
	ComboPreco_Id = "ComboPreco_Id",
	Combo_Id = "Combo_Id",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Instalacoes" */
export const enum comercial_Propostas_Instalacoes_constraint {
	Propostas_Instalacoes_pkey = "Propostas_Instalacoes_pkey"
}
/** select columns of table "comercial.Propostas_Instalacoes" */
export const enum comercial_Propostas_Instalacoes_select_column {
	Endereco = "Endereco",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Instalacoes" */
export const enum comercial_Propostas_Instalacoes_update_column {
	Endereco = "Endereco",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Oportunidades" */
export const enum comercial_Propostas_Oportunidades_constraint {
	Propostas_Oportunidades_pkey = "Propostas_Oportunidades_pkey"
}
/** select columns of table "comercial.Propostas_Oportunidades" */
export const enum comercial_Propostas_Oportunidades_select_column {
	Id = "Id",
	OportunidadeProduto_Id = "OportunidadeProduto_Id",
	OportunidadeServico_Id = "OportunidadeServico_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Oportunidades" */
export const enum comercial_Propostas_Oportunidades_update_column {
	Id = "Id",
	OportunidadeProduto_Id = "OportunidadeProduto_Id",
	OportunidadeServico_Id = "OportunidadeServico_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Planos" */
export const enum comercial_Propostas_Planos_constraint {
	Propostas_Planos_pkey = "Propostas_Planos_pkey"
}
/** select columns of table "comercial.Propostas_Planos" */
export const enum comercial_Propostas_Planos_select_column {
	Id = "Id",
	PlanoPreco_Id = "PlanoPreco_Id",
	Plano_Id = "Plano_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Planos" */
export const enum comercial_Propostas_Planos_update_column {
	Id = "Id",
	PlanoPreco_Id = "PlanoPreco_Id",
	Plano_Id = "Plano_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Produtos" */
export const enum comercial_Propostas_Produtos_constraint {
	Propostas_Produtos_pkey = "Propostas_Produtos_pkey"
}
/** select columns of table "comercial.Propostas_Produtos" */
export const enum comercial_Propostas_Produtos_select_column {
	Id = "Id",
	ProdutoPreco_Id = "ProdutoPreco_Id",
	Produto_Id = "Produto_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Produtos" */
export const enum comercial_Propostas_Produtos_update_column {
	Id = "Id",
	ProdutoPreco_Id = "ProdutoPreco_Id",
	Produto_Id = "Produto_Id",
	Proposta_Id = "Proposta_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Servicos" */
export const enum comercial_Propostas_Servicos_constraint {
	Propostas_Servicos_pkey = "Propostas_Servicos_pkey"
}
/** select columns of table "comercial.Propostas_Servicos" */
export const enum comercial_Propostas_Servicos_select_column {
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Servico_Id = "Servico_Id",
	ServicosPreco_Id = "ServicosPreco_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas_Servicos" */
export const enum comercial_Propostas_Servicos_update_column {
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Servico_Id = "Servico_Id",
	ServicosPreco_Id = "ServicosPreco_Id",
	Veiculo = "Veiculo",
	Veiculo_Id = "Veiculo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Propostas_Situacoes" */
export const enum comercial_Propostas_Situacoes_constraint {
	Propostas_Situacoes_pkey = "Propostas_Situacoes_pkey"
}
export const enum comercial_Propostas_Situacoes_enum {
	aceito = "aceito",
	criado = "criado",
	recusado = "recusado"
}
/** select columns of table "comercial.Propostas_Situacoes" */
export const enum comercial_Propostas_Situacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "comercial.Propostas_Situacoes" */
export const enum comercial_Propostas_Situacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "comercial.Propostas" */
export const enum comercial_Propostas_constraint {
	Propostas_pkey = "Propostas_pkey"
}
/** select columns of table "comercial.Propostas" */
export const enum comercial_Propostas_select_column {
	Cliente_Id = "Cliente_Id",
	DataAceito = "DataAceito",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Situacao_Id = "Situacao_Id",
	Ticket_Id = "Ticket_Id",
	TipoDePagamento_Id = "TipoDePagamento_Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Propostas" */
export const enum comercial_Propostas_update_column {
	Cliente_Id = "Cliente_Id",
	DataAceito = "DataAceito",
	Id = "Id",
	Lead_Id = "Lead_Id",
	Situacao_Id = "Situacao_Id",
	Ticket_Id = "Ticket_Id",
	TipoDePagamento_Id = "TipoDePagamento_Id",
	TipoDeRecorrencia_Id = "TipoDeRecorrencia_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Atributos" */
export const enum comercial_Servicos_Atributos_constraint {
	Servicos_Atributos_pkey = "Servicos_Atributos_pkey"
}
/** select columns of table "comercial.Servicos_Atributos" */
export const enum comercial_Servicos_Atributos_select_column {
	Atributo_Id = "Atributo_Id",
	Id = "Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos_Atributos" */
export const enum comercial_Servicos_Atributos_update_column {
	Atributo_Id = "Atributo_Id",
	Id = "Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Oportunidades" */
export const enum comercial_Servicos_Oportunidades_constraint {
	Servicos_Oportunidades_pkey = "Servicos_Oportunidades_pkey"
}
/** select columns of table "comercial.Servicos_Oportunidades" */
export const enum comercial_Servicos_Oportunidades_select_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	Nome = "Nome",
	Servico_Id = "Servico_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos_Oportunidades" */
export const enum comercial_Servicos_Oportunidades_update_column {
	Combo_Id = "Combo_Id",
	Id = "Id",
	Nome = "Nome",
	Servico_Id = "Servico_Id",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Produtos" */
export const enum comercial_Servicos_Produtos_constraint {
	Servicos_Produtos_pkey = "Servicos_Produtos_pkey"
}
/** select columns of table "comercial.Servicos_Produtos" */
export const enum comercial_Servicos_Produtos_select_column {
	Id = "Id",
	Produto_Id = "Produto_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos_Produtos" */
export const enum comercial_Servicos_Produtos_update_column {
	Id = "Id",
	Produto_Id = "Produto_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Servicos" */
export const enum comercial_Servicos_Servicos_constraint {
	Servicos_Servicos_pkey = "Servicos_Servicos_pkey"
}
/** select columns of table "comercial.Servicos_Servicos" */
export const enum comercial_Servicos_Servicos_select_column {
	Id = "Id",
	ServicoDependente_Id = "ServicoDependente_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos_Servicos" */
export const enum comercial_Servicos_Servicos_update_column {
	Id = "Id",
	ServicoDependente_Id = "ServicoDependente_Id",
	Servico_Id = "Servico_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Tarifas" */
export const enum comercial_Servicos_Tarifas_constraint {
	Servicos_Tarifas_pkey = "Servicos_Tarifas_pkey"
}
/** select columns of table "comercial.Servicos_Tarifas" */
export const enum comercial_Servicos_Tarifas_select_column {
	Id = "Id",
	Servico_Id = "Servico_Id",
	Tarifa_Id = "Tarifa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos_Tarifas" */
export const enum comercial_Servicos_Tarifas_update_column {
	Id = "Id",
	Servico_Id = "Servico_Id",
	Tarifa_Id = "Tarifa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Servicos_Tipos" */
export const enum comercial_Servicos_Tipos_constraint {
	Servicos_Tipos_pkey = "Servicos_Tipos_pkey"
}
export const enum comercial_Servicos_Tipos_enum {
	assistencia = "assistencia",
	monitoramento = "monitoramento",
	protecao = "protecao"
}
/** select columns of table "comercial.Servicos_Tipos" */
export const enum comercial_Servicos_Tipos_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "comercial.Servicos_Tipos" */
export const enum comercial_Servicos_Tipos_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "comercial.Servicos" */
export const enum comercial_Servicos_constraint {
	Servicos_pkey = "Servicos_pkey"
}
/** select columns of table "comercial.Servicos" */
export const enum comercial_Servicos_select_column {
	Categorias = "Categorias",
	Id = "Id",
	Nome = "Nome",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Servicos" */
export const enum comercial_Servicos_update_column {
	Categorias = "Categorias",
	Id = "Id",
	Nome = "Nome",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "comercial.Tarifas" */
export const enum comercial_Tarifas_constraint {
	Tarifas_pkey = "Tarifas_pkey"
}
/** select columns of table "comercial.Tarifas" */
export const enum comercial_Tarifas_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "comercial.Tarifas" */
export const enum comercial_Tarifas_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "contatos.Emails" */
export const enum contatos_Emails_constraint {
	Emails_Email_key = "Emails_Email_key",
	Emails_pkey = "Emails_pkey"
}
/** select columns of table "contatos.Emails" */
export const enum contatos_Emails_select_column {
	Categorias = "Categorias",
	Email = "Email",
	Id = "Id",
	Identidades = "Identidades",
	NomeDoResponsavel = "NomeDoResponsavel",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "contatos.Emails" */
export const enum contatos_Emails_update_column {
	Categorias = "Categorias",
	Email = "Email",
	Id = "Id",
	Identidades = "Identidades",
	NomeDoResponsavel = "NomeDoResponsavel",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "contatos.Enderecos" */
export const enum contatos_Enderecos_constraint {
	Enderecos_pkey = "Enderecos_pkey"
}
/** select columns of table "contatos.Enderecos" */
export const enum contatos_Enderecos_select_column {
	Bairro = "Bairro",
	Categorias = "Categorias",
	Cep = "Cep",
	Cidade_Id = "Cidade_Id",
	Complemento = "Complemento",
	Estado_Id = "Estado_Id",
	Id = "Id",
	Identidades = "Identidades",
	Logradouro = "Logradouro",
	Numero = "Numero",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "contatos.Enderecos" */
export const enum contatos_Enderecos_update_column {
	Bairro = "Bairro",
	Categorias = "Categorias",
	Cep = "Cep",
	Cidade_Id = "Cidade_Id",
	Complemento = "Complemento",
	Estado_Id = "Estado_Id",
	Id = "Id",
	Identidades = "Identidades",
	Logradouro = "Logradouro",
	Numero = "Numero",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "contatos.Logs" */
export const enum contatos_Logs_constraint {
	Logs_pkey = "Logs_pkey"
}
/** select columns of table "contatos.Logs" */
export const enum contatos_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "contatos.Logs" */
export const enum contatos_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "contatos.Telefones" */
export const enum contatos_Telefones_constraint {
	Telefones_Telefone_key = "Telefones_Telefone_key",
	Telefones_pkey = "Telefones_pkey"
}
/** select columns of table "contatos.Telefones" */
export const enum contatos_Telefones_select_column {
	Categorias = "Categorias",
	Id = "Id",
	Identidades = "Identidades",
	NomeDoResponsavel = "NomeDoResponsavel",
	Telefone = "Telefone",
	Tipos = "Tipos",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "contatos.Telefones" */
export const enum contatos_Telefones_update_column {
	Categorias = "Categorias",
	Id = "Id",
	Identidades = "Identidades",
	NomeDoResponsavel = "NomeDoResponsavel",
	Telefone = "Telefone",
	Tipos = "Tipos",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Enderecamentos" */
export const enum estoque_Enderecamentos_constraint {
	Enderecamentos_Id_key = "Enderecamentos_Id_key",
	Enderecamentos_pkey = "Enderecamentos_pkey"
}
/** select columns of table "estoque.Enderecamentos" */
export const enum estoque_Enderecamentos_select_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Enderecamentos" */
export const enum estoque_Enderecamentos_update_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Fabricantes" */
export const enum estoque_Fabricantes_constraint {
	Fabricantes_pkey = "Fabricantes_pkey"
}
/** select columns of table "estoque.Fabricantes" */
export const enum estoque_Fabricantes_select_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Fabricantes" */
export const enum estoque_Fabricantes_update_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Familias" */
export const enum estoque_Familias_constraint {
	Familias_pkey = "Familias_pkey"
}
/** select columns of table "estoque.Familias" */
export const enum estoque_Familias_select_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Familias" */
export const enum estoque_Familias_update_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Pai_Id = "Pai_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Grupos" */
export const enum estoque_Grupos_constraint {
	Grupos_pkey = "Grupos_pkey"
}
/** select columns of table "estoque.Grupos" */
export const enum estoque_Grupos_select_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Grupos" */
export const enum estoque_Grupos_update_column {
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Itens" */
export const enum estoque_Itens_constraint {
	Itens_pkey = "Itens_pkey"
}
/** select columns of table "estoque.Itens" */
export const enum estoque_Itens_select_column {
	Classificacao = "Classificacao",
	Criticidade = "Criticidade",
	Enderecamento_Id = "Enderecamento_Id",
	EstoqueMinimo = "EstoqueMinimo",
	Fabricante_Id = "Fabricante_Id",
	Familia_Id = "Familia_Id",
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Modelo_Id = "Modelo_Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Itens" */
export const enum estoque_Itens_update_column {
	Classificacao = "Classificacao",
	Criticidade = "Criticidade",
	Enderecamento_Id = "Enderecamento_Id",
	EstoqueMinimo = "EstoqueMinimo",
	Fabricante_Id = "Fabricante_Id",
	Familia_Id = "Familia_Id",
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Modelo_Id = "Modelo_Id",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Logs" */
export const enum estoque_Logs_constraint {
	Logs_pkey = "Logs_pkey"
}
/** select columns of table "estoque.Logs" */
export const enum estoque_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Logs" */
export const enum estoque_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.Modelos" */
export const enum estoque_Modelos_constraint {
	Modelos_pkey = "Modelos_pkey"
}
/** select columns of table "estoque.Modelos" */
export const enum estoque_Modelos_select_column {
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Nome = "Nome",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.Modelos" */
export const enum estoque_Modelos_update_column {
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Nome = "Nome",
	Produto_Id = "Produto_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "estoque.TiposDeEnderecamentos" */
export const enum estoque_TiposDeEnderecamentos_constraint {
	TiposDeEnderecamentos_pkey = "TiposDeEnderecamentos_pkey"
}
/** select columns of table "estoque.TiposDeEnderecamentos" */
export const enum estoque_TiposDeEnderecamentos_select_column {
	CodigoReferencia = "CodigoReferencia",
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Slug = "Slug",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "estoque.TiposDeEnderecamentos" */
export const enum estoque_TiposDeEnderecamentos_update_column {
	CodigoReferencia = "CodigoReferencia",
	Descricao = "Descricao",
	Id = "Id",
	Nome = "Nome",
	Slug = "Slug",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Clientes_Documentos_Situacoes" */
export const enum identidades_Clientes_Documentos_Situacoes_constraint {
	Clientes_Documentos_Situacoes_pkey = "Clientes_Documentos_Situacoes_pkey"
}
export const enum identidades_Clientes_Documentos_Situacoes_enum {
	anexado = "anexado",
	aprovado = "aprovado",
	recusado = "recusado"
}
/** select columns of table "identidades.Clientes_Documentos_Situacoes" */
export const enum identidades_Clientes_Documentos_Situacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "identidades.Clientes_Documentos_Situacoes" */
export const enum identidades_Clientes_Documentos_Situacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "identidades.Clientes_Documentos" */
export const enum identidades_Clientes_Documentos_constraint {
	Clientes_Documentos_Nome_Pessoa_Id_key = "Clientes_Documentos_Nome_Pessoa_Id_key",
	Clientes_Documentos_pkey = "Clientes_Documentos_pkey"
}
/** select columns of table "identidades.Clientes_Documentos" */
export const enum identidades_Clientes_Documentos_select_column {
	DataAprovado = "DataAprovado",
	DataRecusado = "DataRecusado",
	Id = "Id",
	MotivoRecusa = "MotivoRecusa",
	Nome = "Nome",
	Pessoa_Id = "Pessoa_Id",
	Situacao_Id = "Situacao_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Clientes_Documentos" */
export const enum identidades_Clientes_Documentos_update_column {
	DataAprovado = "DataAprovado",
	DataRecusado = "DataRecusado",
	Id = "Id",
	MotivoRecusa = "MotivoRecusa",
	Nome = "Nome",
	Pessoa_Id = "Pessoa_Id",
	Situacao_Id = "Situacao_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Clientes" */
export const enum identidades_Clientes_constraint {
	Clientes_Pessoa_Id_key = "Clientes_Pessoa_Id_key",
	Clientes_pkey = "Clientes_pkey"
}
/** select columns of table "identidades.Clientes" */
export const enum identidades_Clientes_select_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Clientes" */
export const enum identidades_Clientes_update_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Colaboradores" */
export const enum identidades_Colaboradores_constraint {
	Colaboradores_pkey = "Colaboradores_pkey"
}
/** select columns of table "identidades.Colaboradores" */
export const enum identidades_Colaboradores_select_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Colaboradores" */
export const enum identidades_Colaboradores_update_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Fornecedores" */
export const enum identidades_Fornecedores_constraint {
	Fornecedores_Pessoa_Id_key = "Fornecedores_Pessoa_Id_key",
	Fornecedores_pkey = "Fornecedores_pkey"
}
/** select columns of table "identidades.Fornecedores" */
export const enum identidades_Fornecedores_select_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	PrecoDoKm = "PrecoDoKm",
	PrestadorDeServico = "PrestadorDeServico",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Fornecedores" */
export const enum identidades_Fornecedores_update_column {
	Id = "Id",
	Pessoa_Id = "Pessoa_Id",
	PrecoDoKm = "PrecoDoKm",
	PrestadorDeServico = "PrestadorDeServico",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Logs" */
export const enum identidades_Logs_constraint {
	Logs_pkey = "Logs_pkey"
}
/** select columns of table "identidades.Logs" */
export const enum identidades_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Logs" */
export const enum identidades_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Pessoas" */
export const enum identidades_Pessoas_constraint {
	Pessoa_pkey = "Pessoa_pkey",
	Pessoas_Identificador_key = "Pessoas_Identificador_key"
}
/** select columns of table "identidades.Pessoas" */
export const enum identidades_Pessoas_select_column {
	DadosDaApi = "DadosDaApi",
	Id = "Id",
	Identificador = "Identificador",
	Nome = "Nome",
	PessoaJuridica = "PessoaJuridica",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Pessoas" */
export const enum identidades_Pessoas_update_column {
	DadosDaApi = "DadosDaApi",
	Id = "Id",
	Identificador = "Identificador",
	Nome = "Nome",
	PessoaJuridica = "PessoaJuridica",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Representantes" */
export const enum identidades_Representantes_constraint {
	Representantes_Pessoa_Id_PessoaRepresentada_Id_key = "Representantes_Pessoa_Id_PessoaRepresentada_Id_key",
	Representantes_pkey = "Representantes_pkey"
}
/** select columns of table "identidades.Representantes" */
export const enum identidades_Representantes_select_column {
	Id = "Id",
	PessoaRepresentada_Id = "PessoaRepresentada_Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Representantes" */
export const enum identidades_Representantes_update_column {
	Id = "Id",
	PessoaRepresentada_Id = "PessoaRepresentada_Id",
	Pessoa_Id = "Pessoa_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "identidades.Vendedores" */
export const enum identidades_Vendedores_constraint {
	Vendedores_pkey = "Vendedores_pkey"
}
/** select columns of table "identidades.Vendedores" */
export const enum identidades_Vendedores_select_column {
	Emails = "Emails",
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Nome = "Nome",
	Telefones = "Telefones",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "identidades.Vendedores" */
export const enum identidades_Vendedores_update_column {
	Emails = "Emails",
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Nome = "Nome",
	Telefones = "Telefones",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "movimentacoes.Motivos" */
export const enum movimentacoes_Motivos_constraint {
	MovimentacoesMotivos_pkey = "MovimentacoesMotivos_pkey"
}
export const enum movimentacoes_Motivos_enum {
	criacaoDeChip = "criacaoDeChip",
	criacaoDeEquipamento = "criacaoDeEquipamento",
	criacaoDeIdentificador = "criacaoDeIdentificador",
	criacaoDeKitDeInstalacao = "criacaoDeKitDeInstalacao",
	criacaoDeKitDeInsumo = "criacaoDeKitDeInsumo",
	criacaoDeRastreador = "criacaoDeRastreador",
	devolucaoDeKitDeInsumo = "devolucaoDeKitDeInsumo",
	exclusaoDeChip = "exclusaoDeChip",
	exclusaoDeEquipamento = "exclusaoDeEquipamento",
	exclusaoDeIdentificador = "exclusaoDeIdentificador",
	exclusaoDeKitDeInstalacao = "exclusaoDeKitDeInstalacao",
	exclusaoDeKitDeInsumo = "exclusaoDeKitDeInsumo",
	exclusaoDeRastreador = "exclusaoDeRastreador",
	pedidoDeCompra = "pedidoDeCompra",
	pedidoDeSaida = "pedidoDeSaida"
}
/** select columns of table "movimentacoes.Motivos" */
export const enum movimentacoes_Motivos_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "movimentacoes.Motivos" */
export const enum movimentacoes_Motivos_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "movimentacoes.Movimentacoes" */
export const enum movimentacoes_Movimentacoes_constraint {
	Movimentacoes_pkey = "Movimentacoes_pkey"
}
/** select columns of table "movimentacoes.Movimentacoes" */
export const enum movimentacoes_Movimentacoes_select_column {
	Data = "Data",
	Id = "Id",
	Item_Id = "Item_Id",
	Motivo_Id = "Motivo_Id",
	Quantidade = "Quantidade",
	Tipo = "Tipo",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "movimentacoes.Movimentacoes" */
export const enum movimentacoes_Movimentacoes_update_column {
	Data = "Data",
	Id = "Id",
	Item_Id = "Item_Id",
	Motivo_Id = "Motivo_Id",
	Quantidade = "Quantidade",
	Tipo = "Tipo",
	Valor = "Valor",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "operacional.OrdemDeServico_Atividades" */
export const enum operacional_OrdemDeServico_Atividades_constraint {
	OrdemDeServico_Atividades_pkey = "OrdemDeServico_Atividades_pkey"
}
/** select columns of table "operacional.OrdemDeServico_Atividades" */
export const enum operacional_OrdemDeServico_Atividades_select_column {
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	OrdemDeServico_Id = "OrdemDeServico_Id",
	Situacao_Id = "Situacao_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "operacional.OrdemDeServico_Atividades" */
export const enum operacional_OrdemDeServico_Atividades_update_column {
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	OrdemDeServico_Id = "OrdemDeServico_Id",
	Situacao_Id = "Situacao_Id",
	Usuario_Id = "Usuario_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "operacional.OrdemDeServico_Situacoes" */
export const enum operacional_OrdemDeServico_Situacoes_constraint {
	OrdemDeServico_Situacoes_pkey = "OrdemDeServico_Situacoes_pkey"
}
export const enum operacional_OrdemDeServico_Situacoes_enum {
	aberta = "aberta",
	agendada = "agendada",
	concluida = "concluida",
	fechada = "fechada",
	frustada = "frustada"
}
/** select columns of table "operacional.OrdemDeServico_Situacoes" */
export const enum operacional_OrdemDeServico_Situacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "operacional.OrdemDeServico_Situacoes" */
export const enum operacional_OrdemDeServico_Situacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "operacional.OrdemDeServico_Tipo" */
export const enum operacional_OrdemDeServico_Tipo_constraint {
	OrdemDeServico_Tipo_pkey = "OrdemDeServico_Tipo_pkey"
}
export const enum operacional_OrdemDeServico_Tipo_enum {
	desinstalacao = "desinstalacao",
	instalacao = "instalacao",
	manutencao = "manutencao"
}
/** select columns of table "operacional.OrdemDeServico_Tipo" */
export const enum operacional_OrdemDeServico_Tipo_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "operacional.OrdemDeServico_Tipo" */
export const enum operacional_OrdemDeServico_Tipo_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "operacional.OrdemDeServico" */
export const enum operacional_OrdemDeServico_constraint {
	OrdemDeServico_pkey = "OrdemDeServico_pkey"
}
/** select columns of table "operacional.OrdemDeServico" */
export const enum operacional_OrdemDeServico_select_column {
	CodigoIdentificador = "CodigoIdentificador",
	DataAgendamento = "DataAgendamento",
	DataConcluida = "DataConcluida",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Situacao_Id = "Situacao_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "operacional.OrdemDeServico" */
export const enum operacional_OrdemDeServico_update_column {
	CodigoIdentificador = "CodigoIdentificador",
	DataAgendamento = "DataAgendamento",
	DataConcluida = "DataConcluida",
	Id = "Id",
	Proposta_Id = "Proposta_Id",
	Situacao_Id = "Situacao_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** column ordering options */
export const enum order_by {
	asc = "asc",
	asc_nulls_first = "asc_nulls_first",
	asc_nulls_last = "asc_nulls_last",
	desc = "desc",
	desc_nulls_first = "desc_nulls_first",
	desc_nulls_last = "desc_nulls_last"
}
/** unique or primary key constraints on table "pedidosDeCompra.Logs" */
export const enum pedidosDeCompra_Logs_constraint {
	Logs_pkey = "Logs_pkey"
}
/** select columns of table "pedidosDeCompra.Logs" */
export const enum pedidosDeCompra_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeCompra.Logs" */
export const enum pedidosDeCompra_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos_Produtos" */
export const enum pedidosDeCompra_Orcamentos_Produtos_constraint {
	Orcamentos_Produtos_pkey = "Orcamentos_Produtos_pkey"
}
/** select columns of table "pedidosDeCompra.Orcamentos_Produtos" */
export const enum pedidosDeCompra_Orcamentos_Produtos_select_column {
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Orcamento_Id = "Orcamento_Id",
	PedidosDeCompra_Produto_Id = "PedidosDeCompra_Produto_Id",
	Quantidade = "Quantidade",
	ValorUnitario = "ValorUnitario",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeCompra.Orcamentos_Produtos" */
export const enum pedidosDeCompra_Orcamentos_Produtos_update_column {
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Orcamento_Id = "Orcamento_Id",
	PedidosDeCompra_Produto_Id = "PedidosDeCompra_Produto_Id",
	Quantidade = "Quantidade",
	ValorUnitario = "ValorUnitario",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeCompra.Orcamentos" */
export const enum pedidosDeCompra_Orcamentos_constraint {
	Orcamentos_pkey = "Orcamentos_pkey"
}
/** select columns of table "pedidosDeCompra.Orcamentos" */
export const enum pedidosDeCompra_Orcamentos_select_column {
	Aprovado = "Aprovado",
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Pedido_Id = "Pedido_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeCompra.Orcamentos" */
export const enum pedidosDeCompra_Orcamentos_update_column {
	Aprovado = "Aprovado",
	Fornecedor_Id = "Fornecedor_Id",
	Id = "Id",
	Pedido_Id = "Pedido_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeCompra.Pedidos" */
export const enum pedidosDeCompra_Pedidos_constraint {
	Pedidos_pkey = "Pedidos_pkey"
}
/** select columns of table "pedidosDeCompra.Pedidos" */
export const enum pedidosDeCompra_Pedidos_select_column {
	DataAbertura = "DataAbertura",
	DataAutorizacao = "DataAutorizacao",
	DataCompra = "DataCompra",
	DataEntrada = "DataEntrada",
	DataEntregue = "DataEntregue",
	DataOrcamento = "DataOrcamento",
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	Situacao_Id = "Situacao_Id",
	Solicitante_Id = "Solicitante_Id",
	TipoPagamento = "TipoPagamento",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeCompra.Pedidos" */
export const enum pedidosDeCompra_Pedidos_update_column {
	DataAbertura = "DataAbertura",
	DataAutorizacao = "DataAutorizacao",
	DataCompra = "DataCompra",
	DataEntrada = "DataEntrada",
	DataEntregue = "DataEntregue",
	DataOrcamento = "DataOrcamento",
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	Situacao_Id = "Situacao_Id",
	Solicitante_Id = "Solicitante_Id",
	TipoPagamento = "TipoPagamento",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeCompra.Produtos" */
export const enum pedidosDeCompra_Produtos_constraint {
	Produtos_pkey = "Produtos_pkey"
}
/** select columns of table "pedidosDeCompra.Produtos" */
export const enum pedidosDeCompra_Produtos_select_column {
	Autorizado = "Autorizado",
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	PedidoDeCompra_Id = "PedidoDeCompra_Id",
	Produto_Id = "Produto_Id",
	QuantidadeAutorizada = "QuantidadeAutorizada",
	QuantidadeComprada = "QuantidadeComprada",
	QuantidadeEntregue = "QuantidadeEntregue",
	QuantidadePedida = "QuantidadePedida",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeCompra.Produtos" */
export const enum pedidosDeCompra_Produtos_update_column {
	Autorizado = "Autorizado",
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	PedidoDeCompra_Id = "PedidoDeCompra_Id",
	Produto_Id = "Produto_Id",
	QuantidadeAutorizada = "QuantidadeAutorizada",
	QuantidadeComprada = "QuantidadeComprada",
	QuantidadeEntregue = "QuantidadeEntregue",
	QuantidadePedida = "QuantidadePedida",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeCompra.Situacoes" */
export const enum pedidosDeCompra_Situacoes_constraint {
	Situacoes_pkey = "Situacoes_pkey"
}
export const enum pedidosDeCompra_Situacoes_enum {
	aberto = "aberto",
	autorizado = "autorizado",
	comprado = "comprado",
	finalizado = "finalizado",
	recebido = "recebido",
	recusado = "recusado"
}
/** select columns of table "pedidosDeCompra.Situacoes" */
export const enum pedidosDeCompra_Situacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "pedidosDeCompra.Situacoes" */
export const enum pedidosDeCompra_Situacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "pedidosDeSaida.Logs" */
export const enum pedidosDeSaida_Logs_constraint {
	Logs_pedidosDeSaida_Pedidos_pkey = "Logs_pedidosDeSaida_Pedidos_pkey"
}
/** select columns of table "pedidosDeSaida.Logs" */
export const enum pedidosDeSaida_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeSaida.Logs" */
export const enum pedidosDeSaida_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeSaida.Pedidos" */
export const enum pedidosDeSaida_Pedidos_constraint {
	Pedidos_pkey = "Pedidos_pkey"
}
/** select columns of table "pedidosDeSaida.Pedidos" */
export const enum pedidosDeSaida_Pedidos_select_column {
	DataAbertura = "DataAbertura",
	DataAutorizacao = "DataAutorizacao",
	DataEntregue = "DataEntregue",
	DataRecebido = "DataRecebido",
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	Situacao_Id = "Situacao_Id",
	Solicitante_Id = "Solicitante_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeSaida.Pedidos" */
export const enum pedidosDeSaida_Pedidos_update_column {
	DataAbertura = "DataAbertura",
	DataAutorizacao = "DataAutorizacao",
	DataEntregue = "DataEntregue",
	DataRecebido = "DataRecebido",
	Id = "Id",
	MotivoRecusado = "MotivoRecusado",
	Situacao_Id = "Situacao_Id",
	Solicitante_Id = "Solicitante_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeSaida.Produtos" */
export const enum pedidosDeSaida_Produtos_constraint {
	Produtos_pkey = "Produtos_pkey"
}
/** select columns of table "pedidosDeSaida.Produtos" */
export const enum pedidosDeSaida_Produtos_select_column {
	Autorizado = "Autorizado",
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Pedido_Id = "Pedido_Id",
	Produto_Id = "Produto_Id",
	QuantidadeAutorizada = "QuantidadeAutorizada",
	QuantidadeEntregue = "QuantidadeEntregue",
	QuantidadePedida = "QuantidadePedida",
	QuantidadeRecebida = "QuantidadeRecebida",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "pedidosDeSaida.Produtos" */
export const enum pedidosDeSaida_Produtos_update_column {
	Autorizado = "Autorizado",
	Descricao = "Descricao",
	Fabricante_Id = "Fabricante_Id",
	Id = "Id",
	Pedido_Id = "Pedido_Id",
	Produto_Id = "Produto_Id",
	QuantidadeAutorizada = "QuantidadeAutorizada",
	QuantidadeEntregue = "QuantidadeEntregue",
	QuantidadePedida = "QuantidadePedida",
	QuantidadeRecebida = "QuantidadeRecebida",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "pedidosDeSaida.Situacoes" */
export const enum pedidosDeSaida_Situacoes_constraint {
	Situacoes_pkey = "Situacoes_pkey"
}
export const enum pedidosDeSaida_Situacoes_enum {
	aberto = "aberto",
	autorizado = "autorizado",
	entradaParcial = "entradaParcial",
	entregue = "entregue",
	finalizado = "finalizado",
	recebido = "recebido",
	recusado = "recusado"
}
/** select columns of table "pedidosDeSaida.Situacoes" */
export const enum pedidosDeSaida_Situacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "pedidosDeSaida.Situacoes" */
export const enum pedidosDeSaida_Situacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "producao.ChipsSituacoes" */
export const enum producao_ChipsSituacoes_constraint {
	ChipsSituacoes_pkey = "ChipsSituacoes_pkey"
}
export const enum producao_ChipsSituacoes_enum {
	ativo = "ativo",
	cancelado = "cancelado",
	inativo = "inativo",
	suspenso = "suspenso"
}
/** select columns of table "producao.ChipsSituacoes" */
export const enum producao_ChipsSituacoes_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "producao.ChipsSituacoes" */
export const enum producao_ChipsSituacoes_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "producao.Chips" */
export const enum producao_Chips_constraint {
	Chips_Iccid_key = "Chips_Iccid_key",
	Chips_NumeroDaLinha_key = "Chips_NumeroDaLinha_key",
	Chips_pkey = "Chips_pkey"
}
/** select columns of table "producao.Chips" */
export const enum producao_Chips_select_column {
	DataSuspensao = "DataSuspensao",
	Iccid = "Iccid",
	Id = "Id",
	Item_Id = "Item_Id",
	NumeroDaLinha = "NumeroDaLinha",
	Operadora_Id = "Operadora_Id",
	Situacao_Id = "Situacao_Id",
	TempoDaSuspensao = "TempoDaSuspensao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.Chips" */
export const enum producao_Chips_update_column {
	DataSuspensao = "DataSuspensao",
	Iccid = "Iccid",
	Id = "Id",
	Item_Id = "Item_Id",
	NumeroDaLinha = "NumeroDaLinha",
	Operadora_Id = "Operadora_Id",
	Situacao_Id = "Situacao_Id",
	TempoDaSuspensao = "TempoDaSuspensao",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.Equipamentos" */
export const enum producao_Equipamentos_constraint {
	Equipamentos_Identificador_key = "Equipamentos_Identificador_key",
	Equipamentos_Imei_key = "Equipamentos_Imei_key",
	Equipamentos_pkey = "Equipamentos_pkey"
}
/** select columns of table "producao.Equipamentos" */
export const enum producao_Equipamentos_select_column {
	Id = "Id",
	Identificador = "Identificador",
	Imei = "Imei",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.Equipamentos" */
export const enum producao_Equipamentos_update_column {
	Id = "Id",
	Identificador = "Identificador",
	Imei = "Imei",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.Identificadores" */
export const enum producao_Identificadores_constraint {
	Identificadores_CodigoIdentificador_key = "Identificadores_CodigoIdentificador_key",
	Identificadores_pkey = "Identificadores_pkey"
}
/** select columns of table "producao.Identificadores" */
export const enum producao_Identificadores_select_column {
	CodigoIdentificador = "CodigoIdentificador",
	Id = "Id",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.Identificadores" */
export const enum producao_Identificadores_update_column {
	CodigoIdentificador = "CodigoIdentificador",
	Id = "Id",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.KitDeInsumo_Itens" */
export const enum producao_KitDeInsumo_Itens_constraint {
	KitDeInsumo_Itens_pkey = "KitDeInsumo_Itens_pkey"
}
/** select columns of table "producao.KitDeInsumo_Itens" */
export const enum producao_KitDeInsumo_Itens_select_column {
	Id = "Id",
	Item_Id = "Item_Id",
	KitDeInsumo_Id = "KitDeInsumo_Id",
	Lote = "Lote",
	Quantidade = "Quantidade",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.KitDeInsumo_Itens" */
export const enum producao_KitDeInsumo_Itens_update_column {
	Id = "Id",
	Item_Id = "Item_Id",
	KitDeInsumo_Id = "KitDeInsumo_Id",
	Lote = "Lote",
	Quantidade = "Quantidade",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.KitsDeInstalacao" */
export const enum producao_KitsDeInstalacao_constraint {
	KitDeInstalacao_pkey = "KitDeInstalacao_pkey"
}
/** select columns of table "producao.KitsDeInstalacao" */
export const enum producao_KitsDeInstalacao_select_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Item_Id = "Item_Id",
	KitDeInsumo_Id = "KitDeInsumo_Id",
	Rastreador_Id = "Rastreador_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.KitsDeInstalacao" */
export const enum producao_KitsDeInstalacao_update_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Item_Id = "Item_Id",
	KitDeInsumo_Id = "KitDeInsumo_Id",
	Rastreador_Id = "Rastreador_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.KitsDeInsumo" */
export const enum producao_KitsDeInsumo_constraint {
	KitsDeInsumo_pkey = "KitsDeInsumo_pkey"
}
/** select columns of table "producao.KitsDeInsumo" */
export const enum producao_KitsDeInsumo_select_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Item_Id = "Item_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.KitsDeInsumo" */
export const enum producao_KitsDeInsumo_update_column {
	CodigoReferencia = "CodigoReferencia",
	Id = "Id",
	Item_Id = "Item_Id",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.Logs" */
export const enum producao_Logs_constraint {
	Logs_pkey = "Logs_pkey"
}
/** select columns of table "producao.Logs" */
export const enum producao_Logs_select_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.Logs" */
export const enum producao_Logs_update_column {
	DadosAntigos = "DadosAntigos",
	DadosNovos = "DadosNovos",
	Id = "Id",
	Operacao = "Operacao",
	Tipo = "Tipo",
	Tipo_Id = "Tipo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.Rastreadores" */
export const enum producao_Rastreadores_constraint {
	Rastreadores_CodigoReferencia_key = "Rastreadores_CodigoReferencia_key",
	Rastreadores_Equipamento_Id_key = "Rastreadores_Equipamento_Id_key",
	Rastreadores_pkey = "Rastreadores_pkey"
}
/** select columns of table "producao.Rastreadores" */
export const enum producao_Rastreadores_select_column {
	Chip_Id = "Chip_Id",
	CodigoReferencia = "CodigoReferencia",
	Equipamento_Id = "Equipamento_Id",
	Id = "Id",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.Rastreadores" */
export const enum producao_Rastreadores_update_column {
	Chip_Id = "Chip_Id",
	CodigoReferencia = "CodigoReferencia",
	Equipamento_Id = "Equipamento_Id",
	Id = "Id",
	Item_Id = "Item_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo" */
export const enum producao_TiposDeKitDeInsumo_constraint {
	TiposDeKitDeInsumo_pkey = "TiposDeKitDeInsumo_pkey"
}
/** unique or primary key constraints on table "producao.TiposDeKitDeInsumo_estoque_Itens" */
export const enum producao_TiposDeKitDeInsumo_estoque_Itens_constraint {
	TiposDeKitDeInsumo_estoque_Itens_pkey = "TiposDeKitDeInsumo_estoque_Itens_pkey"
}
/** select columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
export const enum producao_TiposDeKitDeInsumo_estoque_Itens_select_column {
	Id = "Id",
	Item_Id = "Item_Id",
	Quantidade = "Quantidade",
	TiposDeKitDeInsumo_Id = "TiposDeKitDeInsumo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.TiposDeKitDeInsumo_estoque_Itens" */
export const enum producao_TiposDeKitDeInsumo_estoque_Itens_update_column {
	Id = "Id",
	Item_Id = "Item_Id",
	Quantidade = "Quantidade",
	TiposDeKitDeInsumo_Id = "TiposDeKitDeInsumo_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** select columns of table "producao.TiposDeKitDeInsumo" */
export const enum producao_TiposDeKitDeInsumo_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "producao.TiposDeKitDeInsumo" */
export const enum producao_TiposDeKitDeInsumo_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "vendas.GruposDePerguntas_Perguntas" */
export const enum vendas_GruposDePerguntas_Perguntas_constraint {
	GruposDePerguntas_Perguntas_pkey = "GruposDePerguntas_Perguntas_pkey"
}
/** select columns of table "vendas.GruposDePerguntas_Perguntas" */
export const enum vendas_GruposDePerguntas_Perguntas_select_column {
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Pergunta_Id = "Pergunta_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "vendas.GruposDePerguntas_Perguntas" */
export const enum vendas_GruposDePerguntas_Perguntas_update_column {
	Grupo_Id = "Grupo_Id",
	Id = "Id",
	Pergunta_Id = "Pergunta_Id",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "vendas.GruposDePerguntas" */
export const enum vendas_GruposDePerguntas_constraint {
	GruposDePerguntas_pkey = "GruposDePerguntas_pkey"
}
/** select columns of table "vendas.GruposDePerguntas" */
export const enum vendas_GruposDePerguntas_select_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "vendas.GruposDePerguntas" */
export const enum vendas_GruposDePerguntas_update_column {
	Id = "Id",
	Nome = "Nome",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "vendas.Perguntas" */
export const enum vendas_Perguntas_constraint {
	Perguntas_pkey = "Perguntas_pkey"
}
/** select columns of table "vendas.Perguntas" */
export const enum vendas_Perguntas_select_column {
	Descricao = "Descricao",
	Id = "Id",
	Titulo = "Titulo",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** update columns of table "vendas.Perguntas" */
export const enum vendas_Perguntas_update_column {
	Descricao = "Descricao",
	Id = "Id",
	Titulo = "Titulo",
	created_at = "created_at",
	deleted_at = "deleted_at",
	updated_at = "updated_at"
}
/** unique or primary key constraints on table "vendas.TiposDePagamento" */
export const enum vendas_TiposDePagamento_constraint {
	TiposDePagamento_pkey = "TiposDePagamento_pkey"
}
export const enum vendas_TiposDePagamento_enum {
	boleto = "boleto",
	cartaoDeCredito = "cartaoDeCredito",
	cartaoDeDebito = "cartaoDeDebito",
	pix = "pix"
}
/** select columns of table "vendas.TiposDePagamento" */
export const enum vendas_TiposDePagamento_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "vendas.TiposDePagamento" */
export const enum vendas_TiposDePagamento_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** unique or primary key constraints on table "vendas.TiposDeRecorrencia" */
export const enum vendas_TiposDeRecorrencia_constraint {
	TiposDeRecorrencia_pkey = "TiposDeRecorrencia_pkey"
}
export const enum vendas_TiposDeRecorrencia_enum {
	anual = "anual",
	bimestral = "bimestral",
	mensal = "mensal",
	quinzenal = "quinzenal",
	semestral = "semestral",
	trimestral = "trimestral"
}
/** select columns of table "vendas.TiposDeRecorrencia" */
export const enum vendas_TiposDeRecorrencia_select_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
/** update columns of table "vendas.TiposDeRecorrencia" */
export const enum vendas_TiposDeRecorrencia_update_column {
	Comentario = "Comentario",
	Valor = "Valor"
}
export class GraphQLError extends Error {
    constructor(public response: GraphQLResponse) {
      super("");
      console.error(response);
    }
    toString() {
      return "GraphQL Response Error";
    }
  }


export type UnwrapPromise<T> = T extends Promise<infer R> ? R : T;
export type ZeusState<T extends (...args: any[]) => Promise<any>> = NonNullable<
  UnwrapPromise<ReturnType<T>>
>;
export type ZeusHook<
  T extends (
    ...args: any[]
  ) => Record<string, (...args: any[]) => Promise<any>>,
  N extends keyof ReturnType<T>
> = ZeusState<ReturnType<T>[N]>;

type WithTypeNameValue<T> = T & {
  __typename?: true;
};
type AliasType<T> = WithTypeNameValue<T> & {
  __alias?: Record<string, WithTypeNameValue<T>>;
};
export interface GraphQLResponse {
  data?: Record<string, any>;
  errors?: Array<{
    message: string;
  }>;
}
type DeepAnify<T> = {
  [P in keyof T]?: any;
};
type IsPayLoad<T> = T extends [any, infer PayLoad] ? PayLoad : T;
type IsArray<T, U> = T extends Array<infer R> ? InputType<R, U>[] : InputType<T, U>;
type FlattenArray<T> = T extends Array<infer R> ? R : T;

type IsInterfaced<SRC extends DeepAnify<DST>, DST> = FlattenArray<SRC> extends ZEUS_INTERFACES | ZEUS_UNIONS
  ? {
      [P in keyof SRC]: SRC[P] extends '__union' & infer R
        ? P extends keyof DST
          ? IsArray<R, '__typename' extends keyof DST ? DST[P] & { __typename: true } : DST[P]>
          : {}
        : never;
    }[keyof DST] &
      {
        [P in keyof Omit<
          Pick<
            SRC,
            {
              [P in keyof DST]: SRC[P] extends '__union' & infer R ? never : P;
            }[keyof DST]
          >,
          '__typename'
        >]: IsPayLoad<DST[P]> extends true ? SRC[P] : IsArray<SRC[P], DST[P]>;
      }
  : {
      [P in keyof Pick<SRC, keyof DST>]: IsPayLoad<DST[P]> extends true ? SRC[P] : IsArray<SRC[P], DST[P]>;
    };

export type MapType<SRC, DST> = SRC extends DeepAnify<DST> ? IsInterfaced<SRC, DST> : never;
export type InputType<SRC, DST> = IsPayLoad<DST> extends { __alias: infer R }
  ? {
      [P in keyof R]: MapType<SRC, R[P]>;
    } &
      MapType<SRC, Omit<IsPayLoad<DST>, '__alias'>>
  : MapType<SRC, IsPayLoad<DST>>;
type Func<P extends any[], R> = (...args: P) => R;
type AnyFunc = Func<any, any>;
export type ArgsType<F extends AnyFunc> = F extends Func<infer P, any> ? P : never;
export type OperationOptions = {
  variables?: Record<string, any>;
  operationName?: string;
};
export type OperationToGraphQL<V, T> = <Z extends V>(o: Z | V, options?: OperationOptions) => Promise<InputType<T, Z>>;
export type SubscriptionToGraphQL<V, T> = <Z extends V>(
  o: Z | V,
  options?: OperationOptions,
) => {
  ws: WebSocket;
  on: (fn: (args: InputType<T, Z>) => void) => void;
  off: (fn: (e: { data?: InputType<T, Z>; code?: number; reason?: string; message?: string }) => void) => void;
  error: (fn: (e: { data?: InputType<T, Z>; errors?:string[] }) => void) => void;
  open: () => void;
};
export type SelectionFunction<V> = <T>(t: T | V) => T;
export type fetchOptions = ArgsType<typeof fetch>;
type websocketOptions = typeof WebSocket extends new (
  ...args: infer R
) => WebSocket
  ? R
  : never;
export type chainOptions =
  | [fetchOptions[0], fetchOptions[1] & {websocket?: websocketOptions}]
  | [fetchOptions[0]];
export type FetchFunction = (
  query: string,
  variables?: Record<string, any>,
) => Promise<any>;
export type SubscriptionFunction = (query: string) => void;
type NotUndefined<T> = T extends undefined ? never : T;
export type ResolverType<F> = NotUndefined<F extends [infer ARGS, any] ? ARGS : undefined>;



export const ZeusSelect = <T>() => ((t: any) => t) as SelectionFunction<T>;

export const ScalarResolver = (scalar: string, value: any) => {
  switch (scalar) {
    case 'String':
      return  `${JSON.stringify(value)}`;
    case 'Int':
      return `${value}`;
    case 'Float':
      return `${value}`;
    case 'Boolean':
      return `${value}`;
    case 'ID':
      return `"${value}"`;
    case 'enum':
      return `${value}`;
    case 'scalar':
      return `${value}`;
    default:
      return false;
  }
};


export const TypesPropsResolver = ({
    value,
    type,
    name,
    key,
    blockArrays
}: {
    value: any;
    type: string;
    name: string;
    key?: string;
    blockArrays?: boolean;
}): string => {
    if (value === null) {
        return `null`;
    }
    let resolvedValue = AllTypesProps[type][name];
    if (key) {
        resolvedValue = resolvedValue[key];
    }
    if (!resolvedValue) {
        throw new Error(`Cannot resolve ${type} ${name}${key ? ` ${key}` : ''}`)
    }
    const typeResolved = resolvedValue.type;
    const isArray = resolvedValue.array;
    const isArrayRequired = resolvedValue.arrayRequired;
    if (typeof value === 'string' && value.startsWith(`ZEUS_VAR$`)) {
        const isRequired = resolvedValue.required ? '!' : '';
        let t = `${typeResolved}`;
        if (isArray) {
          if (isRequired) {
              t = `${t}!`;
          }
          t = `[${t}]`;
          if(isArrayRequired){
            t = `${t}!`;
          }
        }else{
          if (isRequired) {
                t = `${t}!`;
          }
        }
        return `\$${value.split(`ZEUS_VAR$`)[1]}__ZEUS_VAR__${t}`;
    }
    if (isArray && !blockArrays) {
        return `[${value
        .map((v: any) => TypesPropsResolver({ value: v, type, name, key, blockArrays: true }))
        .join(',')}]`;
    }
    const reslovedScalar = ScalarResolver(typeResolved, value);
    if (!reslovedScalar) {
        const resolvedType = AllTypesProps[typeResolved];
        if (typeof resolvedType === 'object') {
        const argsKeys = Object.keys(resolvedType);
        return `{${argsKeys
            .filter((ak) => value[ak] !== undefined)
            .map(
            (ak) => `${ak}:${TypesPropsResolver({ value: value[ak], type: typeResolved, name: ak })}`
            )}}`;
        }
        return ScalarResolver(AllTypesProps[typeResolved], value) as string;
    }
    return reslovedScalar;
};


const isArrayFunction = (
  parent: string[],
  a: any[]
) => {
  const [values, r] = a;
  const [mainKey, key, ...keys] = parent;
  const keyValues = Object.keys(values).filter((k) => typeof values[k] !== 'undefined');

  if (!keys.length) {
      return keyValues.length > 0
        ? `(${keyValues
            .map(
              (v) =>
                `${v}:${TypesPropsResolver({
                  value: values[v],
                  type: mainKey,
                  name: key,
                  key: v
                })}`
            )
            .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
        : traverseToSeekArrays(parent, r);
    }

  const [typeResolverKey] = keys.splice(keys.length - 1, 1);
  let valueToResolve = ReturnTypes[mainKey][key];
  for (const k of keys) {
    valueToResolve = ReturnTypes[valueToResolve][k];
  }

  const argumentString =
    keyValues.length > 0
      ? `(${keyValues
          .map(
            (v) =>
              `${v}:${TypesPropsResolver({
                value: values[v],
                type: valueToResolve,
                name: typeResolverKey,
                key: v
              })}`
          )
          .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
      : traverseToSeekArrays(parent, r);
  return argumentString;
};


const resolveKV = (k: string, v: boolean | string | { [x: string]: boolean | string }) =>
  typeof v === 'boolean' ? k : typeof v === 'object' ? `${k}{${objectToTree(v)}}` : `${k}${v}`;


const objectToTree = (o: { [x: string]: boolean | string }): string =>
  `{${Object.keys(o).map((k) => `${resolveKV(k, o[k])}`).join(' ')}}`;


const traverseToSeekArrays = (parent: string[], a?: any): string => {
  if (!a) return '';
  if (Object.keys(a).length === 0) {
    return '';
  }
  let b: Record<string, any> = {};
  if (Array.isArray(a)) {
    return isArrayFunction([...parent], a);
  } else {
    if (typeof a === 'object') {
      Object.keys(a)
        .filter((k) => typeof a[k] !== 'undefined')
        .forEach((k) => {
        if (k === '__alias') {
          Object.keys(a[k]).forEach((aliasKey) => {
            const aliasOperations = a[k][aliasKey];
            const aliasOperationName = Object.keys(aliasOperations)[0];
            const aliasOperation = aliasOperations[aliasOperationName];
            b[
              `${aliasOperationName}__alias__${aliasKey}: ${aliasOperationName}`
            ] = traverseToSeekArrays([...parent, aliasOperationName], aliasOperation);
          });
        } else {
          b[k] = traverseToSeekArrays([...parent, k], a[k]);
        }
      });
    } else {
      return '';
    }
  }
  return objectToTree(b);
};  


const buildQuery = (type: string, a?: Record<any, any>) => 
  traverseToSeekArrays([type], a);


const inspectVariables = (query: string) => {
  const regex = /\$\b\w*__ZEUS_VAR__\[?[^!^\]^\s^,^\)^\}]*[!]?[\]]?[!]?/g;
  let result;
  const AllVariables: string[] = [];
  while ((result = regex.exec(query))) {
    if (AllVariables.includes(result[0])) {
      continue;
    }
    AllVariables.push(result[0]);
  }
  if (!AllVariables.length) {
    return query;
  }
  let filteredQuery = query;
  AllVariables.forEach((variable) => {
    while (filteredQuery.includes(variable)) {
      filteredQuery = filteredQuery.replace(variable, variable.split('__ZEUS_VAR__')[0]);
    }
  });
  return `(${AllVariables.map((a) => a.split('__ZEUS_VAR__'))
    .map(([variableName, variableType]) => `${variableName}:${variableType}`)
    .join(', ')})${filteredQuery}`;
};


export const queryConstruct = (t: 'query' | 'mutation' | 'subscription', tName: string, operationName?: string) => (o: Record<any, any>) =>
  `${t.toLowerCase()}${operationName ? ' ' + operationName : ''}${inspectVariables(buildQuery(tName, o))}`;
  

const fullChainConstruct = (fn: FetchFunction) => (t: 'query' | 'mutation' | 'subscription', tName: string) => (
  o: Record<any, any>,
  options?: OperationOptions,
) => fn(queryConstruct(t, tName, options?.operationName)(o), options?.variables).then((r:any) => { 
  seekForAliases(r)
  return r
});

export const fullChainConstructor = <F extends FetchFunction, R extends keyof ValueTypes>(
  fn: F,
  operation: 'query' | 'mutation' | 'subscription',
  key: R,
) =>
  ((o, options) => fullChainConstruct(fn)(operation, key)(o as any, options)) as OperationToGraphQL<
    ValueTypes[R],
    GraphQLTypes[R]
  >;


const fullSubscriptionConstruct = (fn: SubscriptionFunction) => (
  t: 'query' | 'mutation' | 'subscription',
  tName: string,
) => (o: Record<any, any>, options?: OperationOptions) =>
  fn(queryConstruct(t, tName, options?.operationName)(o));

export const fullSubscriptionConstructor = <F extends SubscriptionFunction, R extends keyof ValueTypes>(
  fn: F,
  operation: 'query' | 'mutation' | 'subscription',
  key: R,
) =>
  ((o, options) => fullSubscriptionConstruct(fn)(operation, key)(o as any, options)) as SubscriptionToGraphQL<
    ValueTypes[R],
    GraphQLTypes[R]
  >;


const seekForAliases = (response: any) => {
  const traverseAlias = (value: any) => {
    if (Array.isArray(value)) {
      value.forEach(seekForAliases);
    } else {
      if (typeof value === 'object') {
        seekForAliases(value);
      }
    }
  };
  if (typeof response === 'object' && response) {
    const keys = Object.keys(response);
    if (keys.length < 1) {
      return;
    }
    keys.forEach((k) => {
      const value = response[k];
      if (k.indexOf('__alias__') !== -1) {
        const [operation, alias] = k.split('__alias__');
        response[alias] = {
          [operation]: value,
        };
        delete response[k];
      }
      traverseAlias(value);
    });
  }
};


export const $ = (t: TemplateStringsArray): any => `ZEUS_VAR$${t.join('')}`;


export const resolverFor = <
  X,
  T extends keyof ValueTypes,
  Z extends keyof ValueTypes[T],
>(
  type: T,
  field: Z,
  fn: (
    args: Required<ValueTypes[T]>[Z] extends [infer Input, any] ? Input : any,
    source: any,
  ) => Z extends keyof ModelTypes[T] ? ModelTypes[T][Z] | Promise<ModelTypes[T][Z]> | X : any,
) => fn as (args?: any,source?: any) => any;


const handleFetchResponse = (
  response: Parameters<Extract<Parameters<ReturnType<typeof fetch>['then']>[0], Function>>[0]
): Promise<GraphQLResponse> => {
  if (!response.ok) {
    return new Promise((_, reject) => {
      response.text().then(text => {
        try { reject(JSON.parse(text)); }
        catch (err) { reject(text); }
      }).catch(reject);
    });
  }
  return response.json();
};

export const apiFetch = (options: fetchOptions) => (query: string, variables: Record<string, any> = {}) => {
    let fetchFunction = fetch;
    let queryString = query;
    let fetchOptions = options[1] || {};
    if (fetchOptions.method && fetchOptions.method === 'GET') {
      queryString = encodeURIComponent(query);
      return fetchFunction(`${options[0]}?query=${queryString}`, fetchOptions)
        .then(handleFetchResponse)
        .then((response: GraphQLResponse) => {
          if (response.errors) {
            throw new GraphQLError(response);
          }
          return response.data;
        });
    }
    return fetchFunction(`${options[0]}`, {
      body: JSON.stringify({ query: queryString, variables }),
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      ...fetchOptions
    })
      .then(handleFetchResponse)
      .then((response: GraphQLResponse) => {
        if (response.errors) {
          throw new GraphQLError(response);
        }
        return response.data;
      });
  };
  

export const apiSubscription = (options: chainOptions) => (
    query: string,
  ) => {
    try {
      const queryString = options[0] + '?query=' + encodeURIComponent(query);
      const wsString = queryString.replace('http', 'ws');
      const host = (options.length > 1 && options[1]?.websocket?.[0]) || wsString;
      const webSocketOptions = options[1]?.websocket || [host];
      const ws = new WebSocket(...webSocketOptions);
      return {
        ws,
        on: (e: (args: any) => void) => {
          ws.onmessage = (event:any) => {
            if(event.data){
              const parsed = JSON.parse(event.data)
              const data = parsed.data
              if (data) {
                seekForAliases(data);
              }
              return e(data);
            }
          };
        },
        off: (e: (args: any) => void) => {
          ws.onclose = e;
        },
        error: (e: (args: any) => void) => {
          ws.onerror = e;
        },
        open: (e: () => void) => {
          ws.onopen = e;
        },
      };
    } catch {
      throw new Error('No websockets implemented');
    }
  };


export const Thunder = (fn: FetchFunction, subscriptionFn: SubscriptionFunction) => ({
  query: fullChainConstructor(fn,'query', 'query_root'),
mutation: fullChainConstructor(fn,'mutation', 'mutation_root'),
subscription: fullSubscriptionConstructor(subscriptionFn,'subscription', 'subscription_root')
});

export const Chain = (...options: chainOptions) => ({
  query: fullChainConstructor(apiFetch(options),'query', 'query_root'),
mutation: fullChainConstructor(apiFetch(options),'mutation', 'mutation_root'),
subscription: fullSubscriptionConstructor(apiSubscription(options),'subscription', 'subscription_root')
});
export const Zeus = {
  query: (o:ValueTypes["query_root"], operationName?: string) => queryConstruct('query', 'query_root', operationName)(o),
mutation: (o:ValueTypes["mutation_root"], operationName?: string) => queryConstruct('mutation', 'mutation_root', operationName)(o),
subscription: (o:ValueTypes["subscription_root"], operationName?: string) => queryConstruct('subscription', 'subscription_root', operationName)(o)
};
export const Selectors = {
  query: ZeusSelect<ValueTypes["query_root"]>(),
mutation: ZeusSelect<ValueTypes["mutation_root"]>(),
subscription: ZeusSelect<ValueTypes["subscription_root"]>()
};
  

export const Gql = Chain('https://goerp-core.hasura.app/v1/graphql')